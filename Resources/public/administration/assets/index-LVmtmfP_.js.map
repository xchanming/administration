{"version":3,"file":"index-LVmtmfP_.js","sources":["../../../app/administration/src/module/sw-extension/component/sw-extension-card-base/sw-extension-card-base.html.twig","../../../app/administration/src/module/sw-extension/component/sw-extension-card-base/index.js"],"sourcesContent":["<sw-meteor-card\n    class=\"sw-extension-card-base\"\n    :class=\"extensionCardClasses\"\n>\n    <sw-loader v-if=\"isLoading\" />\n\n    <div class=\"sw-extension-card-base__switch\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_extension_card_base_activation_switch_switch %}\n\n        <sw-switch-field\n            v-model:value=\"isActive\"\n            v-tooltip=\"{\n                showDelay: 300,\n                message: $tc('sw-extension-store.component.sw-extension-card-base.allowDisableTooltip'),\n                disabled: allowDisable\n            }\"\n            :disabled=\"extensionManagementDisabled || !isInstalled || (isActive && !allowDisable)\"\n        />\n\n        {% endblock %}\n    </div>\n\n    <sw-extension-icon :src=\"image\" />\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_extension_card_base_activation_switch %}\n    <div class=\"sw-extension-card-base__info\">\n        <section>\n            <span class=\"sw-extension-card-base__info-name\">\n                {{ extension.label }}\n            </span>\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_extension_card_base_info_inactive_label %}\n            <span\n                v-if=\"isInstalled && !extension.active\"\n                class=\"sw-extension-card-base__info-inactive\"\n            >\n                {{ $tc('sw-extension-store.component.sw-extension-card-base.inactiveLabel') }}\n            </span>\n            {% endblock %}\n        </section>\n    </div>\n    {% endblock %}\n\n    <div class=\"sw-extension-card-base__meta-info\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_extension_card_base_info_content %}\n        <section>\n            <span\n                v-if=\"extension.version\"\n                class=\"sw-extension-card-base__meta-info-version\"\n            >\n                {{ $tc('sw-extension.my-extensions.listing.version') }}: {{ extension.version }}\n            </span>\n\n            <span v-if=\"!extensionManagementDisabled && isUpdateable\">\n                <a\n                    href=\"#\"\n                    @click.prevent=\"updateExtension(false)\"\n                >\n                    {{ $tc('sw-extension.my-extensions.listing.update') }}\n                </a>\n            </span>\n        </section>\n        {% endblock %}\n\n        <span v-if=\"isInstalled\">\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.installedLabel') }}\n            {{ dateFilter(extension.installedAt.date, { month: 'numeric', year: 'numeric', hour: undefined, minute: undefined }) }}\n        </span>\n\n        <span v-else-if=\"extension.storeLicense\">\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.purchasedLabel') }}\n            {{ dateFilter(extension.storeLicense.creationDate, { month: 'numeric', year: 'numeric', hour: undefined, minute: undefined }) }}\n        </span>\n    </div>\n\n    <div class=\"sw-extension-card-base__main-action\">\n        <span\n            v-if=\"!isInstalled\"\n            class=\"sw-extension-card-base__open-extension\"\n            role=\"button\"\n            tabindex=\"0\"\n            @click=\"openPermissionsModalForInstall\"\n            @keydown.enter=\"openPermissionsModalForInstall\"\n        >\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.installExtensionLabel') }}\n        </span>\n        <router-link\n            v-else-if=\"extension.configurable\"\n            :to=\"{ name: 'sw.extension.config', params: { namespace: extension.name } }\"\n        >\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.config') }}\n        </router-link>\n    </div>\n\n    <sw-context-button\n        v-if=\"showContextMenu\"\n        class=\"sw-extension-card-base__context-menu\"\n        :menu-width=\"180\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_extension_card_base_context_menu_actions %}\n        <sw-context-menu-item\n            v-if=\"openLinkExists && extension.active\"\n            :disabled=\"!openLinkExists\"\n            :router-link=\"link\"\n        >\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.openExtension') }}\n        </sw-context-menu-item>\n\n        <sw-context-menu-item\n            v-if=\"privacyPolicyLink\"\n            @click=\"openPrivacyAndSafety\"\n        >\n            <span class=\"sw-extension-card-base__context-menu-privacy-link\">\n                {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.privacyAndSafetyLabel') }}\n                <sw-icon\n                    name=\"regular-external-link-s\"\n                    size=\"10px\"\n                />\n            </span>\n        </sw-context-menu-item>\n\n        <sw-context-menu-item\n            v-if=\"isInstalled && extension.privacyPolicyExtension\"\n            @click=\"openPrivacyModal\"\n        >\n\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.policyExtensions') }}\n        </sw-context-menu-item>\n\n        <sw-context-menu-item\n            v-if=\"isInstalled && permissions\"\n            @click=\"openPermissionsModal\"\n        >\n\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.permissions') }}\n        </sw-context-menu-item>\n\n        <sw-context-menu-item\n            v-if=\"!extensionManagementDisabled && isUpdateable\"\n            @click=\"updateExtension(false)\"\n        >\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.updateLabel', 0, { version: extension.latestVersion }) }}\n        </sw-context-menu-item>\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_extension_card_base_context_menu_actions_additional %}{% endblock %}\n\n        <sw-context-menu-item\n            v-if=\"!extensionManagementDisabled && extension.storeLicense && extension.storeLicense.variant === 'rent' && extension.storeLicense.expirationDate === null\"\n            class=\"sw-extension-card-base__cancel-and-remove-link\"\n            variant=\"danger\"\n            @click=\"openRemovalModal\"\n        >\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.cancelAndRemoveLabel') }}\n        </sw-context-menu-item>\n\n        <sw-context-menu-item\n            v-else-if=\"!extensionManagementDisabled && isRemovable\"\n            class=\"sw-extension-card-base__remove-link\"\n            variant=\"danger\"\n            @click=\"openRemovalModal\"\n        >\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.removeLabel') }}\n        </sw-context-menu-item>\n\n        <sw-context-menu-item\n            v-if=\"!extensionManagementDisabled && isUninstallable\"\n            variant=\"danger\"\n            @click=\"openUninstallModal\"\n        >\n            {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.uninstallLabel') }}\n        </sw-context-menu-item>\n        {% endblock %}\n    </sw-context-button>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_extension_card_base_modals %}\n    <sw-extension-uninstall-modal\n        v-if=\"showUninstallModal\"\n        :extension-name=\"extension.label\"\n        :is-licensed=\"extension.storeLicense !== null\"\n        :is-loading=\"isLoading\"\n        @modal-close=\"closeUninstallModal\"\n        @uninstall-extension=\"closeModalAndUninstallExtension\"\n    />\n\n    <sw-extension-removal-modal\n        v-if=\"showRemovalModal\"\n        :extension-name=\"extension.label\"\n        :is-licensed=\"extension.storeLicense !== null && extension.storeLicense.variant === 'rent'\"\n        :is-loading=\"isLoading\"\n        @modal-close=\"closeRemovalModal\"\n        @remove-extension=\"closeModalAndRemoveExtension\"\n    />\n\n    <sw-extension-permissions-modal\n        v-if=\"showPermissionsModal\"\n        :extension-label=\"extension.label\"\n        :permissions=\"permissions\"\n        :domains=\"extension.domains\"\n        :action-label=\"permissionModalActionLabel\"\n        @modal-close=\"closePermissionsModal\"\n        @close-with-action=\"closePermissionsModalAndInstallExtension\"\n    />\n\n    <sw-extension-privacy-policy-extensions-modal\n        v-if=\"showPrivacyModal\"\n        :extension-name=\"extension.label\"\n        :privacy-policy-extension=\"extension.privacyPolicyExtension\"\n        @modal-close=\"closePrivacyModal\"\n    />\n\n    <sw-extension-permissions-modal\n        v-if=\"showConsentAffirmationModal\"\n        :title=\"consentAffirmationModalTitle\"\n        :extension-label=\"extension.label\"\n        :permissions=\"consentAffirmationDeltas.permissions\"\n        :domains=\"consentAffirmationDeltas.domains\"\n        :action-label=\"consentAffirmationModalActionLabel\"\n        :close-label=\"consentAffirmationModalCloseLabel\"\n        :description=\"consentAffirmationModalDescription\"\n        @modal-close=\"closeConsentAffirmationModal\"\n        @close-with-action=\"closeConsentAffirmationModalAndUpdateExtension\"\n    />\n    {% endblock %}\n</sw-meteor-card>\n","import template from './sw-extension-card-base.html.twig';\nimport './sw-extension-card-base.scss';\n\nconst { Utils, Filter } = Cicada;\n\n/**\n * @package checkout\n * @private\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inheritAttrs: false,\n\n    inject: [\n        'cicadaExtensionService',\n        'extensionStoreActionService',\n        'cacheApiService',\n    ],\n\n    emits: ['update-list'],\n\n    mixins: ['sw-extension-error'],\n\n    props: {\n        extension: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            showUninstallModal: false,\n            showRemovalModal: false,\n            showPermissionsModal: false,\n            permissionsAccepted: false,\n            showPrivacyModal: false,\n            permissionModalActionLabel: null,\n            openLink: null,\n            showConsentAffirmationModal: false,\n            consentAffirmationDeltas: null,\n        };\n    },\n\n    computed: {\n        dateFilter() {\n            return Cicada.Filter.getByName('date');\n        },\n\n        defaultThemeAsset() {\n            return this.assetFilter('administration/static/img/theme/default_theme_preview.jpg');\n        },\n\n        extensionCardClasses() {\n            return {\n                'is--deactivated': this.isInstalled && !this.extension.active,\n                'deactivate-prevented': this.isActive && !this.allowDisable,\n                'is--not-installed': !this.isInstalled,\n            };\n        },\n\n        licensedExtension() {\n            return this.extension.storeLicense;\n        },\n\n        image() {\n            if (this.extension.icon) {\n                return this.extension.icon;\n            }\n\n            if (this.extension.iconRaw) {\n                return `data:image/png;base64, ${this.extension.iconRaw}`;\n            }\n\n            return this.defaultThemeAsset;\n        },\n\n        isActive: {\n            get() {\n                if (!this.isInstalled) {\n                    return false;\n                }\n\n                return this.extension.active;\n            },\n            set(active) {\n                if (!this.isInstalled) {\n                    return;\n                }\n\n                this.extension.active = active;\n\n                this.$nextTick(() => {\n                    this.changeExtensionStatus();\n                }, 0);\n            },\n        },\n\n        allowDisable() {\n            return this.extension.allowDisable;\n        },\n\n        isInstalled() {\n            return this.extension.installedAt !== null;\n        },\n\n        privacyPolicyLink() {\n            return this.extension.privacyPolicyLink;\n        },\n\n        permissions() {\n            return Object.keys(this.extension.permissions).length ? this.extension.permissions : null;\n        },\n\n        assetFilter() {\n            return Filter.getByName('asset');\n        },\n\n        isRemovable() {\n            if (this.extension.installedAt === null && this.extension.source === 'local') {\n                return true;\n            }\n\n            return false;\n        },\n\n        isUninstallable() {\n            if (this.extension.installedAt !== null) {\n                return true;\n            }\n\n            return false;\n        },\n\n        isUpdateable() {\n            if (!this.extension || this.extension.latestVersion === null || this.extension.managedByComposer) {\n                return false;\n            }\n\n            return this.extension.latestVersion !== this.extension.version;\n        },\n\n        openLinkExists() {\n            return !!this.link;\n        },\n\n        extensionMainModule() {\n            return Cicada.State.get('extensionMainModules').mainModules.find(\n                (mainModule) => mainModule.extensionName === this.extension.name,\n            );\n        },\n\n        link() {\n            if (this.openLink) {\n                return this.openLink;\n            }\n\n            if (this.extensionMainModule) {\n                return {\n                    name: 'sw.extension.sdk.index',\n                    params: {\n                        id: this.extensionMainModule.moduleId,\n                    },\n                };\n            }\n\n            return null;\n        },\n\n        consentAffirmationModalActionLabel() {\n            return this.$tc('sw-extension-store.component.sw-extension-permissions-modal.acceptAndUpdate');\n        },\n\n        consentAffirmationModalCloseLabel() {\n            return this.$tc('global.default.cancel');\n        },\n\n        consentAffirmationModalTitle() {\n            return this.$tc('sw-extension-store.component.sw-extension-permissions-modal.titleNewPermissions', 1, {\n                extensionLabel: this.extension.label,\n            });\n        },\n\n        consentAffirmationModalDescription() {\n            return this.$tc('sw-extension-store.component.sw-extension-permissions-modal.descriptionNewPermissions', 1, {\n                extensionLabel: this.extension.label,\n            });\n        },\n\n        extensionManagementDisabled() {\n            return Cicada.State.get('context').app.config.settings.disableExtensionManagement;\n        },\n\n        showContextMenu() {\n            if (this.isInstalled && this.extension.configurable) {\n                return true;\n            }\n\n            if (this.openLinkExists && this.extension.active) {\n                return true;\n            }\n\n            if (this.privacyPolicyLink) {\n                return true;\n            }\n\n            if (this.isInstalled && this.extension.privacyPolicyExtension) {\n                return true;\n            }\n\n            if (this.isInstalled && this.permissions) {\n                return true;\n            }\n\n            if (!this.extensionManagementDisabled && this.isUpdateable) {\n                return true;\n            }\n\n            if (\n                !this.extensionManagementDisabled &&\n                this.extension.storeLicense &&\n                this.extension.storeLicense.variant === 'rent' &&\n                this.extension.storeLicense.expirationDate === null\n            ) {\n                return true;\n            }\n\n            if (!this.extensionManagementDisabled && this.isRemovable) {\n                return true;\n            }\n\n            if (!this.extensionManagementDisabled && this.isUninstallable) {\n                return true;\n            }\n\n            return false;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            this.openLink = await this.cicadaExtensionService.getOpenLink(this.extension);\n        },\n\n        emitUpdateList() {\n            this.$emit('update-list');\n        },\n\n        getHelp() {\n            // implemented in SAAS-1137\n        },\n\n        openPrivacyAndSafety() {\n            window.open(this.extension.privacyPolicyLink, '_blank');\n        },\n\n        openRemovalModal() {\n            this.showRemovalModal = true;\n        },\n\n        openUninstallModal() {\n            this.showUninstallModal = true;\n        },\n\n        closeRemovalModal() {\n            this.showRemovalModal = false;\n        },\n\n        closeUninstallModal() {\n            this.showUninstallModal = false;\n        },\n\n        async closeModalAndUninstallExtension(removeData) {\n            this.showUninstallModal = false;\n            this.isLoading = true;\n\n            try {\n                await this.cicadaExtensionService.uninstallExtension(this.extension.name, this.extension.type, removeData);\n                this.clearCacheAndReloadPage();\n            } catch (e) {\n                this.showExtensionErrors(e);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        async updateExtension(allowNewPermissions = false) {\n            this.isLoading = true;\n\n            try {\n                if (this.extension.updateSource === 'store') {\n                    await this.extensionStoreActionService.downloadExtension(this.extension.name);\n                }\n\n                if (this.extension.installedAt) {\n                    await this.cicadaExtensionService.updateExtension(\n                        this.extension.name,\n                        this.extension.type,\n                        allowNewPermissions,\n                    );\n                }\n                this.clearCacheAndReloadPage();\n            } catch (e) {\n                if (e.response?.data?.errors[0]?.code === 'FRAMEWORK__EXTENSION_UPDATE_REQUIRES_CONSENT_AFFIRMATION') {\n                    this.consentAffirmationDeltas = e.response.data.errors[0].meta.parameters.deltas;\n\n                    this.openConsentAffirmationModal();\n\n                    return;\n                }\n\n                this.showExtensionErrors(e);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        async closeModalAndRemoveExtension(removeData) {\n            // we close the modal in the called methods before updating the listing\n            if (this.extension.storeLicense === null || this.extension.storeLicense.variant !== 'rent') {\n                await this.removeExtension(removeData);\n                this.showRemovalModal = false;\n\n                return;\n            }\n\n            await this.cancelAndRemoveExtension();\n            this.showRemovalModal = false;\n        },\n\n        openExtension() {\n            if (this.link) {\n                this.$router.push(this.link);\n            }\n        },\n\n        async openPermissionsModalForInstall() {\n            if (!this.permissions) {\n                this.permissionsAccepted = true;\n                this.isLoading = true;\n                await this.installAndActivateExtension();\n                return;\n            }\n\n            this.permissionModalActionLabel = this.$tc(\n                'sw-extension-store.component.sw-extension-card-base.labelAcceptAndInstall',\n            );\n            this.showPermissionsModal = true;\n        },\n\n        openPermissionsModal() {\n            this.permissionModalActionLabel = null;\n            this.showPermissionsModal = true;\n        },\n\n        closePermissionsModal() {\n            this.permissionModalActionLabel = null;\n            this.showPermissionsModal = false;\n        },\n\n        async closePermissionsModalAndInstallExtension() {\n            this.permissionsAccepted = true;\n            this.closePermissionsModal();\n            await this.installExtension();\n        },\n\n        /*\n         * Interface for deriving components\n         */\n        async changeExtensionStatus() {\n            Utils.debug.warn(this._name, 'No implementation of changeExtensionStatus found');\n        },\n\n        installExtension() {\n            Utils.debug.warn(this._name, 'No implementation of installExtension found');\n        },\n\n        async installAndActivateExtension() {\n            Utils.debug.warn(this._name, 'No implementation of installAndActivateExtension found');\n        },\n\n        async removeExtension(removeData) {\n            try {\n                this.showRemovalModal = false;\n                this.isLoading = true;\n\n                await this.cicadaExtensionService.removeExtension(\n                    this.extension.name,\n                    this.extension.type,\n                    removeData,\n                );\n                this.extension.active = false;\n            } catch (e) {\n                this.showStoreError(e);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        cancelAndRemoveExtension() {\n            Utils.debug.warn(this._name, 'No implementation of cancelAndRemoveExtension found');\n        },\n\n        openPrivacyModal() {\n            this.showPrivacyModal = true;\n        },\n\n        closePrivacyModal() {\n            this.showPrivacyModal = false;\n        },\n\n        clearCacheAndReloadPage() {\n            return this.cacheApiService.clear().then(() => {\n                window.location.reload();\n            });\n        },\n\n        openConsentAffirmationModal() {\n            this.showConsentAffirmationModal = true;\n        },\n\n        closeConsentAffirmationModal() {\n            this.showConsentAffirmationModal = false;\n        },\n\n        async closeConsentAffirmationModalAndUpdateExtension() {\n            this.closeConsentAffirmationModal();\n            await this.updateExtension(true);\n        },\n    },\n};\n"],"names":["template","Utils","Filter","index","active","mainModule","removeData","e","allowNewPermissions","_a","_b","_c"],"mappings":"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"}