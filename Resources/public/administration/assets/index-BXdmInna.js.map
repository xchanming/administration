{"version":3,"file":"index-BXdmInna.js","sources":["../../../app/administration/src/module/sw-customer/view/sw-customer-detail-order/sw-customer-detail-order.html.twig","../../../app/administration/src/module/sw-customer/view/sw-customer-detail-order/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_customer_detail_order_card %}\n<sw-card\n    class=\"sw-customer-detail-order\"\n    position-identifier=\"sw-customer-detail-order\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_customer_detail_order_card_toolbar %}\n    <template #toolbar>\n        <sw-card-filter\n            v-if=\"(orders && orders.total > 0) || term\"\n            :placeholder=\"$tc('sw-customer.detailOrder.searchbarPlaceholder')\"\n            @sw-card-filter-term-change=\"onChange\"\n        >\n            <template #filter>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_customer_detail_order_add_button %}\n                <sw-button\n                    v-tooltip=\"{\n                        message: $tc('sw-privileges.tooltip.warning'),\n                        disabled: acl.can('order.creator'),\n                        showOnDisabledElements: true\n                    }\"\n                    class=\"sw-customer-detail-order__add-order-action\"\n                    size=\"small\"\n                    :disabled=\"!acl.can('order.creator')\"\n                    @click=\"navigateToCreateOrder\"\n                >\n                    <sw-icon\n                        name=\"regular-plus-circle-s\"\n                        small\n                    />\n                    {{ $tc('sw-customer.detailOrder.buttonCreateOrder') }}\n                </sw-button>\n                {% endblock %}\n            </template>\n        </sw-card-filter>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_customer_detail_order_card_grid %}\n    <template\n        v-if=\"(orders && orders.total > 0) || term\"\n        #grid\n    >\n        <sw-entity-listing\n            :columns=\"orderColumns\"\n            :repository=\"orderRepository\"\n            :items=\"orders\"\n            :allow-column-edit=\"false\"\n            :show-settings=\"false\"\n            :show-selection=\"false\"\n            :full-page=\"false\"\n            :is-loading=\"isLoading\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_customer_detail_order_card_grid_columns %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_customer_detail_order_card_grid_columns_number %}\n            <template #column-orderNumber=\"{ item }\">\n                <router-link :to=\"{ name: 'sw.order.detail', params: { id: item.id } }\">\n                    {{ item.orderNumber }}\n                </router-link>\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_customer_detail_order_card_grid_columns_amount %}\n            <template #column-amountTotal=\"{ item }\">\n                {{ currencyFilter(item.amountTotal, item.currency.isoCode) }}\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_customer_detail_order_card_grid_columns_order_date_time %}\n            <template #column-orderDateTime=\"{ item }\">\n                <sw-time-ago :date=\"item.orderDateTime\" />\n            </template>\n            {% endblock %}\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_customer_detail_order_card_grid_columns_action %}\n            <template #actions=\"{ item }\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_customer_detail_order_card_grid_columns_action_button %}\n                <sw-context-menu-item\n                    class=\"sw-order-list-order-view-action\"\n                    :router-link=\"{ name: 'sw.order.detail', params: { id: item.id } }\"\n                >\n                    {{ $tc('sw-customer.detailOrder.columnContextOpenOrder') }}\n                </sw-context-menu-item>\n                {% endblock %}\n            </template>\n            {% endblock %}\n        </sw-entity-listing>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_customer_detail_order_card_grid_empty_state %}\n    <template v-if=\"(!orders || orders.total === 0) && !isLoading && !term\">\n        <sw-empty-state\n            :title=\"emptyTitle\"\n            :absolute=\"false\"\n            :subline=\"$tc('sw-customer.detailOrder.emptySubline')\"\n        >\n            <template #icon>\n                <img\n                    :src=\"assetFilter('/administration/static/img/empty-states/order-empty-state.svg')\"\n                    :alt=\"emptyTitle\"\n                >\n            </template>\n\n            <template #actions>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_customer_detail_order_card_grid_empty_state_action %}\n                <sw-button\n                    v-tooltip=\"{\n                        message: $tc('sw-privileges.tooltip.warning'),\n                        disabled: acl.can('order.creator'),\n                        showOnDisabledElements: true\n                    }\"\n                    variant=\"ghost\"\n                    class=\"sw-customer-detail-order__add-order-action\"\n                    :disabled=\"!acl.can('order.creator')\"\n                    @click=\"navigateToCreateOrder\"\n                >\n                    {{ $tc('sw-customer.detailOrder.buttonCreateOrder') }}\n                </sw-button>\n                {% endblock %}\n            </template>\n        </sw-empty-state>\n    </template>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n","import template from './sw-customer-detail-order.html.twig';\nimport './sw-customer-detail-order.scss';\n\n/**\n * @package checkout\n */\n\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    props: {\n        customer: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            activeCustomer: this.customer,\n            orders: null,\n            term: '',\n            sortBy: 'orderDateTime',\n            sortDirection: 'DESC',\n        };\n    },\n\n    computed: {\n        orderColumns() {\n            return this.getOrderColumns();\n        },\n\n        orderRepository() {\n            return this.repositoryFactory.create('order');\n        },\n\n        emptyTitle() {\n            return this.term\n                ? this.$tc('sw-customer.detailOrder.emptySearchTitle')\n                : this.$tc('sw-customer.detailOrder.emptyTitle');\n        },\n\n        currencyFilter() {\n            return Cicada.Filter.getByName('currency');\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        customer() {\n            this.createdComponent();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n\n            if (this.orders?.criteria) {\n                this.orders.criteria = null;\n            }\n\n            this.refreshList();\n        },\n\n        onChange(term) {\n            this.term = term;\n            this.orders.criteria.setPage(1);\n            this.orders.criteria.setTerm(term);\n\n            this.refreshList();\n        },\n\n        getOrderColumns() {\n            return [\n                {\n                    property: 'orderNumber',\n                    label: 'sw-customer.detailOrder.columnNumber',\n                    align: 'center',\n                },\n                {\n                    property: 'amountTotal',\n                    label: 'sw-customer.detailOrder.columnAmount',\n                    align: 'right',\n                },\n                {\n                    property: 'stateMachineState.name',\n                    label: 'sw-customer.detailOrder.columnOrderState',\n                },\n                {\n                    property: 'orderDateTime',\n                    label: 'sw-customer.detailOrder.columnOrderDate',\n                    align: 'center',\n                },\n            ];\n        },\n\n        refreshList() {\n            let criteria = new Criteria(1, 25);\n            if (!this.orders || !this.orders.criteria) {\n                criteria.addFilter(Criteria.equals('order.orderCustomer.customerId', this.customer.id));\n            } else {\n                criteria = this.orders.criteria;\n            }\n            criteria.addAssociation('stateMachineState').addAssociation('currency');\n\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection));\n\n            this.orderRepository.search(criteria).then((orders) => {\n                this.orders = orders;\n                this.isLoading = false;\n            });\n        },\n\n        navigateToCreateOrder() {\n            this.$router.push({\n                name: 'sw.order.create',\n                query: {\n                    customerId: this.customer.id,\n                },\n            });\n        },\n    },\n};\n"],"names":["template","Criteria","index","_a","term","criteria","orders"],"mappings":"AAAA,MAAeA,EAAA,stGCOT,CAAE,SAAAC,CAAQ,EAAK,OAAO,KAGbC,EAAA,CACX,SAAAF,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,oBACA,KACH,EAED,MAAO,CACH,SAAU,CACN,KAAM,OACN,SAAU,EACb,CACJ,EAED,MAAO,CACH,MAAO,CACH,UAAW,GACX,eAAgB,KAAK,SACrB,OAAQ,KACR,KAAM,GACN,OAAQ,gBACR,cAAe,MAC3B,CACK,EAED,SAAU,CACN,cAAe,CACX,OAAO,KAAK,iBACf,EAED,iBAAkB,CACd,OAAO,KAAK,kBAAkB,OAAO,OAAO,CAC/C,EAED,YAAa,CACT,OAAO,KAAK,KACN,KAAK,IAAI,0CAA0C,EACnD,KAAK,IAAI,oCAAoC,CACtD,EAED,gBAAiB,CACb,OAAO,OAAO,OAAO,UAAU,UAAU,CAC5C,EAED,aAAc,CACV,OAAO,OAAO,OAAO,UAAU,OAAO,CACzC,CACJ,EAED,MAAO,CACH,UAAW,CACP,KAAK,iBAAgB,CACxB,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CDzE3B,IAAAG,EC0EY,KAAK,UAAY,IAEbA,EAAA,KAAK,SAAL,MAAAA,EAAa,WACb,KAAK,OAAO,SAAW,MAG3B,KAAK,YAAW,CACnB,EAED,SAASC,EAAM,CACX,KAAK,KAAOA,EACZ,KAAK,OAAO,SAAS,QAAQ,CAAC,EAC9B,KAAK,OAAO,SAAS,QAAQA,CAAI,EAEjC,KAAK,YAAW,CACnB,EAED,iBAAkB,CACd,MAAO,CACH,CACI,SAAU,cACV,MAAO,uCACP,MAAO,QACV,EACD,CACI,SAAU,cACV,MAAO,uCACP,MAAO,OACV,EACD,CACI,SAAU,yBACV,MAAO,0CACV,EACD,CACI,SAAU,gBACV,MAAO,0CACP,MAAO,QACV,CACjB,CACS,EAED,aAAc,CACV,IAAIC,EAAW,IAAIJ,EAAS,EAAG,EAAE,EAC7B,CAAC,KAAK,QAAU,CAAC,KAAK,OAAO,SAC7BI,EAAS,UAAUJ,EAAS,OAAO,iCAAkC,KAAK,SAAS,EAAE,CAAC,EAEtFI,EAAW,KAAK,OAAO,SAE3BA,EAAS,eAAe,mBAAmB,EAAE,eAAe,UAAU,EAEtEA,EAAS,WAAWJ,EAAS,KAAK,KAAK,OAAQ,KAAK,aAAa,CAAC,EAElE,KAAK,gBAAgB,OAAOI,CAAQ,EAAE,KAAMC,GAAW,CACnD,KAAK,OAASA,EACd,KAAK,UAAY,EACjC,CAAa,CACJ,EAED,uBAAwB,CACpB,KAAK,QAAQ,KAAK,CACd,KAAM,kBACN,MAAO,CACH,WAAY,KAAK,SAAS,EAC7B,CACjB,CAAa,CACJ,CACJ,CACL"}