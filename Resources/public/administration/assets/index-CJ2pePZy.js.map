{"version":3,"file":"index-CJ2pePZy.js","sources":["../../../app/administration/src/app/component/list/sw-sortable-list/sw-sortable-list.html.twig","../../../app/administration/src/app/component/list/sw-sortable-list/index.ts"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_sortable_list_container %}\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_sortable_list %}\n<ul\n    v-if=\"hasItems\"\n    class=\"sw-sortable-list\"\n>\n    <slot v-bind=\"{ sortedItems, sortable }\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_sortable_list_item %}\n        <li\n            v-for=\"item in sortedItems\"\n            :key=\"item.id\"\n            v-draggable=\"{ ...mergedDragConfig, data: item }\"\n            v-droppable=\"{ ...mergedDragConfig, data: item }\"\n            class=\"sw-sortable-list__item\"\n        >\n            <slot\n                name=\"item\"\n                v-bind=\"{ item, sortable }\"\n            ></slot>\n        </li>\n        {% endblock %}\n    </slot>\n</ul>\n{% endblock %}\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_sortable_list_empty_state %}\n<sw-empty-state\n    v-else\n    class=\"sw-sortable-list__empty-state\"\n    :title=\"$tc('sw-empty-state.messageNoResultTitle')\"\n/>\n{% endblock %}\n{% endblock %}\n","import type { PropType } from 'vue';\nimport type { Entity } from '@cicada-ag/meteor-admin-sdk/es/_internals/data/Entity';\nimport template from './sw-sortable-list.html.twig';\nimport './sw-sortable-list.scss';\n\nconst { Component } = Cicada;\n\ninterface DragConfig {\n    delay: number;\n    dragGroup: number | string;\n    draggableCls: string;\n    draggingStateCls: string;\n    dragElementCls: string;\n    validDragCls: string;\n    invalidDragCls: string;\n    preventEvent: boolean;\n    validateDrop: boolean;\n    validateDrag: boolean;\n    onDragStart: (...args: never[]) => void;\n    onDragEnter: (...args: never[]) => void;\n    onDragLeave: (...args: never[]) => void;\n    onDrop: (...args: never[]) => void;\n    data: Record<string, unknown>;\n    disabled: boolean;\n}\n\ninterface ScrollOnDragConf {\n    speed: number;\n    margin: number;\n    accelerationMargin: number;\n}\n\nconst defaultConfig = {\n    delay: 300,\n    dragGroup: 'sw-sortable-list',\n    validDragCls: 'is--valid-drag',\n    preventEvent: true,\n    disabled: false,\n} as DragConfig;\n\nconst defaultScrollOnDragConf = {\n    speed: 50,\n    margin: 100,\n    accelerationMargin: 0,\n} as ScrollOnDragConf;\n\n/**\n * @package admin\n *\n * @private\n * @status ready\n * @example-type static\n * @description A configurable list component that can be used to sort items via drag-and-drop.\n * @component-example\n * <sw-sortable-list\n *      :items=\"[{id: '1', name: 'test'}, {id: '2', name: 'test2'}]\"\n *      @itemsSorted=\"onSort\">\n *          <template #item=\"{ item }\">\n *              <div class=\"my-item\">{{ item.name }}</div>\n *          </template>\n * </sw-sortable-list>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nComponent.register('sw-sortable-list', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    props: {\n        items: {\n            type: Array as PropType<Array<Entity<keyof EntitySchema.Entities>>>,\n            required: true,\n        },\n        sortable: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default(): boolean {\n                return true;\n            },\n        },\n        dragConf: {\n            type: Object as PropType<DragConfig>,\n            required: false,\n            default(): DragConfig {\n                return defaultConfig;\n            },\n        },\n        scrollOnDrag: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default(): boolean {\n                return false;\n            },\n        },\n        scrollOnDragConf: {\n            type: Object as PropType<ScrollOnDragConf>,\n            required: false,\n            default(): ScrollOnDragConf {\n                return defaultScrollOnDragConf;\n            },\n        },\n    },\n\n    data(): {\n        dragElement: Element | null;\n        defaultConfig: DragConfig;\n        defaultScrollOnDragConf: ScrollOnDragConf;\n        sortedItems: Array<Entity<keyof EntitySchema.Entities>>;\n        scrollEventTicking: boolean;\n    } {\n        return {\n            defaultConfig,\n            defaultScrollOnDragConf,\n            sortedItems: [...this.items],\n            dragElement: null,\n            scrollEventTicking: false,\n        };\n    },\n\n    computed: {\n        hasItems(): boolean {\n            return this.items.length > 0;\n        },\n\n        isSortable(): boolean {\n            return this.sortable;\n        },\n\n        mergedDragConfig(): DragConfig {\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            this.defaultConfig.onDragStart = this.onDragStart;\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            this.defaultConfig.onDragEnter = this.onDragEnter;\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            this.defaultConfig.onDrop = this.onDrop;\n\n            return { ...this.defaultConfig, ...this.dragConf } as DragConfig;\n        },\n\n        mergedScrollOnDragConfig(): ScrollOnDragConf {\n            return {\n                ...this.defaultScrollOnDragConf,\n                ...this.scrollOnDragConf,\n            } as ScrollOnDragConf;\n        },\n\n        scrollableParent(): Element | null {\n            return this.findScrollableParent(this.$el as Element | null);\n        },\n    },\n\n    methods: {\n        findScrollableParent(node: Element | null): Element | null {\n            if (node === null) {\n                return null;\n            }\n\n            if (node.scrollHeight > node.clientHeight) {\n                return node;\n            }\n\n            return this.findScrollableParent(node.parentElement);\n        },\n\n        hasOrderChanged(): boolean {\n            return JSON.stringify(this.sortedItems) === JSON.stringify(this.items);\n        },\n\n        onDragEnter(\n            draggedComponent: Entity<keyof EntitySchema.Entities>,\n            droppedComponent: Entity<keyof EntitySchema.Entities>,\n        ): void {\n            if (!this.isSortable) {\n                return;\n            }\n\n            if (!draggedComponent || !droppedComponent) {\n                return;\n            }\n\n            if (draggedComponent.id === droppedComponent?.id) {\n                return;\n            }\n\n            if (this.scrollOnDrag) {\n                this.scroll();\n            }\n\n            const draggedIndex = this.sortedItems.findIndex((c) => c.id === draggedComponent.id);\n            const droppedIndex = this.sortedItems.findIndex((c) => c.id === droppedComponent.id);\n\n            if (draggedIndex < 0 || droppedIndex < 0) {\n                return;\n            }\n\n            this.sortedItems.splice(droppedIndex, 0, this.sortedItems.splice(draggedIndex, 1)[0]);\n        },\n\n        onDragStart(dragConfig: DragConfig, draggedElement: Element, dragElement: Element): void {\n            this.dragElement = dragElement;\n\n            if (this.scrollOnDrag && this.scrollableParent !== null) {\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                this.scrollableParent.addEventListener('scroll', this.onScroll);\n            }\n        },\n\n        onScroll(): void {\n            if (!this.scrollEventTicking) {\n                window.requestAnimationFrame(() => {\n                    this.scroll();\n                    this.scrollEventTicking = false;\n                });\n\n                this.scrollEventTicking = true;\n            }\n        },\n\n        scroll(): void {\n            if (!this.scrollableParent || !this.dragElement) {\n                return;\n            }\n\n            const scrollableRect = this.scrollableParent.getBoundingClientRect();\n            const dragRect = this.dragElement.getBoundingClientRect();\n            const topDistance = dragRect.top - scrollableRect.top;\n            const bottomDistance = scrollableRect.bottom - dragRect.bottom;\n            const scrollDistance = Math.round(\n                (this.scrollableParent.scrollHeight - this.scrollableParent.clientHeight) / this.scrollableParent.scrollTop,\n            );\n\n            let speed = this.mergedScrollOnDragConfig.speed;\n\n            if (topDistance < this.mergedScrollOnDragConfig.margin && scrollDistance !== 0) {\n                if (topDistance < this.mergedScrollOnDragConfig.accelerationMargin) {\n                    speed *= 1 + Math.abs(topDistance / 20);\n                }\n\n                this.scrollableParent.scrollBy({\n                    top: -speed,\n                    left: 0,\n                    behavior: 'smooth',\n                });\n            }\n\n            if (bottomDistance < this.mergedScrollOnDragConfig.margin && scrollDistance !== 100) {\n                if (bottomDistance < this.mergedScrollOnDragConfig.accelerationMargin) {\n                    speed *= 1 + Math.abs(bottomDistance / 20);\n                }\n\n                this.scrollableParent.scrollBy({\n                    top: speed,\n                    left: 0,\n                    behavior: 'smooth',\n                });\n            }\n        },\n\n        onDrop(): void {\n            this.dragElement = null;\n\n            if (this.scrollOnDrag && this.scrollableParent !== null) {\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                this.scrollableParent.removeEventListener('scroll', this.onScroll);\n            }\n\n            if (!this.isSortable) {\n                return;\n            }\n\n            this.$emit('items-sorted', this.sortedItems, this.hasOrderChanged());\n        },\n    },\n});\n"],"names":["template","Component","defaultConfig","defaultScrollOnDragConf","node","draggedComponent","droppedComponent","draggedIndex","c","droppedIndex","dragConfig","draggedElement","dragElement","scrollableRect","dragRect","topDistance","bottomDistance","scrollDistance","speed"],"mappings":"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"}