{"version":3,"mappings":"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","names":["cicadaExtensionsStore","state","key","value","extensions","myExtensions","languageId","userInfo","initState","Cicada","extensionStore","type","defineComponent","errorResponse","notification","ExtensionStoreActionService","ApiService","httpClient","loginService","technicalName","allowNewPermissions","removeData","licenseId","authorName","extensionId","headline","rating","text","tocAccepted","version","headers","data","formData","additionalHeaders","response","context","CicadaExtensionService","appModulesService","extensionStoreActionService","discountCampaignService","storeApiService","extensionName","allowNewPrivileges","variants","discounted","variant","notDiscounted","extension","entryRoutes","modules","Criteria","themeRepository","criteria","ids","app","innerApp","_a","appName","valueTypes","index","first","second","ExtensionErrorService","errorCodes","fallbackError","translator","errors","_b","error","Application","root","template","StoreError","title","message","getNotification","mapErrorWithDocsLink","meta","mapErrors","extensionErrorHandler","State","Mixin","Filter","index$1","payload","docLink","mappedErrors","__vitePreload","index$2","regex","labelType","manifest","route","moduleName"],"ignoreList":[],"sources":["../../../app/administration/src/module/sw-extension/store/extensions.store.ts","../../../app/administration/src/module/sw-extension/store/index.ts","../../../app/administration/src/module/sw-extension/mixin/sw-extension-error.mixin.js","../../../app/administration/src/module/sw-extension/service/extension-store-action.service.ts","../../../app/administration/src/module/sw-extension/service/cicada-extension.service.ts","../../../app/administration/src/module/sw-extension/service/extension-error.service.js","../../../app/administration/src/module/sw-extension/service/index.ts","../../../app/administration/src/module/sw-extension/page/sw-extension-my-extensions-account/sw-extension-my-extensions-account.html.twig","../../../app/administration/src/module/sw-extension/service/extension-error-handler.service.ts","../../../app/administration/src/module/sw-extension/page/sw-extension-my-extensions-account/index.ts","../../../app/administration/src/module/sw-extension/acl/index.js","../../../app/administration/src/module/sw-extension/index.js"],"sourcesContent":["import type { Module } from 'vuex';\nimport type { UserInfo } from 'src/core/service/api/store.api.service';\nimport type { Extension } from '../service/extension-store-action.service';\n\ninterface CicadaExtensionsState {\n    search: {\n        page: number;\n        limit: number;\n        rating: $TSFixMe;\n        sorting: $TSFixMe;\n        term: null | string;\n        filter: $TSFixMe;\n    };\n    extensionListing: Extension[];\n    categoriesLanguageId: string | null;\n    myExtensions: {\n        loading: boolean;\n        data: Extension[];\n    };\n    userInfo: UserInfo | null;\n}\n\ntype SearchValue<T, K extends keyof T> = {\n    key: K;\n    value: T[K];\n};\n\nconst cicadaExtensionsStore: Module<CicadaExtensionsState, VuexRootState> = {\n    namespaced: true,\n\n    state() {\n        return {\n            search: {\n                page: 1,\n                limit: 12,\n                rating: null,\n                sorting: null,\n                term: null,\n                filter: {},\n            },\n            extensionListing: [],\n            categoriesLanguageId: null,\n            myExtensions: {\n                loading: true,\n                data: [],\n            },\n            userInfo: null,\n            cicadaId: null,\n            loginStatus: false,\n            licensedExtensions: {\n                loading: false,\n                data: [],\n            },\n            totalPlugins: 0,\n            plugins: null,\n        };\n    },\n\n    mutations: {\n        setSearchValue<K extends keyof CicadaExtensionsState['search']>(\n            state: CicadaExtensionsState,\n            { key, value }: SearchValue<CicadaExtensionsState['search'], K>,\n        ) {\n            state.search.page = 1;\n            state.search[key] = value;\n        },\n\n        setExtensionListing(state, extensions: Extension[]) {\n            state.extensionListing = extensions;\n        },\n\n        loadMyExtensions(state) {\n            state.myExtensions.loading = true;\n        },\n\n        // eslint-disable-next-line @typescript-eslint/no-inferrable-types\n        setLoading(state, value: boolean = true) {\n            state.myExtensions.loading = value;\n        },\n\n        myExtensions(state, myExtensions: Extension[]) {\n            state.myExtensions.data = myExtensions;\n            state.myExtensions.loading = false;\n        },\n\n        categoriesLanguageId(state, languageId: string) {\n            state.categoriesLanguageId = languageId;\n        },\n\n        setUserInfo(state, userInfo: UserInfo | null) {\n            state.userInfo = userInfo;\n        },\n\n        pluginErrorsMapped() {\n            /* nth */\n        },\n    },\n};\n\n/**\n * @package checkout\n * @private\n * @deprecated tag:v6.7.0 - Will be replaced with Pinia store\n */\nexport default cicadaExtensionsStore;\n\n/**\n * @private\n */\nexport type { CicadaExtensionsState };\n","import type { CicadaClass } from 'src/core/cicada';\nimport extensionStore from './extensions.store';\n\n/**\n * @package checkout\n * @private\n */\nexport default function initState(Cicada: CicadaClass): void {\n    Cicada.State.registerModule('cicadaExtensions', extensionStore);\n\n    let languageId = Cicada.State.get('session').languageId;\n    Cicada.State._store.subscribe(async ({ type }, state): Promise<void> => {\n        if (!Cicada.Service('acl').can('system.plugin_maintain')) {\n            return;\n        }\n\n        if (type === 'setAdminLocale' && state.session.languageId !== '' && languageId !== state.session.languageId) {\n            // Always on page load setAdminLocale will be called once. Catch it to not load refresh extensions\n            if (languageId === '') {\n                languageId = state.session.languageId;\n                return;\n            }\n\n            languageId = state.session.languageId;\n            await Cicada.Service('cicadaExtensionService').updateExtensionData().then();\n        }\n    });\n}\n","import { defineComponent } from 'vue';\n\n/**\n * @package checkout\n * @private\n */\nexport default Cicada.Mixin.register(\n    'sw-extension-error',\n    defineComponent({\n        mixins: [Cicada.Mixin.getByName('notification')],\n\n        methods: {\n            showExtensionErrors(errorResponse) {\n                Cicada.Service('extensionErrorService')\n                    .handleErrorResponse(errorResponse, this)\n                    .forEach((notification) => {\n                        this.createNotificationError(notification);\n                    });\n            },\n        },\n    }),\n);\n","import type { AxiosInstance, AxiosResponse } from 'axios';\nimport type { LoginService } from 'src/core/service/login.service';\nimport type { ContextState } from 'src/app/state/context.store';\nimport type { BasicHeaders } from 'src/core/service/api.service';\n\nimport ApiService from 'src/core/service/api.service';\n\ntype ExtensionVariantType = 'rent' | 'buy' | 'free';\ntype ExtensionType = 'app' | 'plugin';\ntype ExtensionSource = 'local' | 'store';\n\ntype ExtensionStoreActionHeaders = BasicHeaders & {\n    'sw-language-id'?: string;\n};\n\ninterface DiscountCampaign {\n    name: string;\n    startDate: string;\n    endDate: string | null;\n    discount: number;\n    discountedPrice: number | null;\n    discountAppliesForMonths: number | null;\n}\n\ninterface ExtensionVariant {\n    id: number;\n    type: ExtensionVariantType;\n    netPrice: number;\n    trialPhaseIncluded: boolean;\n    discountCampaign: DiscountCampaign | null;\n}\n\ninterface StoreCategory {\n    id: string;\n    name: string;\n    parent: string | null;\n    details: { [key: string]: string };\n}\n\ninterface License {\n    id: number;\n    creationDate: string;\n    variant: ExtensionVariantType;\n    paymentText: string;\n    netPrice: number;\n    nextBookingDate: string | null;\n    // eslint-disable-next-line no-use-before-define\n    licensedExtension: Extension;\n}\n\ninterface Extension {\n    id: number | null;\n    localId: string | null;\n    source: ExtensionSource;\n    name: string;\n    label: string | null;\n    description: string | null;\n    shortDescription: string | null;\n    producerName: string | null;\n    license: string | null;\n    version: string | null;\n    latestVersion: string | null;\n    privacyPolicyLink: string | null;\n    languages: string[];\n    rating: number | null;\n    numberOfRatings: number;\n    variants: ExtensionVariant[] | null;\n    faq: Array<{ question: string; answer: string }> | null;\n    binaries: Array<{\n        version: string;\n        text: string;\n        creationDate: string;\n    }> | null;\n    images: Array<{ remoteLink: string; raw: string | null }> | null;\n    icon: string | null;\n    iconRaw: string | null;\n    categories: StoreCategory[] | null;\n    permissions: Array<{ entity: string; operation: string }> | null;\n    active: boolean;\n    type: ExtensionType;\n    isTheme: boolean;\n    configurable: boolean;\n    privacyPolicyExtension: string | null;\n    storeLicense: License | null;\n    storeExtension: Extension | null;\n    installedAt: string;\n    updatedAt: string;\n    notices: string[];\n    inAppFeaturesAvailable?: boolean;\n}\n\n/**\n * @package checkout\n * @private\n */\nexport default class ExtensionStoreActionService extends ApiService {\n    constructor(httpClient: AxiosInstance, loginService: LoginService) {\n        super(httpClient, loginService, 'extension', 'application/json');\n        this.name = 'extensionStoreActionService';\n    }\n\n    public downloadExtension(technicalName: string): Promise<AxiosResponse<void>> {\n        return this.httpClient.post(\n            `_action/${this.getApiBasePath()}/download/${technicalName}`,\n            {},\n            {\n                headers: this.storeHeaders(Cicada.Context.api),\n                version: 3,\n            },\n        );\n    }\n\n    public installExtension(technicalName: string, type: ExtensionType): Promise<AxiosResponse<void>> {\n        return this.httpClient.post(\n            `_action/${this.getApiBasePath()}/install/${type}/${technicalName}`,\n            {},\n            {\n                headers: this.storeHeaders(),\n                version: 3,\n            },\n        );\n    }\n\n    public updateExtension(\n        technicalName: string,\n        type: ExtensionType,\n        allowNewPermissions = false,\n    ): Promise<AxiosResponse<void>> {\n        return this.httpClient.post(\n            `_action/${this.getApiBasePath()}/update/${type}/${technicalName}`,\n            { allowNewPermissions },\n            {\n                headers: this.storeHeaders(),\n                version: 3,\n            },\n        );\n    }\n\n    public activateExtension(technicalName: string, type: ExtensionType): Promise<AxiosResponse<void>> {\n        return this.httpClient.put(\n            `_action/${this.getApiBasePath()}/activate/${type}/${technicalName}`,\n            {},\n            {\n                headers: this.storeHeaders(),\n                version: 3,\n            },\n        );\n    }\n\n    public deactivateExtension(technicalName: string, type: ExtensionType): Promise<AxiosResponse<void>> {\n        return this.httpClient.put(\n            `_action/${this.getApiBasePath()}/deactivate/${type}/${technicalName}`,\n            {},\n            {\n                headers: this.storeHeaders(),\n                version: 3,\n            },\n        );\n    }\n\n    public uninstallExtension(\n        technicalName: string,\n        type: ExtensionType,\n        removeData: boolean,\n    ): Promise<AxiosResponse<void>> {\n        return this.httpClient.post(\n            `_action/${this.getApiBasePath()}/uninstall/${type}/${technicalName}`,\n            { keepUserData: !removeData },\n            {\n                headers: this.storeHeaders(),\n                version: 3,\n            },\n        );\n    }\n\n    public removeExtension(\n        technicalName: string,\n        type: ExtensionType,\n        removeData: boolean,\n    ): Promise<AxiosResponse<void>> {\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/remove/${type}/${technicalName}`,\n            { keepUserData: !removeData },{\n                headers: this.storeHeaders(),\n                version: 3,\n            });\n    }\n\n    public cancelLicense(licenseId: number): Promise<void> {\n        return this.httpClient.delete(`/license/cancel/${licenseId}`, {\n            headers: this.storeHeaders(),\n            version: 3,\n        });\n    }\n\n    public rateExtension({\n        authorName,\n        extensionId,\n        headline,\n        rating,\n        text,\n        tocAccepted,\n        version,\n    }: {\n        authorName: string;\n        extensionId: number;\n        headline: string;\n        rating: number;\n        text: string;\n        tocAccepted: boolean;\n        version: string;\n    }): Promise<AxiosResponse<void>> {\n        return this.httpClient.post(\n            `/license/rate/${extensionId}`,\n            { authorName, headline, rating, text, tocAccepted, version },\n            {\n                headers: this.storeHeaders(),\n                version: 3,\n            },\n        );\n    }\n\n    public async getMyExtensions(): Promise<Extension[]> {\n        const headers = this.getBasicHeaders();\n\n        const { data } = await this.httpClient.get<Extension[]>(`/_action/${this.getApiBasePath()}/installed`, {\n            headers,\n            version: 3,\n        });\n\n        return data;\n    }\n\n    public async upload(formData: FormData): Promise<unknown> {\n        const additionalHeaders = { 'Content-Type': 'application/zip' };\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        const response = await this.httpClient.post<unknown>(`/_action/${this.getApiBasePath()}/upload`, formData, {\n            headers,\n        });\n\n        return ApiService.handleResponse(response);\n    }\n\n    public async refresh(): Promise<unknown> {\n        const headers = this.getBasicHeaders();\n\n        const response = await this.httpClient.post<unknown>(\n            `/_action/${this.getApiBasePath()}/refresh`,\n            {},\n            { params: {}, headers },\n        );\n\n        return ApiService.handleResponse(response);\n    }\n\n    private storeHeaders(context: ContextState['api'] | null = null): ExtensionStoreActionHeaders {\n        const headers = super.getBasicHeaders();\n\n        if (context?.languageId) {\n            headers['sw-language-id'] = context.languageId;\n        }\n\n        return headers;\n    }\n}\n\n/**\n * @package checkout\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport type {\n    ExtensionStoreActionService,\n    ExtensionVariantType,\n    ExtensionType,\n    ExtensionSource,\n    DiscountCampaign,\n    ExtensionVariant,\n    StoreCategory,\n    License,\n    Extension,\n};\n","import type { RouteLocationNamedRaw, RouteLocation } from 'vue-router';\nimport type { AppModulesService, AppModuleDefinition } from 'src/core/service/api/app-modules.service';\nimport type StoreApiService from 'src/core/service/api/store.api.service';\nimport type { CicadaDiscountCampaignService } from 'src/app/service/discount-campaign.service';\nimport type {\n    ExtensionStoreActionService,\n    Extension,\n    ExtensionVariant,\n    ExtensionVariantType,\n    ExtensionType,\n} from './extension-store-action.service';\n\ntype EXTENSION_VARIANT_TYPES = {\n    [Property in Uppercase<ExtensionVariantType>]: Lowercase<Property>;\n};\n\ntype EXTENSION_TYPES = {\n    [Property in Uppercase<ExtensionType>]: Lowercase<Property>;\n};\n\ninterface LabeledLocation extends RouteLocation {\n    label: string | null;\n}\n\n/**\n * @package checkout\n * @private\n */\nexport default class CicadaExtensionService {\n    public readonly EXTENSION_VARIANT_TYPES: Readonly<EXTENSION_VARIANT_TYPES>;\n\n    private readonly EXTENSION_TYPES: Readonly<EXTENSION_TYPES>;\n\n    constructor(\n        private readonly appModulesService: AppModulesService,\n        private readonly extensionStoreActionService: ExtensionStoreActionService,\n        private readonly discountCampaignService: CicadaDiscountCampaignService,\n        private readonly storeApiService: StoreApiService,\n    ) {\n        this.EXTENSION_VARIANT_TYPES = Object.freeze({\n            RENT: 'rent',\n            BUY: 'buy',\n            FREE: 'free',\n        });\n\n        this.EXTENSION_TYPES = Object.freeze({\n            APP: 'app',\n            PLUGIN: 'plugin',\n        });\n    }\n\n    public async installAndActivateExtension(extensionName: string, type: ExtensionType): Promise<void> {\n        await this.extensionStoreActionService.installExtension(extensionName, type);\n        await this.extensionStoreActionService.activateExtension(extensionName, type);\n        await this.updateExtensionData();\n    }\n\n    public async installExtension(extensionName: string, type: ExtensionType): Promise<void> {\n        await this.extensionStoreActionService.installExtension(extensionName, type);\n\n        await this.updateExtensionData();\n    }\n\n    public async updateExtension(extensionName: string, type: ExtensionType, allowNewPrivileges = false): Promise<void> {\n        await this.extensionStoreActionService.updateExtension(extensionName, type, allowNewPrivileges);\n\n        await this.updateExtensionData();\n    }\n\n    public async uninstallExtension(extensionName: string, type: ExtensionType, removeData: boolean): Promise<void> {\n        await this.extensionStoreActionService.uninstallExtension(extensionName, type, removeData);\n\n        await this.updateExtensionData();\n    }\n\n    public async removeExtension(extensionName: string, type: ExtensionType, removeData: boolean): Promise<void> {\n        await this.extensionStoreActionService.removeExtension(extensionName, type, removeData);\n\n        await this.updateExtensionData();\n    }\n\n\n    public async cancelLicense(licenseId: number): Promise<void> {\n        await this.extensionStoreActionService.cancelLicense(licenseId);\n    }\n\n    public async activateExtension(extensionId: string, type: ExtensionType): Promise<void> {\n        await this.extensionStoreActionService.activateExtension(extensionId, type);\n\n        await this.updateModules();\n    }\n\n    public async deactivateExtension(extensionId: string, type: ExtensionType): Promise<void> {\n        await this.extensionStoreActionService.deactivateExtension(extensionId, type);\n\n        await this.updateModules();\n    }\n\n    public async updateExtensionData(): Promise<void> {\n        Cicada.State.commit('cicadaExtensions/loadMyExtensions');\n\n        try {\n            await this.extensionStoreActionService.refresh();\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const myExtensions = await this.extensionStoreActionService.getMyExtensions();\n\n            Cicada.State.commit('cicadaExtensions/myExtensions', myExtensions);\n\n            await this.updateModules();\n        } finally {\n            Cicada.State.commit('cicadaExtensions/setLoading', false);\n        }\n    }\n\n    public async checkLogin(): Promise<void> {\n        try {\n            const { userInfo } = await this.storeApiService.checkLogin();\n            Cicada.State.commit('cicadaExtensions/setUserInfo', userInfo);\n        } catch {\n            Cicada.State.commit('cicadaExtensions/setUserInfo', null);\n        }\n    }\n\n    public orderVariantsByRecommendation(variants: ExtensionVariant[]): ExtensionVariant[] {\n        const discounted = variants.filter((variant) => this.isVariantDiscounted(variant));\n        const notDiscounted = variants.filter((variant) => !this.isVariantDiscounted(variant));\n\n        return [\n            ...this.orderByType(discounted),\n            ...this.orderByType(notDiscounted),\n        ];\n    }\n\n    public isVariantDiscounted(variant: ExtensionVariant): boolean {\n        if (\n            !variant ||\n            !variant.discountCampaign ||\n            typeof variant.discountCampaign.discountedPrice !== 'number' ||\n            variant.discountCampaign.discountedPrice === variant.netPrice\n        ) {\n            return false;\n        }\n\n        return this.discountCampaignService.isDiscountCampaignActive(variant.discountCampaign);\n    }\n\n    public getPriceFromVariant(variant: ExtensionVariant) {\n        if (this.isVariantDiscounted(variant)) {\n            // null assertion is fine here because we do all checks in isVariantDiscounted\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return variant.discountCampaign!.discountedPrice!;\n        }\n\n        return variant.netPrice;\n    }\n\n    public mapVariantToRecommendation(variant: ExtensionVariant) {\n        switch (variant.type) {\n            case this.EXTENSION_VARIANT_TYPES.FREE:\n                return 0;\n            case this.EXTENSION_VARIANT_TYPES.RENT:\n                return 1;\n            case this.EXTENSION_VARIANT_TYPES.BUY:\n                return 2;\n            default:\n                return 3;\n        }\n    }\n\n    public async getOpenLink(extension: Extension): Promise<null | LabeledLocation | RouteLocationNamedRaw> {\n        if (extension.isTheme) {\n            return this.getLinkToTheme(extension);\n        }\n\n        if (extension.type === this.EXTENSION_TYPES.APP) {\n            return this.getLinkToApp(extension);\n        }\n\n        // Only show open link when extension is active. The route is maybe not available\n        if (!extension.active) {\n            return null;\n        }\n\n        /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */\n        const entryRoutes = Cicada.State.get('extensionEntryRoutes').routes;\n\n        if (entryRoutes[extension.name] !== undefined) {\n            return {\n                name: entryRoutes[extension.name].route,\n                label: entryRoutes[extension.name].label ?? null,\n            } as LabeledLocation;\n        }\n        /* eslint-enable */\n\n        return null;\n    }\n\n    private async updateModules() {\n        const modules = await this.appModulesService.fetchAppModules();\n\n        Cicada.State.commit('cicadaApps/setApps', modules);\n    }\n\n    private async getLinkToTheme(extension: Extension) {\n        const { Criteria } = Cicada.Data;\n        const themeRepository = Cicada.Service('repositoryFactory').create('theme');\n\n        const criteria = new Criteria(1, 1);\n        criteria.addFilter(Criteria.equals('technicalName', extension.name));\n\n        const { data: ids } = await themeRepository.searchIds(criteria);\n\n        if (ids.length === 0) {\n            return null;\n        }\n\n        return {\n            name: 'sw.theme.manager.detail',\n            params: {\n                id: ids[0],\n            },\n        };\n    }\n\n    private getLinkToApp(extension: Extension) {\n        const app = this.getAppFromStore(extension.name);\n\n        if (!app) {\n            return null;\n        }\n\n        if (this.appHasMainModule(app)) {\n            return this.createLinkToModule(app.name);\n        }\n\n        return null;\n    }\n\n    private getAppFromStore(extensionName: string) {\n        return Cicada.State.get('cicadaApps').apps.find((innerApp) => {\n            return innerApp.name === extensionName;\n        });\n    }\n\n    private appHasMainModule(app: AppModuleDefinition) {\n        return !!app.mainModule?.source;\n    }\n\n    private createLinkToModule(appName: string) {\n        return {\n            name: 'sw.extension.module',\n            params: {\n                appName,\n            },\n        };\n    }\n\n    private orderByType(variants: ExtensionVariant[]) {\n        const valueTypes = variants.map((variant, index) => {\n            return { value: this.mapVariantToRecommendation(variant), index };\n        });\n\n        valueTypes.sort((first, second) => {\n            return first.value - second.value;\n        });\n\n        return valueTypes.map((type) => {\n            return variants[type.index];\n        });\n    }\n}\n","/**\n * @package checkout\n * @private\n */\nexport default class ExtensionErrorService {\n    static get name() {\n        return 'extensionErrorService';\n    }\n\n    constructor(errorCodes, fallbackError) {\n        this.errorCodes = errorCodes;\n        this.fallbackError = fallbackError;\n    }\n\n    handleErrorResponse(errorResponse, translator) {\n        const errors = errorResponse?.response?.data?.errors ?? [];\n\n        if (!Array.isArray(errors)) {\n            return [];\n        }\n\n        return errors.map((error) => {\n            return this.handleError(error, translator);\n        });\n    }\n\n    handleError(error, translator) {\n        return this._translateRawNotification(\n            {\n                ...this._getNotification(error, translator),\n                parameters: error?.meta?.parameters || {},\n            },\n            translator,\n        );\n    }\n\n    _getNotification(error) {\n        return this.errorCodes[error.code]\n            ? this.errorCodes[error.code]\n            : {\n                  title: error.title || this.fallbackError.title,\n                  message: error.detail || this.fallbackError.detail,\n              };\n    }\n\n    _translateRawNotification(notification, translator) {\n        return {\n            title: translator.$t(notification.title, notification.parameters),\n            message: translator.$t(notification.message, notification.parameters),\n            autoClose: notification.autoClose !== false,\n            actions: notification.actions ?? [],\n        };\n    }\n}\n","import type { SubContainer } from 'src/global.types';\n\nimport type { App } from 'vue';\nimport ExtensionStoreActionService from './extension-store-action.service';\nimport CicadaExtensionService from './cicada-extension.service';\nimport ExtensionErrorService from './extension-error.service';\n\nconst { Application } = Cicada;\n\n/**\n * @package checkout\n */\ndeclare global {\n    interface ServiceContainer extends SubContainer<'service'> {\n        extensionStoreActionService: ExtensionStoreActionService;\n        cicadaExtensionService: CicadaExtensionService;\n        extensionErrorService: ExtensionErrorService;\n    }\n}\n\nApplication.addServiceProvider('extensionStoreActionService', () => {\n    return new ExtensionStoreActionService(\n        Cicada.Application.getContainer('init').httpClient,\n        Cicada.Service('loginService'),\n    );\n});\n\nApplication.addServiceProvider('cicadaExtensionService', () => {\n    return new CicadaExtensionService(\n        Cicada.Service('appModulesService'),\n        Cicada.Service('extensionStoreActionService'),\n        Cicada.Service('cicadaDiscountCampaignService'),\n        Cicada.Service('storeService'),\n    );\n});\n\nApplication.addServiceProvider('extensionErrorService', () => {\n    const root = Cicada.Application.getApplicationRoot() as App<Element>;\n\n    return new ExtensionErrorService(\n        {\n            FRAMEWORK__APP_LICENSE_COULD_NOT_BE_VERIFIED: {\n                title: 'sw-extension.errors.appLicenseCouldNotBeVerified.title',\n                message: 'sw-extension.errors.appLicenseCouldNotBeVerified.message',\n                autoClose: false,\n                actions: [\n                    {\n                        label: root.$tc('sw-extension.errors.appLicenseCouldNotBeVerified.actionSetLicenseDomain'),\n                        method: () => {\n                            void root.$router.push({\n                                name: 'sw.settings.store.index',\n                            });\n                        },\n                    },\n                    {\n                        label: root.$tc('sw-extension.errors.appLicenseCouldNotBeVerified.actionLogin'),\n                        method: () => {\n                            void root.$router.push({\n                                name: 'sw.extension.my-extensions.account',\n                            });\n                        },\n                    },\n                ],\n            },\n            FRAMEWORK__APP_NOT_COMPATIBLE: {\n                title: 'global.default.error',\n                message: 'sw-extension.errors.appIsNotCompatible',\n            },\n        },\n        {\n            title: 'global.default.error',\n            message: 'global.notification.unspecifiedSaveErrorMessage',\n        },\n    );\n});\n","<div v-if=\"isLoading\">\n    <sw-skeleton />\n    <sw-skeleton />\n</div>\n\n<sw-meteor-card\n    v-else\n    class=\"sw-extension-my-extensions-account\"\n>\n    <div class=\"sw-extension-my-extensions-account__wrapper\">\n        <div class=\"sw-extension-my-extensions-account__wrapper-illustration\">\n            <img\n                :src=\"assetFilter('/administration/static/img/plugin-manager--login.png')\"\n                :alt=\"$tc('sw-extension.my-extensions.account.headline')\"\n            >\n        </div>\n        <div class=\"sw-extension-my-extensions-account__wrapper-content\">\n\n            <template v-if=\"isLoggedIn\">\n                <h3>{{ $tc('sw-extension.my-extensions.account.headline') }}</h3>\n                <p>{{ $tc('sw-extension.my-extensions.account.isLoggedIn') }}</p>\n\n                <div class=\"sw-extension-my-extensions-account__wrapper-content-login-status\">\n                    <sw-avatar\n                        size=\"36px\"\n                        color=\"#E3F3FF\"\n                        placeholder\n                    />\n\n                    <span class=\"sw-extension-my-extensions-account__wrapper-content-login-status-id\">{{ userInfo.email }}</span>\n\n                    <sw-button\n                        class=\"sw-extension-my-extensions-account__logout-button\"\n                        variant=\"primary\"\n                        size=\"small\"\n                        @click=\"logout\"\n                    >\n                        {{ $tc('sw-extension.my-extensions.account.logout') }}\n                    </sw-button>\n                </div>\n            </template>\n\n            <template v-else>\n                <h3>{{ $tc('sw-extension.my-extensions.account.headline') }}</h3>\n                <div class=\"sw-extension-my-extensions-account__wrapper-content-login-message\">\n                    <p>{{ $tc('sw-extension.my-extensions.account.loginMessage') }}</p>\n                </div>\n                <div>\n                    <p>{{ $tc('sw-extension.my-extensions.account.register') }}</p>\n                    <a\n                        class=\"new-account-link\"\n                        :href=\"$tc('sw-extension.my-extensions.account.registerUrl')\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                    >\n                        {{ $tc('sw-extension.my-extensions.account.registerNow') }}\n                    </a>\n                </div>\n\n                <div class=\"sw-extension-my-extensions-account__wrapper-content-login-form\">\n                    <sw-text-field\n                        v-model:value=\"form.cicadaId\"\n                        class=\"sw-extension-my-extensions-account__cicada-id-field\"\n                        required\n                        :label=\"$tc('sw-extension.my-extensions.account.mailLabel')\"\n                        :placeholder=\"$tc('sw-extension.my-extensions.account.mailPlaceholder')\"\n                    />\n\n                    <sw-password-field\n                        v-model:value=\"form.password\"\n                        class=\"sw-extension-my-extensions-account__password-field\"\n                        :label=\"$tc('sw-extension.my-extensions.account.passwordLabel')\"\n                        :placeholder=\"$tc('sw-extension.my-extensions.account.passwordPlaceholder')\"\n                        @keyup.enter=\"login\"\n                    />\n                </div>\n\n                <div class=\"sw-extension-my-extensions-account__wrapper-content-login-footer\">\n                    <a\n                        :href=\"$tc('sw-extension.my-extensions.account.recoveryUrl')\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                    >\n                        {{ $tc('sw-extension.my-extensions.account.passwordForgot') }}\n                    </a>\n\n                    <sw-button\n                        class=\"sw-extension-my-extensions-account__login-button\"\n                        variant=\"primary\"\n                        size=\"small\"\n                        @click=\"login\"\n                    >\n                        {{ $tc('sw-extension.my-extensions.account.login') }}\n                    </sw-button>\n                </div>\n\n            </template>\n        </div>\n    </div>\n</sw-meteor-card>\n","type MappedError = {\n    title: string;\n    message: string;\n    details: string | null | undefined;\n    parameters?: {\n        documentationLink: string;\n    };\n};\n\nclass StoreError {\n    /* eslint-disable no-useless-constructor, no-empty-function */\n    constructor(\n        public readonly title: string,\n        public readonly message: string,\n    ) {}\n}\n\nconst errorCodes: { [key: string]: StoreError } = {\n    FRAMEWORK__PLUGIN_NO_PLUGIN_FOUND_IN_ZIP: new StoreError(\n        'global.default.error',\n        'sw-extension.errors.messageUploadFailureNoPluginFoundInZipFile',\n    ),\n    FRAMEWORK__PLUGIN_NOT_A_ZIP_FILE: new StoreError(\n        'global.default.error',\n        'sw-extension.errors.messageUploadFailureNotAZipFile',\n    ),\n    FRAMEWORK__PLUGIN_EXTRACTION_FAILED: new StoreError(\n        'global.default.error',\n        'sw-extension.errors.messageUploadFailureUnzipFailed',\n    ),\n    FRAMEWORK__STORE_INVALID_CREDENTIALS: new StoreError(\n        'global.default.error',\n        'sw-extension.errors.messageLoginDataInvalid',\n    ),\n    FRAMEWORK__STORE_LICENSE_DOMAIN_IS_MISSING: new StoreError(\n        'global.default.error',\n        'sw-extension.errors.messageStoreLicenseDomainMissing',\n    ),\n    FRAMEWORK__STORE_NOT_AVAILABLE: new StoreError('global.default.error', 'sw-extension.errors.messageStoreNotAvailable'),\n    FRAMEWORK__PLUGIN_BASE_CLASS_NOT_FOUND: new StoreError(\n        'global.default.error',\n        'sw-extension.errors.messagePluginBaseClassNotFound',\n    ),\n    FRAMEWORK__PLUGIN_REQUIREMENT_MISMATCH: new StoreError(\n        'global.default.error',\n        'sw-extension.errors.messagePluginRequirementMismatch',\n    ),\n};\n\nfunction getNotification(error: StoreApiException): MappedError {\n    if (error.code === 'FRAMEWORK__STORE_ERROR') {\n        return mapErrorWithDocsLink(error);\n    }\n\n    if (typeof errorCodes[error.code] !== 'undefined') {\n        return {\n            title: errorCodes[error.code].title,\n            message: errorCodes[error.code].message,\n            details: error.detail,\n        };\n    }\n\n    return {\n        title: 'global.default.error',\n        message: 'sw-extension.errors.messageGenericFailure',\n        details: error.detail,\n    };\n}\n\nfunction mapErrorWithDocsLink({ title, detail: message, meta }: StoreApiException): MappedError {\n    if (meta && typeof meta.documentationLink === 'string') {\n        return {\n            title,\n            message,\n            details: null,\n            parameters: {\n                documentationLink: meta.documentationLink,\n            },\n        };\n    }\n\n    return {\n        title,\n        message,\n        details: null,\n    };\n}\n\nfunction mapErrors(errors: StoreApiException[]) {\n    return errors.map(getNotification);\n}\n\n/**\n * @package checkout\n * @private\n */\nexport default {\n    mapErrors,\n};\n\n/**\n * @package checkout\n * @private\n */\nexport type { MappedError };\n","import type { AxiosError } from 'axios';\nimport template from './sw-extension-my-extensions-account.html.twig';\nimport './sw-extension-my-extensions-account.scss';\nimport extensionErrorHandler from '../../service/extension-error-handler.service';\nimport type { MappedError } from '../../service/extension-error-handler.service';\nimport type { UserInfo } from '../../../../core/service/api/store.api.service';\n\nconst { State, Mixin, Filter } = Cicada;\n\n/**\n * @package checkout\n * @private\n */\nexport default Cicada.Component.wrapComponentConfig({\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'systemConfigApiService',\n        'cicadaExtensionService',\n        'storeService',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data(): {\n        isLoading: boolean;\n        unsubscribeStore: (() => void) | null;\n        form: {\n            password: string;\n            cicadaId: string;\n        };\n    } {\n        return {\n            isLoading: true,\n            unsubscribeStore: null,\n            form: {\n                password: '',\n                cicadaId: '',\n            },\n        };\n    },\n\n    computed: {\n        userInfo(): UserInfo | null {\n            return State.get('cicadaExtensions').userInfo;\n        },\n\n        isLoggedIn(): boolean {\n            return State.get('cicadaExtensions').userInfo !== null;\n        },\n\n        assetFilter() {\n            return Filter.getByName('asset');\n        },\n    },\n\n    created() {\n        this.createdComponent()\n            .then(() => {\n                // component functions are always bound to this\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                this.unsubscribeStore = State.subscribe(this.showErrorNotification);\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .catch(() => {});\n    },\n\n    beforeUnmount() {\n        if (this.unsubscribeStore !== null) {\n            this.unsubscribeStore();\n        }\n    },\n\n    methods: {\n        async createdComponent() {\n            try {\n                this.isLoading = true;\n                await this.cicadaExtensionService.checkLogin();\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        async logout() {\n            try {\n                await this.storeService.logout();\n                this.$emit('logout-success');\n            } catch (errorResponse) {\n                this.commitErrors(\n                    errorResponse as AxiosError<{\n                        errors: StoreApiException[];\n                    }>,\n                );\n            } finally {\n                await this.cicadaExtensionService.checkLogin();\n            }\n        },\n\n        async login() {\n            this.isLoading = true;\n\n            try {\n                await this.storeService.login(this.form.cicadaId, this.form.password);\n\n                this.$emit('login-success');\n\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                this.createNotificationSuccess({\n                    message: this.$tc('sw-extension.my-extensions.account.loginNotificationMessage'),\n                });\n            } catch (errorResponse) {\n                this.commitErrors(\n                    errorResponse as AxiosError<{\n                        errors: StoreApiException[];\n                    }>,\n                );\n            } finally {\n                await this.cicadaExtensionService.checkLogin();\n                this.isLoading = false;\n            }\n        },\n\n        showErrorNotification({ type, payload }: { type: string; payload: MappedError[] }) {\n            if (type !== 'cicadaExtensions/pluginErrorsMapped') {\n                return;\n            }\n\n            payload.forEach((error) => {\n                if (error.parameters) {\n                    this.showApiNotification(error);\n                    return;\n                }\n\n                // Methods from mixins are not recognized\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                this.createNotificationError({\n                    message: this.$tc(error.message),\n                });\n            });\n        },\n\n        showApiNotification(error: MappedError) {\n            // @ts-expect-error\n            const docLink = this.$tc('sw-extension.errors.messageToTheCicadaDocumentation', 0, error.parameters);\n\n            // Methods from mixins are not recognized\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            this.createNotificationError({\n                title: error.title,\n                message: `${error.message} ${docLink}`,\n                autoClose: false,\n            });\n        },\n\n        commitErrors(errorResponse: AxiosError<{ errors: StoreApiException[] }>): never {\n            if (errorResponse.response) {\n                const mappedErrors = extensionErrorHandler.mapErrors(errorResponse.response.data.errors);\n                Cicada.State.commit('cicadaExtensions/pluginErrorsMapped', mappedErrors);\n            }\n\n            throw errorResponse;\n        },\n    },\n});\n","/**\n * @package checkout\n */\nCicada.Service('privileges').addPrivilegeMappingEntry({\n    category: 'additional_permissions',\n    parent: null,\n    key: 'system',\n    roles: {\n        extension_store: {\n            privileges: [],\n            dependencies: [\n                'system.plugin_maintain',\n            ],\n        },\n    },\n});\n","import initState from './store';\nimport './mixin/sw-extension-error.mixin';\nimport './service';\nimport './page/sw-extension-my-extensions-account';\nimport './acl';\n\ninitState(Cicada);\n\n/* eslint-disable max-len, sw-deprecation-rules/private-feature-declarations */\nCicada.Component.register('sw-extension-config', () => import('./page/sw-extension-config'));\nCicada.Component.register('sw-extension-my-extensions-listing', () => import('./page/sw-extension-my-extensions-listing'));\nCicada.Component.register('sw-extension-my-extensions-account', () => import('./page/sw-extension-my-extensions-account'));\nCicada.Component.register('sw-extension-my-extensions-index', () => import('./page/sw-extension-my-extensions-index'));\nCicada.Component.register('sw-extension-store-landing-page', () => import('./page/sw-extension-store-landing-page'));\nCicada.Component.register(\n    'sw-extension-my-extensions-recommendation',\n    () => import('./page/sw-extension-my-extensions-recommendation'),\n);\nCicada.Component.register('sw-extension-file-upload', () => import('./component/sw-extension-file-upload'));\nCicada.Component.register(\n    'sw-extension-permissions-details-modal',\n    () => import('./component/sw-extension-permissions-details-modal'),\n);\nCicada.Component.register('sw-extension-card-base', () => import('./component/sw-extension-card-base'));\nCicada.Component.extend(\n    'sw-extension-card-bought',\n    'sw-extension-card-base',\n    () => import('./component/sw-extension-card-bought'),\n);\nCicada.Component.extend(\n    'sw-self-maintained-extension-card',\n    'sw-extension-card-base',\n    () => import('./component/sw-self-maintained-extension-card'),\n);\nCicada.Component.register(\n    'sw-extension-my-extensions-listing-controls',\n    () => import('./component/sw-extension-my-extensions-listing-controls'),\n);\nCicada.Component.register('sw-extension-permissions-modal', () => import('./component/sw-extension-permissions-modal'));\nCicada.Component.register('sw-extension-domains-modal', () => import('./component/sw-extension-domains-modal'));\nCicada.Component.register(\n    'sw-extension-privacy-policy-extensions-modal',\n    () => import('./component/sw-extension-privacy-policy-extensions-modal'),\n);\nCicada.Component.register('sw-extension-deactivation-modal', () => import('./component/sw-extension-deactivation-modal'));\nCicada.Component.register('sw-extension-removal-modal', () => import('./component/sw-extension-removal-modal'));\nCicada.Component.register('sw-extension-uninstall-modal', () => import('./component/sw-extension-uninstall-modal'));\nCicada.Component.register('sw-extension-rating-stars', () => import('./component/sw-ratings/sw-extension-rating-stars'));\nCicada.Component.register('sw-extension-ratings-card', () => import('./component/sw-ratings/sw-extension-ratings-card'));\nCicada.Component.register(\n    'sw-extension-ratings-summary',\n    () => import('./component/sw-ratings/sw-extension-ratings-summary'),\n);\nCicada.Component.register('sw-extension-review', () => import('./component/sw-ratings/sw-extension-review'));\nCicada.Component.register(\n    'sw-extension-review-creation',\n    () => import('./component/sw-ratings/sw-extension-review-creation'),\n);\nCicada.Component.register(\n    'sw-extension-review-creation-inputs',\n    () => import('./component/sw-ratings/sw-extension-review-creation-inputs'),\n);\nCicada.Component.register('sw-extension-review-reply', () => import('./component/sw-ratings/sw-extension-review-reply'));\nCicada.Component.extend(\n    'sw-extension-select-rating',\n    'sw-text-field-deprecated',\n    () => import('./component/sw-ratings/sw-extension-select-rating'),\n);\nCicada.Component.extend(\n    'sw-extension-rating-modal',\n    'sw-extension-review-creation',\n    () => import('./component/sw-ratings/sw-extension-rating-modal'),\n);\nCicada.Component.register('sw-extension-adding-failed', () => import('./component/sw-extension-adding-failed'));\nCicada.Component.register('sw-extension-adding-success', () => import('./component/sw-extension-adding-success'));\nCicada.Component.register(\n    'sw-extension-app-module-error-page',\n    () => import('./component/sw-extension-app-module-error-page'),\n);\nCicada.Component.register('sw-extension-app-module-page', () => import('./page/sw-extension-app-module-page'));\n/* eslint-enable max-len, sw-deprecation-rules/private-feature-declarations */\n\n/**\n * @package checkout\n * @private\n */\nCicada.Module.register('sw-extension', {\n    type: 'core',\n    title: 'sw-extension-store.title',\n    description: 'sw-extension-store.descriptionTextModule',\n    color: '#189EFF',\n    icon: 'regular-plug',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    entity: 'extension',\n    // @deprecated tag:v6.7.0 - remove as read-only extension manager is a better solution\n    display: !Cicada.Context.app.disableExtensions,\n\n    searchMatcher: (regex, labelType, manifest) => {\n        const match = labelType.toLowerCase().match(regex);\n\n        if (!match) {\n            return false;\n        }\n\n        return [\n            {\n                icon: manifest.icon,\n                color: manifest.color,\n                label: labelType,\n                entity: manifest.entity,\n                route: manifest.routes.store,\n                privilege: manifest.routes.index?.meta.privilege,\n            },\n        ];\n    },\n\n    routes: {\n        'my-extensions': {\n            path: 'my-extensions',\n            component: 'sw-extension-my-extensions-index',\n            redirect: {\n                name: 'sw.extension.my-extensions.listing',\n            },\n            meta: {\n                privilege: 'system.plugin_maintain',\n            },\n            children: {\n                listing: {\n                    path: 'listing',\n                    component: 'sw-extension-my-extensions-listing',\n                    redirect: {\n                        name: 'sw.extension.my-extensions.listing.app',\n                    },\n                    meta: {\n                        privilege: 'system.plugin_maintain',\n                    },\n                    children: {\n                        app: {\n                            path: 'app',\n                            component: 'sw-extension-my-extensions-listing',\n                            propsData: {\n                                isTheme: false,\n                            },\n                            meta: {\n                                privilege: 'system.plugin_maintain',\n                            },\n                        },\n                        theme: {\n                            path: 'theme',\n                            component: 'sw-extension-my-extensions-listing',\n                            propsData: {\n                                isTheme: true,\n                            },\n                            meta: {\n                                privilege: 'system.plugin_maintain',\n                            },\n                        },\n                    },\n                },\n                recommendation: {\n                    path: 'recommendation',\n                    component: 'sw-extension-my-extensions-recommendation',\n                    meta: {\n                        privilege: 'system.plugin_maintain',\n                    },\n                },\n                account: {\n                    path: 'account',\n                    component: 'sw-extension-my-extensions-account',\n                    meta: {\n                        privilege: 'system.plugin_maintain',\n                    },\n                },\n            },\n        },\n        config: {\n            component: 'sw-extension-config',\n            path: 'config/:namespace',\n            meta: {\n                parentPath: 'sw.extension.my-extensions',\n                privilege: 'system.plugin_maintain',\n            },\n\n            props: {\n                default(route) {\n                    return { namespace: route.params.namespace };\n                },\n            },\n        },\n\n        store: {\n            path: 'store',\n            component: 'sw-extension-store-landing-page',\n            redirect: {\n                name: 'sw.extension.store.landing-page',\n            },\n        },\n\n        'store.landing-page': {\n            path: 'store/landing-page',\n            component: 'sw-extension-store-landing-page',\n        },\n\n        module: {\n            path: 'module/:appName/:moduleName?',\n            component: 'sw-extension-app-module-page',\n            props: {\n                default(route) {\n                    const { appName, moduleName } = route.params;\n                    return {\n                        appName,\n                        moduleName,\n                    };\n                },\n            },\n        },\n    },\n\n    navigation: [\n        {\n            id: 'sw-extension',\n            label: 'sw-extension.mainMenu.mainMenuItemExtensionStore',\n            color: '#189EFF',\n            icon: 'regular-plug',\n            position: 70,\n        },\n        {\n            id: 'sw-extension-store',\n            parent: 'sw-extension',\n            label: 'sw-extension.mainMenu.store',\n            path: 'sw.extension.store',\n            privilege: 'system.extension_store',\n            position: 10,\n        },\n        {\n            id: 'sw-extension-my-extensions',\n            parent: 'sw-extension',\n            label: 'sw-extension.mainMenu.purchased',\n            path: 'sw.extension.my-extensions',\n            privilege: 'system.plugin_maintain',\n            position: 10,\n        },\n    ],\n});\n"],"file":"assets/index-VuUfuqE2.js"}