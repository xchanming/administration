{"version":3,"file":"index-LkQw72Ao.js","sources":["../../../app/administration/src/module/sw-users-permissions/page/sw-users-permissions-role-detail/sw-users-permissions-role-detail.html.twig","../../../app/administration/src/module/sw-users-permissions/page/sw-users-permissions-role-detail/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_users_permissions_role_detail %}\n<sw-page class=\"sw-users-permissions-role-detail\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_users_permissions_role_detail_smart_bar_header %}\n    <template #smart-bar-header>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_users_permissions_role_detail_smart_bar_header_title %}\n        <h2 v-if=\"role && role.isNew() && role.name.length <= 0\">\n            {{ $tc('sw-users-permissions.roles.general.labelCreateNewRole') }}\n        </h2>\n        <h2 v-else-if=\"role\">\n            {{ role.name }}\n        </h2>\n        <h2 v-else>\n            {{ $tc('sw-users-permissions.roles.detail.role') }}\n        </h2>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_users_permissions_role_detail_smart_bar_actions %}\n    <template #smart-bar-actions>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_users_permissions_role_detail_smart_bar_actions_button_cancel %}\n        <sw-button\n            v-tooltip.bottom=\"tooltipCancel\"\n            @click=\"onCancel\"\n        >\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_users_permissions_role_detail_smart_bar_actions_button_save %}\n        <sw-button-process\n            v-tooltip.bottom=\"tooltipSave\"\n            class=\"sw-users-permissions-role-detail__button-save\"\n            :is-loading=\"isLoading\"\n            :process-success=\"isSaveSuccessful\"\n            :disabled=\"isLoading || !acl.can('users_and_permissions.editor') || undefined\"\n            variant=\"primary\"\n            @update:process-success=\"saveFinish\"\n            @click.prevent=\"onSave\"\n        >\n            {{ $tc('global.default.save') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_users_permissions_role_detail_content %}\n    <template #content>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_users_permissions_role_detail_content_card_view %}\n        <sw-card-view>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_users_permissions_role_detail_content_card_view_tabs %}\n            <sw-tabs\n                default-item=\"general\"\n                position-identifier=\"sw-users-permissions-role-detail-content\"\n            >\n                <template #default=\"{ active }\">\n                    <sw-tabs-item\n                        :route=\"{ name: 'sw.users.permissions.role.detail.general', params: { id: $route.params.id } }\"\n                        :title=\"$tc('sw-users-permissions.roles.tabs.general')\"\n                    >\n                        {{ $tc('sw-users-permissions.roles.tabs.general') }}\n                    </sw-tabs-item>\n\n                    <sw-tabs-item\n                        :route=\"{ name: 'sw.users.permissions.role.detail.detailed-privileges', params: { id: $route.params.id } }\"\n                        :title=\"$tc('sw-users-permissions.roles.tabs.detailed')\"\n                    >\n                        {{ $tc('sw-users-permissions.roles.tabs.detailed') }}\n                    </sw-tabs-item>\n                </template>\n            </sw-tabs>\n            {% endblock %}\n\n            <template v-if=\"isLoading\">\n                <sw-skeleton variant=\"detail-bold\" />\n                <sw-skeleton />\n            </template>\n\n            <template v-else>\n                <router-view\n                    v-slot=\"{ Component }\"\n                >\n                    <component\n                        :is=\"Component\"\n                        :role=\"role\"\n                        :detailed-privileges=\"detailedPrivileges\"\n                    />\n                </router-view>\n            </template>\n        </sw-card-view>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_users_permissions_role_detail_content_verify_modal %}\n        <sw-verify-user-modal\n            v-if=\"confirmPasswordModal\"\n            @verified=\"saveRole\"\n            @close=\"onCloseConfirmPasswordModal\"\n        />\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n","/**\n * @package services-settings\n */\nimport template from './sw-users-permissions-role-detail.html.twig';\n\nconst { Mixin } = Cicada;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'privileges',\n        'userService',\n        'loginService',\n        'acl',\n        'appAclService',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': 'onSave',\n        ESCAPE: 'onCancel',\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            isSaveSuccessful: false,\n            role: null,\n            confirmPasswordModal: false,\n            detailedPrivileges: [],\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        tooltipSave() {\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        tooltipCancel() {\n            return {\n                message: 'ESC',\n                appearance: 'light',\n            };\n        },\n\n        languageId() {\n            return Cicada.State.get('session').languageId;\n        },\n\n        roleRepository() {\n            return this.repositoryFactory.create('acl_role');\n        },\n\n        roleId() {\n            return this.$route.params.id;\n        },\n    },\n\n    watch: {\n        languageId() {\n            this.createdComponent();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Cicada.ExtensionAPI.publishData({\n                id: 'sw-users-permissions-role-detail__detailedPrivileges',\n                path: 'detailedPrivileges',\n                scope: this,\n            });\n            Cicada.ExtensionAPI.publishData({\n                id: 'sw-users-permissions-role-detail__role',\n                path: 'role',\n                scope: this,\n            });\n            if (!this.roleId) {\n                this.createNewRole();\n                return;\n            }\n\n            this.getRole();\n        },\n\n        createNewRole() {\n            this.isLoading = true;\n\n            this.role = this.roleRepository.create();\n\n            this.role.name = '';\n            this.role.description = '';\n            this.role.privileges = [];\n\n            this.isLoading = false;\n        },\n\n        getRole() {\n            this.isLoading = true;\n\n            this.appAclService.addAppPermissions().then(() => {\n                this.roleRepository\n                    .get(this.roleId)\n                    .then((role) => {\n                        this.role = role;\n\n                        const filteredPrivileges = this.privileges.filterPrivilegesRoles(this.role.privileges);\n                        const allGeneralPrivileges = this.privileges.getPrivilegesForAdminPrivilegeKeys(filteredPrivileges);\n\n                        this.detailedPrivileges = this.role.privileges.filter((privilege) => {\n                            return !allGeneralPrivileges.includes(privilege);\n                        });\n                        this.role.privileges = filteredPrivileges;\n                    })\n                    .finally(() => {\n                        this.isLoading = false;\n                    });\n            });\n        },\n\n        onSave() {\n            this.confirmPasswordModal = true;\n        },\n\n        saveRole(context) {\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            this.role.privileges = [\n                ...this.privileges.getPrivilegesForAdminPrivilegeKeys(this.role.privileges),\n                ...this.detailedPrivileges,\n            ].sort();\n\n            this.confirmPasswordModal = false;\n\n            return this.roleRepository\n                .save(this.role, context)\n                .then(() => {\n                    return this.updateCurrentUser();\n                })\n                .then(() => {\n                    if (this.role.isNew()) {\n                        this.$router.push({\n                            name: 'sw.users.permissions.role.detail',\n                            params: { id: this.role.id },\n                        });\n                    }\n\n                    this.getRole();\n                    this.isSaveSuccessful = true;\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('global.notification.notificationSaveErrorMessage', 0, {\n                            entityName: this.role.name,\n                        }),\n                    });\n\n                    this.role.privileges = this.privileges.filterPrivilegesRoles(this.role.privileges);\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        updateCurrentUser() {\n            return this.userService.getUser().then((response) => {\n                const data = response.data;\n                delete data.password;\n\n                return Cicada.State.commit('setCurrentUser', data);\n            });\n        },\n\n        onCloseConfirmPasswordModal() {\n            this.confirmPasswordModal = false;\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'sw.users.permissions.index' });\n        },\n    },\n};\n"],"names":["template","Mixin","index","role","filteredPrivileges","allGeneralPrivileges","privilege","context","response","data"],"mappings":"AAAA,MAAeA,EAAA,6rFCKT,CAAE,MAAAC,CAAO,EAAG,OAGHC,EAAA,CACX,SAAAF,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,oBACA,aACA,cACA,eACA,MACA,eACH,EAED,OAAQ,CACJC,EAAM,UAAU,cAAc,CACjC,EAED,UAAW,CACP,cAAe,SACf,OAAQ,UACX,EAED,MAAO,CACH,MAAO,CACH,UAAW,GACX,iBAAkB,GAClB,KAAM,KACN,qBAAsB,GACtB,mBAAoB,CAAE,CAClC,CACK,EAED,UAAW,CACP,MAAO,CACH,MAAO,KAAK,aAAa,KAAK,UAAU,CACpD,CACK,EAED,SAAU,CACN,aAAc,CAGV,MAAO,CACH,QAAS,GAHK,KAAK,QAAQ,aAAY,CAGlB,OACrB,WAAY,OAC5B,CACS,EAED,eAAgB,CACZ,MAAO,CACH,QAAS,MACT,WAAY,OAC5B,CACS,EAED,YAAa,CACT,OAAO,OAAO,MAAM,IAAI,SAAS,EAAE,UACtC,EAED,gBAAiB,CACb,OAAO,KAAK,kBAAkB,OAAO,UAAU,CAClD,EAED,QAAS,CACL,OAAO,KAAK,OAAO,OAAO,EAC7B,CACJ,EAED,MAAO,CACH,YAAa,CACT,KAAK,iBAAgB,CACxB,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CAWf,GAVA,OAAO,aAAa,YAAY,CAC5B,GAAI,uDACJ,KAAM,qBACN,MAAO,IACvB,CAAa,EACD,OAAO,aAAa,YAAY,CAC5B,GAAI,yCACJ,KAAM,OACN,MAAO,IACvB,CAAa,EACG,CAAC,KAAK,OAAQ,CACd,KAAK,cAAa,EAClB,MACH,CAED,KAAK,QAAO,CACf,EAED,eAAgB,CACZ,KAAK,UAAY,GAEjB,KAAK,KAAO,KAAK,eAAe,OAAM,EAEtC,KAAK,KAAK,KAAO,GACjB,KAAK,KAAK,YAAc,GACxB,KAAK,KAAK,WAAa,GAEvB,KAAK,UAAY,EACpB,EAED,SAAU,CACN,KAAK,UAAY,GAEjB,KAAK,cAAc,kBAAmB,EAAC,KAAK,IAAM,CAC9C,KAAK,eACA,IAAI,KAAK,MAAM,EACf,KAAME,GAAS,CACZ,KAAK,KAAOA,EAEZ,MAAMC,EAAqB,KAAK,WAAW,sBAAsB,KAAK,KAAK,UAAU,EAC/EC,EAAuB,KAAK,WAAW,mCAAmCD,CAAkB,EAElG,KAAK,mBAAqB,KAAK,KAAK,WAAW,OAAQE,GAC5C,CAACD,EAAqB,SAASC,CAAS,CAClD,EACD,KAAK,KAAK,WAAaF,CAC/C,CAAqB,EACA,QAAQ,IAAM,CACX,KAAK,UAAY,EACzC,CAAqB,CACrB,CAAa,CACJ,EAED,QAAS,CACL,KAAK,qBAAuB,EAC/B,EAED,SAASG,EAAS,CACd,YAAK,iBAAmB,GACxB,KAAK,UAAY,GAEjB,KAAK,KAAK,WAAa,CACnB,GAAG,KAAK,WAAW,mCAAmC,KAAK,KAAK,UAAU,EAC1E,GAAG,KAAK,kBACX,EAAC,KAAI,EAEN,KAAK,qBAAuB,GAErB,KAAK,eACP,KAAK,KAAK,KAAMA,CAAO,EACvB,KAAK,IACK,KAAK,mBACf,EACA,KAAK,IAAM,CACJ,KAAK,KAAK,SACV,KAAK,QAAQ,KAAK,CACd,KAAM,mCACN,OAAQ,CAAE,GAAI,KAAK,KAAK,EAAI,CACxD,CAAyB,EAGL,KAAK,QAAO,EACZ,KAAK,iBAAmB,EAC5C,CAAiB,EACA,MAAM,IAAM,CACT,KAAK,wBAAwB,CACzB,QAAS,KAAK,IAAI,mDAAoD,EAAG,CACrE,WAAY,KAAK,KAAK,IAClD,CAAyB,CACzB,CAAqB,EAED,KAAK,KAAK,WAAa,KAAK,WAAW,sBAAsB,KAAK,KAAK,UAAU,CACrG,CAAiB,EACA,QAAQ,IAAM,CACX,KAAK,UAAY,EACrC,CAAiB,CACR,EAED,mBAAoB,CAChB,OAAO,KAAK,YAAY,QAAS,EAAC,KAAMC,GAAa,CACjD,MAAMC,EAAOD,EAAS,KACtB,cAAOC,EAAK,SAEL,OAAO,MAAM,OAAO,iBAAkBA,CAAI,CACjE,CAAa,CACJ,EAED,6BAA8B,CAC1B,KAAK,qBAAuB,EAC/B,EAED,YAAa,CACT,KAAK,iBAAmB,EAC3B,EAED,UAAW,CACP,KAAK,QAAQ,KAAK,CAAE,KAAM,4BAA8B,CAAA,CAC3D,CACJ,CACL"}