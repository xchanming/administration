{"version":3,"file":"index-DLxXbdVt.js","sources":["../../../app/administration/src/module/sw-settings-search/component/sw-settings-search-search-index/sw-settings-search-search-index.html.twig","../../../app/administration/src/module/sw-settings-search/component/sw-settings-search-search-index/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_search_search_index %}\n<sw-card\n    position-identifier=\"sw-settings-search-search-index\"\n    :title=\"$tc('sw-settings-search.generalTab.labelSearchIndex')\"\n    :is-loading=\"isLoading\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_search_search_index_description %}\n    <sw-alert\n        v-if=\"isRebuildInProgress\"\n        class=\"sw-settings-search__search-index-warning-text\"\n        variant=\"warning\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_search_index_warning_top %}\n        <p class=\"sw-settings-search__search-index-warning-top\">\n            {{ $tc('sw-settings-search.generalTab.textWarningOpenTab') }}\n        </p>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_search_index_warning_bottom %}\n        <p>{{ $tc('sw-settings-search.generalTab.textRebuildSearchIndexDescription') }}</p>\n        {% endblock %}\n\n    </sw-alert>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_search_search_index_rebuild_button %}\n    <sw-button-process\n        variant=\"ghost\"\n        class=\"sw-settings-search__search-index-rebuild-button\"\n        :is-loading=\"isRebuildInProgress\"\n        :disabled=\"isRebuildInProgress || !acl.can('product_search_config.editor')\"\n        :process-success=\"isRebuildSuccess\"\n        @update:process-success=\"buildFinish\"\n        @click=\"rebuildSearchIndex\"\n    >\n        {{ $tc('sw-settings-search.generalTab.buttonRebuildSearchIndex') }}\n    </sw-button-process>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_search_search_index_lastest_build %}\n    <span class=\"sw-settings-search__search-index-latest-build\">\n        <template v-if=\"latestIndex\">\n            {{ $tc('sw-settings-search.generalTab.textLastedBuild') }} <sw-time-ago :date=\"latestIndex.firstDate\" /> &dash; <sw-time-ago :date=\"latestIndex.lastDate\" />\n        </template>\n        <template v-else>\n            {{ $tc('sw-settings-search.generalTab.textSearchNotIndexedYet') }}\n        </template>\n    </span>\n    {% endblock %}\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_search_search_index_rebuild_progress %}\n    <div\n        v-if=\"progressBarValue\"\n        class=\"sw-settings-search__search-index-rebuilding-progress\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_search_index_rebuild_progress_text %}\n        <span class=\"sw-settings-search__search-index-rebuilding-text\">\n            {{ $tc('sw-settings-search.generalTab.textRebuildingSearchIndex') }}\n        </span>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_search_index_rebuild_progress_bar %}\n        <sw-progress-bar\n            :value=\"progressBarValue\"\n            :max-value=\"100\"\n        >\n            {{ $tc('sw-settings-search.generalTab.textRebuildingSearchIndex') }}\n        </sw-progress-bar>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n</sw-card>\n{% endblock %}\n","/**\n * @package buyers-experience\n */\nimport template from './sw-settings-search-search-index.html.twig';\nimport './sw-settings-search-search-index.scss';\n\nconst PRODUCT_INDEXER_INTERVAL = 3000;\nconst { Mixin, Context } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n/**\n * @deprecated tag:v6.7.0 - Will be private\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'productIndexService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    emits: ['edit-change'],\n\n    mixins: [Mixin.getByName('notification')],\n\n    data() {\n        return {\n            isLoading: true,\n            isRebuildSuccess: false,\n            isRebuildInProgress: false,\n            progressBarValue: 0,\n            offset: 0,\n            syncPolling: null,\n            totalProduct: 0,\n            latestIndex: null,\n        };\n    },\n\n    computed: {\n        productRepository() {\n            return this.repositoryFactory.create('product');\n        },\n\n        productSearchKeywordRepository() {\n            return this.repositoryFactory.create('product_search_keyword');\n        },\n\n        productCriteria() {\n            const productCriteria = new Criteria(1, 1);\n            productCriteria.addFilter(Criteria.equals('product.parentId', null));\n            return productCriteria;\n        },\n\n        productSearchKeywordsCriteria() {\n            const criteria = new Criteria(1, 1);\n            criteria.addAggregation(Criteria.min('firstDate', 'createdAt'));\n            criteria.addAggregation(Criteria.max('lastDate', 'createdAt'));\n            return criteria;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    beforeUnmount() {\n        this.beforeDestroyComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = false;\n            this.getTotalProduct();\n            this.getLatestProductKeywordIndexed();\n        },\n\n        beforeDestroyComponent() {\n            this.clearPolling();\n        },\n\n        getLatestProductKeywordIndexed() {\n            this.isLoading = true;\n            this.productSearchKeywordRepository\n                .search(this.productSearchKeywordsCriteria, Context.api)\n                .then((result) => {\n                    this.latestIndex = {\n                        firstDate: result.aggregations.firstDate.min,\n                        lastDate: result.aggregations.lastDate.max,\n                    };\n                })\n                .catch((err) => {\n                    this.createNotificationError({\n                        message: err.message,\n                    });\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        getTotalProduct() {\n            this.isLoading = true;\n            this.productRepository\n                .search(this.productCriteria, Context.api)\n                .then((result) => {\n                    this.totalProduct = result?.total;\n                })\n                .catch((err) => {\n                    this.createNotificationError({\n                        message: err.message,\n                    });\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        updateProgress() {\n            this.productIndexService\n                .index(this.offset)\n                .then((response) => {\n                    const data = response.data;\n                    this.isRebuildSuccess = data.finish;\n\n                    if (this.isRebuildSuccess) {\n                        this.clearPolling();\n                        this.getLatestProductKeywordIndexed();\n                        this.progressBarValue = 100;\n                        this.createNotificationSuccess({\n                            message: this.$tc('sw-settings-search.notification.index.success'),\n                        });\n                    } else {\n                        this.progressBarValue = ((this.offset ?? 1) / this.totalProduct) * 100;\n                        this.offset = data.offset.offset;\n                        this.updateProgress();\n                    }\n                })\n                .catch((err) => {\n                    this.createNotificationError({\n                        message: err.message,\n                    });\n                    this.isRebuildSuccess = false;\n                });\n        },\n\n        pollData() {\n            if (this.syncPolling === null) {\n                this.syncPolling = setTimeout(this.updateProgress, PRODUCT_INDEXER_INTERVAL);\n            }\n        },\n\n        clearPolling() {\n            if (this.syncPolling !== null) {\n                clearTimeout(this.syncPolling);\n                this.syncPolling = null;\n            }\n        },\n\n        rebuildSearchIndex() {\n            this.isRebuildInProgress = true;\n            this.progressBarValue = 1;\n            this.offset = 0;\n\n            this.$emit('edit-change', this.isRebuildInProgress);\n            this.pollData();\n            this.createNotificationInfo({\n                message: this.$tc('sw-settings-search.notification.index.started'),\n            });\n        },\n\n        buildFinish() {\n            this.isRebuildSuccess = false;\n            this.isRebuildInProgress = false;\n            this.progressBarValue = 0;\n            this.$emit('edit-change', this.isRebuildInProgress);\n        },\n    },\n};\n"],"names":["template","Mixin","Context","Criteria","index","productCriteria","criteria","result","err","response","data"],"mappings":"AAAA,MAAeA,EAAA,gwECOf,KAAM,CAAE,MAAAC,EAAO,QAAAC,CAAS,EAAG,OACrB,CAAE,SAAAC,CAAQ,EAAK,OAAO,KAMbC,EAAA,CACX,SAAAJ,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,sBACA,oBACA,KACH,EAED,MAAO,CAAC,aAAa,EAErB,OAAQ,CAACC,EAAM,UAAU,cAAc,CAAC,EAExC,MAAO,CACH,MAAO,CACH,UAAW,GACX,iBAAkB,GAClB,oBAAqB,GACrB,iBAAkB,EAClB,OAAQ,EACR,YAAa,KACb,aAAc,EACd,YAAa,IACzB,CACK,EAED,SAAU,CACN,mBAAoB,CAChB,OAAO,KAAK,kBAAkB,OAAO,SAAS,CACjD,EAED,gCAAiC,CAC7B,OAAO,KAAK,kBAAkB,OAAO,wBAAwB,CAChE,EAED,iBAAkB,CACd,MAAMI,EAAkB,IAAIF,EAAS,EAAG,CAAC,EACzC,OAAAE,EAAgB,UAAUF,EAAS,OAAO,mBAAoB,IAAI,CAAC,EAC5DE,CACV,EAED,+BAAgC,CAC5B,MAAMC,EAAW,IAAIH,EAAS,EAAG,CAAC,EAClC,OAAAG,EAAS,eAAeH,EAAS,IAAI,YAAa,WAAW,CAAC,EAC9DG,EAAS,eAAeH,EAAS,IAAI,WAAY,WAAW,CAAC,EACtDG,CACV,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,eAAgB,CACZ,KAAK,uBAAsB,CAC9B,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,UAAY,GACjB,KAAK,gBAAe,EACpB,KAAK,+BAA8B,CACtC,EAED,wBAAyB,CACrB,KAAK,aAAY,CACpB,EAED,gCAAiC,CAC7B,KAAK,UAAY,GACjB,KAAK,+BACA,OAAO,KAAK,8BAA+BJ,EAAQ,GAAG,EACtD,KAAMK,GAAW,CACd,KAAK,YAAc,CACf,UAAWA,EAAO,aAAa,UAAU,IACzC,SAAUA,EAAO,aAAa,SAAS,GAC/D,CACA,CAAiB,EACA,MAAOC,GAAQ,CACZ,KAAK,wBAAwB,CACzB,QAASA,EAAI,OACrC,CAAqB,CACrB,CAAiB,EACA,QAAQ,IAAM,CACX,KAAK,UAAY,EACrC,CAAiB,CACR,EAED,iBAAkB,CACd,KAAK,UAAY,GACjB,KAAK,kBACA,OAAO,KAAK,gBAAiBN,EAAQ,GAAG,EACxC,KAAMK,GAAW,CACd,KAAK,aAAeA,GAAA,YAAAA,EAAQ,KAChD,CAAiB,EACA,MAAOC,GAAQ,CACZ,KAAK,wBAAwB,CACzB,QAASA,EAAI,OACrC,CAAqB,CACrB,CAAiB,EACA,QAAQ,IAAM,CACX,KAAK,UAAY,EACrC,CAAiB,CACR,EAED,gBAAiB,CACb,KAAK,oBACA,MAAM,KAAK,MAAM,EACjB,KAAMC,GAAa,CAChB,MAAMC,EAAOD,EAAS,KACtB,KAAK,iBAAmBC,EAAK,OAEzB,KAAK,kBACL,KAAK,aAAY,EACjB,KAAK,+BAA8B,EACnC,KAAK,iBAAmB,IACxB,KAAK,0BAA0B,CAC3B,QAAS,KAAK,IAAI,+CAA+C,CAC7F,CAAyB,IAED,KAAK,kBAAqB,KAAK,QAAU,GAAK,KAAK,aAAgB,IACnE,KAAK,OAASA,EAAK,OAAO,OAC1B,KAAK,eAAc,EAE3C,CAAiB,EACA,MAAOF,GAAQ,CACZ,KAAK,wBAAwB,CACzB,QAASA,EAAI,OACrC,CAAqB,EACD,KAAK,iBAAmB,EAC5C,CAAiB,CACR,EAED,UAAW,CACH,KAAK,cAAgB,OACrB,KAAK,YAAc,WAAW,KAAK,eAAgB,GAAwB,EAElF,EAED,cAAe,CACP,KAAK,cAAgB,OACrB,aAAa,KAAK,WAAW,EAC7B,KAAK,YAAc,KAE1B,EAED,oBAAqB,CACjB,KAAK,oBAAsB,GAC3B,KAAK,iBAAmB,EACxB,KAAK,OAAS,EAEd,KAAK,MAAM,cAAe,KAAK,mBAAmB,EAClD,KAAK,SAAQ,EACb,KAAK,uBAAuB,CACxB,QAAS,KAAK,IAAI,+CAA+C,CACjF,CAAa,CACJ,EAED,aAAc,CACV,KAAK,iBAAmB,GACxB,KAAK,oBAAsB,GAC3B,KAAK,iBAAmB,EACxB,KAAK,MAAM,cAAe,KAAK,mBAAmB,CACrD,CACJ,CACL"}