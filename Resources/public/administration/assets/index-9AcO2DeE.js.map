{"version":3,"file":"index-9AcO2DeE.js","sources":["../../../app/administration/src/module/sw-promotion-v2/component/sw-promotion-v2-sales-channel-select/sw-promotion-v2-sales-channel-select.html.twig","../../../app/administration/src/module/sw-promotion-v2/component/sw-promotion-v2-sales-channel-select/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_promotion_v2_sales_channel_selection %}\n<sw-multi-select\n    v-model:value=\"salesChannelIds\"\n    v-bind=\"$attrs\"\n    :options=\"salesChannels\"\n    value-property=\"id\"\n    label-property=\"name\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_promotion_v2_sales_channel_selection_label %}\n    <template #selection-label-property=\"{ item }\">\n        {{ item.name || item.translated.name }}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_promotion_v2_sales_channel_selection_result_label %}\n    <template #result-label-property=\"{ item }\">\n        {{ item.name || item.translated.name }}\n    </template>\n    {% endblock %}\n\n</sw-multi-select>\n{% endblock %}\n","/**\n * @package checkout\n */\nimport template from './sw-promotion-v2-sales-channel-select.html.twig';\n\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    props: {\n        promotion: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            salesChannels: [],\n            sortBy: 'name',\n        };\n    },\n\n    computed: {\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        promotionSalesChannelRepository() {\n            if (this.promotion) {\n                return this.repositoryFactory.create(\n                    this.promotion.salesChannels.entity,\n                    this.promotion.salesChannels.source,\n                );\n            }\n\n            return null;\n        },\n\n        salesChannelIds: {\n            get() {\n                if (!this.promotion) {\n                    return [];\n                }\n\n                return this.promotion.salesChannels.map((promotionSalesChannels) => {\n                    return promotionSalesChannels.salesChannelId;\n                });\n            },\n\n            set(salesChannelsIds) {\n                salesChannelsIds = salesChannelsIds || [];\n                const { deleted, added } = this.getChangeset(salesChannelsIds);\n\n                if (this.promotion.isNew()) {\n                    this.handleLocalMode(deleted, added);\n                    return;\n                }\n\n                this.handleWithRepository(deleted, added);\n            },\n        },\n\n        salesChannelCriteria() {\n            const salesChannelCriteria = new Criteria(1, 500);\n            salesChannelCriteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, this.naturalSorting));\n\n            return salesChannelCriteria;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.salesChannelRepository.search(this.salesChannelCriteria).then((searchresult) => {\n                this.salesChannels = searchresult;\n            });\n        },\n\n        getChangeset(salesChannelsIds) {\n            const deleted = [];\n            const added = [];\n\n            salesChannelsIds.forEach((id) => {\n                const foundSalesChannel = this.promotion.salesChannels.find((salesChannel) => {\n                    return salesChannel.salesChannelId === id;\n                });\n\n                if (!foundSalesChannel) {\n                    added.push(id);\n                }\n            });\n\n            this.promotion.salesChannels.forEach((salesChannel) => {\n                if (!salesChannelsIds.includes(salesChannel.salesChannelId)) {\n                    deleted.push(salesChannel.salesChannelId);\n                }\n            });\n\n            return { deleted, added };\n        },\n\n        getAssociationBySalesChannelId(salesChannelId) {\n            return this.promotion.salesChannels.find((association) => {\n                return association.salesChannelId === salesChannelId;\n            });\n        },\n\n        handleLocalMode(deleted, added) {\n            deleted.forEach((deletedId) => {\n                const collectionEntry = this.getAssociationBySalesChannelId(deletedId);\n                this.promotion.salesChannels.remove(collectionEntry.id);\n            });\n\n            added.forEach((newId) => {\n                const newAssociation = this.promotionSalesChannelRepository.create(this.promotion.salesChannels.context);\n\n                newAssociation.salesChannelId = newId;\n                newAssociation.promotionId = this.promotion.id;\n                newAssociation.priority = 1;\n                this.promotion.salesChannels.add(newAssociation);\n            });\n        },\n\n        handleWithRepository(deleted, added) {\n            deleted.forEach((deletedId) => {\n                const associationEntry = this.getAssociationBySalesChannelId(deletedId);\n                this.promotion.salesChannels.remove(associationEntry.id);\n            });\n\n            added.forEach((addedId) => {\n                const newAssociation = this.promotionSalesChannelRepository.create(this.promotion.salesChannels.context);\n\n                newAssociation.salesChannelId = addedId;\n                newAssociation.promotionId = this.promotion.id;\n                newAssociation.priority = 1;\n                this.promotion.salesChannels.add(newAssociation);\n            });\n        },\n    },\n};\n"],"names":["template","Criteria","index","promotionSalesChannels","salesChannelsIds","deleted","added","salesChannelCriteria","searchresult","id","salesChannel","salesChannelId","association","deletedId","collectionEntry","newId","newAssociation","associationEntry","addedId"],"mappings":"AAAA,MAAeA,EAAA,4jBCKT,CAAE,SAAAC,CAAQ,EAAK,OAAO,KAGbC,EAAA,CACX,SAAAF,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,mBACH,EAED,MAAO,CACH,UAAW,CACP,KAAM,OACN,SAAU,GACV,QAAS,IACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,cAAe,CAAE,EACjB,OAAQ,MACpB,CACK,EAED,SAAU,CACN,wBAAyB,CACrB,OAAO,KAAK,kBAAkB,OAAO,eAAe,CACvD,EAED,iCAAkC,CAC9B,OAAI,KAAK,UACE,KAAK,kBAAkB,OAC1B,KAAK,UAAU,cAAc,OAC7B,KAAK,UAAU,cAAc,MACjD,EAGmB,IACV,EAED,gBAAiB,CACb,KAAM,CACF,OAAK,KAAK,UAIH,KAAK,UAAU,cAAc,IAAKG,GAC9BA,EAAuB,cACjC,EALU,EAMd,EAED,IAAIC,EAAkB,CAClBA,EAAmBA,GAAoB,GACvC,KAAM,CAAE,QAAAC,EAAS,MAAAC,CAAK,EAAK,KAAK,aAAaF,CAAgB,EAE7D,GAAI,KAAK,UAAU,QAAS,CACxB,KAAK,gBAAgBC,EAASC,CAAK,EACnC,MACH,CAED,KAAK,qBAAqBD,EAASC,CAAK,CAC3C,CACJ,EAED,sBAAuB,CACnB,MAAMC,EAAuB,IAAIN,EAAS,EAAG,GAAG,EAChD,OAAAM,EAAqB,WAAWN,EAAS,KAAK,KAAK,OAAQ,KAAK,cAAe,KAAK,cAAc,CAAC,EAE5FM,CACV,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,uBAAuB,OAAO,KAAK,oBAAoB,EAAE,KAAMC,GAAiB,CACjF,KAAK,cAAgBA,CACrC,CAAa,CACJ,EAED,aAAaJ,EAAkB,CAC3B,MAAMC,EAAU,CAAA,EACVC,EAAQ,CAAA,EAEd,OAAAF,EAAiB,QAASK,GAAO,CACH,KAAK,UAAU,cAAc,KAAMC,GAClDA,EAAa,iBAAmBD,CAC1C,GAGGH,EAAM,KAAKG,CAAE,CAEjC,CAAa,EAED,KAAK,UAAU,cAAc,QAASC,GAAiB,CAC9CN,EAAiB,SAASM,EAAa,cAAc,GACtDL,EAAQ,KAAKK,EAAa,cAAc,CAE5D,CAAa,EAEM,CAAE,QAAAL,EAAS,MAAAC,EACrB,EAED,+BAA+BK,EAAgB,CAC3C,OAAO,KAAK,UAAU,cAAc,KAAMC,GAC/BA,EAAY,iBAAmBD,CACzC,CACJ,EAED,gBAAgBN,EAASC,EAAO,CAC5BD,EAAQ,QAASQ,GAAc,CAC3B,MAAMC,EAAkB,KAAK,+BAA+BD,CAAS,EACrE,KAAK,UAAU,cAAc,OAAOC,EAAgB,EAAE,CACtE,CAAa,EAEDR,EAAM,QAASS,GAAU,CACrB,MAAMC,EAAiB,KAAK,gCAAgC,OAAO,KAAK,UAAU,cAAc,OAAO,EAEvGA,EAAe,eAAiBD,EAChCC,EAAe,YAAc,KAAK,UAAU,GAC5CA,EAAe,SAAW,EAC1B,KAAK,UAAU,cAAc,IAAIA,CAAc,CAC/D,CAAa,CACJ,EAED,qBAAqBX,EAASC,EAAO,CACjCD,EAAQ,QAASQ,GAAc,CAC3B,MAAMI,EAAmB,KAAK,+BAA+BJ,CAAS,EACtE,KAAK,UAAU,cAAc,OAAOI,EAAiB,EAAE,CACvE,CAAa,EAEDX,EAAM,QAASY,GAAY,CACvB,MAAMF,EAAiB,KAAK,gCAAgC,OAAO,KAAK,UAAU,cAAc,OAAO,EAEvGA,EAAe,eAAiBE,EAChCF,EAAe,YAAc,KAAK,UAAU,GAC5CA,EAAe,SAAW,EAC1B,KAAK,UAAU,cAAc,IAAIA,CAAc,CAC/D,CAAa,CACJ,CACJ,CACL"}