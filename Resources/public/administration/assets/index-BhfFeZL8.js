const s='{% block sw_base_field %} <div class="sw-field" :class="swFieldClasses" v-bind="$attrs" :label="label" > <div v-if="hasLabel" class="sw-field__label" > <sw-inheritance-switch v-if="isInheritanceField" :disabled="disableInheritanceToggle" class="sw-field__inheritance-icon" :is-inherited="isInherited" /> <label v-if="showLabel" :for="identification" :class="swFieldLabelClasses" > <slot name="label"> {{ label }} </slot> <sw-ai-copilot-badge v-if="aiBadge" /> </label> <sw-help-text v-if="helpText" class="sw-field__help-text" :text="helpText" /> </div> <slot name="sw-field-input" v-bind="{ identification, error, disabled }" ></slot> <sw-field-error :error="error" /> <div v-if="hasHint" class="sw-field__hint" > <slot name="hint"> {{ $tc(hint) }} </slot> </div> </div> {% endblock %}',{Component:t}=Shopware,a=Shopware.Utils;t.register("sw-base-field",{template:s,inheritAttrs:!1,inject:["feature"],emits:["base-field-mounted"],props:{name:{type:String,required:!1,default:null},label:{type:String,required:!1,default:null},helpText:{type:String,required:!1,default:null},hint:{type:String,required:!1,default:null},isInvalid:{type:Boolean,required:!1,default:!1},aiBadge:{type:Boolean,required:!1,default:!1},error:{type:[Object],required:!1,default(){return null}},disabled:{type:Boolean,required:!1,default:!1},required:{type:Boolean,required:!1,default:!1},isInherited:{type:Boolean,required:!1,default:!1},isInheritanceField:{type:Boolean,required:!1,default:!1},disableInheritanceToggle:{type:Boolean,required:!1,default:!1}},data(){return{id:a.createId()}},computed:{identification(){return this.name?this.name:`sw-field--${this.id}`},hasLabel(){return!!this.helpText||this.isInheritanceField||this.showLabel},hasError(){return this.isInvalid||!!this.error},hasHint(){var e,i,l;return!!this.hint||((l=(i=(e=this.$slots).hint)==null?void 0:i.call(e)[0])==null?void 0:l.children.length)>0},swFieldClasses(){return{"has--error":this.hasError,"has--hint":this.hasHint,"is--disabled":this.disabled,"is--inherited":this.isInherited}},swFieldLabelClasses(){return{"is--required":this.required}},showLabel(){var e,i,l;return!!this.label||((l=(i=(e=this.$slots).label)==null?void 0:i.call(e)[0])==null?void 0:l.children.length)>0}},mounted(){this.$emit("base-field-mounted")}});
