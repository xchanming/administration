{"version":3,"file":"index-ngKGzbZZ.js","sources":["../../../app/administration/src/module/sw-media/component/sidebar/sw-media-sidebar/sw-media-sidebar.html.twig","../../../app/administration/src/module/sw-media/component/sidebar/sw-media-sidebar/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_media_sidebar %}\n<div\n    class=\"sw-media-sidebar\"\n    :class=\"mediaSidebarClasses\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_sidebar_headline %}\n    <h3\n        v-if=\"headLine\"\n        class=\"sw-media-sidebar__headline\"\n    >\n        {{ headLine }}\n    </h3>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_sidebar_item_quickinfo_content %}\n    <div class=\"sw-media-sidebar__quickinfo-scroll-container\">\n        <sw-media-quickinfo\n            v-if=\"isSingleFile && firstEntity.getEntityName() === 'media'\"\n            :item=\"firstEntity\"\n            :editable=\"editable\"\n            v-bind=\"filteredAttributes\"\n            v-on=\"listeners\"\n            @update:item=\"onFirstItemUpdated\"\n        />\n\n        <sw-media-folder-info\n            v-else-if=\"isSingleFile && firstEntity.getEntityName() === 'media_folder'\"\n            :media-folder=\"firstEntity\"\n            :editable=\"editable\"\n            v-bind=\"filteredAttributes\"\n            v-on=\"listeners\"\n        />\n\n        <sw-media-quickinfo-multiple\n            v-else-if=\"isMultipleFile\"\n            :editable=\"editable\"\n            :items=\"items\"\n            v-bind=\"filteredAttributes\"\n            v-on=\"listeners\"\n        />\n\n        <sw-media-folder-info\n            v-else-if=\"currentFolder\"\n            :media-folder=\"currentFolder\"\n            :editable=\"editable\"\n            v-bind=\"filteredAttributes\"\n            @media-folder-renamed=\"onMediaFolderRenamed\"\n            v-on=\"listeners\"\n        />\n\n        <sw-empty-state\n            v-else\n            :title=\"$tc('sw-media.sidebar.labelNoMediaSelected')\"\n        >\n            <template #icon>\n                <img\n                    :src=\"assetFilter('/administration/static/img/empty-states/media-empty-state.svg')\"\n                    :alt=\"$tc('sw-media.sidebar.labelNoMediaSelected')\"\n                >\n            </template>\n        </sw-empty-state>\n    </div>\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-media-sidebar.html.twig';\nimport './sw-media-sidebar.scss';\n\nconst { Filter, Context } = Cicada;\n\n/**\n * @package discovery\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['repositoryFactory'],\n\n    emits: ['media-sidebar-folder-renamed'],\n\n    mixins: [Cicada.Mixin.getByName('notification')],\n\n    props: {\n        items: {\n            required: true,\n            type: Array,\n            validator(value) {\n                const invalidElements = value.filter((element) => {\n                    return ![\n                        'media',\n                        'media_folder',\n                    ].includes(element.getEntityName());\n                });\n                return invalidElements.length === 0;\n            },\n        },\n\n        currentFolderId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        editable: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            currentFolder: null,\n        };\n    },\n\n    computed: {\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        mediaFolderRepository() {\n            return this.repositoryFactory.create('media_folder');\n        },\n\n        mediaNameFilter() {\n            return Filter.getByName('mediaName');\n        },\n\n        mediaSidebarClasses() {\n            return {\n                'no-headline': !this.headLine,\n            };\n        },\n\n        isSingleFile() {\n            return this.items.length === 1;\n        },\n\n        isMultipleFile() {\n            return this.items.length > 1;\n        },\n\n        headLine() {\n            if (this.isSingleFile) {\n                if (this.firstEntity.getEntityName() === 'media') {\n                    return this.mediaNameFilter(this.firstEntity);\n                }\n                return this.firstEntity.name;\n            }\n\n            if (this.isMultipleFile) {\n                return this.getSelectedFilesCount;\n            }\n\n            if (this.currentFolder) {\n                return this.currentFolder.name;\n            }\n\n            return null;\n        },\n\n        getSelectedFilesCount() {\n            return `${this.$tc('sw-media.sidebar.labelHeadlineMultiple', this.items.length, { count: this.items.length })}`;\n        },\n\n        firstEntity() {\n            return this.items[0];\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n\n        listeners() {\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return this.$listeners;\n            }\n\n            return {};\n        },\n\n        filteredAttributes() {\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return {};\n            }\n\n            const filteredAttributes = {};\n\n            Object.entries(this.$attrs).forEach(\n                ([\n                    key,\n                    value,\n                ]) => {\n                    if (key.startsWith('on') && typeof value === 'function') {\n                        filteredAttributes[key] = value;\n                    }\n                },\n            );\n\n            return filteredAttributes;\n        },\n    },\n\n    watch: {\n        currentFolderId() {\n            this.fetchCurrentFolder();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.fetchCurrentFolder();\n        },\n\n        async fetchCurrentFolder() {\n            if (!this.currentFolderId) {\n                this.currentFolder = null;\n                return;\n            }\n\n            this.currentFolder = await this.mediaFolderRepository.get(this.currentFolderId, Context.api);\n        },\n\n        onMediaFolderRenamed() {\n            this.$emit('media-sidebar-folder-renamed');\n        },\n\n        /**\n         * @experimental stableVersion:v6.7.0 feature:SPATIAL_BASES\n         */\n        async onFirstItemUpdated(newItem) {\n            const firstItem = this.items[0];\n\n            try {\n                firstItem.isLoading = true;\n                Object.assign(this.items[0], newItem);\n                await this.mediaRepository.save(firstItem, Context.api);\n                this.createNotificationSuccess({\n                    message: this.$tc('global.sw-media-media-item.notification.settingsSuccess.message'),\n                });\n            } catch {\n                this.createNotificationError({\n                    message: this.$tc('global.notification.unspecifiedSaveErrorMessage'),\n                });\n            } finally {\n                firstItem.isLoading = false;\n            }\n        },\n    },\n};\n"],"names":["template","Filter","Context","index","value","element","filteredAttributes","key","newItem","firstItem"],"mappings":"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"}