import{u as o}from"./util.service-DptoGcql.js";import"./channel-Cvr-E4M4.js";import"./_baseUniq-DJKU6o6f.js";import"./_baseIteratee-BDDcCv4P.js";import"./camelCase-FN5n0J2F.js";import"./string.utils-B0MdTyu7.js";const c=`{% block sw_settings_tag_detail_assignments %} <div class="sw-settings-tag-detail-assignments"> {% block sw_settings_tag_detail_assignments_card %} <sw-card class="sw-settings-tag-detail-assignments__card" position-identifier="sw-settings-tag-detail-assignments-card" large > <template #toolbar> {% block sw_settings_tag_detail_assignments_toolbar %} <sw-card-filter :placeholder="$tc('sw-settings-tag.detail.assignments.searchPlaceholder')" @sw-card-filter-term-change="onTermChange" /> {% endblock %} </template> {% block sw_settings_tag_detail_assignments_header %} <sw-container columns="1fr 1fr"> {% block sw_settings_tag_detail_assignments_header_selected_filter %} <sw-card-section class="sw-settings-tag-detail-assignments__filter-selected" divider="bottom" > <sw-switch-field v-model:value="showSelected" :disabled="isLoading" :label="$tc('sw-settings-tag.detail.assignments.showSelected')" /> </sw-card-section> {% endblock %} {% block sw_settings_tag_detail_assignments_header_total_selected %} <sw-card-section class="sw-settings-tag-detail-assignments__total-selected" divider="bottom" > {{ totalAssignments }} {{ $tc('sw-settings-tag.detail.assignments.selected') }} </sw-card-section> {% endblock %} </sw-container> {% endblock %} <template #grid> {% block sw_settings_tag_detail_assignments_grid %} <sw-container columns="300px 1fr"> <sw-card-section divider="right"> {% block sw_settings_tag_detail_assignments_associations_grid %} <sw-data-grid class="sw-settings-tag-detail-assignments__associations-grid" :data-source="assignmentAssociations" :columns="assignmentAssociationsColumns" :v-bind="$attrs" :show-selection="false" :show-actions="false" :show-header="false" :plain-appearance="true" :full-page="true" item-identifier-property="entity" > <template #column-name="{ item }"> {% block sw_settings_tag_detail_assignments_associations_grid_column_name %} <sw-button class="associations-grid__row" :class="{ 'is--selected': item.entity === selectedEntity }" :disabled="isLoading" @click.prevent="onAssignmentChange(item)" > <sw-icon v-if="item.entity === selectedEntity" name="regular-folder-open" small /> <sw-icon v-else name="regular-folder" small /> <span> {{ item.name }} </span> <span v-if="getCount(item.assignment)" class="associations-grid__count" > {{ getCount(item.assignment) }} {{ $tc('sw-settings-tag.detail.assignments.assignments', getCount(item.assignment)) }} </span> </sw-button> {% endblock %} </template> <template #actions="{ item }"> </template> </sw-data-grid> {% endblock %} </sw-card-section> <sw-card-section> {% block sw_settings_tag_detail_assignments_entities_grid %} <sw-entity-listing :key="entitiesGridKey" class="sw-settings-tag-detail-assignments__entities-grid" :items="entities" :columns="entitiesColumns" :repository="entityRepository" :plain-appearance="true" :compact-mode="true" :show-selection="true" :show-actions="false" :show-header="true" :is-loading="isLoading" :disable-data-fetching="true" :pre-selection="selectedAssignments" :allow-inline-edit="false" :allow-delete="false" @page-change="onPageChange" @select-item="onSelectionChange" > <template #selection-content="{ item, isSelected, selectItem, itemIdentifierProperty }"> {% block sw_settings_tag_detail_assignments_entities_grid_selection_content %} <div class="sw-data-grid__cell-content"> {% block sw_settings_tag_detail_assignments_entities_grid_select_item_checkbox %} <sw-checkbox-field v-if="isInherited(item.id, item.parentId)" :key="\`\${itemIdentifierProperty}-inherited\`" :value="hasInheritedTag(item.id, item.parentId)" :disabled="true" /> <sw-checkbox-field v-else :key="itemIdentifierProperty" :value="isSelected(item[itemIdentifierProperty])" @update:value="selectItem($event, item)" /> {% endblock %} </div> {% endblock %} </template> <template #column-name="{ item, selectItem }"> {% block sw_settings_tag_detail_assignments_entities_grid_column_inheritance_switch %} <sw-inheritance-switch v-if="isInheritable && item.parentId && parentHasTags(item.id, item.parentId)" :is-inherited="isInherited(item.id, item.parentId)" :disabled="!isInherited(item.id, item.parentId)" @inheritance-remove="selectItem(true, item)" /> {% endblock %} {% block sw_settings_tag_detail_assignments_entities_grid_column_name_product %} <sw-product-variant-info v-if="selectedEntity === 'product'" :variations="item.variation" > <sw-highlight-text :search-term="term" :text="item.translated.name || item.name" /> </sw-product-variant-info> {% endblock %} {% block sw_settings_tag_detail_assignments_entities_grid_column_name_category %} <template v-else-if="selectedEntity === 'category'" > <sw-highlight-text :search-term="term" :text="item.translated ? item.translated.name : item.name" /> <sw-highlight-text v-if="item.breadcrumb && item.breadcrumb.length > 1" :text="item.breadcrumb.join(' / ')" /> </template> {% endblock %} {% block sw_settings_tag_detail_assignments_entities_grid_column_name_customer %} <template v-else-if="selectedEntity === 'customer'" > <sw-highlight-text :search-term="term" :text="\`\${item.firstName} \${item.lastName}\`" /> <sw-highlight-text :search-term="term" :text="item.customerNumber" /> </template> {% endblock %} {% block sw_settings_tag_detail_assignments_entities_grid_column_name_order %} <template v-else-if="selectedEntity === 'order'" > <sw-highlight-text :search-term="term" :text="\`\${item.orderCustomer.firstName} \${item.orderCustomer.lastName}\`" /> <sw-highlight-text :search-term="term" :text="item.orderNumber" /> </template> {% endblock %} {% block sw_settings_tag_detail_assignments_entities_grid_column_name_media %} <template v-else-if="selectedEntity === 'media'" > <sw-media-preview-v2 :source="item.id" :media-is-private="item.private" /> <sw-highlight-text :search-term="term" :text="\`\${item.fileName}.\${item.fileExtension}\`" /> </template> {% endblock %} {% block sw_settings_tag_detail_assignments_entities_grid_column_name_newsletter_recipient %} <sw-highlight-text v-else-if="selectedEntity === 'newsletter_recipient'" :search-term="term" :text="\`\${item.firstName} \${item.lastName}\`" /> {% endblock %} {% block sw_settings_tag_detail_assignments_entities_grid_column_name_default %} <sw-highlight-text v-else :search-term="term" :text="item.translated ? item.translated.name : item.name" /> {% endblock %} </template> </sw-entity-listing> {% endblock %} </sw-card-section> </sw-container> {% endblock %} </template> </sw-card> {% endblock %} </div> {% endblock %}`,{Context:g,Mixin:h}=Shopware,{Criteria:i}=Shopware.Data,y={template:c,inheritAttrs:!1,inject:["repositoryFactory"],emits:["remove-assignment","add-assignment"],mixins:[h.getByName("listing")],props:{tag:{type:Object,required:!0},toBeAdded:{type:Object,required:!0},toBeDeleted:{type:Object,required:!0},initialCounts:{type:Object,required:!1,default(){return{}}},property:{type:String,required:!1,default:null},entity:{type:String,required:!1,default:null}},data(){return{selectedEntity:this.entity??"product",selectedAssignment:this.property??"products",entitiesGridKey:null,preSelected:{},entities:null,isLoading:!1,showSelected:this.property&&this.entity,counts:{...this.initialCounts},currentPageCountBuckets:[],disableRouteParams:!0,page:1,limit:25}},computed:{tagDefinition(){return Shopware.EntityDefinition.get("tag")},isInheritable(){var e,t,s,n;return((n=(s=(t=(e=Shopware.EntityDefinition.get(this.selectedEntity))==null?void 0:e.properties)==null?void 0:t.tags)==null?void 0:s.flags)==null?void 0:n.inherited)===!0},assignmentAssociations(){const e=[];return Object.entries(this.tagDefinition.properties).forEach(([t,s])=>{s.relation==="many_to_many"&&e.push({name:this.$tc(`sw-settings-tag.detail.assignments.${t}`),entity:s.entity,assignment:t})}),e},assignmentAssociationsColumns(){return[{property:"name",dataIndex:"name",primary:!0,allowResize:!1,sortable:!1}]},entityRepository(){return this.repositoryFactory.create(this.selectedEntity)},entityCriteria(){const e=new i(this.page,this.limit);if(e.setTerm(this.term),e.addSorting(i.sort("createdAt","DESC")),this.selectedEntity==="product"&&e.addAssociation("options.group"),this.selectedEntity==="order"&&e.addAssociation("orderCustomer"),this.isInheritable&&this.addTagAggregations(e),!this.showSelected)return e;const t=Object.keys(this.toBeAdded[this.selectedAssignment]),s=Object.keys(this.toBeDeleted[this.selectedAssignment]).filter(n=>{const r=this.toBeDeleted[this.selectedAssignment][n].parentId;return!this.isInheritable||!r?!0:!this.isInherited(n,r)||!this.hasInheritedTag(n,r)});return t.length?e.addFilter(i.multi("OR",[i.equals("tags.id",this.tag.id),i.equalsAny("id",t)])):e.addFilter(i.equals("tags.id",this.tag.id)),s.length&&e.addFilter(i.not("AND",[i.equalsAny("id",s)])),e},entitiesColumns(){return[{property:"name",primary:!0,allowResize:!1,sortable:!1}]},selectedAssignments(){const e=new Proxy({...this.preSelected},{get(t,s){return t[s]},set(t,s,n){return t[s]=n,!0}});return Object.values(this.toBeAdded[this.selectedAssignment]).forEach(t=>{e[t.id]=t}),Object.values(this.toBeDeleted[this.selectedAssignment]).forEach(t=>{e.hasOwnProperty(t.id)&&delete e[t.id]}),e},totalAssignments(){let e=0;return Object.values(this.counts).forEach(t=>{e+=t}),e}},watch:{selectedEntity(){this.page=1,this.getList()},showSelected(){this.page=1,this.getList()}},methods:{getList(){this.isLoading=!0;const e=this.entityCriteria;return this.showSelected&&this.isInheritable?this.searchInheritedEntities(e).then(()=>this.search(e)).catch(()=>{this.isLoading=!1}):this.search(e)},search(e){return this.entityRepository.search(e,{...g.api,inheritance:!0}).then(t=>{if(this.tag.isNew()||t.total===0)return this.entitiesGridKey=o.createId(),this.total=t.total,this.entities=t,this.isLoading=!1,null;const s=t.map(({id:r})=>r),n=new i(1,this.limit);return n.addFilter(i.equalsAny("id",s)),this.isInheritable&&this.addTagAggregations(n,!1),n.addPostFilter(i.equals("tags.id",this.tag.id)),this.entityRepository.search(n).then(r=>{this.isInheritable&&(this.currentPageCountBuckets=r.aggregations.tags.buckets);const a={};r.forEach(l=>{a[l.id]=l}),this.preSelected=a,this.entitiesGridKey=o.createId(),this.total=t.total,this.entities=t,this.isLoading=!1})}).catch(()=>{this.isLoading=!1})},addTagAggregations(e,t=!0){let s=i.count("tags",`${this.selectedEntity}.tags.id`);t&&(s=i.filter("tags",[i.equals("tags.id",this.tag.id)],s),e.addAggregation(i.terms("parentTags","id",null,null,i.count("parentTags",`${this.selectedEntity}.parent.tags.id`)))),e.addAggregation(i.terms("tags","id",null,null,s))},searchInheritedEntities(e){const t=Object.keys(this.toBeAdded[this.selectedAssignment]),s=Object.keys(this.toBeDeleted[this.selectedAssignment]);if(!t.length&&!s.length)return Promise.resolve();let n=Promise.resolve(),r=Promise.resolve();if(t.length){const a=new i(1,25);a.addFilter(i.multi("AND",[i.equals("tags.id",null),i.equalsAny("parentId",t)])),n=this.entityRepository.searchIds(a).then(({data:l,total:d})=>{d!==0&&(e.filters=[i.multi("OR",[i.multi("AND",e.filters),i.equalsAny("id",l)])])})}if(s.length){const a=new i(1,25);a.addFilter(i.equals("tags.id",null)),a.addFilter(i.equalsAny("parentId",s)),t.length&&a.addFilter(i.not("AND",[i.equalsAny("id",t)])),r=this.entityRepository.searchIds(a).then(({data:l,total:d})=>{d!==0&&e.addFilter(i.not("AND",[i.equalsAny("id",l)]))})}return Promise.all([n,r])},async onTermChange(e){this.term=e,this.page=1,await this.getList()},onAssignmentChange({entity:e,assignment:t}){this.selectedEntity=e,this.selectedAssignment=t},onSelectionChange(e,t,s){const n=t.id;if(!s){this.$emit("remove-assignment",this.selectedAssignment,n,t),this.countDecrease(this.selectedAssignment);return}this.$emit("add-assignment",this.selectedAssignment,n,t),this.countIncrease(this.selectedAssignment)},getCount(e){return this.counts.hasOwnProperty(e)?this.counts[e]:null},countIncrease(e){this.counts.hasOwnProperty(e)?this.counts[e]+=1:this.counts[e]=1},countDecrease(e){this.counts.hasOwnProperty(e)&&this.counts[e]!==0?this.counts[e]-=1:this.counts[e]=0,this.showSelected&&(this.page>1&&this.entities.length===1&&(this.page-=1),this.getList())},isInherited(e,t){if(!this.isInheritable||!t||this.toBeAdded[this.selectedAssignment].hasOwnProperty(e))return!1;const s=this.toBeDeleted[this.selectedAssignment].hasOwnProperty(e);return this.currentPageCountBuckets.filter(({key:r,tags:a})=>r===e&&(s?a.count-1:a.count)>0).length>0?!1:this.parentHasTags(e,t)},parentHasTags(e,t){const s=this.toBeDeleted[this.selectedAssignment].hasOwnProperty(t);return this.entities.aggregations.parentTags.buckets.filter(({key:r,parentTags:a})=>r===e&&(s?a.count-1:a.count)>0).length>0?!0:this.toBeAdded[this.selectedAssignment].hasOwnProperty(t)},hasInheritedTag(e,t){const s=this.toBeAdded[this.selectedAssignment].hasOwnProperty(t),n=this.toBeDeleted[this.selectedAssignment].hasOwnProperty(t);return this.preSelected.hasOwnProperty(e)||this.toBeDeleted[this.selectedAssignment].hasOwnProperty(e)?s||this.preSelected.hasOwnProperty(t)&&!n:(this.entities.aggregations.tags.buckets.filter(a=>a.key===e).length>0||s)&&!n},onPageChange({page:e,limit:t}){this.page=e,this.limit=t,this.getList()}}};export{y as default};
