const t='{# v-on="$listeners" needed becaues vue/compat removes them from $attrs #} {# New mt-textarea component #} <mt-textarea v-if="useMeteorComponent" v-bind="$attrs" v-model="realValue" :placeholder="placeholder" v-on="listeners" > <template v-for="(index, name) in getSlots()" #[name]="data" > <slot :name="name" v-bind="data || {}" > </slot> </template> </mt-textarea> {# v-on="$listeners" needed becaues vue/compat removes them from $attrs #} {# Deprecated component #} <sw-textarea-field-deprecated v-else v-bind="$attrs" v-model:value="realValue" :value="value" :placeholder="placeholder" v-on="listeners" > <template v-for="(index, name) in getSlots()" #[name]="data" > <slot :name="name" v-bind="data || {}" > </slot> </template> </sw-textarea-field-deprecated>',{Component:a}=Cicada;a.register("sw-textarea-field",{template:t,compatConfig:Cicada.compatConfig,props:{placeholder:{type:String,required:!1,default:void 0},value:{type:String,required:!1,default:void 0},modelValue:{type:String,required:!1,default:void 0}},computed:{useMeteorComponent(){return Cicada.Feature.isActive("v6.7.0.0")?!0:(Cicada.Utils.debug.warn("sw-textarea-field",'The old usage of "sw-textarea-field" is deprecated and will be removed in v6.7.0.0. Please use "mt-textarea" instead.'),!1)},realValue:{get(){return this.modelValue||this.value},set(e){this.useMeteorComponent?this.$emit("update:value",e):this.$emit("update:modelValue",e)}},listeners(){return this.isCompatEnabled("INSTANCE_LISTENERS")?this.$listeners:{}}},methods:{getSlots(){return this.isCompatEnabled("INSTANCE_SCOPED_SLOTS")?{...this.$slots,...this.$scopedSlots}:this.$slots}}});
//# sourceMappingURL=index-D59oFhln.js.map
