const t='{# v-on="$listeners" needed becaues vue/compat removes them from $attrs #} {# New mt-colorpicker component #} {% block sw_colorpicker %} <mt-colorpicker v-if="useMeteorComponent" v-bind="$attrs" :model-value="currentValue" @change="currentValue = $event" > <template v-for="(index, name) in getSlots()" #[name]="data" > <slot :name="name" v-bind="data" > </slot> </template> <slot></slot> </mt-colorpicker> {% endblock %} {# v-on="$listeners" needed becaues vue/compat removes them from $attrs #} {# Deprecated component #} {% block sw_colorpicker_deprecated %} <sw-colorpicker-deprecated v-else v-bind="$attrs" :value="value" > <template v-for="(index, name) in getSlots()" #[name]="data" > <slot :name="name" v-bind="data" > </slot> </template> <slot></slot> </sw-colorpicker-deprecated> {% endblock %}',{Component:o}=Shopware;o.register("sw-colorpicker",{template:t,props:{value:{type:[Number,String],required:!1,default:null},modelValue:{type:Number,required:!1,default:void 0}},computed:{useMeteorComponent(){return Shopware.Feature.isActive("ENABLE_METEOR_COMPONENTS")?!0:(Shopware.Utils.debug.warn("sw-colorpicker",'The old usage of "sw-colorpicker" is deprecated and will be removed in v6.7.0.0. Please use "mt-colorpicker" instead.'),!1)},currentValue:{get(){return this.value!==null?this.value:this.modelValue},set(e){this.$emit("update:value",e),this.$emit("change",e)}}},methods:{getSlots(){return this.$slots}}});
