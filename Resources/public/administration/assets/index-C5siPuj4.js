import{L as a}from"./order.types-BvKP5qzO.js";const o=`{% block sw_order_line_items_grid_sales_channel %} <sw-container type="row" class="sw-order-line-items-grid-sales-channel" > {% block sw_order_line_items_grid_sales_channel_actions %} <sw-container class="sw-order-line-items-grid-sales-channel__actions-container" columns="1fr auto" gap="16px" > {% block sw_order_line_items_grid_sales_channel_header %} {% block sw_order_line_items_grid_sales_channel_line_item_filter %} <div align="left"> <sw-card-filter ref="itemFilter" :placeholder="$tc('sw-order.createBase.placeholderSearchBarItem')" @sw-card-filter-term-change="onSearchTermChange" /> </div> {% endblock %} {% block sw_order_line_items_grid_sales_channel_create_actions_button_group %} <div align="right"> <sw-button-group> {% block sw_order_line_items_grid_sales_channel_add_existing_product %} <sw-button class="sw-order-line-items-grid-sales-channel__add-product" variant="ghost" size="small" :disabled="isAddNewItemButtonDisabled || undefined" @click="onInsertExistingItem" > {{ $tc('sw-order.createBase.buttonAddProduct') }} </sw-button> {% endblock %} {% block sw_order_line_items_grid_sales_channel_create_actions_dropdown %} <sw-context-button> <template #button> <sw-button variant="ghost" size="small" square :disabled="isAddNewItemButtonDisabled || undefined" > <sw-icon name="regular-chevron-down-xxs" decorative /> </sw-button> </template> {% block sw_order_line_items_grid_sales_channel_create_actions_dropdown_menu %} <sw-context-menu-item class="sw-order-line-items-grid-sales-channel__add-custom-item" @click="onInsertBlankItem" > {{ $tc('sw-order.createBase.buttonAddBlankProduct') }} </sw-context-menu-item> <sw-context-menu-item class="sw-order-line-items-grid-sales-channel__add-credit-item" @click="onInsertCreditItem" > {{ $tc('sw-order.createBase.buttonAddCredit') }} </sw-context-menu-item> {% endblock %} </sw-context-button> {% endblock %} </sw-button-group> </div> {% endblock %} {% endblock %} </sw-container> {% endblock %} {% block sw_order_line_items_grid_sales_channel_grid %} {% block sw_order_line_items_grid_sales_channel_grid_no_items %} <sw-empty-state v-if="cartLineItems.length === 0" :title="$tc('sw-order.createBase.messageEmptyItem')" :absolute="false" > <template #icon> <img :src="assetFilter('/administration/static/img/empty-states/products-empty-state.svg')" :alt="$tc('sw-order.createBase.messageEmptyItem')" > </template> </sw-empty-state> {% endblock %} {% block sw_order_line_items_grid_sales_channel_grid_item_table %} <sw-data-grid v-else ref="dataGrid" :data-source="cartLineItems" :columns="getLineItemColumns" :full-page="false" :show-settings="false" :show-selection="isCustomerActive" show-actions :allow-column-edit="false" :allow-inline-edit="isCustomerActive" :is-record-editable="(item) => !isPromotionItem(item)" :is-record-selectable="(item) => !isAutoPromotionItem(item)" :compact-mode="false" identifier="sw-order-line-item-grid-sales-channel" class="sw-order-line-items-grid-sales-channel__data-grid" @inline-edit-cancel="onInlineEditCancel" @inline-edit-save="onInlineEditSave" @selection-change="onSelectionChanged" > {% block sw_order_line_items_grid_sales_channel_grid_columns %} {% block sw_order_line_items_grid_sales_channel_grid_columns_label %} <template #column-label="{ item, isInlineEdit}"> {% block sw_order_line_items_grid_sales_channel_grid_columns_label_inline_edit %} <sw-order-product-select v-if="isInlineEdit" :item="item" :tax-status="taxStatus" :sales-channel-id="salesChannelId" /> {% endblock %} {% block sw_order_line_items_grid_sales_channel_grid_columns_label_link %} <div v-else-if="!isInlineEdit && isProductItem(item)" > {% block sw_order_line_items_grid_column_payload_options %} <router-link v-if="item.payload && item.payload.options" target="_blank" class="sw-order-line-items-grid-sales-channel__item-payload-options" :title="$tc('sw-order.detailBase.contextMenuShowProduct')" :to="{ name: 'sw.product.detail', params: { id: item.identifier || item.id } }" > <sw-product-variant-info :variations="item.payload.options"> <div class="sw-order-line-items-grid__item-label"> {{ item.label }} </div> </sw-product-variant-info> </router-link> <div v-else class="sw-order-line-items-grid-sales-channel__item-payload-options" > <span class="sw-order-line-items-grid__item-label"> {{ item.label }} </span> </div> {% endblock %} </div> {% endblock %} {% block sw_order_line_items_grid_sales_channel_grid_columns_label_content %} <template v-else> <span class="sw-order-line-items-grid-sales-channel__item-label"> {{ item.label }} </span> </template> {% endblock %} </template> {% endblock %} {% block sw_order_line_items_grid_sales_channel_grid_columns_unit_price %} <template #column-unitPrice="{ item, isInlineEdit}"> {% block sw_order_line_items_grid_sales_channel_grid_columns_unit_price_inline_edit %} <sw-number-field v-if="isInlineEdit && !itemCreatedFromProduct(item)" placeholder="0" size="small" :min="getMinItemPrice(item)" :value="item.priceDefinition.price" @update:value="checkItemPrice($event, item)" /> {% endblock %} {% block sw_order_line_items_grid_sales_channel_grid_columns_unit_price_content %} <template v-else> {{ currencyFilter(item.price.unitPrice, currency.isoCode) }} </template> {% endblock %} </template> {% endblock %} {% block sw_order_line_items_grid_sales_channel_grid_columns_total_price %} <template #column-totalPrice="{ item }"> {% block sw_order_line_items_grid_sales_channel_grid_columns_total_price_content %} {{ currencyFilter(item.price.totalPrice, currency.isoCode) }} {% endblock %} </template> {% endblock %} {% block sw_order_line_items_grid_sales_channel_grid_columns_quantity %} <template #column-quantity="{ item, isInlineEdit }"> {% block sw_order_line_items_grid_sales_channel_grid_columns_quantity_inline_edit %} <sw-number-field v-if="isInlineEdit && !isCreditItem(item)" number-type="int" :min="1" size="small" placeholder="0" :value="item.quantity" @update:value="changeItemQuantity($event, item)" /> {% endblock %} {% block sw_order_line_items_grid_sales_channel_grid_columns_quantity_content %} <template v-else> <span class="sw-order-line-items-grid-sales-channel__quantity"> {{ item.quantity }} </span> </template> {% endblock %} </template> {% endblock %} {% block sw_order_line_items_grid_sales_channel_grid_columns_tax %} <template #column-tax="{ item, isInlineEdit }"> {% block sw_order_line_items_grid_sales_channel_grid_columns_tax_inline_edit %} <sw-number-field v-if="isInlineEdit && !itemCreatedFromProduct(item.id) && item.priceDefinition && item.priceDefinition.taxRules && !isCreditItem(item)" key="order-line-item-tax-edit-default" v-model:value="item.priceDefinition.taxRules[0].taxRate" size="small" placeholder="0" :min="0" /> {% endblock %} {% block sw_order_line_items_grid_sales_channel_grid_columns_tax_content_tooltip %} <span v-else-if="hasMultipleTaxes(item)" v-tooltip="tooltipTaxDetail(item)" class="sw-order-line-items-grid-sales-channel__item-tax-tooltip" > {{ showTaxValue(item) }} </span> {% endblock %} {% block sw_order_line_items_grid_sales_channel_grid_columns_tax_content %} <template v-else-if="item.price && item.price.taxRules.length"> {{ showTaxValue(item) }} </template> {% endblock %} </template> {% endblock %} {% block sw_order_line_items_grid_sales_channel_grid_actions %} <template #actions="{ item }"> {% block sw_order_line_items_grid_sales_channel_grid_actions_show %} <sw-context-menu-item :disabled="!isProductItem(item) || undefined" icon="regular-eye" :router-link="{ name: 'sw.product.detail', params: { id: item.id } }" target="_blank" rel="noopener" > {% block sw_order_line_items_grid_sales_channel_grid_actions_show_label %} {{ $tc('sw-order.createBase.contextMenuShowProduct') }} {% endblock %} </sw-context-menu-item> {% endblock %} </template> {% endblock %} {% block sw_order_line_items_grid_sales_channel_bulk_actions %} <template #bulk> {% block sw_order_line_items_grid_sales_channel_bulk_actions_delete %} <a class="link link-danger" role="link" tabindex="0" @click="onDeleteSelectedItems" @keydown.enter="onDeleteSelectedItems" > {{ $tc('global.default.delete') }} </a> {% endblock %} </template> {% endblock %} {% endblock %} </sw-data-grid> {% endblock %} {% endblock %} </sw-container> {% endblock %}`,{Utils:c,State:i,Service:d}=Cicada,{get:r,format:_}=c,u={template:o,compatConfig:Cicada.compatConfig,inject:["feature"],emits:["on-save-item","on-remove-items"],props:{salesChannelId:{type:String,required:!0,default:""},cart:{type:Object,required:!0},currency:{type:Object,required:!0},isCustomerActive:{type:Boolean,default:!1},isLoading:{type:Boolean,default:!1}},data(){return{selectedItems:{},searchTerm:""}},computed:{orderLineItemRepository(){return d("repositoryFactory").create("order_line_item")},cartLineItems(){if(!this.searchTerm)return this.cart.lineItems;const e=this.searchTerm.split(/[\W_]+/gi);return this.cart.lineItems.filter(t=>t.label?e.every(n=>t.label.toLowerCase().includes(n.toLowerCase())):!1)},lineItemTypes(){return a},isCartTokenAvailable(){return i.getters["swOrder/isCartTokenAvailable"]},isAddNewItemButtonDisabled(){return!this.isCustomerActive||!this.isCartTokenAvailable||this.isLoading},taxStatus(){return r(this.cart,"price.taxStatus","")},unitPriceLabel(){return this.taxStatus==="net"?this.$tc("sw-order.createBase.columnPriceNet"):this.taxStatus==="tax-free"?this.$tc("sw-order.createBase.columnPriceTaxFree"):this.$tc("sw-order.createBase.columnPriceGross")},getLineItemColumns(){const e=[{property:"quantity",dataIndex:"quantity",label:this.$tc("sw-order.createBase.columnQuantity"),allowResize:!1,align:"right",inlineEdit:!0,width:"80px"},{property:"label",dataIndex:"label",label:this.$tc("sw-order.createBase.columnProductName"),allowResize:!1,primary:!0,inlineEdit:!0,multiLine:!0},{property:"unitPrice",dataIndex:"unitPrice",label:this.unitPriceLabel,allowResize:!1,align:"right",inlineEdit:!0,width:"120px"}];return this.taxStatus!=="tax-free"&&e.push({property:"tax",label:this.$tc("sw-order.createBase.columnTax"),allowResize:!1,align:"right",inlineEdit:!0,width:"100px"}),[...e,{property:"totalPrice",dataIndex:"totalPrice",label:this.taxStatus==="gross"?this.$tc("sw-order.createBase.columnTotalPriceGross"):this.$tc("sw-order.createBase.columnTotalPriceNet"),allowResize:!1,align:"right",width:"80px"}]},assetFilter(){return Cicada.Filter.getByName("asset")},currencyFilter(){return Cicada.Filter.getByName("currency")}},methods:{onInlineEditSave(e){e.label!==""&&(e.priceDefinition.isCalculated=!0,this.$emit("on-save-item",e))},onInlineEditCancel(e){e._isNew&&(this.initLineItem(e),delete e.identifier),e.initialQuantity&&(e.quantity=e.initialQuantity)},createNewOrderLineItem(){this.searchTerm="",this.$refs.itemFilter.term="";const e=this.orderLineItemRepository.create();return e.versionId=Cicada.Context.api.liveVersionId,this.initLineItem(e),e},initLineItem(e){e.priceDefinition={isCalculated:!1,taxRules:[{taxRate:0,percentage:100}],price:0},e.price={taxRules:[{taxRate:0}],unitPrice:"...",quantity:1,totalPrice:"..."},e.quantity=1,e.unitPrice=0,e.totalPrice=0,e.precision=2,e.label=""},onInsertExistingItem(){const e=this.createNewOrderLineItem();e.type=this.lineItemTypes.PRODUCT,this.cartLineItems.unshift(e),i.commit("swOrder/setCartLineItems",this.cartLineItems)},onInsertBlankItem(){const e=this.createNewOrderLineItem();e.description="custom line item",e.type=this.lineItemTypes.CUSTOM,this.cartLineItems.unshift(e),i.commit("swOrder/setCartLineItems",this.cartLineItems)},onInsertCreditItem(){const e=this.createNewOrderLineItem();e.description="credit line item",e.type=this.lineItemTypes.CREDIT,this.cartLineItems.unshift(e),i.commit("swOrder/setCartLineItems",this.cartLineItems)},onSelectionChanged(e){this.selectedItems=e},onDeleteSelectedItems(){const e=[];Object.keys(this.selectedItems).forEach(t=>{this.selectedItems[t].label===""?i.commit("swOrder/removeEmptyLineItem",t):e.push(t)}),e.length>0&&this.$emit("on-remove-items",e),this.$refs.dataGrid.resetSelection()},itemCreatedFromProduct(e){return e._isNew&&e.type===this.lineItemTypes.PRODUCT},onSearchTermChange(e){this.searchTerm=e.toLowerCase()},isCreditItem(e){return e.type===this.lineItemTypes.CREDIT},isProductItem(e){return e.type===this.lineItemTypes.PRODUCT},getMinItemPrice(e){return this.isCreditItem(e)?null:0},isPromotionItem(e){return e.type===this.lineItemTypes.PROMOTION},isAutoPromotionItem(e){return this.isPromotionItem(e)&&!r(e,"payload.code")},showTaxValue(e){return(this.isCreditItem(e)||this.isPromotionItem(e))&&e.price.taxRules.length>1?this.$tc("sw-order.createBase.textCreditTax"):`${e.price.taxRules[0].taxRate} %`},checkItemPrice(e,t){if(this.isCreditItem(t)){t.priceDefinition.price=Math.abs(e)*-1;return}t.priceDefinition.price=e},tooltipTaxDetail(e){const n=[...e.price.calculatedTaxes].sort((s,l)=>s.taxRate-l.taxRate).map(s=>this.$tc("sw-order.createBase.taxDetail",0,{taxRate:s.taxRate,tax:_.currency(s.tax,this.currency.isoCode)}));return{showDelay:300,message:`${this.$tc("sw-order.createBase.tax")}<br>${n.join("<br>")}`}},hasMultipleTaxes(e){return r(e,"price.calculatedTaxes")&&e.price.calculatedTaxes.length>1},changeItemQuantity(e,t){t.initialQuantity||(t.initialQuantity=t.quantity),t.quantity=e}}};export{u as default};
//# sourceMappingURL=index-C5siPuj4.js.map
