const t=`{% block sw_settings_cache_modal %} <sw-modal v-if="open" variant="small" :title="$t('sw-settings-cache.modal.title')" @modal-close="closeModal"> {{ $tc('sw-settings-cache.modal.message') }} <template #modal-footer> <sw-button @click="closeModal" size="small"> {{ $tc('global.default.cancel') }} </sw-button> <sw-button @click="clearCache" variant="primary" ref="button" size="small"> {{ $tc('sw-settings-cache.modal.actions.clear') }} </sw-button> </template> </sw-modal> {% endblock %}`,{Mixin:c}=Shopware,a={template:t,shortcuts:{"SYSTEMKEY+c":"openModal"},inject:["cacheApiService","acl"],mixins:[c.getByName("notification")],data(){return{open:!1}},watch:{open(){this.open&&this.$nextTick(()=>{this.$refs.button.$el.focus()})}},created(){this.createdComponent()},methods:{createdComponent(){document.addEventListener("keydown",e=>{(e.key==="Alt"||e.key==="c"&&e.altKey)&&e.preventDefault()})},openModal(){this.acl.can("system.clear_cache")&&(this.open=!0)},closeModal(){this.open=!1},clearCache(){this.createNotificationInfo({message:this.$tc("sw-settings-cache.notifications.clearCache.started")}),this.cacheApiService.clear().then(()=>{this.createNotificationSuccess({message:this.$tc("sw-settings-cache.notifications.clearCache.success")})}).catch(()=>{this.createNotificationError({message:this.$tc("sw-settings-cache.notifications.clearCache.error")})}),this.open=!1}}};export{a as default};
