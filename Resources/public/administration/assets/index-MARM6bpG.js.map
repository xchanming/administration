{"version":3,"file":"index-MARM6bpG.js","sources":["../../../app/administration/src/module/sw-settings-tax/component/sw-settings-tax-rule-type-individual-states-cell/sw-settings-tax-rule-type-individual-states-cell.html.twig","../../../app/administration/src/module/sw-settings-tax/component/sw-settings-tax-rule-type-individual-states-cell/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_tax_rule_type_individual_states_cell %}\n<span>\n    {{ taxRule.type.typeName }}:\n    <template v-if=\"individualStates\">\n        {{ individualStates.join(', ') }}\n    </template>\n    <template v-else>\n        -\n    </template>\n</span>\n{% endblock %}\n","import template from './sw-settings-tax-rule-type-individual-states-cell.html.twig';\n\n/**\n * @package checkout\n */\n\nconst { Context } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['repositoryFactory'],\n\n    props: {\n        taxRule: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            individualStates: null,\n        };\n    },\n\n    computed: {\n        stateRepository() {\n            return this.repositoryFactory.create('country_state');\n        },\n    },\n\n    watch: {\n        'taxRule.data.states'() {\n            this.loadStates();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.loadStates();\n        },\n        loadStates() {\n            if (!this.taxRule.data || !this.taxRule.data.states || !this.taxRule.data.states.length) {\n                this.individualStates = [];\n                return;\n            }\n\n            const criteria = new Criteria(1, 25);\n            criteria.setIds(this.taxRule.data.states);\n\n            this.stateRepository.search(criteria, Context.api).then((states) => {\n                this.individualStates = states.map((state) => state.name);\n            });\n        },\n    },\n};\n"],"names":["template","Context","Criteria","index","criteria","states","state"],"mappings":"AAAA,MAAeA,EAAA,2OCMT,CAAE,QAAAC,CAAS,EAAG,OACd,CAAE,SAAAC,CAAQ,EAAK,OAAO,KAGbC,EAAA,CACX,SAAAH,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,mBAAmB,EAE5B,MAAO,CACH,QAAS,CACL,KAAM,OACN,SAAU,EACb,CACJ,EAED,MAAO,CACH,MAAO,CACH,iBAAkB,IAC9B,CACK,EAED,SAAU,CACN,iBAAkB,CACd,OAAO,KAAK,kBAAkB,OAAO,eAAe,CACvD,CACJ,EAED,MAAO,CACH,uBAAwB,CACpB,KAAK,WAAU,CAClB,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,WAAU,CAClB,EACD,YAAa,CACT,GAAI,CAAC,KAAK,QAAQ,MAAQ,CAAC,KAAK,QAAQ,KAAK,QAAU,CAAC,KAAK,QAAQ,KAAK,OAAO,OAAQ,CACrF,KAAK,iBAAmB,GACxB,MACH,CAED,MAAMI,EAAW,IAAIF,EAAS,EAAG,EAAE,EACnCE,EAAS,OAAO,KAAK,QAAQ,KAAK,MAAM,EAExC,KAAK,gBAAgB,OAAOA,EAAUH,EAAQ,GAAG,EAAE,KAAMI,GAAW,CAChE,KAAK,iBAAmBA,EAAO,IAAKC,GAAUA,EAAM,IAAI,CACxE,CAAa,CACJ,CACJ,CACL"}