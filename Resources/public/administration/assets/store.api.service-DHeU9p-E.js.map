{"version":3,"file":"store.api.service-DHeU9p-E.js","sources":["../../../app/administration/src/core/service/api/store.api.service.ts"],"sourcesContent":["import type { AxiosInstance } from 'axios';\nimport type { LoginService } from '../login.service';\nimport ApiService from '../api.service';\n\ninterface StoreParams {\n    language: string | null;\n    [key: string]: unknown;\n}\n\ninterface UserInfo {\n    avatarUrl: string;\n    email: string;\n    name: string;\n}\n\ninterface UserInfoResponse {\n    userInfo: UserInfo | null;\n}\n\n/**\n * @private\n * @package services-settings\n * Gateway for the API end point \"store\"\n */\nexport default class StoreApiService extends ApiService {\n    constructor(httpClient: AxiosInstance, loginService: LoginService, apiEndpoint = 'store') {\n        super(httpClient, loginService, apiEndpoint, 'application/json');\n\n        this.name = 'storeService';\n    }\n\n    public async login(cicadaId: string, password: string) {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        await this.httpClient.post(`/_action/${this.getApiBasePath()}/login`, { cicadaId, password }, { params, headers });\n    }\n\n    public async checkLogin() {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        const { data } = await this.httpClient.post<UserInfoResponse>(\n            `/_action/${this.getApiBasePath()}/checklogin`,\n            {},\n            { params, headers },\n        );\n\n        return data;\n    }\n\n    public async logout() {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        await this.httpClient.post(`/_action/${this.getApiBasePath()}/logout`, {}, { params, headers });\n    }\n\n    public async getUpdateList(): Promise<unknown> {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return ApiService.handleResponse(\n            await this.httpClient.get<unknown>(`/_action/${this.getApiBasePath()}/updates`, { params, headers }),\n        );\n    }\n\n    public async getLicenseViolationList(): Promise<unknown> {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return ApiService.handleResponse(\n            await this.httpClient.post<unknown>(`/_action/${this.getApiBasePath()}/plugin/search`, null, {\n                params,\n                headers,\n            }),\n        );\n    }\n\n    private getBasicParams(additionalParams = {}): StoreParams {\n        const basicParams = {\n            language: localStorage.getItem('sw-admin-locale'),\n        };\n\n        return { ...basicParams, ...additionalParams };\n    }\n}\n\n/**\n * @private\n * @package services-settings\n */\nexport type { StoreApiService, UserInfo };\n"],"names":["StoreApiService","ApiService","httpClient","loginService","apiEndpoint","cicadaId","password","headers","params","data","additionalParams"],"mappings":"iHAwBA,MAAqBA,UAAwBC,CAAW,CACpD,YAAYC,EAA2BC,EAA4BC,EAAc,QAAS,CAChF,MAAAF,EAAYC,EAAcC,EAAa,kBAAkB,EAE/D,KAAK,KAAO,cAChB,CAEA,MAAa,MAAMC,EAAkBC,EAAkB,CAC7C,MAAAC,EAAU,KAAK,kBACfC,EAAS,KAAK,iBAEpB,MAAM,KAAK,WAAW,KAAK,YAAY,KAAK,eAAgB,CAAA,SAAU,CAAE,SAAAH,EAAU,SAAAC,CAAS,EAAG,CAAE,OAAAE,EAAQ,QAAAD,EAAS,CACrH,CAEA,MAAa,YAAa,CAChB,MAAAA,EAAU,KAAK,kBACfC,EAAS,KAAK,iBAEd,CAAE,KAAAC,CAAS,EAAA,MAAM,KAAK,WAAW,KACnC,YAAY,KAAK,eAAA,CAAgB,cACjC,CAAC,EACD,CAAE,OAAAD,EAAQ,QAAAD,CAAQ,CAAA,EAGf,OAAAE,CACX,CAEA,MAAa,QAAS,CACZ,MAAAF,EAAU,KAAK,kBACfC,EAAS,KAAK,iBAEpB,MAAM,KAAK,WAAW,KAAK,YAAY,KAAK,gBAAgB,UAAW,CAAC,EAAG,CAAE,OAAAA,EAAQ,QAAAD,CAAS,CAAA,CAClG,CAEA,MAAa,eAAkC,CACrC,MAAAA,EAAU,KAAK,kBACfC,EAAS,KAAK,iBAEpB,OAAOP,EAAW,eACd,MAAM,KAAK,WAAW,IAAa,YAAY,KAAK,eAAe,CAAC,WAAY,CAAE,OAAAO,EAAQ,QAAAD,CAAA,CAAS,CAAA,CAE3G,CAEA,MAAa,yBAA4C,CAC/C,MAAAA,EAAU,KAAK,kBACfC,EAAS,KAAK,iBAEpB,OAAOP,EAAW,eACd,MAAM,KAAK,WAAW,KAAc,YAAY,KAAK,eAAgB,CAAA,iBAAkB,KAAM,CACzF,OAAAO,EACA,QAAAD,CAAA,CACH,CAAA,CAET,CAEQ,eAAeG,EAAmB,GAAiB,CAKvD,MAAO,CAAE,GAJW,CAChB,SAAU,aAAa,QAAQ,iBAAiB,CAAA,EAG3B,GAAGA,EAChC,CACJ"}