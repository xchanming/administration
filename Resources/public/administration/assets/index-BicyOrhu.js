const o=`{% block sw_condition_value_content %} <div class="sw-condition-date-range sw-condition__condition-value"> {% block sw_condition_date_range_field_use_time %} <sw-single-select v-model:value="useTime" name="sw-field--useTime" size="medium" :options="selectValues" :disabled="disabled || undefined" :placeholder="$tc('global.sw-condition.condition.withTime')" show-clearable-button /> {% endblock %} {% block sw_condition_date_range_field_from_date %} <sw-datepicker v-model:value="fromDate" name="sw-field--fromDate" size="medium" required :date-type="isDateTime" :disabled="disabled || undefined" :placeholder="$tc('sw-datepicker.date.placeholder')" /> {% endblock %} {% block sw_condiiton_date_range_field_to_date %} <sw-datepicker v-model:value="toDate" name="sw-field--toDate" size="medium" required :date-type="isDateTime" :disabled="disabled || undefined" :placeholder="$tc('sw-datepicker.date.placeholder')" /> {% endblock %} </div> {% endblock %}`,{Component:i}=Shopware,{mapPropertyErrors:n}=i.getComponentHelper();i.extend("sw-condition-date-range","sw-condition-base",{template:o,computed:{selectValues(){return[{label:this.$tc("global.sw-condition.condition.withTime"),value:!0},{label:this.$tc("global.sw-condition.condition.withoutTime"),value:!1}]},useTime:{get(){return this.ensureValueExist(),typeof this.condition.value.useTime>"u"&&(this.condition.value={...this.condition.value,useTime:!1}),this.condition.value.useTime},set(e){this.ensureValueExist(),this.condition.value={...this.condition.value,useTime:e}}},fromDate:{get(){return this.ensureValueExist(),this.condition.value.fromDate||null},set(e){this.ensureValueExist();const t=this.isDateTime==="datetime"?e.replace(".000Z","+00:00"):e.concat("+00:00");this.condition.value={...this.condition.value,fromDate:t}}},toDate:{get(){return this.ensureValueExist(),this.condition.value.toDate||null},set(e){this.ensureValueExist();const t=this.isDateTime==="datetime"?e.replace(".000Z","+00:00"):e.concat("+00:00");this.condition.value={...this.condition.value,toDate:t}}},isDateTime(){return this.useTime?"datetime":"date"},...n("condition",["value.useTime","value.fromDate","value.toDate"]),currentError(){return this.conditionValueUseTimeError||this.conditionValueFromDateError||this.conditionValueToDateError}}});
