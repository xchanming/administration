{"version":3,"file":"index-x6acTqHL.js","sources":["../../../app/administration/src/module/sw-media/component/sw-media-modal-v2/sw-media-modal-v2.html.twig","../../../app/administration/src/module/sw-media/component/sw-media-modal-v2/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_media_modal_v2 %}\n<sw-modal\n    ref=\"swMediaModal\"\n    class=\"sw-media-modal-v2\"\n    variant=\"full\"\n    :title=\"$tc('sw-media.sw-media-modal-v2.titleModal')\"\n    @modal-close=\"onEmitModalClosed\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_modal_v2_content %}\n    <div class=\"sw-media-modal-v2__content\">\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_modal_v2_tabs %}\n        <sw-tabs\n            position-identifier=\"sw-media-modal\"\n            variant=\"minimal\"\n            :default-item=\"defaultTab\"\n            class=\"sw-media-modal-v2__tabs\"\n        >\n            <template #default=\"{ active }\">\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_modal_v2_tab_items %}\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_modal_v2_tab_item_library %}\n                <sw-tabs-item\n                    :name=\"tabNameLibrary\"\n                    :active-tab=\"active\"\n                    :disabled=\"hasUploads\"\n                >\n                    {{ $tc('sw-media.sw-media-modal-v2.labelTabItemLibrary') }}\n                </sw-tabs-item>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_modal_v2_tab_item_upload %}\n                <sw-tabs-item\n                    :name=\"tabNameUpload\"\n                    :active-tab=\"active\"\n                    @click=\"resetSelection\"\n                >\n                    {{ $tc('sw-media.sw-media-modal-v2.labelTabItemUpload') }}\n                </sw-tabs-item>\n                {% endblock %}\n                {% endblock %}\n            </template>\n\n            <template #content=\"{ active }\">\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_modal_v2_tab_content %}\n                <div class=\"sw-media-modal-v2__tab-content\">\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_media_modal_v2_tab_content_library %}\n                    <div\n                        v-show=\"active === tabNameLibrary\"\n                        class=\"sw-media-modal-v2__library-content\"\n                    >\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_media_modal_v2_navigation_and_search %}\n                        <div\n                            class=\"sw-media-modal-v2__breadcrumbs-and-search\"\n                            :class=\"{'sw-media-modal-v2__breadcrumbs-and-search--compact': compact}\"\n                        >\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_media_modal_v2_folder_breadcrumbs %}\n                            <sw-media-breadcrumbs\n                                v-model:currentFolderId=\"folderId\"\n                                :small=\"compact\"\n                            />\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_media_modal_v2_search_field %}\n                            <!-- Bound and updated manually to use debounced search term -->\n                            <sw-simple-search-field\n                                :value=\"term\"\n                                @search-term-change=\"onSearchTermChange\"\n                            />\n                            {% endblock %}\n                        </div>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_media_modal_v2_media_library %}\n                        <sw-media-library\n                            ref=\"mediaLibrary\"\n                            :selection=\"selection\"\n                            :folder-id=\"folderId\"\n                            :term=\"term\"\n                            :compact=\"compact\"\n                            :allow-multi-select=\"allowMultiSelect\"\n                            @update:selection=\"selection = $event\"\n                            @media-folder-change=\"folderId = $event\"\n                        />\n                        {% endblock %}\n                    </div>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_media_modal_v2_tab_content_upload %}\n                    <div\n                        v-show=\"active === tabNameUpload\"\n                        class=\"sw-media-modal-v2__uploads-content\"\n                    >\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_media_modal_v2_upload_component %}\n                        <sw-upload-listener\n                            :upload-tag=\"uploadTag\"\n                            @media-upload-add=\"onUploadsAdded\"\n                            @media-upload-finish=\"onUploadFinished\"\n                            @media-upload-fail=\"onUploadFailed\"\n                        />\n\n                        <sw-media-upload-v2\n                            class=\"sw-media-modal-v2__upload-container\"\n                            variant=\"regular\"\n                            :file-accept=\"fileAccept\"\n                            :upload-tag=\"uploadTag\"\n                            :default-folder=\"entityContext\"\n                            :target-folder-id=\"folderId\"\n                            :allow-multi-select=\"allowMultiSelect\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_media_modal_v2_uploaded_items %}\n                        <sw-media-grid\n                            :presentation=\"compact ? 'list-preview' : 'medium-preview'\"\n                            :class=\"{'sw-media-modal-v2__upload-media-grid--compact': compact }\"\n                        >\n                            <sw-media-media-item\n                                v-for=\"upload in uploads\"\n                                :key=\"`sw-media-modal-v2-upload-${upload.id}`\"\n                                :item=\"upload\"\n                                :show-context-menu-button=\"false\"\n                                :show-selection-indicator=\"allowMultiSelect\"\n                                :allow-multi-select=\"allowMultiSelect\"\n                                :selected=\"checkMediaItem(upload)\"\n                                :editable=\"false\"\n                                :is-list=\"compact\"\n                                @media-item-selection-remove=\"onMediaRemoveSelected\"\n                                @media-item-selection-add=\"onMediaAddSelected\"\n                                @media-item-click=\"onMediaItemSelect\"\n                            />\n                        </sw-media-grid>\n                        {% endblock %}\n                    </div>\n                    {% endblock %}\n                </div>\n            </template>\n            {% endblock %}\n        </sw-tabs>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_modal_v2_media_sidebar %}\n        <sw-media-sidebar\n            :items=\"selection\"\n            :current-folder-id=\"null\"\n            @media-sidebar-items-delete=\"onItemsDeleted\"\n            @media-sidebar-folder-items-dissolve=\"onMediaFoldersDissolved\"\n            @media-sidebar-items-move=\"refreshList\"\n            @media-item-selection-remove=\"onMediaRemoveSelected\"\n        />\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_modal_v2_modal_footer %}\n    <template #modal-footer>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_modal_v2_button_cancel %}\n        <sw-button @click=\"onEmitModalClosed\">\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_modal_v2_button_confirm_selection %}\n        <sw-button\n            variant=\"primary\"\n            @click=\"onEmitSelection\"\n        >\n            {{ $tc('sw-media.sw-media-modal-v2.labelButtonSaveSelection') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n","import template from './sw-media-modal-v2.html.twig';\nimport './sw-media-modal-v2.scss';\n\nconst { Context, Utils } = Cicada;\n\n/**\n * @event media-modal-selection-change EntityProxy[]\n * @event closeModal (void)\n * @package discovery\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'mediaService',\n    ],\n\n    emits: [\n        'modal-close',\n        'media-modal-selection-change',\n    ],\n\n    props: {\n        initialFolderId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        entityContext: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        defaultTab: {\n            type: String,\n            required: false,\n            validValues: [\n                'upload',\n                'library',\n            ],\n            default: 'library',\n            validator(value) {\n                return [\n                    'upload',\n                    'library',\n                ].includes(value);\n            },\n        },\n\n        allowMultiSelect: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        fileAccept: {\n            type: String,\n            required: false,\n            default: 'image/*',\n        },\n    },\n\n    data() {\n        return {\n            selection: [],\n            uploads: [],\n            folderId: this.initialFolderId,\n            currentFolder: null,\n            compact: false,\n            term: '',\n            id: Utils.createId(),\n            selectedMediaItem: {},\n        };\n    },\n\n    computed: {\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n        mediaFolderRepository() {\n            return this.repositoryFactory.create('media_folder');\n        },\n        tabNameUpload() {\n            return 'upload';\n        },\n\n        tabNameLibrary() {\n            return 'library';\n        },\n\n        hasUploads() {\n            return this.uploads.length > 0;\n        },\n\n        uploadTag() {\n            return `sw-media-modal-v2--${this.id}`;\n        },\n    },\n\n    watch: {\n        folderId() {\n            this.fetchCurrentFolder();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    beforeUnmount() {\n        this.beforeDestroyComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.fetchCurrentFolder();\n            this.addResizeListener();\n        },\n\n        mountedComponent() {\n            this.getComponentWidth();\n        },\n\n        beforeDestroyComponent() {\n            this.removeOnResizeListener();\n        },\n\n        async fetchCurrentFolder() {\n            if (!this.folderId) {\n                this.currentFolder = null;\n                return;\n            }\n\n            this.currentFolder = await this.mediaFolderRepository.get(this.folderId, Context.api);\n        },\n\n        addResizeListener() {\n            window.addEventListener('resize', this.getComponentWidth);\n        },\n\n        removeOnResizeListener() {\n            window.removeEventListener('resize', this.getComponentWidth);\n        },\n\n        getComponentWidth() {\n            const componentWidth = this.$el.getBoundingClientRect().width;\n            this.compact = componentWidth <= 900;\n        },\n\n        /*\n         * v-model\n         */\n        onEmitModalClosed() {\n            this.$emit('modal-close');\n        },\n\n        onEmitSelection() {\n            // emit media items only\n            const selectedMedia = this.selection.filter((selected) => {\n                return selected.getEntityName() === 'media';\n            });\n\n            this.$emit('media-modal-selection-change', selectedMedia);\n            this.onEmitModalClosed();\n        },\n\n        /*\n         * selection\n         */\n        refreshList() {\n            this.$refs.mediaLibrary.refreshList();\n        },\n\n        onMediaRemoveSelected({ item }) {\n            const index = this.selection.findIndex((selectedItem) => {\n                return item.id === selectedItem.id;\n            });\n            if (index === -1) {\n                return;\n            }\n\n            this.selection.splice(index, 1);\n        },\n\n        onMediaAddSelected({ item }) {\n            if (this.selection.includes(item)) {\n                return;\n            }\n\n            this.selection.push(item);\n        },\n\n        onMediaItemSelect({ item }) {\n            if (!this.allowMultiSelect) {\n                this.selection = [item];\n                this.selectedMediaItem = item;\n            }\n        },\n\n        resetSelection() {\n            this.selection.splice(0, this.selection.length);\n        },\n\n        onItemsDeleted(ids) {\n            this.onMediaFoldersDissolved(ids.folderIds);\n        },\n\n        onMediaFoldersDissolved(folderIds) {\n            if (!this.currentFolder) {\n                return;\n            }\n\n            if (\n                folderIds.some((dissolvedId) => {\n                    return dissolvedId === this.currentFolder.id;\n                })\n            ) {\n                this.folderId = this.currentFolder.parentId;\n            }\n\n            this.refreshList();\n        },\n\n        /*\n         * Media uploads\n         */\n        async onUploadsAdded() {\n            await this.mediaService.runUploads(this.uploadTag);\n        },\n\n        async onUploadFinished({ targetId }) {\n            const updatedMedia = await this.mediaRepository.get(targetId, Context.api);\n            this.selectedMediaItem = updatedMedia;\n\n            if (\n                !this.uploads.some((upload) => {\n                    return updatedMedia.id === upload.id;\n                })\n            ) {\n                this.uploads.push(updatedMedia);\n            }\n\n            if (this.allowMultiSelect) {\n                const foundSelectedItem = this.selection.some((selectedItem) => {\n                    return updatedMedia.id === selectedItem.id;\n                });\n                if (!foundSelectedItem) {\n                    this.selection.push(updatedMedia);\n                }\n            } else {\n                this.selection = [updatedMedia];\n            }\n        },\n\n        onUploadFailed(task) {\n            this.uploads = this.uploads.filter((selectedUpload) => {\n                return selectedUpload.id !== task.targetId;\n            });\n        },\n\n        selectMediaItem(upload) {\n            if (this.allowMultiSelect) {\n                return;\n            }\n\n            this.selectedMediaItem = upload;\n            this.selection = [upload];\n        },\n\n        checkMediaItem(upload) {\n            if (this.allowMultiSelect) {\n                return this.selection.includes(upload);\n            }\n\n            return upload.id === this.selectedMediaItem.id;\n        },\n\n        onSearchTermChange(searchTerm) {\n            this.term = searchTerm;\n        },\n    },\n};\n"],"names":["template","Context","Utils","index","value","componentWidth","selectedMedia","selected","item","selectedItem","ids","folderIds","dissolvedId","targetId","updatedMedia","upload","task","selectedUpload","searchTerm"],"mappings":"AAAA,MAAeA,EAAA,ulICGT,CAAE,QAAAC,EAAS,MAAAC,CAAO,EAAG,OAQZC,EAAA,CACX,SAAAH,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,oBACA,cACH,EAED,MAAO,CACH,cACA,8BACH,EAED,MAAO,CACH,gBAAiB,CACb,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EAED,cAAe,CACX,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EAED,WAAY,CACR,KAAM,OACN,SAAU,GACV,YAAa,CACT,SACA,SACH,EACD,QAAS,UACT,UAAUI,EAAO,CACb,MAAO,CACH,SACA,SACpB,EAAkB,SAASA,CAAK,CACnB,CACJ,EAED,iBAAkB,CACd,KAAM,QACN,SAAU,GAEV,QAAS,EACZ,EAED,WAAY,CACR,KAAM,OACN,SAAU,GACV,QAAS,SACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,UAAW,CAAE,EACb,QAAS,CAAE,EACX,SAAU,KAAK,gBACf,cAAe,KACf,QAAS,GACT,KAAM,GACN,GAAIF,EAAM,SAAU,EACpB,kBAAmB,CAAE,CACjC,CACK,EAED,SAAU,CACN,iBAAkB,CACd,OAAO,KAAK,kBAAkB,OAAO,OAAO,CAC/C,EACD,uBAAwB,CACpB,OAAO,KAAK,kBAAkB,OAAO,cAAc,CACtD,EACD,eAAgB,CACZ,MAAO,QACV,EAED,gBAAiB,CACb,MAAO,SACV,EAED,YAAa,CACT,OAAO,KAAK,QAAQ,OAAS,CAChC,EAED,WAAY,CACR,MAAO,sBAAsB,KAAK,EAAE,EACvC,CACJ,EAED,MAAO,CACH,UAAW,CACP,KAAK,mBAAkB,CAC1B,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,eAAgB,CACZ,KAAK,uBAAsB,CAC9B,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,mBAAkB,EACvB,KAAK,kBAAiB,CACzB,EAED,kBAAmB,CACf,KAAK,kBAAiB,CACzB,EAED,wBAAyB,CACrB,KAAK,uBAAsB,CAC9B,EAED,MAAM,oBAAqB,CACvB,GAAI,CAAC,KAAK,SAAU,CAChB,KAAK,cAAgB,KACrB,MACH,CAED,KAAK,cAAgB,MAAM,KAAK,sBAAsB,IAAI,KAAK,SAAUD,EAAQ,GAAG,CACvF,EAED,mBAAoB,CAChB,OAAO,iBAAiB,SAAU,KAAK,iBAAiB,CAC3D,EAED,wBAAyB,CACrB,OAAO,oBAAoB,SAAU,KAAK,iBAAiB,CAC9D,EAED,mBAAoB,CAChB,MAAMI,EAAiB,KAAK,IAAI,sBAAqB,EAAG,MACxD,KAAK,QAAUA,GAAkB,GACpC,EAKD,mBAAoB,CAChB,KAAK,MAAM,aAAa,CAC3B,EAED,iBAAkB,CAEd,MAAMC,EAAgB,KAAK,UAAU,OAAQC,GAClCA,EAAS,cAAe,IAAK,OACvC,EAED,KAAK,MAAM,+BAAgCD,CAAa,EACxD,KAAK,kBAAiB,CACzB,EAKD,aAAc,CACV,KAAK,MAAM,aAAa,aAC3B,EAED,sBAAsB,CAAE,KAAAE,GAAQ,CAC5B,MAAML,EAAQ,KAAK,UAAU,UAAWM,GAC7BD,EAAK,KAAOC,EAAa,EACnC,EACGN,IAAU,IAId,KAAK,UAAU,OAAOA,EAAO,CAAC,CACjC,EAED,mBAAmB,CAAE,KAAAK,GAAQ,CACrB,KAAK,UAAU,SAASA,CAAI,GAIhC,KAAK,UAAU,KAAKA,CAAI,CAC3B,EAED,kBAAkB,CAAE,KAAAA,GAAQ,CACnB,KAAK,mBACN,KAAK,UAAY,CAACA,CAAI,EACtB,KAAK,kBAAoBA,EAEhC,EAED,gBAAiB,CACb,KAAK,UAAU,OAAO,EAAG,KAAK,UAAU,MAAM,CACjD,EAED,eAAeE,EAAK,CAChB,KAAK,wBAAwBA,EAAI,SAAS,CAC7C,EAED,wBAAwBC,EAAW,CAC1B,KAAK,gBAKNA,EAAU,KAAMC,GACLA,IAAgB,KAAK,cAAc,EAC7C,IAED,KAAK,SAAW,KAAK,cAAc,UAGvC,KAAK,YAAW,EACnB,EAKD,MAAM,gBAAiB,CACnB,MAAM,KAAK,aAAa,WAAW,KAAK,SAAS,CACpD,EAED,MAAM,iBAAiB,CAAE,SAAAC,GAAY,CACjC,MAAMC,EAAe,MAAM,KAAK,gBAAgB,IAAID,EAAUZ,EAAQ,GAAG,EACzE,KAAK,kBAAoBa,EAGpB,KAAK,QAAQ,KAAMC,GACTD,EAAa,KAAOC,EAAO,EACrC,GAED,KAAK,QAAQ,KAAKD,CAAY,EAG9B,KAAK,iBACqB,KAAK,UAAU,KAAML,GACpCK,EAAa,KAAOL,EAAa,EAC3C,GAEG,KAAK,UAAU,KAAKK,CAAY,EAGpC,KAAK,UAAY,CAACA,CAAY,CAErC,EAED,eAAeE,EAAM,CACjB,KAAK,QAAU,KAAK,QAAQ,OAAQC,GACzBA,EAAe,KAAOD,EAAK,QACrC,CACJ,EAED,gBAAgBD,EAAQ,CAChB,KAAK,mBAIT,KAAK,kBAAoBA,EACzB,KAAK,UAAY,CAACA,CAAM,EAC3B,EAED,eAAeA,EAAQ,CACnB,OAAI,KAAK,iBACE,KAAK,UAAU,SAASA,CAAM,EAGlCA,EAAO,KAAO,KAAK,kBAAkB,EAC/C,EAED,mBAAmBG,EAAY,CAC3B,KAAK,KAAOA,CACf,CACJ,CACL"}