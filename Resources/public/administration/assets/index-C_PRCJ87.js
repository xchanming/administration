const e='{% block sw_condition_value_content %} <div class="sw-condition-line-item-with-quantity"> {% block sw_condition_line_item_with_quantity_field_product %} <sw-entity-single-select v-model:value="id" name="sw-field--id" entity="product" :disabled="disabled || undefined" :value="initialProduct" size="medium" advanced-selection-component="sw-advanced-selection-product" show-clearable-button /> {% endblock %} {% block sw_condition_line_item_with_quantity_field_operator %} <sw-condition-operator-select v-bind="{ operators, condition }" :plural="matchesAll" :disabled="disabled || undefined" /> {% endblock %} {% block sw_condition_line_item_with_quantity_field_quantity %} <sw-number-field v-model:value="quantity" name="sw-field--quantity" :disabled="disabled || undefined" size="medium" :step="1" /> {% endblock %} </div> {% endblock %}',{Component:i}=Cicada,{mapPropertyErrors:n}=i.getComponentHelper();i.extend("sw-condition-line-item-with-quantity","sw-condition-base-line-item",{template:e,inject:["repositoryFactory"],data(){return{initialProduct:null}},computed:{operators(){return this.conditionDataProviderService.getOperatorSet("number")},productRepository(){return this.repositoryFactory.create("product")},quantity:{get(){return this.ensureValueExist(),this.condition.value.quantity},set(t){this.ensureValueExist(),this.condition.value={...this.condition.value,quantity:t}}},id:{get(){return this.ensureValueExist(),this.condition.value.id},set(t){this.ensureValueExist(),this.condition.value={...this.condition.value,id:t}}},...n("condition",["value.operator","value.quantity","value.id"]),currentError(){return this.conditionValueOperatorError||this.conditionValueQuantityError||this.conditionValueIdError}}});
//# sourceMappingURL=index-C_PRCJ87.js.map
