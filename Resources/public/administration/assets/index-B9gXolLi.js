const r=`{% block sw_settings_snippet_detail %} <sw-page class="sw-settings-snippet-detail"> {% block sw_settings_snippet_detail_smart_bar %} <template #smart-bar-back> <router-link class="smart-bar__back-btn" :to="backPath" :style="{ 'color': moduleData.color }" > <sw-icon name="regular-chevron-left" small /> <sw-icon v-if="moduleData && moduleData.icon" :name="moduleData.icon" small /> </router-link> </template> {% endblock %} {% block sw_settings_snippet_detail_header %} <template #smart-bar-header> <h2 v-if="translationKey"> {{ translationKey }} </h2> <h2 v-else> {{ $tc('sw-settings-snippet.detail.textHeadline') }} </h2> </template> {% endblock %} {% block sw_settings_snippet_detail_actions %} <template #smart-bar-actions> {% block sw_settings_snippet_detail_actions_abort %} <sw-button :disabled="isLoading" :router-link="backPath" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_settings_snippet_detail_actions_save %} <sw-button-process v-tooltip="getNoPermissionsTooltip('snippet.editor')" class="sw-snippet-detail__save-action" :is-loading="isLoading" :process-success="isSaveSuccessful" :disabled="!acl.can('snippet.editor') || isLoading || !translationKey || !isSaveable" variant="primary" @update:process-success="saveFinish" @click.prevent="onSave" > {{ $tc('sw-settings-snippet.detail.buttonSave') }} </sw-button-process> {% endblock %} </template> {% endblock %} {% block sw_settings_snippet_detail_content %} <template #content> <sw-card-view> {% block sw_settings_snippet_set_detail_card %} <div class="sw-settings-snippet-set-detail-card"> {% block sw_settings_snippet_set_detail_card_information %} <sw-card position-identifier="sw-settings-snippet-detail-information" :title="$tc('sw-settings-snippet.detail.cardGeneralTitle')" :is-loading="isLoading" > <div class="snippet-general-card"> {% block sw_settings_snippet_set_detail_card_information_key %} <sw-text-field v-model:value="translationKey" v-tooltip.bottom="getNoPermissionsTooltip('snippet.editor')" name="sw-field--translationKey" :label="$tc('sw-settings-snippet.detail.labelName')" :placeholder="$tc('sw-settings-snippet.detail.labelNamePlaceholder')" :disabled="!(isCreate || isAddedSnippet)" :error="invalidKeyError" @update:value="onChange" /> {% endblock %} </div> </sw-card> {% endblock %} {% block sw_settings_snippet_set_detail_card_snippets %} <sw-card position-identifier="sw-settings-snippet-detail-snippets" :title="$tc('sw-settings-snippet.detail.cardSnippetSetsTitle')" :is-loading="isLoading || isLoadingSnippets" > <div class="snippet-overview-card"> {% block sw_settings_snippet_set_detail_card_snippets_fields %} <sw-text-field v-for="(snippet, index) in snippets" :key="snippet.setId" v-model:value="snippet.value" v-tooltip.bottom="getNoPermissionsTooltip('snippet.editor')" name="sw-field--snippet-value" :class="\`sw-settings-snippet-detail__translation-field--\${index}\`" :disabled="!acl.can('snippet.editor') || isLoadingSnippets" :label="$tc('sw-settings-snippet.detail.labelContent', { name: sets.get(snippet.setId).name }, 0)" :placeholder="snippet.origin || $tc('sw-settings-snippet.general.placeholderValue')" @update:value="onChange" /> {% endblock %} </div> </sw-card> {% endblock %} </div> {% endblock %} </sw-card-view> </template> {% endblock %} </sw-page> {% endblock %}`,{Mixin:o,Data:{Criteria:a}}=Shopware,l=Shopware.Classes.ShopwareError,p=Shopware.Utils,d={template:r,inject:["snippetSetService","repositoryFactory","acl"],mixins:[o.getByName("notification")],data(){return{isLoading:!0,isLoadingSnippets:!0,isCreate:!1,isAddedSnippet:!1,isSaveable:!0,isInvalidKey:!1,queryIds:this.$route.query.ids,page:this.$route.query.page,limit:this.$route.query.limit,moduleData:this.$route.meta.$module,translationKey:"",translationKeyOrigin:"",snippets:[],sets:{},isSaveSuccessful:!1,pushParams:null}},metaInfo(){return{title:this.$createTitle(this.identifier)}},computed:{identifier(){return this.translationKey},snippetRepository(){return this.repositoryFactory.create("snippet")},snippetSetRepository(){return this.repositoryFactory.create("snippet_set")},snippetSetCriteria(){const e=new a(1,null);return e.addSorting(a.sort("name","ASC")),e},backPath(){var e,t;return((t=(e=this.$route.query)==null?void 0:e.ids)==null?void 0:t.length)>0?{name:"sw.settings.snippet.list",query:{ids:this.$route.query.ids,limit:this.$route.query.limit,page:this.$route.query.page}}:{name:"sw.settings.snippet.index"}},invalidKeyError(){return this.isInvalidKey?new l({code:"DUPLICATED_SNIPPET_KEY",parameters:{key:this.translationKey}}):null},currentAuthor:{get(){return this._currentAuthor||`user/${Shopware.Store.get("session").currentUser.username}`}}},created(){this.createdComponent()},methods:{createdComponent(){this.translationKeyOrigin=this.$route.params.key,this.prepareContent()},prepareContent(){this.isLoading=!0,!this.$route.params.key&&!this.isCreate&&this.onNewKeyRedirect(),this.translationKey=this.$route.params.key||"",this.snippetSetRepository.search(this.snippetSetCriteria).then(e=>{this.sets=e,this.isLoadingSnippets=!0,this.initializeSnippet()}).finally(()=>{this.isLoading=!1})},initializeSnippet(){this.snippets=this.createSnippetDummy(),this.getCustomList().then(e=>{if(!e.total){this.isAddedSnippet=!0;return}this.applySnippetsToDummies(e.data[this.translationKey])}).finally(()=>{this.isLoadingSnippets=!1})},applySnippetsToDummies(e){this.snippets.forEach(s=>{const i=e.find(n=>s.setId===n.setId);return i&&(s.author=i.author,s.id=i.id,s.value=i.value,s.origin=i.origin,s.translationKey=i.translationKey,s.setId=i.setId,i.id&&(s._isNew=!1)),s}),this.isAddedSnippet=e.some(s=>s.author.startsWith("user/")||s.author==="")},createSnippetDummy(){const e=[];return this.sets.forEach(t=>{const s=this.snippetRepository.create();s.author=this.currentAuthor,s.id=null,s.value=null,s.origin=null,s.translationKey=this.translationKey,s.setId=t.id,e.push(s)}),e},saveFinish(){this.isSaveSuccessful=!1,this.$router.push({name:"sw.settings.snippet.detail",params:this.pushParams,query:{ids:this.queryIds,page:this.page,limit:this.limit}})},onSave(){const e=[];if(this.isSaveSuccessful=!1,this.isLoading=!0,this.isSaveable=this.checkIsSaveable(),!this.isSaveable){this.isLoading=!1,this.createNotificationError({message:this.$tc("sw-settings-snippet.detail.messageSaveError",{key:this.translationKey},0)});return}this.snippets.forEach(t=>{t.author||(t.author=this.currentAuthor),(!t.hasOwnProperty("value")||t.value===null)&&(t.value=t.origin),t.translationKey!==this.translationKey?(t.translationKey=this.translationKey,this.$route.params.key=this.translationKey,this.translationKeyOrigin=this.translationKey,e.push(this.snippetRepository.save(t))):t.origin!==t.value?e.push(this.snippetRepository.save(t)):t.hasOwnProperty("id")&&t.id!==null&&e.push(this.snippetRepository.delete(t.id))}),this.snippets=[],Promise.all(e).then(()=>{this.onNewKeyRedirect(!0),this.prepareContent(),this.isLoading=!1,this.isSaveSuccessful=!0}).catch(t=>{let s="";this.isLoading=!1,t.response.data.errors.length>0&&(s=`<br/>Error Message: "${t.response.data.errors[0].detail}"`),this.createNotificationError({message:this.$tc("sw-settings-snippet.detail.messageSaveError",{key:this.translationKey},0)+s})})},onChange(){if(!this.translationKey||this.translationKey.trim().length<=0){this.isSaveable=!1,this.isInvalidKey=!0;return}this.isInvalidKey=!1,this.doChange()},doChange:p.debounce(function(){this.getCustomList().then(t=>{if(this.isSaveable=!1,!t.total||Object.keys(t.data)[0]===this.translationKeyOrigin){this.isSaveable=this.checkIsSaveable();return}this.isInvalidKey=!0,this.isSaveable=!1}),this.isSaveable&&(this.isCreate||this.isAddedSnippet)&&(this.translationKey=this.translationKey.trim())},1e3),onNewKeyRedirect(e=!1){this.isSaveSuccessful=!0;const t={key:this.translationKey};e&&(t.origin=this.translationKey),this.isCreate=!1,this.pushParams=t},getCustomList(){return this.snippetSetService.getCustomList(1,25,{translationKey:[this.translationKey]})},checkIsSaveable(){let e=0;return this.snippets.forEach(t=>{t.value!==null&&(this.translationKey.trim()!==this.translationKeyOrigin&&(e+=1),t.value.trim().length>=0&&(e+=1))}),e>0},getNoPermissionsTooltip(e,t=!0){return{showDelay:300,appearance:"dark",showOnDisabledElements:t,disabled:this.acl.can(e),message:this.$tc("sw-privileges.tooltip.warning")}}}};export{d as default};
