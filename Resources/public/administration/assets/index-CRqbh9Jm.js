const n='{% block sw_condition_value_before_content %} <sw-single-select v-if="allowMatchesAll" v-model:value="matchesAll" name="sw-field--matchesAll" class="sw-condition-base-line-item__matches-all" size="medium" :options="matchesAllOptions" required /> {% endblock %}',{Component:o}=Shopware,{EntityCollection:s}=Shopware.Data;o.extend("sw-condition-base-line-item","sw-condition-base",{template:n,inject:["feature","insertNodeIntoTree","removeNodeFromTree","createCondition","childAssociationField","repositoryFactory","conditionScopes","unwrapAllLineItemsCondition"],props:{parentCondition:{type:Object,required:!1,default:null}},computed:{ruleConditionRepository(){return this.repositoryFactory.create("rule_condition")},allowMatchesAll(){return this.conditionScopes?this.conditionScopes.includes("cart"):!0},matchesAllOptions(){return[{value:!1,label:this.$tc("global.sw-condition.condition.lineItemCondition.any")},{value:!0,label:this.$tc("global.sw-condition.condition.lineItemCondition.all")}]},matchesAll:{get(){return this.parentCondition&&this.parentCondition.type==="allLineItemsContainer"},set(t){if(t&&this.parentCondition.type!=="allLineItemsContainer"){this.wrapCondition();return}!t&&this.parentCondition.type==="allLineItemsContainer"&&this.unwrapAllLineItemsCondition(this.condition)}}},methods:{wrapCondition(){const t=this.createEntity(this.condition);this.removeNodeFromTree(this.parentCondition,this.condition),this.insertNodeIntoTree(this.parentCondition,this.createCondition({type:"allLineItemsContainer",value:{},[this.childAssociationField]:new s(this.condition[this.childAssociationField].source,this.condition[this.childAssociationField].entity,this.condition[this.childAssociationField].context,null,[t])},this.parentCondition.id,this.condition.position))},createEntity(t){const e=this.ruleConditionRepository.create();return Object.keys(t).forEach(i=>{i!=="id"&&(e[i]=t[i])}),e}}});
