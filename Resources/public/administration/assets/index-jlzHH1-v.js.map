{"version":3,"file":"index-jlzHH1-v.js","sources":["../../../app/administration/src/module/sw-settings-product-feature-sets/component/sw-settings-product-feature-sets-values-card/sw-settings-product-feature-sets-values-card.html.twig","../../../app/administration/src/module/sw-settings-product-feature-sets/component/sw-settings-product-feature-sets-values-card/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_product_feature_set_card %}\n<sw-card\n    :title=\"$tc('sw-settings-product-feature-sets.valuesCard.cardTitle')\"\n    class=\"sw-settings-product-feature-sets-values-card\"\n    position-identifier=\"sw-settings-product-feature-sets-values-card\"\n    :class=\"valuesCardClasses\"\n    :is-loading=\"isLoading || valuesLoading || cardLoading\"\n>\n\n    <template #grid>\n        <div v-if=\"!valuesEmpty && !disabled\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_feature_set_toolbar %}\n            <div class=\"sw-product-feature-set__toolbar\">\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_feature_set_toolbar_container %}\n                <sw-container\n                    columns=\"1fr 32px minmax(100px, 200px)\"\n                    gap=\"0 10px\"\n                >\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_feature_set_toolbar_search %}\n                    <sw-simple-search-field\n                        v-model:value=\"term\"\n                        size=\"small\"\n                        variant=\"form\"\n                        :disabled=\"!allowEdit || undefined\"\n                        @search-term-change=\"onSearch\"\n                    />\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_feature_set_toolbar_delete %}\n                    <sw-button\n                        :disabled=\"deleteButtonDisabled || !allowEdit || undefined\"\n                        square\n                        size=\"small\"\n                        class=\"sw-product-feature-set__delete-button\"\n                        @click=\"onDeleteFields\"\n                    >\n                        <sw-icon\n                            name=\"regular-trash\"\n                            small\n                        />\n                    </sw-button>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_feature_set_toolbar_add %}\n                    <sw-container>\n                        <sw-button\n                            :disabled=\"isLoading || !allowEdit || undefined\"\n                            variant=\"ghost\"\n                            size=\"small\"\n                            class=\"sw-product-feature-set__add-button\"\n                            @click=\"onAddField\"\n                        >\n                            {{ $tc('sw-settings-product-feature-sets.valuesCard.labelCreateNew') }}\n                        </sw-button>\n                    </sw-container>\n                    {% endblock %}\n\n                </sw-container>\n                {% endblock %}\n\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_feature_set_card_grid %}\n            <sw-data-grid\n                :data-source=\"values\"\n                :columns=\"getColumns()\"\n                :show-selection=\"allowEdit\"\n                :show-actions=\"false\"\n                :is-loading=\"isLoading\"\n                identifier=\"sw-product-feature-set-grid\"\n                @selection-change=\"onGridSelectionChanged\"\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_product_feature_set_card_grid_column_name %}\n                <template #column-name=\"{ item }\">\n                    {{ featureGridTranslationService.getNameTranslation(item) }}\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_product_feature_set_card_grid_column_type %}\n                <template #column-type=\"{ item }\">\n                    {{ featureGridTranslationService.getTypeTranslation(item) }}\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_product_feature_set_card_grid_column_position %}\n                <template #column-position=\"{ item }\">\n                    <sw-data-grid-column-position\n                        ref=\"columnPosition\"\n                        v-model:value=\"values\"\n                        :show-value=\"false\"\n                        :item=\"item\"\n                        :disabled=\"!allowEdit || undefined\"\n                        @position-changed=\"onPositionChange\"\n                    />\n                </template>\n                {% endblock %}\n\n            </sw-data-grid>\n            {% endblock %}\n\n        </div>\n    </template>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_feature_set_card_empty_state %}\n    <template v-if=\"valuesEmpty || disabled\">\n\n        <div class=\"sw-settings-product-feature-set-card__empty-state\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_feature_set_card_empty_state_image %}\n            <img\n                :src=\"assetFilter('administration/static/img/empty-states/settings-empty-state.svg')\"\n                alt=\"\"\n            >\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_feature_set_card_empty_state_label %}\n            <div class=\"sw-settings-product-feature-set-card__empty-state--label\">\n                <p v-if=\"disabled\">\n                    {{ $tc('sw-settings-product-feature-sets.valuesCard.createStateDescription') }}\n                </p>\n                <p v-else>\n                    {{ $tc('sw-settings-product-feature-sets.valuesCard.emptyStateDescription') }}\n                </p>\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_feature_set_card_empty_state_button %}\n            <sw-button\n                variant=\"ghost\"\n                size=\"small\"\n                :disabled=\"disabled || undefined\"\n                @click=\"showModal = true\"\n            >\n                {{ $tc('sw-settings-product-feature-sets.valuesCard.labelCreateNew') }}\n            </sw-button>\n            {% endblock %}\n        </div>\n\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_feature_set_card_grid_column_modal %}\n    <sw-settings-product-feature-sets-modal\n        v-if=\"showModal\"\n        :product-feature-set=\"productFeatureSet\"\n        @modal-close=\"onModalClose\"\n    />\n    {% endblock %}\n\n</sw-card>\n{% endblock %}\n","/**\n * @package inventory\n */\n// eslint-disable-next-line max-len\nimport FeatureGridTranslationService from 'src/module/sw-settings-product-feature-sets/service/feature-grid-translation.service';\nimport template from './sw-settings-product-feature-sets-values-card.html.twig';\nimport './sw-settings-product-feature-sets-values-card.scss';\n\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['repositoryFactory'],\n\n    props: {\n        productFeatureSet: {\n            type: Object,\n            required: true,\n        },\n        isLoading: {\n            type: Boolean,\n            required: true,\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        allowEdit: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n    },\n\n    data() {\n        return {\n            valuesLoading: false,\n            cardLoading: false,\n            values: [],\n            selection: null,\n            deleteButtonDisabled: true,\n            term: '',\n            showModal: false,\n            currentValue: null,\n            translationService: null,\n        };\n    },\n\n    computed: {\n        productFeatureSetRepository() {\n            return this.repositoryFactory.create('product_feature_set');\n        },\n\n        propertyGroupRepository() {\n            return this.repositoryFactory.create('property_group');\n        },\n\n        customFieldRepository() {\n            return this.repositoryFactory.create('custom_field');\n        },\n\n        valuesEmpty() {\n            return this.values.length === 0;\n        },\n\n        valuesCardClasses() {\n            return {\n                'is--empty': this.valuesEmpty,\n            };\n        },\n\n        productFeatureSetCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(Criteria.equals('product_feature_set.id', this.productFeatureSet.id));\n\n            return criteria;\n        },\n\n        featureGridTranslationService() {\n            if (this.translationService === null) {\n                // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n                this.translationService = new FeatureGridTranslationService(\n                    this,\n                    this.propertyGroupRepository,\n                    this.customFieldRepository,\n                );\n            }\n\n            return this.translationService;\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.getList();\n        },\n\n        onAddField() {\n            this.onShowFeatureModal();\n        },\n\n        onGridSelectionChanged(selection, selectionCount) {\n            this.selection = selection;\n            this.deleteButtonDisabled = selectionCount <= 0;\n        },\n\n        onSearch() {\n            this.doSearch();\n        },\n\n        doSearch() {\n            if (!this.term) {\n                this.getList();\n            }\n\n            this.values = this.productFeatureSet.features.filter((item) => {\n                return item.name.match(this.term) || item.type.match(this.term);\n            });\n        },\n\n        getList() {\n            this.valuesLoading = true;\n            this.values = [];\n\n            if (this.productFeatureSet.features) {\n                this.values = this.productFeatureSet.features;\n\n                if (this.term) {\n                    this.doSearch();\n                }\n            }\n\n            // Initially sort the features by position, further sorting will be handled by the grid component\n            this.values.sort((a, b) => a.position - b.position);\n\n            Promise.all([\n                this.featureGridTranslationService.fetchPropertyGroupEntities(this.values),\n                this.featureGridTranslationService.fetchCustomFieldEntities(this.values),\n            ]).then(() => {\n                this.valuesLoading = false;\n            });\n        },\n\n        onModalClose() {\n            this.showModal = false;\n            this.currentValue = null;\n            this.$nextTick(() => this.getList());\n        },\n\n        onShowFeatureModal() {\n            this.showModal = true;\n        },\n\n        onDeleteFields() {\n            if (this.selection) {\n                const deletedKeys = Object.keys(this.selection);\n\n                this.productFeatureSet.features = this.productFeatureSet.features.filter((feature) => {\n                    return !deletedKeys.includes(feature.id);\n                });\n\n                this.resetPositions();\n                this.getList();\n            }\n        },\n\n        onPositionChange(features) {\n            if (this.isCompatEnabled('INSTANCE_SET')) {\n                this.$set(this.productFeatureSet, 'features', features);\n            } else {\n                this.productFeatureSet.features = features;\n            }\n        },\n\n        resetPositions() {\n            this.productFeatureSet.features.forEach((feature, index) => {\n                feature.position = index + 1;\n            });\n        },\n\n        getColumns() {\n            return [\n                {\n                    property: 'name',\n                    label: 'sw-settings-product-feature-sets.valuesCard.labelValue',\n                    primary: true,\n                },\n                {\n                    property: 'type',\n                    label: 'sw-settings-product-feature-sets.valuesCard.labelType',\n                },\n                {\n                    property: 'position',\n                    label: 'sw-settings-product-feature-sets.valuesCard.labelPosition',\n                },\n            ];\n        },\n    },\n};\n"],"names":["template","Criteria","index","criteria","FeatureGridTranslationService","selection","selectionCount","item","a","b","deletedKeys","feature","features"],"mappings":"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"}