const a=`{% block sw_snippet_field %} <div class="sw-snippet-field"> <sw-text-field v-if="textField" v-bind="$attrs" :value="textValue" :type="fieldType" disabled /> <sw-textarea-field v-else-if="textareaField" v-bind="$attrs" :value="textValue" :type="fieldType" disabled /> <sw-loader v-if="isLoading" size="16px" /> <sw-icon v-else v-tooltip="{ message: $tc('global.sw-snippet-field.tooltip'), }" class="sw-snippet-field__icon" name="regular-globe-stand" small @click="openEditModal()" /> <sw-snippet-field-edit-modal v-if="showEditModal" :snippets="snippets" :snippet-sets="snippetSets" :translation-key="snippet" :field-type="fieldType" @modal-close="closeEditModal" @save="onSave" /> </div> {% endblock %}`,{Component:n,Data:{Criteria:s}}=Shopware;n.register("sw-snippet-field",{template:a,inject:["snippetSetService","repositoryFactory"],props:{snippet:{type:String,required:!0},fieldType:{type:String,required:!1,default:"text",validValues:["text","textarea"],validator(e){return["text","textarea"].includes(e)}}},data(){return{textValue:this.snippet,snippets:[],snippetSets:[],showEditModal:!1,isLoading:!1}},computed:{snippetSetRepository(){return this.repositoryFactory.create("snippet_set")},languageRepository(){return this.repositoryFactory.create("language")},languageCriteria(){const e=new s(1,25);return e.addFilter(s.equals("id",Shopware.Context.api.systemLanguageId)),e.addAssociation("locale"),e},textField(){return this.fieldType==="text"},textareaField(){return this.fieldType==="textarea"}},created(){this.createdComponent()},methods:{async createdComponent(){this.isLoading=!0;const e=await this.snippetSetService.getCustomList(1,void 0,{translationKey:[this.snippet]});e.total<1?this.snippets=[]:this.snippets=e.data[this.snippet],this.snippetSets=await this.snippetSetRepository.search(new s,Shopware.Context.api),await this.updatePlaceholderValueToSnippetTranslation(),this.isLoading=!1},async updatePlaceholderValueToSnippetTranslation(){if(this.snippets.length<1)return;const e=Shopware.Store.get("session").currentLocale;let t=this.getTranslationByLocale(e);if(t){this.textValue=t.value;return}const i=await this.getSystemDefaultLocale();if(t=this.getTranslationByLocale(i),t){this.textValue=t.value;return}t=this.getTranslationByLocale("en-GB"),t&&(this.textValue=t.value)},getTranslationByLocale(e){const t=this.snippetSets.find(i=>i.iso===e);return t?this.snippets.find(i=>i.setId===t.id&&i.value!==""):null},async getSystemDefaultLocale(){return(await this.languageRepository.search(this.languageCriteria,Shopware.Context.api)).first().locale.code},openEditModal(){this.showEditModal=!0},closeEditModal(){this.showEditModal=!1},onSave(){this.createdComponent(),this.closeEditModal()}}});
