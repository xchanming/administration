import{C as e}from"./channel-Cvr-E4M4.js";import{m as i}from"./main-BVD2thQ1.js";import"./administration-d9Z5Qnc-.js";const s=`{% block sw_settings_units_detail %} <sw-page class="sw-settings-units"> <template #smart-bar-actions> <sw-button-process class="sw-settings-units__create-action" variant="primary" :is-loading="isLoading" :process-success="isSaveSuccessful" :disabled="!acl.can('scale_unit.editor')" @click="onSave" > {{ $tc('global.default.save') }} </sw-button-process> </template> <template #language-switch> <sw-language-switch :disabled="unit === null || unit.isNew()" @on-change="onChangeLanguage" /> </template> <template #content> <sw-card-view> <sw-card v-if="!isLoading" position-identifier="sw-settings-units-content" > <sw-text-field v-model:value="unit.name" name="sw-field--unit-name" :label="$tc('sw-settings-units.detail.fieldLabels.name')" :error="unitNameError" required /> <sw-text-field v-model:value="unit.shortCode" name="sw-field--unit-shortCode" :label="$tc('sw-settings-units.detail.fieldLabels.shortCode')" :error="unitShortCodeError" required /> <sw-custom-field-set-renderer :entity="unit" :sets="customFieldSets" :disabled="!acl.can('unit.editor')" /> </sw-card> <sw-skeleton v-else /> </sw-card-view> </template> </sw-page> {% endblock %}`,{Component:a,Mixin:n}=Shopware,l=a.wrapComponentConfig({template:s,mixins:[n.getByName("notification")],inject:["repositoryFactory","acl"],props:{unitId:{type:String,required:!1,default:null}},computed:{unitRepository(){return this.repositoryFactory.create("unit")},customFieldSetRepository(){return this.repositoryFactory.create("custom_field_set")},customFieldSetCriteria(){const t=new e(1,null);return t.addFilter(e.equals("relations.entityName","unit")),t},...i("unit",["name","shortCode"])},data(){return{unit:null,isLoading:!0,isSaveSuccessful:!1,customFieldSets:[]}},watch:{unitId(){this.loadUnit()},isSaveSuccessful(t){t!==!1&&window.setTimeout(()=>{this.isSaveSuccessful=!1},800)}},created(){this.customFieldSetRepository.search(this.customFieldSetCriteria).then(t=>{if(this.customFieldSets=t,this.unitId!==null){this.loadUnit();return}this.unit=this.unitRepository.create(Shopware.Context.api),this.isLoading=!1}).catch(()=>{this.createNotificationError({message:this.$tc("sw-settings-units.notification.errorMessage")}),this.isLoading=!1})},methods:{loadUnit(){this.isLoading=!0,this.unitRepository.get(this.unitId,Shopware.Context.api).then(t=>{this.unit=t,this.isLoading=!1}).catch(t=>{this.createNotificationError({message:this.$tc(t.message)})})},onSave(){this.unit!==null&&(this.isLoading=!0,this.unitRepository.save(this.unit).then(()=>{var t;this.isSaveSuccessful=!0,this.$router.push({name:"sw.settings.units.detail",params:{id:((t=this.unit)==null?void 0:t.id)??""}}),this.isLoading=!1}).catch(()=>{this.createNotificationError({message:this.$tc("sw-settings-units.notification.errorMessage")}),this.isLoading=!1}))},onChangeLanguage(){this.loadUnit()}}});export{l as default};
