{"version":3,"file":"index-COwxXzCt.js","sources":["../../../app/administration/src/module/sw-first-run-wizard/view/sw-first-run-wizard-cicada-domain/sw-first-run-wizard-cicada-domain.html.twig","../../../app/administration/src/module/sw-first-run-wizard/view/sw-first-run-wizard-cicada-domain/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_first_run_wizard_cicada_domain %}\n<div class=\"sw-first-run-wizard-cicada-domain\">\n    <h3 class=\"headline\">\n        {{ $tc('sw-first-run-wizard.cicadaDomain.headline') }}\n    </h3>\n    <p\n        class=\"message\"\n        v-html=\"$tc('sw-first-run-wizard.cicadaDomain.message')\"\n    ></p>\n\n    <sw-switch-field\n        v-model:value=\"createShopDomain\"\n        :label=\"$tc('sw-first-run-wizard.cicadaDomain.labelCreateDomain')\"\n    />\n\n    <div v-if=\"createShopDomain\">\n        <sw-text-field\n            v-model:value=\"newShopDomain\"\n            name=\"newShopDomain\"\n            validation=\"required\"\n            :label=\"'Shop domain'\"\n        />\n        <sw-checkbox-field\n            v-model:value=\"testEnvironment\"\n            :label=\"$tc('sw-first-run-wizard.cicadaDomain.testEnvironment')\"\n        />\n    </div>\n    <div v-else-if=\"licenceDomains.length > 0\">\n        <sw-select-field\n            v-model:value=\"selectedShopDomain\"\n            label=\"Shop domain\"\n            placeholder=\"\"\n        >\n            <option\n                v-for=\"domain in licenceDomains\"\n                :key=\"domain.domain\"\n                :value=\"domain.domain\"\n            >\n                {{ domain.domain }}\n            </option>\n        </sw-select-field>\n    </div>\n    <div\n        v-if=\"domainError\"\n        class=\"sw-first-run-wizard-cicada-domain__error\"\n    >\n        <sw-alert\n            :title=\"domainError.title\"\n            variant=\"error\"\n            appearance=\"notification\"\n        >\n            {{ domainError.detail }}\n        </sw-alert>\n    </div>\n\n    <sw-loader v-if=\"isLoading\" />\n</div>\n{% endblock %}\n","import template from './sw-first-run-wizard-cicada-domain.html.twig';\nimport './sw-first-run-wizard-cicada-domain.scss';\n\n/**\n * @package checkout\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['firstRunWizardService'],\n\n    emits: [\n        'frw-set-title',\n        'buttons-update',\n        'frw-redirect',\n    ],\n\n    data() {\n        return {\n            licenceDomains: [],\n            selectedShopDomain: '',\n            createShopDomain: false,\n            newShopDomain: '',\n            testEnvironment: false,\n            domainError: null,\n            isLoading: false,\n        };\n    },\n\n    computed: {\n        domainToVerify() {\n            return this.createShopDomain ? this.newShopDomain : this.selectedShopDomain;\n        },\n\n        isDomainEmpty() {\n            return this.domainToVerify.length <= 0;\n        },\n\n        nextAction() {\n            if (Cicada.State.get('context').app.config.settings.disableExtensionManagement) {\n                return 'sw.first.run.wizard.index.finish';\n            }\n\n            return 'sw.first.run.wizard.index.store';\n        },\n    },\n\n    watch: {\n        isDomainEmpty() {\n            this.updateButtons();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n            this.updateButtons();\n            this.setTitle();\n\n            this.firstRunWizardService\n                .getLicenseDomains()\n                .then((response) => {\n                    const { items } = response;\n\n                    if (!items || items.length < 1) {\n                        return;\n                    }\n\n                    this.licenceDomains = items;\n                    this.selectedShopDomain = items[0].domain;\n                })\n                .finally(() => {\n                    if (this.licenceDomains.length <= 0) {\n                        this.createShopDomain = true;\n                    }\n                    this.isLoading = false;\n                });\n        },\n\n        setTitle() {\n            this.$emit('frw-set-title', this.$tc('sw-first-run-wizard.cicadaAccount.modalTitle'));\n        },\n\n        updateButtons() {\n            const buttonConfig = [\n                {\n                    key: 'back',\n                    label: this.$tc('sw-first-run-wizard.general.buttonBack'),\n                    position: 'left',\n                    variant: null,\n                    action: 'sw.first.run.wizard.index.cicada.account',\n                    disabled: false,\n                },\n                {\n                    key: 'next',\n                    label: this.$tc('sw-first-run-wizard.general.buttonNext'),\n                    position: 'right',\n                    variant: 'primary',\n                    action: this.verifyDomain.bind(this),\n                    disabled: this.isDomainEmpty,\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        verifyDomain() {\n            const { testEnvironment } = this;\n            const domain = this.domainToVerify;\n\n            this.domainError = null;\n\n            return this.firstRunWizardService\n                .verifyLicenseDomain({\n                    domain,\n                    testEnvironment,\n                })\n                .then(() => {\n                    this.$emit('frw-redirect', this.nextAction);\n                    return false;\n                })\n                .catch((error) => {\n                    const msg = error.response.data.errors.pop();\n\n                    this.domainError = msg;\n\n                    return true;\n                });\n        },\n    },\n};\n"],"names":["template","index","response","items","buttonConfig","testEnvironment","domain","error","msg"],"mappings":"AAAA,MAAeA,EAAA,4pCCOAC,EAAA,CACX,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,uBAAuB,EAEhC,MAAO,CACH,gBACA,iBACA,cACH,EAED,MAAO,CACH,MAAO,CACH,eAAgB,CAAE,EAClB,mBAAoB,GACpB,iBAAkB,GAClB,cAAe,GACf,gBAAiB,GACjB,YAAa,KACb,UAAW,EACvB,CACK,EAED,SAAU,CACN,gBAAiB,CACb,OAAO,KAAK,iBAAmB,KAAK,cAAgB,KAAK,kBAC5D,EAED,eAAgB,CACZ,OAAO,KAAK,eAAe,QAAU,CACxC,EAED,YAAa,CACT,OAAI,OAAO,MAAM,IAAI,SAAS,EAAE,IAAI,OAAO,SAAS,2BACzC,mCAGJ,iCACV,CACJ,EAED,MAAO,CACH,eAAgB,CACZ,KAAK,cAAa,CACrB,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,UAAY,GACjB,KAAK,cAAa,EAClB,KAAK,SAAQ,EAEb,KAAK,sBACA,kBAAmB,EACnB,KAAME,GAAa,CAChB,KAAM,CAAE,MAAAC,CAAO,EAAGD,EAEd,CAACC,GAASA,EAAM,OAAS,IAI7B,KAAK,eAAiBA,EACtB,KAAK,mBAAqBA,EAAM,CAAC,EAAE,OACvD,CAAiB,EACA,QAAQ,IAAM,CACP,KAAK,eAAe,QAAU,IAC9B,KAAK,iBAAmB,IAE5B,KAAK,UAAY,EACrC,CAAiB,CACR,EAED,UAAW,CACP,KAAK,MAAM,gBAAiB,KAAK,IAAI,8CAA8C,CAAC,CACvF,EAED,eAAgB,CACZ,MAAMC,EAAe,CACjB,CACI,IAAK,OACL,MAAO,KAAK,IAAI,wCAAwC,EACxD,SAAU,OACV,QAAS,KACT,OAAQ,2CACR,SAAU,EACb,EACD,CACI,IAAK,OACL,MAAO,KAAK,IAAI,wCAAwC,EACxD,SAAU,QACV,QAAS,UACT,OAAQ,KAAK,aAAa,KAAK,IAAI,EACnC,SAAU,KAAK,aAClB,CACjB,EAEY,KAAK,MAAM,iBAAkBA,CAAY,CAC5C,EAED,cAAe,CACX,KAAM,CAAE,gBAAAC,CAAiB,EAAG,KACtBC,EAAS,KAAK,eAEpB,YAAK,YAAc,KAEZ,KAAK,sBACP,oBAAoB,CACjB,OAAAA,EACA,gBAAAD,CACpB,CAAiB,EACA,KAAK,KACF,KAAK,MAAM,eAAgB,KAAK,UAAU,EACnC,GACV,EACA,MAAOE,GAAU,CACd,MAAMC,EAAMD,EAAM,SAAS,KAAK,OAAO,MAEvC,YAAK,YAAcC,EAEZ,EAC3B,CAAiB,CACR,CACJ,CACL"}