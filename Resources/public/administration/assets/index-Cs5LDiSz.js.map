{"version":3,"file":"index-Cs5LDiSz.js","sources":["../../../app/administration/src/module/sw-flow/component/modals/sw-flow-set-order-state-modal/sw-flow-set-order-state-modal.html.twig","../../../app/administration/src/module/sw-flow/component/modals/sw-flow-set-order-state-modal/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_flow_set_order_state_modal %}\n<sw-modal\n    class=\"sw-flow-set-order-state-modal\"\n    :title=\"$tc('sw-flow.modals.status.titleSetStatus')\"\n    :closable=\"false\"\n    @modal-close=\"onClose\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_set_order_state_modal_content %}\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_set_order_state_modal_payment_status %}\n    <sw-select-field\n        v-model:value=\"config.order_transaction\"\n        name=\"sw-field--config-order_transaction\"\n        class=\"sw-flow-set-order-state-modal__payment-status\"\n        :options=\"paymentOptions\"\n        :label=\"$tc('sw-flow.modals.status.labelPaymentStatus')\"\n        :placeholder=\"$tc('sw-flow.modals.status.placeholderPaymentStatus')\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_set_order_state_modal_delivery_status %}\n    <sw-select-field\n        v-model:value=\"config.order_delivery\"\n        name=\"sw-field--config-order_delivery\"\n        class=\"sw-flow-set-order-state-modal__delivery-status\"\n        :options=\"deliveryOptions\"\n        :label=\"$tc('sw-flow.modals.status.labelDeliveryStatus')\"\n        :placeholder=\"$tc('sw-flow.modals.status.placeholderDeliveryStatus')\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_set_order_state_modal_order_status %}\n    <sw-select-field\n        v-model:value=\"config.order\"\n        name=\"sw-field--config-order\"\n        class=\"sw-flow-set-order-state-modal__order-status\"\n        :options=\"orderOptions\"\n        :label=\"$tc('sw-flow.modals.status.labelOrderStatus')\"\n        :placeholder=\"$tc('sw-flow.modals.status.placeholderOrderStatus')\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_set_order_state_modal_force_transition %}\n    <sw-checkbox-field\n        v-model:value=\"config.force_transition\"\n        name=\"sw-field--config-force_transition\"\n        class=\"sw-flow-set-order-state-modal__force-transition\"\n        :label=\"$tc('sw-flow.modals.status.forceTransition')\"\n        :help-text=\"$tc('sw-flow.modals.status.forceTransitionHelpText')\"\n    />\n    {% endblock %}\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_set_order_state_modal_footer %}\n    <template #modal-footer>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_flow_set_order_state_modal_footer_cancel_button %}\n        <sw-button\n            class=\"sw-flow-set-order-state-modal__cancel-button\"\n            size=\"small\"\n            @click=\"onClose\"\n        >\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_flow_set_order_state_modal_footer_save_button %}\n        <sw-button\n            class=\"sw-flow-set-order-state-modal__save-button\"\n            variant=\"primary\"\n            size=\"small\"\n            @click=\"onAddAction\"\n        >\n            {{ sequence.id ? $tc('sw-flow.modals.buttonSaveAction') : $tc('sw-flow.modals.buttonAddAction') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n","import template from './sw-flow-set-order-state-modal.html.twig';\n\nconst { Component, Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\nconst { mapState } = Component.getComponentHelper();\n\n/**\n * @private\n * @package services-settings\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    emits: [\n        'modal-close',\n        'process-finish',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        sequence: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            paymentOptions: [],\n            deliveryOptions: [],\n            orderOptions: [],\n            config: {\n                order: '',\n                order_delivery: '',\n                order_transaction: '',\n                force_transition: false,\n            },\n        };\n    },\n\n    computed: {\n        stateMachineStateRepository() {\n            return this.repositoryFactory.create('state_machine_state');\n        },\n\n        stateMachineStateCriteria() {\n            const criteria = new Criteria(1, null);\n            criteria.addSorting({ field: 'name', order: 'ASC' });\n            criteria.addAssociation('stateMachine');\n            criteria.addFilter(\n                Criteria.equalsAny('state_machine_state.stateMachine.technicalName', [\n                    'order.state',\n                    'order_transaction.state',\n                    'order_delivery.state',\n                ]),\n            );\n\n            return criteria;\n        },\n\n        ...mapState('swFlowState', ['stateMachineState']),\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.config = this.sequence?.config ? { ...this.sequence?.config } : this.config;\n\n            if (!this.stateMachineState.length) {\n                this.getAllStates();\n            } else {\n                this.generateOptions(this.stateMachineState);\n            }\n        },\n\n        getAllStates() {\n            return this.stateMachineStateRepository.search(this.stateMachineStateCriteria).then((data) => {\n                this.generateOptions(data);\n                Cicada.State.commit('swFlowState/setStateMachineState', data);\n            });\n        },\n\n        generateOptions(data) {\n            this.paymentOptions = this.buildTransitionOptions('order_transaction.state', data);\n\n            this.deliveryOptions = this.buildTransitionOptions('order_delivery.state', data);\n\n            this.orderOptions = this.buildTransitionOptions('order.state', data);\n        },\n\n        buildTransitionOptions(stateMachineName, allTransitions) {\n            const entries = allTransitions.filter((entry) => {\n                return entry.stateMachine.technicalName === stateMachineName;\n            });\n\n            return entries.map((state) => {\n                return {\n                    id: state.technicalName,\n                    name: state.translated.name,\n                };\n            });\n        },\n\n        onClose() {\n            this.$emit('modal-close');\n        },\n\n        onAddAction() {\n            if (!this.config.order && !this.config.order_delivery && !this.config.order_transaction) {\n                this.createNotificationError({\n                    message: this.$tc('sw-flow.modals.status.messageNoStatusError'),\n                });\n                return;\n            }\n\n            const sequence = {\n                ...this.sequence,\n                config: this.config,\n            };\n\n            this.$emit('process-finish', sequence);\n        },\n    },\n};\n"],"names":["template","Component","Mixin","Criteria","mapState","index","criteria","_a","_b","data","stateMachineName","allTransitions","entry","state","sequence"],"mappings":"AAAA,MAAeA,EAAA,g0ECET,CAAE,UAAAC,EAAW,MAAAC,CAAO,EAAG,OACvB,CAAE,SAAAC,CAAQ,EAAK,OAAO,KACtB,CAAE,SAAAC,CAAU,EAAGH,EAAU,qBAMhBI,EAAA,CACX,SAAAL,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,mBACH,EAED,MAAO,CACH,cACA,gBACH,EAED,OAAQ,CACJE,EAAM,UAAU,cAAc,CACjC,EAED,MAAO,CACH,SAAU,CACN,KAAM,OACN,SAAU,EACb,CACJ,EAED,MAAO,CACH,MAAO,CACH,eAAgB,CAAE,EAClB,gBAAiB,CAAE,EACnB,aAAc,CAAE,EAChB,OAAQ,CACJ,MAAO,GACP,eAAgB,GAChB,kBAAmB,GACnB,iBAAkB,EACrB,CACb,CACK,EAED,SAAU,CACN,6BAA8B,CAC1B,OAAO,KAAK,kBAAkB,OAAO,qBAAqB,CAC7D,EAED,2BAA4B,CACxB,MAAMI,EAAW,IAAIH,EAAS,EAAG,IAAI,EACrC,OAAAG,EAAS,WAAW,CAAE,MAAO,OAAQ,MAAO,KAAK,CAAE,EACnDA,EAAS,eAAe,cAAc,EACtCA,EAAS,UACLH,EAAS,UAAU,iDAAkD,CACjE,cACA,0BACA,sBACpB,CAAiB,CACjB,EAEmBG,CACV,EAED,GAAGF,EAAS,cAAe,CAAC,mBAAmB,CAAC,CACnD,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CD7E3B,IAAAG,EAAAC,EC8EY,KAAK,QAASD,EAAA,KAAK,WAAL,MAAAA,EAAe,OAAS,CAAE,IAAGC,EAAA,KAAK,WAAL,YAAAA,EAAe,QAAW,KAAK,OAErE,KAAK,kBAAkB,OAGxB,KAAK,gBAAgB,KAAK,iBAAiB,EAF3C,KAAK,aAAY,CAIxB,EAED,cAAe,CACX,OAAO,KAAK,4BAA4B,OAAO,KAAK,yBAAyB,EAAE,KAAMC,GAAS,CAC1F,KAAK,gBAAgBA,CAAI,EACzB,OAAO,MAAM,OAAO,mCAAoCA,CAAI,CAC5E,CAAa,CACJ,EAED,gBAAgBA,EAAM,CAClB,KAAK,eAAiB,KAAK,uBAAuB,0BAA2BA,CAAI,EAEjF,KAAK,gBAAkB,KAAK,uBAAuB,uBAAwBA,CAAI,EAE/E,KAAK,aAAe,KAAK,uBAAuB,cAAeA,CAAI,CACtE,EAED,uBAAuBC,EAAkBC,EAAgB,CAKrD,OAJgBA,EAAe,OAAQC,GAC5BA,EAAM,aAAa,gBAAkBF,CAC/C,EAEc,IAAKG,IACT,CACH,GAAIA,EAAM,cACV,KAAMA,EAAM,WAAW,IAC3C,EACa,CACJ,EAED,SAAU,CACN,KAAK,MAAM,aAAa,CAC3B,EAED,aAAc,CACV,GAAI,CAAC,KAAK,OAAO,OAAS,CAAC,KAAK,OAAO,gBAAkB,CAAC,KAAK,OAAO,kBAAmB,CACrF,KAAK,wBAAwB,CACzB,QAAS,KAAK,IAAI,4CAA4C,CAClF,CAAiB,EACD,MACH,CAED,MAAMC,EAAW,CACb,GAAG,KAAK,SACR,OAAQ,KAAK,MAC7B,EAEY,KAAK,MAAM,iBAAkBA,CAAQ,CACxC,CACJ,CACL"}