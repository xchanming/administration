{"version":3,"file":"index-BZUQh1FW.js","sources":["../../../app/administration/src/module/sw-media/component/sw-media-library/sw-media-library.html.twig","../../../app/administration/src/module/sw-media/component/sw-media-library/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_media_library %}\n<div class=\"sw-media-library\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_library_display_options %}\n    <div class=\"sw-media-library__options-container\">\n        <sw-media-display-options\n            class=\"sw-media-library__display-options\"\n            :presentation=\"presentation\"\n            :sorting=\"sorting\"\n            :hide-presentation=\"compact\"\n            @media-presentation-change=\"presentation = $event\"\n            @media-sorting-change=\"sorting = $event\"\n        />\n\n        <sw-extension-teaser-popover\n            position-identifier=\"sw-media-generate-image-button\"\n        />\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_index_create_folder %}\n        <sw-button\n            v-if=\"editable\"\n            v-tooltip=\"{\n                message: $tc('sw-privileges.tooltip.warning'),\n                disabled: acl.can('media.creator'),\n                showOnDisabledElements: true\n            }\"\n            :disabled=\"!acl.can('media.creator')\"\n            class=\"sw-media-index__create-folder-action\"\n            variant=\"ghost\"\n            size=\"small\"\n            @click=\"createFolder\"\n        >\n            {{ $tc('sw-media.index.buttonCreateFolder') }}\n        </sw-button>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_library_scroll_container %}\n    <div\n        ref=\"scrollContainer\"\n        class=\"sw-media-library__scroll-container\"\n    >\n        <div class=\"sw-media-library__scroll-content\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_library_media_grid %}\n            <sw-media-grid\n                ref=\"mediaGrid\"\n                class=\"sw-media-library_media-grid\"\n                :presentation=\"gridPresentation\"\n                @media-grid-selection-clear=\"clearSelection\"\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_library_back_to_parent_item %}\n                <sw-media-folder-item\n                    v-if=\"parentFolder && (!isLoading || selectableItems.length > 0)\"\n                    :allow-edit=\"acl.can('media.editor')\"\n                    :allow-delete=\"acl.can('media.deleter')\"\n                    class=\"sw-media-library__parent-folder\"\n                    :item=\"parentFolder\"\n                    :show-selection-indicator=\"false\"\n                    :show-context-menu-button=\"false\"\n                    :allow-multi-select=\"allowMultiSelect\"\n                    :is-list=\"showItemsAsList\"\n                    is-parent\n                    @media-item-click=\"goToParentFolder\"\n                />\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_library_media_item_list %}\n                <sw-media-entity-mapper\n                    v-for=\"(gridItem, index) in selectableItems\"\n                    :key=\"gridItem.getEntityName() + '_' + gridItem.id\"\n                    :class=\"`sw-media-grid-item__item--${index}`\"\n                    :item=\"gridItem\"\n                    :allow-edit=\"acl.can('media.editor')\"\n                    :allow-delete=\"acl.can('media.deleter')\"\n                    :selected=\"showItemSelected(gridItem)\"\n                    :show-selection-indicator=\"isListSelect\"\n                    :show-context-menu-button=\"editable\"\n                    :is-list=\"showItemsAsList\"\n                    :editable=\"editable\"\n                    :allow-multi-select=\"allowMultiSelect\"\n                    @media-item-replaced=\"refreshList\"\n                    @media-item-delete=\"refreshList\"\n                    @media-folder-delete=\"refreshList\"\n                    @media-folder-remove=\"removeNewFolder\"\n                    @media-folder-dissolve=\"refreshList\"\n                    @media-folder-move=\"refreshList\"\n                    @media-folder-changed=\"refreshList\"\n                    v-on=\"mediaItemSelectionHandler\"\n                />\n                {% endblock %}\n\n                <template v-if=\"isLoading\">\n                    <sw-skeleton variant=\"media\" />\n                    <sw-skeleton variant=\"media\" />\n                    <sw-skeleton variant=\"media\" />\n                    <sw-skeleton variant=\"media\" />\n                    <sw-skeleton variant=\"media\" />\n                    <sw-skeleton variant=\"media\" />\n                    <sw-skeleton variant=\"media\" />\n                    <sw-skeleton variant=\"media\" />\n                </template>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_library_load_more_button %}\n                <sw-button\n                    v-if=\"showLoadMoreButton\"\n                    class=\"sw-media-library__load-more-button\"\n                    @click=\"loadNextItems\"\n                >\n                    {{ $tc('sw-media.mediaLibrary.labelButtonLoadMore') }}\n                </sw-button>\n                {% endblock %}\n            </sw-media-grid>\n            {% endblock %}\n        </div>\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_library_empty_state %}\n    <sw-empty-state\n        v-if=\"shouldDisplayEmptyState\"\n        :title=\"$tc('sw-empty-state.messageNoResultTitle')\"\n    >\n        <template #icon>\n            <img\n                :src=\"assetFilter('/administration/static/img/empty-states/media-empty-state.svg')\"\n                :alt=\"$tc('sw-empty-state.messageNoResultSubline')\"\n            >\n        </template>\n\n        <template #default>\n            {{ $tc('sw-empty-state.messageNoResultSublineBefore') }}\n            <router-link\n                class=\"sw-empty-state__description-link\"\n                :to=\"{ name: 'sw.profile.index.searchPreferences' }\"\n            >\n                {{ $tc('sw-empty-state.messageNoResultSublineLink') }}\n            </router-link>\n            {{ $tc('sw-empty-state.messageNoResultSublineAfter') }}\n        </template>\n    </sw-empty-state>\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-media-library.html.twig';\nimport './sw-media-library.scss';\n\nconst { Mixin, Context } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n/**\n * @package discovery\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'searchRankingService',\n        'feature',\n    ],\n\n    emits: [\n        'update:selection',\n        'media-folder-change',\n    ],\n\n    mixins: [\n        Mixin.getByName('media-grid-listener'),\n    ],\n\n    props: {\n        selection: {\n            type: Array,\n            required: true,\n        },\n\n        folderId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        pendingUploads: {\n            type: Array,\n            required: false,\n            default() {\n                return [];\n            },\n        },\n\n        limit: {\n            type: Number,\n            required: false,\n            default: 25,\n            validValues: [\n                1,\n                5,\n                25,\n                50,\n                100,\n                500,\n            ],\n            validator(value) {\n                return [\n                    1,\n                    5,\n                    25,\n                    50,\n                    100,\n                    500,\n                ].includes(value);\n            },\n        },\n\n        term: {\n            type: String,\n            required: false,\n            default: '',\n        },\n\n        compact: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        editable: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        allowMultiSelect: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            selectedItems: this.selection,\n            pageItem: 1,\n            pageFolder: 1,\n            itemLoaderDone: false,\n            folderLoaderDone: false,\n            items: [],\n            subFolders: [],\n            currentFolder: null,\n            parentFolder: null,\n            presentation: 'medium-preview',\n            sorting: { sortBy: 'fileName', sortDirection: 'asc' },\n            folderSorting: { sortBy: 'name', sortDirection: 'asc' },\n        };\n    },\n\n    computed: {\n        shouldDisplayEmptyState() {\n            return (\n                !this.isLoading &&\n                (this.selectableItems.length === 0 || (this.isValidTerm(this.term) && this.selectableItems.length === 0))\n            );\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        mediaFolderRepository() {\n            return this.repositoryFactory.create('media_folder');\n        },\n\n        mediaFolderConfigurationRepository() {\n            return this.repositoryFactory.create('media_folder_configuration');\n        },\n\n        selectableItems() {\n            return [\n                ...this.subFolders,\n                ...this.pendingUploads,\n                ...this.items,\n            ];\n        },\n\n        rootFolder() {\n            const root = this.mediaFolderRepository.create(Context.api);\n            root.id = '';\n            root.name = this.$tc('sw-media.index.rootFolderName');\n\n            return root;\n        },\n\n        gridPresentation() {\n            if (this.compact) {\n                return 'list-preview';\n            }\n\n            return this.presentation;\n        },\n\n        showItemsAsList() {\n            return this.gridPresentation === 'list-preview';\n        },\n\n        showLoadMoreButton() {\n            if (this.isLoading || this.shouldDisplayEmptyState) {\n                return false;\n            }\n\n            return !(this.itemLoaderDone && this.folderLoaderDone);\n        },\n\n        nextMediaCriteria() {\n            // always search without folderId criteria --> search for all items\n            const criteria = new Criteria(this.pageItem, this.limit);\n\n            criteria.addSorting(Criteria.sort(this.sorting.sortBy, this.sorting.sortDirection)).setTerm(this.term);\n\n            // eslint-disable-next-line no-warning-comments\n            // ToDo NEXT-22186 - will be replaced by a new overview\n            [\n                'tags',\n                'productMedia.product',\n                'categories',\n                'productManufacturers.products',\n                'mailTemplateMedia.mailTemplate',\n                'avatarUsers',\n                'paymentMethods',\n                'shippingMethods',\n                'cmsBlocks.section.page',\n                'cmsSections.page',\n                'cmsPages',\n            ].forEach((association) => {\n                const associationParts = association.split('.');\n\n                criteria.addAssociation(association);\n\n                let path = null;\n                associationParts.forEach((currentPart) => {\n                    path = path ? `${path}.${currentPart}` : currentPart;\n\n                    criteria.getAssociation(path).setLimit(25);\n                });\n            });\n\n            return criteria;\n        },\n\n        nextFoldersCriteria() {\n            const criteria = new Criteria(this.pageFolder, this.limit)\n                .addSorting(Criteria.sort(this.folderSorting.sortBy, this.folderSorting.sortDirection))\n                .setTerm(this.term);\n\n            if (!this.term) {\n                criteria.addFilter(Criteria.equals('parentId', this.folderId));\n            }\n\n            return criteria;\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        selection() {\n            this.selectedItems = this.selection;\n            if (this.listSelectionStartItem !== null && !this.selectedItems.includes(this.listSelectionStartItem)) {\n                this.listSelectionStartItem = this.selectedItems[0] || null;\n            }\n        },\n\n        selectedItems() {\n            this.$emit('update:selection', this.selectedItems);\n        },\n\n        sorting() {\n            this.mapFolderSorting();\n            this.refreshList();\n        },\n\n        folderId() {\n            this.refreshList();\n        },\n\n        term() {\n            this.refreshList();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.refreshList();\n\n            if (this.allowMultiSelect) {\n                return;\n            }\n\n            this.handleMediaItemClicked = ({ item }) => {\n                this._singleSelect(item);\n            };\n\n            this.handleMediaGridItemSelected = () => {};\n        },\n\n        /*\n         * Object fetching\n         */\n        async refreshList() {\n            if (this.isLoading === true) {\n                return;\n            }\n\n            this.subFolders = [];\n            this.items = [];\n\n            this.isLoading = true;\n\n            this.clearSelection();\n            await this.fetchAssociatedFolders();\n\n            this.pageItem = 1;\n            this.pageFolder = 1;\n\n            this.itemLoaderDone = false;\n            this.folderLoaderDone = false;\n\n            this.loadItems();\n        },\n\n        isValidTerm(term) {\n            return term?.trim()?.length > 1;\n        },\n\n        loadNextItems() {\n            if (this.isLoading === true) {\n                return;\n            }\n            this.isLoading = true;\n            this.loadItems();\n        },\n\n        mapFolderSorting() {\n            switch (this.sorting.sortBy) {\n                case 'createdAt':\n                    this.folderSorting.sortBy = 'createdAt';\n                    this.folderSorting.sortDirection = this.sorting.sortDirection;\n                    break;\n                case 'fileName':\n                    this.folderSorting.sortBy = 'name';\n                    this.folderSorting.sortDirection = this.sorting.sortDirection;\n                    break;\n                default:\n                    this.folderSorting.sortBy = 'name';\n                    this.folderSorting.sortDirection = 'asc';\n            }\n        },\n\n        isLoaderDone(criteria, data) {\n            return criteria.limit >= data.total || criteria.limit > data.length;\n        },\n\n        async loadItems() {\n            this.isLoading = true;\n            const [\n                nextFolders,\n                nextMedia,\n            ] = await Promise.allSettled([\n                this.nextFolders(),\n                this.nextMedia(),\n            ]);\n\n            if (nextMedia.status === 'fulfilled') {\n                this.items.push(...nextMedia.value);\n            } else {\n                this.itemLoaderDone = false;\n            }\n\n            if (nextFolders.status === 'fulfilled') {\n                this.subFolders.push(...nextFolders.value);\n            } else {\n                this.folderLoaderDone = false;\n            }\n\n            this.isLoading = false;\n        },\n\n        async nextMedia() {\n            if (this.itemLoaderDone) {\n                return [];\n            }\n\n            let criteria = this.nextMediaCriteria;\n\n            if (this.isValidTerm(this.term)) {\n                const searchRankingFields = await this.searchRankingService.getSearchFieldsByEntity('media');\n\n                if (!searchRankingFields || Object.keys(searchRankingFields).length < 1) {\n                    this.isLoading = false;\n                    this.itemLoaderDone = true;\n\n                    return [];\n                }\n\n                criteria = this.searchRankingService.buildSearchQueriesForEntity(searchRankingFields, this.term, criteria);\n            }\n\n            // only fetch items of current folder\n            if (!this.isValidTerm(this.term)) {\n                criteria.addFilter(Criteria.equals('mediaFolderId', this.folderId));\n            }\n\n            // search only in current and all subFolders\n            if (this.folderId != null && this.isValidTerm(this.term)) {\n                criteria.addFilter(\n                    Criteria.multi('OR', [\n                        Criteria.equals('mediaFolderId', this.folderId),\n                        Criteria.contains('mediaFolder.path', this.folderId),\n                    ]),\n                );\n            }\n\n            const media = await this.mediaRepository.search(criteria, Context.api);\n\n            this.itemLoaderDone = this.isLoaderDone(criteria, media);\n\n            this.pageItem += 1;\n\n            return media;\n        },\n\n        async nextFolders() {\n            if (this.folderLoaderDone) {\n                return [];\n            }\n\n            const subFolders = await this.mediaFolderRepository.search(this.nextFoldersCriteria, Context.api);\n\n            this.folderLoaderDone = this.isLoaderDone(this.nextFoldersCriteria, subFolders);\n\n            this.pageFolder += 1;\n\n            return subFolders;\n        },\n\n        async fetchAssociatedFolders() {\n            if (this.folderId === null) {\n                this.currentFolder = null;\n                this.parentFolder = null;\n                return;\n            }\n\n            this.currentFolder = await this.mediaFolderRepository.get(this.folderId, Context.api);\n\n            if (this.currentFolder && this.currentFolder.parentId) {\n                this.parentFolder = await this.mediaFolderRepository.get(this.currentFolder.parentId, Context.api);\n            } else {\n                this.parentFolder = this.rootFolder;\n            }\n        },\n\n        goToParentFolder() {\n            this.$emit('media-folder-change', this.parentFolder.id || null);\n        },\n\n        clearSelection() {\n            this.selectedItems = [];\n            this.listSelectionStartItem = null;\n        },\n\n        injectItem(item) {\n            if (item.getEntityName() === 'media') {\n                this.injectMedia(item);\n                return;\n            }\n\n            throw new Error(\"Injected entity has to be of 'type media'\");\n        },\n\n        injectMedia(mediaEntity) {\n            if (mediaEntity.mediaFolderId !== this.folderId) {\n                return;\n            }\n\n            if (\n                !this.items.some((alreadyListed) => {\n                    return alreadyListed.id === mediaEntity.id;\n                })\n            ) {\n                this.items.unshift(mediaEntity);\n            }\n        },\n\n        async createFolder() {\n            const newFolder = this.mediaFolderRepository.create(Context.api);\n            newFolder.parentId = this.folderId;\n            newFolder.name = '';\n\n            if (this.folderId !== null) {\n                newFolder.configurationId = this.currentFolder.configurationId;\n                newFolder.useParentConfiguration = true;\n            } else {\n                const configuration = this.mediaFolderConfigurationRepository.create(Context.api);\n                configuration.createThumbnails = true;\n                configuration.keepProportions = true;\n                configuration.thumbnailQuality = 80;\n\n                await this.mediaFolderConfigurationRepository.save(configuration, Context.api);\n\n                newFolder.configurationId = configuration.id;\n                newFolder.useParentConfiguration = false;\n            }\n\n            this.subFolders.unshift(newFolder);\n        },\n\n        removeNewFolder() {\n            this.subFolders.shift();\n        },\n    },\n};\n"],"names":["template","Mixin","Context","Criteria","index","value","root","criteria","association","associationParts","path","currentPart","item","term","_a","data","nextFolders","nextMedia","searchRankingFields","media","subFolders","mediaEntity","alreadyListed","newFolder","configuration"],"mappings":"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"}