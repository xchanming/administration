const m=`{% block sw_product_stream_modal_preview %} <sw-modal class="sw-product-stream-modal-preview" :title="\`\${$tc('sw-product-stream.previewModal.title')} (\${total || 0})\`" :is-loading="isLoading" variant="full" @modal-close="closeModal" > {% block sw_product_stream_modal_preview_content %} <div class="sw-product-stream-modal-preview__content"> {% block sw_product_stream_modal_preview_content_header %} <sw-container class="sw-product-stream-modal-preview__content-header"> {% block sw_product_stream_modal_preview_search_field_label %} <sw-label class="sw-product-stream-modal-preview__search-field-label"> {% block sw_product_stream_modal_preview_search_field %} <sw-simple-search-field class="sw-product-stream-modal-preview__search-field" variant="form" :value="searchTerm" :delay="750" @search-term-change="onSearchTermChange" /> {% endblock %} </sw-label> {% endblock %} {% block sw_product_stream_modal_preview_sales_channel_field_label %} <sw-label class="sw-product-stream-modal-preview__sales-channel-field-label"> {% block sw_product_stream_modal_preview_sales_channel_field %} <sw-entity-single-select v-model:value="selectedSalesChannel" entity="sales_channel" class="sw-product-stream-modal-preview__sales-channel-field" name="sw-field--selectedSalesChannel" :criteria="previewSelectionCriteria" :disabled="isLoading" :label="$tc('sw-settings.system-config.labelSalesChannelSelect')" @update:value="onSalesChannelChange" /> {% endblock %} </sw-label> {% endblock %} </sw-container> {% endblock %} {% block sw_product_stream_modal_preview_grid %} <sw-data-grid v-if="total" :data-source="products" :columns="productColumns" :show-selection="false" :show-actions="false" :show-previews="true" :is-loading="isLoading" full-page > <template #column-name="{ item, column }"> {% block sw_product_stream_modal_preview_grid_column_name %} <router-link :to="{ name: column.routerLink, params: { id: item.id } }"> <sw-product-variant-info :variations="item.variation"> {{ item.name || item.translated.name }} </sw-product-variant-info> </router-link> {% endblock %} </template> <template #column-active="{ item }"> {% block sw_product_stream_modal_preview_grid_column_active %} <sw-data-grid-column-boolean :value="item.active" :is-inline-edit="false" /> {% endblock %} </template> <template #column-price="{ item }"> {% block sw_product_stream_modal_preview_grid_column_price %} {{ currencyFilter(getPriceForDefaultCurrency(item).unitPrice, selectedCurrencyIsoCode) }} {% endblock %} </template> <template #column-stock="{ item }"> {% block sw_product_stream_modal_preview_grid_column_stock %} {{ item.stock }} <sw-color-badge :variant="stockColorVariantFilter(item.stock)" /> {% endblock %} </template> <template #pagination> {% block sw_product_stream_modal_preview_grid_pagination %} <sw-pagination v-bind="{ total, page, limit }" :total-visible="7" :auto-hide="false" @page-change="onPageChange" /> {% endblock %} </template> </sw-data-grid> {% endblock %} {% block sw_product_stream_modal_preview_empty_state %} <sw-empty-state v-if="!total && !isLoading" :absolute="false" :title="$tc('sw-product-stream.previewModal.empty')" /> {% endblock %} </div> {% endblock %} {% block sw_product_stream_modal_preview_footer %} <template #modal-footer> {% block sw_product_stream_modal_preview_close_button %} <sw-button class="sw-product-stream-modal-preview__close-action" variant="primary" @click.prevent="closeModal" > {{ $tc('sw-product-stream.previewModal.close') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %}`,{Context:h}=Shopware,{Criteria:a}=Shopware.Data,o="ed535e5722134ac1aa6524f73e26881b",w={template:m,inject:["repositoryFactory","productStreamPreviewService"],emits:["modal-close"],props:{filters:{type:Array,required:!0},defaultLimit:{type:Number,default:25},defaultSorting:{type:String,default:null,validator(e){return e===null||e.split(":").length===2}}},data(){return{products:[],selectedSalesChannel:null,searchTerm:"",page:1,total:!1,limit:this.defaultLimit,sorting:this.defaultSorting,isLoading:!1,selectedCurrencyIsoCode:"EUR",selectedCurrencyId:h.app.systemCurrencyId}},computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},salesChannelCriteria(){return new a(1,1).addFilter(a.not("OR",[a.equals("typeId",o)])).addSorting(a.sort("type.iconName","ASC"))},previewCriteria(){const e=new a(this.page,this.limit).setTerm(this.searchTerm);if(this.sorting){const[t,r]=this.sorting.split(":");e.addSorting(a.sort(t,r))}return e},previewSelectionCriteria(){return new a().addFilter(a.not("OR",[a.equals("typeId",o)])).addSorting(a.sort("name","ASC"))},productColumns(){return[{property:"name",label:this.$tc("sw-product-stream.filter.values.product"),type:"text",routerLink:"sw.product.detail"},{property:"manufacturer.name",label:this.$tc("sw-product-stream.filter.values.manufacturerId")},{property:"active",label:this.$tc("sw-product-stream.filter.values.active"),align:"center",type:"bool"},{property:"price",label:this.$tc("sw-product-stream.filter.values.price")},{property:"stock",label:this.$tc("sw-product-stream.filter.values.stock"),align:"right"}]},currencyFilter(){return Shopware.Filter.getByName("currency")},stockColorVariantFilter(){return Shopware.Filter.getByName("stockColorVariant")}},created(){this.createdComponent()},methods:{createdComponent(){return this.isLoading=!0,this.loadSalesChannels().then(()=>this.loadEntityData()).finally(()=>{this.isLoading=!1})},onSearchTermChange(e){this.searchTerm=e,this.page=1,this.isLoading=!0,this.loadEntityData().finally(()=>{this.isLoading=!1})},onSalesChannelChange(){this.page=1,this.isLoading=!0,this.loadSalesChannelById().then(()=>this.loadEntityData()).finally(()=>{this.isLoading=!1})},loadEntityData(){return this.selectedSalesChannel?this.productStreamPreviewService.preview(this.selectedSalesChannel,this.previewCriteria,this.mapFiltersForSearch(this.filters),{"sw-currency-id":this.selectedCurrencyId,"sw-inheritance":!0}).then(e=>{this.products=Object.values(e.elements),this.total=e.total}):!1},loadSalesChannels(){return this.salesChannelRepository.searchIds(this.salesChannelCriteria).then(({data:e})=>{this.selectedSalesChannel=e.at(0)})},mapFiltersForSearch(e=[],t=null){return e.map(r=>{const{field:l,type:s,operator:n,value:c,parameters:d,queries:p}=r,u=this.mapFiltersForSearch(p,s),i={field:l,type:s,operator:n,value:c,parameters:d,queries:u};return l==="id"||l==="product.id"?{type:"multi",field:null,operator:this.isNotEqualToAnyType(s,t)?"AND":"OR",value:null,parameters:null,queries:[i,{...i,field:"parentId"}]}:i})},closeModal(){this.$emit("modal-close")},getPriceForDefaultCurrency(e){const t=e.calculatedCheapestPrice;let r=e.calculatedPrice;return e.calculatedPrices.length>0&&(r=e.calculatedPrices[e.calculatedPrices.length-1]),t.unitPrice!==r.unitPrice?r:t},onPageChange({page:e=1,limit:t=25}){this.isLoading=!0,this.page=e,this.limit=t,this.loadEntityData().finally(()=>{this.isLoading=!1})},loadSalesChannelById(){return this.selectedSalesChannel===null?Promise.resolve():(this.salesChannelCriteria.addAssociation("currency"),this.salesChannelRepository.get(this.selectedSalesChannel,Shopware.Context.api,this.salesChannelCriteria).then(t=>{this.selectedCurrencyIsoCode=t.currency.isoCode,this.selectedCurrencyId=t.currencyId}))},isNotEqualToAnyType(e,t){return e==="equalsAny"&&t==="not"}}};export{w as default};
