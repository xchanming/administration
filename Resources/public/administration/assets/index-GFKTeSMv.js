const o=`{% block sw_product_cross_selling_form %} <div class="product-detail-cross-selling-form"> {% block sw_prduct_cross_selling_form_card %} <sw-card :title="crossSelling.name" position-identifier="sw-product-cross-selling-form" > <div v-if="!isLoading && crossSelling" class="product-detail-cross-selling-form__card-container" > {% block sw_prduct_cross_selling_form_context_menu %} <div class="sw-product-detail-cross-selling__context-button"> <sw-context-button> {% block sw_product_cross_selling_form_context_button_delete %} <sw-context-menu-item variant="danger" class="sw-product-cross_selling-context-item__delete-action" :disabled="!allowEdit" @click="onShowDeleteModal" > {{ $tc('sw-product.crossselling.buttonDeleteCrossSelling') }} </sw-context-menu-item> {% endblock %} </sw-context-button> </div> {% endblock %} <sw-container columns="2fr 1fr" gap="0px 30px" align="start" > {% block sw_prduct_cross_selling_form_title_field %} <sw-text-field v-model:value="crossSelling.name" name="sw-field--crossSelling-name" :label="$tc('sw-product.crossselling.inputCrossSellingTitle')" required :placeholder="placeholder(crossSelling, 'name', $tc('sw-product.crossselling.inputCrossSellingTitlePlaceholder'))" :error="crossSellingNameError" :disabled="!allowEdit" /> {% endblock %} {% block sw_prduct_cross_selling_form_active_field %} <sw-switch-field v-model:value="crossSelling.active" class="sw-product-detail-cross-selling__active-switch" :label="$tc('sw-product.crossselling.inputCrossSellingActive')" :disabled="!allowEdit" name="sw-field--crossSelling-active" /> {% endblock %} </sw-container> <sw-container columns="2fr 1fr" gap="0px 30px" > {% block sw_prduct_cross_selling_form_type %} <sw-select-field v-model:value="crossSelling.type" :label="$tc('sw-product.crossselling.inputCrossSellingType')" :error="crossSellingTypeError" :disabled="!allowEdit" @update:value="onTypeChanged" > <option v-for="option in crossSellingTypes" :key="option.value" :value="option.value" > {{ option.label }} </option> </sw-select-field> {% endblock %} {% block sw_prduct_cross_selling_form_position_field %} <sw-number-field v-model:value="crossSelling.position" number-type="int" :min="1" :label="$tc('sw-product.crossselling.inputCrossSellingPosition')" :error="crossSellingPositionError" :placeholder="$tc('sw-product.crossselling.inputCrossSellingPositionPlaceholder')" :disabled="!allowEdit" /> {% endblock %} </sw-container> <div v-if="!useManualAssignment"> {% block sw_prduct_cross_selling_form_product_stream_field %} <sw-entity-single-select id="sw-field--crossSelling-product-group" v-model:value="crossSelling.productStreamId" entity="product_stream" class="sw-select-cross-selling__select-product-stream" :label="$tc('sw-product.crossselling.inputCrossSellingProductStream')" :placeholder="$tc('sw-product.crossselling.inputCrossSellingProductStreamPlaceholder')" :disabled="!allowEdit" show-clearable-button /> {% endblock %} <sw-container columns="1fr 1fr" gap="0px 30px" > {% block sw_prduct_cross_selling_form_sort_field %} <sw-select-field :label="$tc('sw-product.crossselling.inputCrossSellingSorting')" :value="sortingConCat" :disabled="!allowEdit" @update:value="onSortingChanged" > <option v-for="option in sortingTypes" :key="option.value" :value="option.value" > {{ option.label }} </option> </sw-select-field> {% endblock %} {% block sw_prduct_cross_selling_form_limit_field %} <sw-number-field v-model:value="crossSelling.limit" number-type="int" :label="$tc('sw-product.crossselling.inputCrossSellingLimit')" :disabled="!allowEdit" /> {% endblock %} </sw-container> {% block sw_prduct_cross_selling_form_preview_link %} <sw-container columns="1fr" justify="end" class="sw-product-cross-selling-form__links" > <a class="sw-card__quick-link" :class="{ 'is--disabled': previewDisabled }" role="button" tabindex="0" @click="openModalPreview" @keydown.enter="openModalPreview" > {{ $tc('sw-product.crossselling.linkOpenStreamPreview') }} <sw-icon name="regular-long-arrow-right" small /> </a> </sw-container> {% endblock %} </div> {% block sw_product_detail_cross_selling_assignment %} <sw-product-cross-selling-assignment v-else :assigned-products="crossSelling.assignedProducts" :cross-selling-id="crossSelling.id" :searchable-fields="['name', 'productNumber']" :allow-edit="allowEdit" /> {% endblock %} {% block sw_product_detail_cross_selling_modal_preview_modal %} <sw-product-stream-modal-preview v-if="showModalPreview" ref="modalPreview" :filters="productStreamFilterTree" @modal-close="closeModalPreview" /> {% endblock %} </div> </sw-card> {% endblock %} {% block sw_product_detail_cross_selling_form_modal_delete %} <sw-modal v-if="showDeleteModal" variant="small" :title="$tc('sw-product.crossselling.deleteConfirmTitle')" class="sw-product-detail-cross-selling__delete-modal" @modal-close="onCloseDeleteModal" > {% block sw_product_detail_cross_selling_form_delete_text %} <p> {{ $tc('sw-product.crossselling.deleteConfirmText') }} </p> {% endblock %} {% block sw_product_detail_cross_selling_form_modal_delete_footer %} <template #modal-footer> {% block sw_product_detail_cross_selling_modal_delete_action_cancel %} <sw-button size="small" @click="onCloseDeleteModal" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_product_detail_cross_selling_form_modal_delete_action_delete %} <sw-button class="sw-product-detail-cross-selling__delete-button" size="small" variant="danger" @click="onConfirmDelete" > {{ $tc('sw-product.crossselling.deleteButtonDelete') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} {% block sw_product_cross_selling_form_condition_tree_invisibly %} <sw-condition-tree v-if="productStreamFilterRepository" v-show="false" association-field="productStreamId" child-association-field="queries" :initial-conditions="productStreamFilter" :condition-repository="productStreamFilterRepository" :condition-data-provider-service="productStreamConditionService" :association-value="associationValue" :root-condition="null" @conditions-changed="updateProductStreamFilterTree" /> {% endblock %} </div> {% endblock %}`,{Criteria:t}=Shopware.Data,{Component:l,Mixin:r}=Shopware,{mapPropertyErrors:i}=l.getComponentHelper(),c={template:o,inject:["repositoryFactory","productStreamConditionService"],provide(){return{productCustomFields:{}}},mixins:[r.getByName("placeholder")],props:{crossSelling:{type:Object,required:!0},allowEdit:{type:Boolean,required:!1,default:!0}},data(){return{showDeleteModal:!1,showModalPreview:!1,productStream:null,productStreamFilter:[],productStreamFilterTree:null,optionSearchTerm:"",useManualAssignment:!1,sortBy:"name",sortDirection:"ASC",assignmentKey:0}},computed:{...i("crossSelling",["name","type","position"]),product(){return Shopware.Store.get("swProductDetail").product},isLoading(){return Shopware.Store.get("swProductDetail").isLoading},productCrossSellingRepository(){return this.repositoryFactory.create("product_cross_selling")},productStreamRepository(){return this.repositoryFactory.create("product_stream")},productStreamFilterRepository(){if(!this.productStream||!this.productStream.filters)return null;const{entity:e,source:s}=this.productStream.filters;return this.repositoryFactory.create(e,s)},productStreamFilterCriteria(){const e=new t(1,25);return e.addFilter(t.equals("productStreamId",this.crossSelling.productStreamId)),e},crossSellingAssigmentRepository(){return this.repositoryFactory.create("product_cross_selling_assigned_products")},sortingTypes(){return[{label:this.$tc("sw-product.crossselling.priceDescendingSortingType"),value:"cheapestPrice:DESC"},{label:this.$tc("sw-product.crossselling.priceAscendingSortingType"),value:"cheapestPrice:ASC"},{label:this.$tc("sw-product.crossselling.nameSortingType"),value:"name:ASC"},{label:this.$tc("sw-product.crossselling.releaseDateDescendingSortingType"),value:"releaseDate:DESC"},{label:this.$tc("sw-product.crossselling.releaseDateAscendingSortingType"),value:"releaseDate:ASC"}]},crossSellingTypes(){return[{label:this.$tc("sw-product.crossselling.productStreamType"),value:"productStream"},{label:this.$tc("sw-product.crossselling.productListType"),value:"productList"}]},previewDisabled(){return!this.productStream},sortingConCat(){return`${this.crossSelling.sortBy}:${this.crossSelling.sortDirection}`},disablePositioning(){return!!this.term||this.sortBy!=="position"},associationValue(){var e;return((e=this.crossSelling)==null?void 0:e.productStreamId)||""}},watch:{"crossSelling.productStreamId"(){this.useManualAssignment||this.loadStreamPreview()}},created(){this.createdComponent()},methods:{createdComponent(){this.useManualAssignment=this.crossSelling.type==="productList",!this.useManualAssignment&&this.crossSelling.productStreamId!==null&&this.loadStreamPreview()},onShowDeleteModal(){this.showDeleteModal=!0},onCloseDeleteModal(){this.showDeleteModal=!1},onConfirmDelete(){this.onCloseDeleteModal(),this.$nextTick(()=>{this.product.crossSellings.remove(this.crossSelling.id)})},openModalPreview(){this.previewDisabled||(this.showModalPreview=!0)},closeModalPreview(){this.showModalPreview=!1},loadStreamPreview(){this.productStreamRepository.get(this.crossSelling.productStreamId).then(e=>{this.productStream=e,this.getProductStreamFilter()})},getProductStreamFilter(){return this.productStreamFilterRepository===null?[]:this.productStreamFilterRepository.search(this.productStreamFilterCriteria).then(e=>{this.productStreamFilter=e})},updateProductStreamFilterTree({conditions:e}){this.productStreamFilterTree=e},onSortingChanged(e){[this.crossSelling.sortBy,this.crossSelling.sortDirection]=e.split(":")},onTypeChanged(e){this.useManualAssignment=e==="productList"}}};export{c as default};
