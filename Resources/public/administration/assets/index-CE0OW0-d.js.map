{"version":3,"file":"index-CE0OW0-d.js","sources":["../../../app/administration/src/app/component/form/sw-url-field-deprecated/sw-url-field.html.twig","../../../app/administration/src/app/component/form/sw-url-field-deprecated/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_text_field %}\n<!-- eslint-disable sw-deprecation-rules/no-twigjs-blocks, vue/no-duplicate-attributes, vue/no-parsing-error -->\n{% block sw_url_field %}\n<sw-contextual-field\n    class=\"sw-field--url\"\n    v-bind=\"{\n        ...$attrs,\n        ...inheritanceAttrs\n    }\"\n    :error=\"combinedError\"\n    :name=\"formFieldName\"\n    @inheritance-restore=\"$emit('inheritance-restore', $event)\"\n    @inheritance-remove=\"$emit('inheritance-remove', $event)\"\n>\n    <template #sw-contextual-field-prefix=\"{ disabled }\">\n        <span\n            class=\"sw-field__url-input__prefix\"\n            :class=\"prefixClass\"\n            role=\"button\"\n            tabindex=\"0\"\n            @click=\"changeMode(disabled)\"\n            @keydown.enter=\"changeMode(disabled)\"\n        >\n            <sw-icon\n                v-if=\"sslActive\"\n                name=\"regular-lock\"\n                :small=\"true\"\n            />\n            <sw-icon\n                v-else\n                name=\"regular-lock-open\"\n                :small=\"true\"\n            />\n            {{ urlPrefix }}\n        </span>\n    </template>\n\n    <template #sw-field-input=\"{ identification, error, disabled, size, setFocusClass, removeFocusClass }\">\n        <!-- eslint-disable-next-line vuejs-accessibility/form-control-has-label -->\n        <input\n            :id=\"identification\"\n            type=\"url\"\n            class=\"sw-url-input-field__input\"\n            :name=\"identification\"\n            :value=\"unicodeUriFilter(currentUrlValue)\"\n            :placeholder=\"placeholder\"\n            :disabled=\"disabled\"\n            @focus=\"setFocusClass\"\n            @blur=\"onBlur($event); removeFocusClass();\"\n        >\n    </template>\n\n    <template\n        v-if=\"copyable\"\n        #sw-contextual-field-suffix=\"{ identification }\"\n    >\n        <sw-field-copyable\n            v-if=\"copyable\"\n            :display-name=\"identification\"\n            :copyable-text=\"url\"\n            :tooltip=\"copyableTooltip\"\n        />\n    </template>\n\n    <template #label>\n        <slot name=\"label\"></slot>\n    </template>\n\n    <template #hint>\n        <slot name=\"hint\"></slot>\n    </template>\n\n</sw-contextual-field>\n    {% endblock %}\n{% endblock %}\n","import template from './sw-url-field.html.twig';\nimport './sw-url-field.scss';\n\nconst { Component } = Cicada;\nconst { CicadaError } = Cicada.Classes;\n\nconst URL_REGEX = {\n    PROTOCOL: /([a-zA-Z0-9]+\\:\\/\\/)+/,\n    PROTOCOL_HTTP: /^https?:\\/\\//,\n    SSL: /^\\s*https:\\/\\//,\n    TRAILING_SLASH: /\\/+$/,\n};\n\n/**\n * @package admin\n *\n * @private\n * @description URL field component which supports a switch for https and http.\n * @status ready\n * @example-type dynamic\n * @component-example\n * <sw-field type=\"url\" label=\"Name\" placeholder=\"Placeholder\"\n * switchLabel=\"My shop uses https\"></sw-field>\n */\nComponent.extend('sw-url-field-deprecated', 'sw-text-field-deprecated', {\n    template,\n\n    inheritAttrs: false,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['feature'],\n\n    emits: [\n        'update:value',\n        'inheritance-restore',\n        'inheritance-remove',\n    ],\n\n    props: {\n        error: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        omitUrlHash: {\n            type: Boolean,\n            default: false,\n        },\n        omitUrlSearch: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            sslActive: true,\n            currentUrlValue: '',\n            errorUrl: null,\n            currentDebounce: null,\n        };\n    },\n\n    computed: {\n        prefixClass() {\n            if (this.sslActive) {\n                return 'is--ssl';\n            }\n\n            return '';\n        },\n\n        urlPrefix() {\n            if (this.sslActive) {\n                return 'https://';\n            }\n\n            return 'http://';\n        },\n\n        url() {\n            const trimmedValue = this.currentUrlValue.trim();\n            if (trimmedValue === '') {\n                return '';\n            }\n\n            return `${this.urlPrefix}${trimmedValue}`;\n        },\n\n        combinedError() {\n            return this.errorUrl || this.error;\n        },\n\n        unicodeUriFilter() {\n            return Cicada.Filter.getByName('unicodeUri');\n        },\n    },\n\n    watch: {\n        value: {\n            handler() {\n                this.checkInput(this.value || '');\n            },\n            immediate: true,\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.currentUrlValue = this.validateCurrentValue(this.value || '');\n            this.checkInput(this.currentUrlValue || '');\n        },\n\n        onBlur(event) {\n            this.checkInput(event.target.value);\n        },\n\n        checkInput(inputValue) {\n            this.errorUrl = null;\n\n            if (!inputValue || !inputValue.length) {\n                this.handleEmptyUrl();\n\n                return;\n            }\n\n            if (inputValue.match(URL_REGEX.PROTOCOL_HTTP)) {\n                this.sslActive = this.getSSLMode(inputValue);\n            }\n\n            const validated = this.validateCurrentValue(inputValue);\n\n            if (!validated) {\n                this.setInvalidUrlError();\n            } else if (this.currentUrlValue !== validated) {\n                this.currentUrlValue = validated;\n\n                this.$emit('update:value', this.url);\n            }\n        },\n\n        handleEmptyUrl() {\n            this.currentUrlValue = '';\n            this.$emit('update:value', this.url);\n        },\n\n        validateCurrentValue(value) {\n            const url = this.getURLInstance(value);\n\n            // If the input is invalid, no URL can be constructed\n            if (!url) {\n                return null;\n            }\n\n            if (this.omitUrlSearch) {\n                url.search = '';\n            }\n\n            if (this.omitUrlHash) {\n                url.hash = '';\n            }\n\n            // when a hash or search query is provided we want to allow trailing slash, eg a vue route `admin#/`\n            const removeTrailingSlash = url.hash === '' && url.search === '' ? URL_REGEX.TRAILING_SLASH : '';\n\n            // build URL via native URL.toString() function instead by hand @see NEXT-15747\n            return url\n                .toString()\n                .replace(URL_REGEX.PROTOCOL, '')\n                .replace(removeTrailingSlash, '')\n                .replace(url.host, this.unicodeUriFilter(url.host));\n        },\n\n        changeMode(disabled) {\n            if (disabled) {\n                return;\n            }\n\n            this.sslActive = !this.sslActive;\n            this.$emit('update:value', this.url);\n        },\n\n        getURLInstance(value) {\n            try {\n                const url = value.match(URL_REGEX.PROTOCOL) ? value : `${this.urlPrefix}${value}`;\n\n                return new URL(url);\n            } catch {\n                this.setInvalidUrlError();\n\n                return null;\n            }\n        },\n\n        getSSLMode(value) {\n            return !!value.match(URL_REGEX.SSL);\n        },\n\n        setInvalidUrlError() {\n            this.errorUrl = new CicadaError({\n                code: 'INVALID_URL',\n            });\n        },\n    },\n});\n"],"names":["template","Component","CicadaError","URL_REGEX","trimmedValue","event","inputValue","validated","value","url","removeTrailingSlash","disabled"],"mappings":"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"}