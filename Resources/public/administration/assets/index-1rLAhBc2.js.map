{"version":3,"file":"index-1rLAhBc2.js","sources":["../../../app/administration/src/module/sw-product-stream/component/sw-product-stream-field-select/sw-product-stream-field-select.html.twig","../../../app/administration/src/module/sw-product-stream/component/sw-product-stream-field-select/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_condition_base_field_condition %}\n<sw-arrow-field\n    v-if=\"options.length > 1\"\n    class=\"sw-product-stream-field-select\"\n    :class=\"{ 'has--error': hasError }\"\n    :primary=\"arrowPrimaryColor\"\n    secondary=\"#ffffff\"\n>\n    <sw-single-select\n        size=\"medium\"\n        :options=\"options\"\n        :value=\"field\"\n        :placeholder=\"$tc('sw-product-stream.filter.placeholderFieldSelect')\"\n        :disabled=\"disabled\"\n        show-clearable-button\n        @update:value=\"changeField\"\n    />\n</sw-arrow-field>\n{% endblock %}\n","/*\n * @package services-settings\n */\n\nimport template from './sw-product-stream-field-select.html.twig';\nimport './sw-product-stream-field-select.scss';\n\n/**\n * @private\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'conditionDataProviderService',\n        'productCustomFields',\n    ],\n\n    emits: ['field-changed'],\n\n    props: {\n        definition: {\n            type: Object,\n            required: true,\n        },\n\n        field: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        index: {\n            type: Number,\n            required: true,\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        hasError: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    computed: {\n        options() {\n            const entityFields = Object.keys(this.definition.properties)\n                .map((property) => {\n                    if (!this.conditionDataProviderService.isPropertyInAllowList(this.definition.entity, property)) {\n                        return null;\n                    }\n\n                    if (property === 'id') {\n                        return {\n                            label: this.getPropertyTranslation(this.definition.entity),\n                            value: property,\n                        };\n                    }\n\n                    return {\n                        label: this.getPropertyTranslation(property),\n                        value: property,\n                    };\n                })\n                .filter((option) => option !== null);\n\n            if (this.definition.entity === 'product') {\n                Object.values(this.conditionDataProviderService.allowedJsonAccessors).forEach((field) => {\n                    entityFields.push({\n                        label: this.getPropertyTranslation(field.trans),\n                        value: field.value,\n                    });\n                });\n\n                Object.keys(this.productCustomFields).forEach((customField) => {\n                    entityFields.push(this.productCustomFields[customField]);\n                });\n            }\n\n            return entityFields;\n        },\n\n        arrowPrimaryColor() {\n            if (this.hasError) {\n                return '#de294c';\n            }\n\n            return '#758ca3';\n        },\n    },\n\n    watch: {\n        'definition.entity': {\n            immediate: true,\n            handler(value) {\n                // emit change when there is only one selectable option\n                if (!!value && this.options.length === 1 && !this.field) {\n                    this.changeField(this.options[0].value);\n                }\n            },\n        },\n\n        field: {\n            handler(value) {\n                // emit change when there is only one selectable option\n                if (!!this.definition.entity && this.options.length === 1 && !value) {\n                    this.changeField(this.options[0].value);\n                }\n            },\n        },\n    },\n\n    methods: {\n        changeField(value) {\n            this.$emit('field-changed', { field: value, index: this.index });\n        },\n\n        getPropertyTranslation(property) {\n            const translationKey = `sw-product-stream.filter.values.${property}`;\n            const translated = this.$tc(translationKey);\n\n            return translated === translationKey ? property : translated;\n        },\n    },\n};\n"],"names":["template","index","entityFields","property","option","field","customField","value","translationKey","translated"],"mappings":"AAAA,MAAeA,EAAA,2cCUAC,EAAA,CACX,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,+BACA,qBACH,EAED,MAAO,CAAC,eAAe,EAEvB,MAAO,CACH,WAAY,CACR,KAAM,OACN,SAAU,EACb,EAED,MAAO,CACH,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EAED,MAAO,CACH,KAAM,OACN,SAAU,EACb,EAED,SAAU,CACN,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EAED,SAAU,CACN,KAAM,QACN,SAAU,GACV,QAAS,EACZ,CACJ,EAED,SAAU,CACN,SAAU,CACN,MAAME,EAAe,OAAO,KAAK,KAAK,WAAW,UAAU,EACtD,IAAKC,GACG,KAAK,6BAA6B,sBAAsB,KAAK,WAAW,OAAQA,CAAQ,EAIzFA,IAAa,KACN,CACH,MAAO,KAAK,uBAAuB,KAAK,WAAW,MAAM,EACzD,MAAOA,CACnC,EAG2B,CACH,MAAO,KAAK,uBAAuBA,CAAQ,EAC3C,MAAOA,CAC/B,EAb+B,IAcd,EACA,OAAQC,GAAWA,IAAW,IAAI,EAEvC,OAAI,KAAK,WAAW,SAAW,YAC3B,OAAO,OAAO,KAAK,6BAA6B,oBAAoB,EAAE,QAASC,GAAU,CACrFH,EAAa,KAAK,CACd,MAAO,KAAK,uBAAuBG,EAAM,KAAK,EAC9C,MAAOA,EAAM,KACrC,CAAqB,CACrB,CAAiB,EAED,OAAO,KAAK,KAAK,mBAAmB,EAAE,QAASC,GAAgB,CAC3DJ,EAAa,KAAK,KAAK,oBAAoBI,CAAW,CAAC,CAC3E,CAAiB,GAGEJ,CACV,EAED,mBAAoB,CAChB,OAAI,KAAK,SACE,UAGJ,SACV,CACJ,EAED,MAAO,CACH,oBAAqB,CACjB,UAAW,GACX,QAAQK,EAAO,CAELA,GAAS,KAAK,QAAQ,SAAW,GAAK,CAAC,KAAK,OAC9C,KAAK,YAAY,KAAK,QAAQ,CAAC,EAAE,KAAK,CAE7C,CACJ,EAED,MAAO,CACH,QAAQA,EAAO,CAEL,KAAK,WAAW,QAAU,KAAK,QAAQ,SAAW,GAAK,CAACA,GAC1D,KAAK,YAAY,KAAK,QAAQ,CAAC,EAAE,KAAK,CAE7C,CACJ,CACJ,EAED,QAAS,CACL,YAAYA,EAAO,CACf,KAAK,MAAM,gBAAiB,CAAE,MAAOA,EAAO,MAAO,KAAK,KAAK,CAAE,CAClE,EAED,uBAAuBJ,EAAU,CAC7B,MAAMK,EAAiB,mCAAmCL,CAAQ,GAC5DM,EAAa,KAAK,IAAID,CAAc,EAE1C,OAAOC,IAAeD,EAAiBL,EAAWM,CACrD,CACJ,CACL"}