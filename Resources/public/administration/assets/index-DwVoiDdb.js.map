{"version":3,"file":"index-DwVoiDdb.js","sources":["../../../app/administration/src/module/sw-sales-channel/component/sw-sales-channel-detail-domains/sw-sales-channel-detail-domains.html.twig","../../../app/administration/src/module/sw-sales-channel/component/sw-sales-channel-detail-domains/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_sales_channel_detail_domains %}\n<sw-card\n    :title=\"$tc('sw-sales-channel.detail.titleDomains')\"\n    class=\"sw-sales-channel-detail-domains\"\n    position-identifier=\"sw-sales-channel-detail-domains\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_sales_channel_detail_domains_meta %}\n    <div class=\"sw-sales-channel-detail-domains__meta\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_sales_channel_detail_domains_headline %}\n        <h4 class=\"sw-sales-channel-detail-domains__headline sw-sales-channel-detail-base__headline\">\n            <span class=\"sw-sales-channel-detail-domains__headline-text sw-sales-channel-detail-base__headline-text\">\n                {{ $tc('sw-sales-channel.detail.titleDomainHeadline') }}\n            </span>\n        </h4>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_sales_channel_detail_domains_add_button %}\n        <sw-button\n            size=\"small\"\n            :disabled=\"disableEdit || undefined\"\n            class=\"sw-sales-channel-detail__button-domain-add\"\n            @click=\"onClickOpenCreateDomainModal\"\n        >\n            {{ $tc('sw-sales-channel.detail.buttonAddDomain') }}\n        </sw-button>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <template #grid>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_sales_channel_detail_domains_grid %}\n        <sw-data-grid\n            ref=\"gridDomains\"\n            :data-source=\"sortedDomains\"\n            :columns=\"getDomainColumns()\"\n            :show-selection=\"false\"\n            :is-loading=\"isLoadingDomains\"\n            :show-actions=\"true\"\n            :sort-by=\"sortBy\"\n            :sort-direction=\"sortDirection\"\n            @column-sort=\"sortColumns\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_domains_columns_template %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_domains_column_url %}\n            <template\n                #column-url=\"{ item }\"\n            >\n                {{ unicodeUriFilter(item.url) }}\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_domains_column_language_id %}\n            <template\n                #column-languageId=\"{ item, isInlineEdit}\"\n            >\n                {{ item.language.name }}\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_domains_column_currency_id %}\n            <template\n                #column-currencyId=\"{ item, isInlineEdit}\"\n            >\n                {{ item.currency.translated.name }}\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_domains_column_snippet_set_id %}\n            <template\n                #column-snippetSetId=\"{ item, isInlineEdit}\"\n            >\n                {{ item.snippetSet.name }}\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_domains_column_actions %}\n            <template #actions=\"{ item }\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_sales_channel_detail_domains_column_action_domain_edit %}\n                <sw-context-menu-item\n                    :disabled=\"disableEdit\"\n                    @click=\"onClickEditDomain(item)\"\n                >\n                    {{ $tc('sw-sales-channel.detail.buttonEditDomain') }}\n                </sw-context-menu-item>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_sales_channel_detail_domains_column_action_domain_delete %}\n                <sw-context-menu-item\n                    :disabled=\"disableEdit\"\n                    variant=\"danger\"\n                    @click=\"onClickDeleteDomain(item)\"\n                >\n                    {{ $tc('sw-sales-channel.detail.buttonDeleteDomain') }}\n                </sw-context-menu-item>\n                {% endblock %}\n            </template>\n            {% endblock %}\n            {% endblock %}\n        </sw-data-grid>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_sales_channel_detail_domains_create_modal %}\n    <sw-modal\n        v-if=\"currentDomain\"\n        :title=\"currentDomainModalTitle\"\n        @modal-close=\"onCloseCreateDomainModal\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_sales_channel_detail_domains_create_modal_content %}\n        <sw-container\n            columns=\"repeat(auto-fit, minmax(250px, 1fr))\"\n            gap=\"0px 30px\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_domains_input_url %}\n            <sw-url-field\n                v-model:value=\"currentDomain.url\"\n                type=\"text\"\n                omit-url-hash\n                omit-url-search\n                :label=\"$tc('sw-sales-channel.detail.labelInputUrl')\"\n                :error=\"error\"\n                @update:value=\"onInput\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_domains_input_language %}\n            <sw-single-select\n                v-model:value=\"currentDomain.languageId\"\n                class=\"sw-sales-channel-detail-domains__domain-language-select\"\n                :options=\"salesChannel.languages\"\n                label-property=\"name\"\n                value-property=\"id\"\n                required\n                :label=\"$tc('sw-sales-channel.detail.labelInputLanguage')\"\n                show-clearable-button\n                @update:value=\"onLanguageSelect\"\n            />\n            {% endblock %}\n        </sw-container>\n\n        <sw-container\n            columns=\"repeat(auto-fit, minmax(250px, 1fr))\"\n            gap=\"0px 30px\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_domains_input_currency %}\n            <sw-single-select\n                v-model:value=\"currentDomain.currencyId\"\n                class=\"sw-sales-channel-detail-domains__domain-currency-select\"\n                :label=\"$tc('sw-sales-channel.detail.labelInputCurrency')\"\n                required\n                show-clearable-button\n                :options=\"salesChannel.currencies\"\n                label-property=\"translated.name\"\n                value-property=\"id\"\n                @update:value=\"onCurrencySelect\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_domains_input_snippet_set %}\n            <sw-entity-single-select\n                v-model:value=\"currentDomain.snippetSetId\"\n                entity=\"snippet_set\"\n                :criteria=\"snippetSetCriteria\"\n                :label=\"$tc('sw-sales-channel.detail.labelInputSnippet')\"\n                required\n                show-clearable-button\n                @option-select=\"onOptionSelect\"\n            />\n            {% endblock %}\n        </sw-container>\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_sales_channel_detail_domains_hreflang %}\n        <sw-radio-field\n            v-model:value=\"currentDomain.hreflangUseOnlyLocale\"\n            :label=\"$tc('sw-sales-channel.detail.hreflang.domainSettings.label')\"\n            identification=\"hreflang\"\n            :options=\"hreflangLocalisationOptions\"\n        />\n        {% endblock %}\n        {% endblock %}\n\n        <template #modal-footer>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_domains_create_action_cancel %}\n            <sw-button\n                size=\"small\"\n                @click=\"onCloseCreateDomainModal\"\n            >\n                {{ $tc('global.default.cancel') }}\n            </sw-button>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_domains_create_action_create %}\n            <sw-button\n                size=\"small\"\n                variant=\"primary\"\n                :disabled=\"disabled\"\n                @click=\"onClickAddNewDomain\"\n            >\n                {{ currentDomainModalButtonText }}\n            </sw-button>\n            {% endblock %}\n        </template>\n    </sw-modal>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_sales_channel_detail_domains_delete_modal %}\n    <sw-modal\n        v-if=\"deleteDomain\"\n        :title=\"$tc('sw-sales-channel.detail.deleteDomainModalTitle')\"\n        variant=\"small\"\n        @modal-close=\"onCloseDeleteDomainModal\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_sales_channel_detail_domains_delete_modal_confirm_text %}\n        {{ $tc('sw-sales-channel.detail.textConfirmDeleteDomain', 0, { url: unicodeUriFilter(deleteDomain.url) }) }}\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_sales_channel_detail_domains_delete_modal_footer %}\n        <template #modal-footer>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_domains_delete_modal_abort %}\n            <sw-button\n                size=\"small\"\n                @click=\"onCloseDeleteDomainModal\"\n            >\n                {{ $tc('global.default.cancel') }}\n            </sw-button>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_domains_delete_modal_confirm %}\n            <sw-button\n                size=\"small\"\n                variant=\"danger\"\n                @click=\"onConfirmDeleteDomain(deleteDomain)\"\n            >\n                {{ $tc('sw-sales-channel.detail.buttonConfirmDeleteDomain') }}\n            </sw-button>\n            {% endblock %}\n        </template>\n        {% endblock %}\n    </sw-modal>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n","/**\n * @package discovery\n */\n\nimport template from './sw-sales-channel-detail-domains.html.twig';\nimport './sw-sales-channel-detail-domains.scss';\n\nconst { Mixin, Context } = Cicada;\nconst { Criteria } = Cicada.Data;\nconst { CicadaError } = Cicada.Classes;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        // eslint-disable-next-line vue/require-prop-types\n        salesChannel: {\n            required: true,\n        },\n\n        disableEdit: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            currentDomain: null,\n            currentDomainBackup: {\n                url: null,\n                language: null,\n                languageId: null,\n                currency: null,\n                currencyId: null,\n                snippetSet: null,\n                snippetSetId: null,\n            },\n            isLoadingDomains: false,\n            deleteDomain: null,\n            sortBy: 'url',\n            sortDirection: 'ASC',\n            error: null,\n            isEditingDomain: false,\n        };\n    },\n\n    computed: {\n        domainRepository() {\n            return this.repositoryFactory.create(this.salesChannel.domains.entity, this.salesChannel.domains.source);\n        },\n\n        currentDomainModalTitle() {\n            if (!this.isEditingDomain) {\n                return this.$t('sw-sales-channel.detail.titleCreateDomain');\n            }\n\n            return this.$t('sw-sales-channel.detail.titleEditDomain', 0, {\n                name: this.unicodeUriFilter(this.currentDomainBackup.url),\n            });\n        },\n\n        currentDomainModalButtonText() {\n            if (!this.isEditingDomain) {\n                return this.$t('sw-sales-channel.detail.buttonAddDomain');\n            }\n            return this.$t('sw-sales-channel.detail.buttonEditDomain');\n        },\n\n        snippetSetCriteria() {\n            return new Criteria(1, 25).addSorting(Criteria.sort('name', 'ASC'));\n        },\n\n        salesChannelFilterCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addAssociation('salesChannels').addSorting(Criteria.sort('name', 'ASC'));\n\n            return criteria.addFilter(Criteria.equals('salesChannels.id', this.salesChannel.id));\n        },\n\n        currencyCriteria() {\n            return new Criteria(1, 25).addSorting(Criteria.sort('name', 'ASC'));\n        },\n\n        hreflangLocalisationOptions() {\n            return [\n                {\n                    name: this.$tc('sw-sales-channel.detail.hreflang.domainSettings.byIso'),\n                    value: false,\n                    helpText: this.$tc('sw-sales-channel.detail.hreflang.domainSettings.byIsoHelpText'),\n                },\n                {\n                    name: this.$tc('sw-sales-channel.detail.hreflang.domainSettings.byAbbreviation'),\n                    value: true,\n                    helpText: this.$tc('sw-sales-channel.detail.hreflang.domainSettings.byAbbreviationHelpText'),\n                },\n            ];\n        },\n\n        disabled() {\n            return (\n                !this.currentDomain ||\n                !this.currentDomain.currencyId ||\n                !this.currentDomain.snippetSetId ||\n                !this.currentDomain.url ||\n                !this.currentDomain.languageId ||\n                this.disableEdit ||\n                this.error !== null\n            );\n        },\n\n        sortedDomains() {\n            const domains = [...this.salesChannel.domains];\n\n            return this.localSortDomains(domains);\n        },\n    },\n\n    methods: {\n        sortColumns(column) {\n            if (this.sortBy === column.dataIndex) {\n                // If the same column, that is already being sorted, is clicked again, change direction\n                this.sortDirection = this.sortDirection === 'ASC' ? 'DESC' : 'ASC';\n            } else {\n                // We clicked on a new column to be sorted, therefore set the sort field and the direction to 'ASC'\n                this.sortBy = column.dataIndex;\n                this.sortDirection = 'ASC';\n            }\n        },\n\n        unicodeUriFilter(uri) {\n            const unicodeUriFilter = Cicada.Filter.getByName('unicodeUri');\n            return unicodeUriFilter(uri);\n        },\n\n        localSortDomains(domains) {\n            domains.sort((a, b) => {\n                const valA = this.getSortValue(a, this.sortBy).toString();\n                const valB = this.getSortValue(b, this.sortBy).toString();\n\n                const compareVal = valA.localeCompare(valB, undefined, {\n                    numeric: true,\n                    sensitivity: 'base',\n                });\n\n                if (this.sortDirection === 'ASC') {\n                    return compareVal;\n                }\n\n                return compareVal * -1;\n            });\n\n            return domains;\n        },\n\n        getSortValue(val, column) {\n            // Removes 'Id' from fields like 'languageId', so we're accessing 'language' instead\n            column = column.replace('Id', '');\n\n            if (val.hasOwnProperty(column) && typeof val[column] === 'object' && val[column].hasOwnProperty('name')) {\n                return val[column].name;\n            }\n\n            return val[column];\n        },\n\n        onInput() {\n            this.error = null;\n        },\n\n        async verifyUrl(domain) {\n            return !(this.domainExistsLocal(domain) || (await this.domainExistsInDatabase(domain.url)));\n        },\n\n        domainExistsLocal(currentDomain) {\n            return (\n                this.salesChannel.domains.filter(\n                    (domain) => domain.id !== currentDomain.id && domain.url === currentDomain.url,\n                ).length > 0\n            );\n        },\n\n        isOriginalUrl(url) {\n            return url === this.currentDomainBackup.url;\n        },\n\n        async domainExistsInDatabase(url) {\n            const globalDomainRepository = this.repositoryFactory.create(this.salesChannel.domains.entity);\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(Criteria.equals('url', url));\n\n            const items = await globalDomainRepository.search(criteria);\n\n            if (items.total === 0) {\n                return false;\n            }\n\n            // Edge case: Delete domain, which is in database already, and then try to re-add it.\n            // In that case a database entry is still available, yet locally it's not available anymore.\n            // We don't want to prevent re-adding this domain in that case.\n            return items.first().salesChannelId !== this.salesChannel.id;\n        },\n\n        setCurrentDomainBackup(domain) {\n            this.currentDomainBackup = {\n                url: domain.url,\n                language: domain.language,\n                languageId: domain.languageId,\n                currency: domain.currency,\n                currencyId: domain.currencyId,\n                snippetSet: domain.snippetSet,\n                snippetSetId: domain.snippetSetId,\n            };\n        },\n\n        resetCurrentDomainToBackup() {\n            this.currentDomain.url = this.currentDomainBackup.url;\n            this.currentDomain.language = this.currentDomainBackup.language;\n            this.currentDomain.languageId = this.currentDomainBackup.languageId;\n            this.currentDomain.currency = this.currentDomainBackup.currency;\n            this.currentDomain.currencyId = this.currentDomainBackup.currencyId;\n            this.currentDomain.snippetSet = this.currentDomainBackup.snippetSet;\n            this.currentDomain.snippetSetId = this.currentDomainBackup.snippetSetId;\n        },\n\n        setInitialCurrency(domain) {\n            const currency = this.salesChannel.currencies.first();\n            domain.currency = currency;\n            domain.currencyId = currency.id;\n            this.currentDomain = domain;\n        },\n\n        setInitialLanguage(domain) {\n            const language = this.salesChannel.languages.first();\n            domain.language = language;\n            domain.languageId = language.id;\n            this.currentDomain = domain;\n        },\n\n        onClickOpenCreateDomainModal() {\n            const domain = this.domainRepository.create(Context.api);\n\n            this.setCurrentDomainBackup(domain);\n\n            if (this.salesChannel.currencies.length === 1) {\n                this.setInitialCurrency(domain);\n            }\n\n            if (this.salesChannel.languages.length === 1) {\n                this.setInitialLanguage(domain);\n            }\n\n            domain.hreflangUseOnlyLocale = false;\n\n            this.currentDomain = domain;\n            this.isEditingDomain = false;\n        },\n\n        async onClickAddNewDomain() {\n            if (this.isOriginalUrl(this.currentDomain.url)) {\n                this.currentDomain = null;\n                return;\n            }\n\n            if (!(await this.verifyUrl(this.currentDomain))) {\n                this.error = new CicadaError({\n                    code: 'DUPLICATED_URL',\n                });\n\n                return;\n            }\n\n            if (!this.isEditingDomain) {\n                this.salesChannel.domains.add(this.currentDomain);\n            }\n\n            this.currentDomain = null;\n            this.isEditingDomain = false;\n        },\n\n        onClickEditDomain(domain) {\n            this.currentDomain = domain;\n            this.setCurrentDomainBackup(this.currentDomain);\n            this.isEditingDomain = true;\n        },\n\n        onCloseCreateDomainModal() {\n            this.resetCurrentDomainToBackup();\n            this.currentDomain = null;\n            this.isEditingDomain = false;\n        },\n\n        onClickDeleteDomain(domain) {\n            if (domain.isNew()) {\n                this.onConfirmDeleteDomain(domain);\n            } else {\n                this.deleteDomain = domain;\n            }\n        },\n\n        onConfirmDeleteDomain(domain) {\n            if (domain.productExports.length > 0) {\n                this.createNotificationError({\n                    message: this.$tc('sw-sales-channel.detail.messageDeleteDomainError', 0, {\n                        url: this.unicodeUriFilter(domain.url),\n                    }),\n                });\n\n                this.deleteDomain = null;\n\n                return;\n            }\n\n            this.deleteDomain = null;\n\n            this.$nextTick(() => {\n                this.salesChannel.domains.remove(domain.id);\n            });\n        },\n\n        onCloseDeleteDomainModal() {\n            this.deleteDomain = null;\n        },\n\n        onLanguageSelect(id) {\n            this.onOptionSelect('language', this.salesChannel.languages.get(id));\n        },\n\n        onCurrencySelect(id) {\n            this.onOptionSelect('currency', this.salesChannel.currencies.get(id));\n        },\n\n        onOptionSelect(name, entity) {\n            this.currentDomain[name] = entity;\n        },\n\n        getDomainColumns() {\n            return [\n                {\n                    property: 'url',\n                    dataIndex: 'url',\n                    label: this.$t('sw-sales-channel.detail.columnDomainUrl'),\n                    allowResize: false,\n                    primary: true,\n                    inlineEdit: true,\n                },\n                {\n                    property: 'languageId',\n                    dataIndex: 'languageId',\n                    label: this.$t('sw-sales-channel.detail.columnDomainLanguage'),\n                    allowResize: false,\n                    inlineEdit: false,\n                },\n                {\n                    property: 'snippetSetId',\n                    dataIndex: 'snippetSetId',\n                    label: this.$t('sw-sales-channel.detail.columnDomainSnippetSet'),\n                    allowResize: false,\n                    inlineEdit: false,\n                },\n                {\n                    property: 'currencyId',\n                    dataIndex: 'currencyId',\n                    label: this.$t('sw-sales-channel.detail.columnDomainCurrency'),\n                    allowResize: false,\n                    inlineEdit: false,\n                },\n            ];\n        },\n    },\n};\n"],"names":["template","Mixin","Context","Criteria","CicadaError","index","criteria","domains","column","uri","a","b","valA","valB","compareVal","val","domain","currentDomain","url","globalDomainRepository","items","currency","language","id","name","entity"],"mappings":"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"}