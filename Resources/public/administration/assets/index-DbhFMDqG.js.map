{"version":3,"file":"index-DbhFMDqG.js","sources":["../../../app/administration/src/module/sw-first-run-wizard/view/sw-first-run-wizard-welcome/sw-first-run-wizard-welcome.html.twig","../../../app/administration/src/module/sw-first-run-wizard/view/sw-first-run-wizard-welcome/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_first_run_wizard_welcome %}\n<div class=\"sw-first-run-wizard-welcome\">\n    <div class=\"center\">\n        <img\n            class=\"sw-first-run-wizard__welcome-image\"\n            :src=\"assetFilter('/administration/static/img/first-run-wizard/welcome.svg')\"\n            alt=\"\"\n        >\n        <h4 class=\"headline-welcome\">\n            {{ $tc('sw-first-run-wizard.welcome.headlineWelcome') }}\n        </h4>\n        <p\n            class=\"text-welcome\"\n            v-html=\"$tc('sw-first-run-wizard.welcome.messageWelcome')\"\n        ></p>\n    </div>\n\n    <h5\n        v-if=\"languagePlugins.length\"\n        class=\"text-change-language\"\n    >\n        {{ $tc('sw-first-run-wizard.welcome.headlineChangeLanguage') }}\n    </h5>\n\n    <sw-loader v-if=\"isLoading\" />\n\n    <sw-container\n        columns=\"1fr 1fr\"\n        gap=\"24px 0\"\n    >\n        <sw-plugin-card\n            v-for=\"languagePlugin in languagePlugins\"\n            :key=\"languagePlugin.name\"\n            :plugin=\"languagePlugin\"\n            @on-plugin-installed=\"onPluginInstalled\"\n            @extension-activated=\"$emit('extension-activated', $event)\"\n        />\n    </sw-container>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_first_run_wizard_welcome_confirm_language_switch_modal %}\n    <sw-modal\n        v-if=\"showConfirmLanguageSwitchModal\"\n        variant=\"small\"\n        :title=\"$tc('sw-first-run-wizard.welcome.switchLanguageModalTitle')\"\n        class=\"sw-first-run-wizard-confirmLanguageSwitch-modal\"\n        @modal-close=\"onCancelSwitch\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_first_run_wizard_welcome_confirm_language_switch_modal_text %}\n        <p class=\"sw-first-run-wizard-welcome__modal-text\">\n            {{ $tc('sw-first-run-wizard.welcome.switchLanguageMessage', {}, { pluginName: latestTouchedPlugin.name }) }}\n        </p>\n        <sw-select-field\n            v-model:value=\"user.localeId\"\n            class=\"sw-profile__language\"\n            :label=\"$tc('sw-users-permissions.users.user-detail.labelLanguage')\"\n        >\n            <option\n                v-for=\"language in languages\"\n                :key=\"language.locale.id\"\n                :value=\"language.locale.id\"\n                :selected=\"user.localeId === language.locale.id\"\n            >\n                {{ language.customLabel }}\n            </option>\n        </sw-select-field>\n        <sw-password-field\n            v-model:value=\"user.pw\"\n            type=\"password\"\n            :label=\"$tc('sw-first-run-wizard.cicadaAccount.passwordPlaceholder')\"\n            @keypress.enter=\"onConfirmLanguageSwitch\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_first_run_wizard_welcome_confirm_language_switch_modal_footer %}\n        <template #modal-footer>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_first_run_wizard_welcome_confirm_language_switch_modal_action_cancel %}\n            <sw-button\n                size=\"small\"\n                @click=\"onCancelSwitch\"\n            >\n                {{ $tc('global.default.cancel') }}\n            </sw-button>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_first_run_wizard_welcome_confirm_language_switch_modal_action_switch %}\n            <sw-button\n                size=\"small\"\n                variant=\"primary\"\n                @click=\"onConfirmLanguageSwitch\"\n            >\n                {{ $tc('sw-first-run-wizard.welcome.confirmLanguageSwitch') }}\n            </sw-button>\n            {% endblock %}\n        </template>\n        {% endblock %}\n    </sw-modal>\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-first-run-wizard-welcome.html.twig';\nimport './sw-first-run-wizard-welcome.scss';\n\nconst { Criteria } = Cicada.Data;\n\n/**\n * @package checkout\n * @private\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'languagePluginService',\n        'userService',\n        'loginService',\n        'repositoryFactory',\n    ],\n\n    emits: [\n        'extension-activated',\n        'frw-set-title',\n        'buttons-update',\n    ],\n\n    mixins: [\n        'notification',\n    ],\n\n    data() {\n        return {\n            languages: [],\n            languagePlugins: [],\n            latestTouchedPlugin: null,\n            showConfirmLanguageSwitchModal: false,\n            newLocaleId: null,\n            user: { localeId: '', pw: '' },\n            userProfile: {},\n            userPromise: null,\n            isLoading: false,\n        };\n    },\n\n    computed: {\n        languageRepository() {\n            return this.repositoryFactory.create('language');\n        },\n\n        userRepository() {\n            return this.repositoryFactory.create('user');\n        },\n\n        languageId() {\n            return Cicada.State.get('session').languageId;\n        },\n\n        languageCriteria() {\n            return this.getLanguageCriteria();\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        languageId() {\n            this.createdComponent();\n        },\n    },\n\n    beforeMount() {\n        this.beforeMountComponent();\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        beforeMountComponent() {\n            this.userPromise.then((user) => {\n                this.user = user;\n            });\n        },\n\n        createdComponent() {\n            this.updateButtons();\n            this.setTitle();\n            this.getLanguagePlugins();\n\n            const languagePromise = new Promise((resolve) => {\n                resolve(this.languageId);\n            });\n\n            this.userPromise = this.userService.getUser().then((response) => {\n                return this.setUserData(response.data);\n            });\n\n            const promises = [\n                languagePromise,\n                this.userPromise,\n            ];\n\n            Promise.all(promises).then(() => {\n                this.loadLanguages();\n            });\n        },\n\n        setTitle() {\n            this.$emit('frw-set-title', this.$tc('sw-first-run-wizard.welcome.modalTitle'));\n        },\n\n        updateButtons() {\n            const disabledExtensionManagement = Cicada.State.get('context').app.config.settings.disableExtensionManagement;\n            const nextRoute = disabledExtensionManagement ? 'defaults' : 'data-import';\n\n            const buttonConfig = [\n                {\n                    key: 'next',\n                    label: this.$tc('sw-first-run-wizard.general.buttonNext'),\n                    position: 'right',\n                    variant: 'primary',\n                    action: `sw.first.run.wizard.index.${nextRoute}`,\n                    disabled: false,\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        setUserData(userProfile) {\n            this.userProfile = userProfile;\n            return new Promise((resolve) => {\n                resolve(this.userRepository.get(this.userProfile.id));\n            });\n        },\n\n        getLanguagePlugins() {\n            if (Cicada.State.get('context').app.config.settings.disableExtensionManagement) {\n                this.languagePlugins = [];\n                return;\n            }\n\n            this.languagePluginService.getPlugins().then((response) => {\n                this.languagePlugins = response.items;\n            });\n        },\n\n        onPluginInstalled(plugin) {\n            this.latestTouchedPlugin = this.getPluginByName(plugin);\n\n            this.getLanguagePlugins();\n            this.isLoading = true;\n            this.loadLanguages().then(() => {\n                this.showConfirmLanguageSwitchModal = true;\n                this.isLoading = false;\n            });\n        },\n\n        onPluginRemoved(plugin) {\n            this.latestTouchedPlugin = this.getPluginByName(plugin);\n\n            this.getLanguagePlugins();\n        },\n\n        onConfirmLanguageSwitch() {\n            this.loginService\n                .verifyUserToken(this.user.pw)\n                .then((verifiedToken) => {\n                    const context = { ...Cicada.Context.api };\n                    context.authToken.access = verifiedToken;\n\n                    this.userRepository\n                        .save(this.user, context)\n                        .then(async () => {\n                            await Cicada.Service('localeHelper').setLocaleWithId(this.user.localeId);\n                        })\n                        .finally(() => {\n                            this.showConfirmLanguageSwitchModal = false;\n                        });\n                })\n                .catch(() => {\n                    /* eslint-disable max-len */\n                    this.createNotificationError({\n                        title: this.$tc(\n                            'sw-users-permissions.users.user-detail.passwordConfirmation.notificationPasswordErrorTitle',\n                        ),\n                        message: this.$tc(\n                            'sw-users-permissions.users.user-detail.passwordConfirmation.notificationPasswordErrorMessage',\n                        ),\n                    });\n                })\n                .finally(() => {\n                    this.confirmPassword = '';\n                });\n        },\n\n        onCancelSwitch() {\n            this.showConfirmLanguageSwitchModal = false;\n        },\n\n        getPluginByName(name) {\n            if (this.languagePlugins.length < 1) {\n                return null;\n            }\n\n            return this.languagePlugins.find((p) => p.name === name);\n        },\n\n        getLanguageCriteria() {\n            const languageCriteria = new Criteria(1, null);\n            languageCriteria.addAssociation('locale');\n            languageCriteria.addSorting(Criteria.sort('locale.name', 'ASC'));\n            languageCriteria.addSorting(Criteria.sort('locale.territory', 'ASC'));\n\n            return languageCriteria;\n        },\n\n        showPluginErrorNotification(message, errorMessage) {\n            const tryLater = this.$tc('sw-first-run-wizard.welcome.tryAgainLater');\n\n            this.createNotificationError({\n                message: `${message}\\n${errorMessage}\\n${tryLater}`,\n            });\n        },\n\n        loadLanguages() {\n            return this.languageRepository.search(this.languageCriteria).then((result) => {\n                this.languages = [];\n\n                result.forEach((lang) => {\n                    lang.customLabel = `${lang.locale.translated.name} (${lang.locale.translated.territory})`;\n                    this.languages.push(lang);\n                });\n\n                return this.languages;\n            });\n        },\n    },\n};\n"],"names":["template","Criteria","index","user","languagePromise","resolve","response","promises","nextRoute","buttonConfig","userProfile","plugin","verifiedToken","context","name","p","languageCriteria","message","errorMessage","tryLater","result","lang"],"mappings":"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"}