{"version":3,"file":"index-DOwKbm3I.js","sources":["../../../app/administration/src/module/sw-category/page/sw-category-detail/state.js","../../../app/administration/src/module/sw-category/page/sw-category-detail/sw-category-detail.html.twig","../../../app/administration/src/module/sw-category/page/sw-category-detail/index.js"],"sourcesContent":["const { Criteria } = Cicada.Data;\n\n/**\n * @package discovery\n * @deprecated tag:v6.7.0 - Will be replaced with Pinia store\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    namespaced: true,\n\n    state() {\n        return {\n            landingPage: null,\n            category: null,\n            customFieldSets: [],\n            landingPagesToDelete: undefined,\n            categoriesToDelete: undefined,\n        };\n    },\n\n    mutations: {\n        setActiveLandingPage(state, { landingPage }) {\n            state.landingPage = landingPage;\n        },\n\n        setActiveCategory(state, { category }) {\n            state.category = category;\n        },\n\n        setCustomFieldSets(state, newCustomFieldSets) {\n            state.customFieldSets = newCustomFieldSets;\n        },\n\n        setLandingPagesToDelete(state, { landingPagesToDelete }) {\n            state.landingPagesToDelete = landingPagesToDelete;\n        },\n\n        setCategoriesToDelete(state, { categoriesToDelete }) {\n            state.categoriesToDelete = categoriesToDelete;\n        },\n    },\n\n    actions: {\n        setActiveLandingPage({ commit }, payload) {\n            commit('setActiveLandingPage', payload);\n        },\n\n        loadActiveLandingPage({ commit }, { repository, id, apiContext, criteria }) {\n            if (id === 'create') {\n                const landingPage = repository.create(apiContext);\n                landingPage.cmsPageId = null;\n                commit('setActiveLandingPage', { landingPage });\n                return Promise.resolve();\n            }\n\n            if (!criteria) {\n                criteria = new Criteria(1, 25);\n            }\n\n            return repository.get(id, apiContext, criteria).then((landingPage) => {\n                commit('setActiveLandingPage', { landingPage });\n            });\n        },\n\n        setActiveCategory({ commit }, payload) {\n            commit('setActiveCategory', payload);\n        },\n\n        loadActiveCategory({ commit }, { repository, id, apiContext, criteria }) {\n            if (!criteria) {\n                criteria = new Criteria(1, 25);\n            }\n\n            return repository\n                .get(id, apiContext, criteria)\n                .then((category) => {\n                    category.isColumn = false;\n                    if (category.parentId !== null) {\n                        const parentCriteria = new Criteria(1, 25);\n                        parentCriteria.addAssociation('footerSalesChannels');\n\n                        return repository.get(category.parentId, apiContext, parentCriteria).then((parent) => {\n                            category.parent = parent;\n\n                            category.isColumn =\n                                category.parent !== undefined &&\n                                category.parent.footerSalesChannels !== undefined &&\n                                category.parent.footerSalesChannels.length !== 0;\n\n                            return Promise.resolve(category);\n                        });\n                    }\n\n                    return Promise.resolve(category);\n                })\n                .then((category) => {\n                    commit('setActiveCategory', { category });\n                });\n        },\n    },\n};\n","<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_category %}\n<sw-page\n    class=\"sw-category\"\n    :class=\"pageClasses\"\n>\n    <template #search-bar>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_category_search_bar %}\n        <sw-search-bar\n            ref=\"searchBar\"\n            initial-search-type=\"category\"\n            :initial-search=\"term\"\n            type-search-always-in-container\n            @search=\"onSearch\"\n        />\n        {% endblock %}\n    </template>\n\n    <template #smart-bar-header>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_category_smart_bar_header %}\n        <h2 v-if=\"category\">\n            {{ placeholder(category, 'name') }}\n        </h2>\n        <h2 v-else>\n            {{ $tc('sw-category.general.headlineCategories') }}\n        </h2>\n        {% endblock %}\n    </template>\n\n    <template #language-switch>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_category_language_switch %}\n        <sw-language-switch\n            :save-changes-function=\"saveOnLanguageChange\"\n            :abort-change-function=\"abortOnLanguageChange\"\n            :disabled=\"landingPageId === 'create'\"\n            @on-change=\"onChangeLanguage\"\n        />\n        {% endblock %}\n    </template>\n\n    <template #smart-bar-actions>\n        <template v-if=\"category || landingPage\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_category_smart_bar_abort %}\n            <sw-button\n                v-tooltip.bottom=\"tooltipCancel\"\n                :disabled=\"isLoading\"\n                @click=\"cancelEdit\"\n            >\n                {{ $tc('global.default.cancel') }}\n            </sw-button>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_category_smart_bar_save %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_category_smart_bar_save_category %}\n            <sw-button-process\n                v-if=\"category\"\n                v-tooltip.bottom=\"tooltipSave\"\n                class=\"sw-category-detail__save-action\"\n                :is-loading=\"isLoading\"\n                :process-success=\"isSaveSuccessful\"\n                :disabled=\"isLoading || !acl.can('category.editor')\"\n                variant=\"primary\"\n                @update:process-success=\"saveFinish\"\n                @click.prevent=\"onSave\"\n            >\n                {{ $tc('sw-category.general.buttonSafeCategory') }}\n            </sw-button-process>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_category_smart_bar_save_landing_page %}\n            <sw-button-process\n                v-if=\"landingPage\"\n                v-tooltip.bottom=\"landingPageTooltipSave\"\n                class=\"sw-category-detail__save-landing-page-action\"\n                :is-loading=\"isLoading\"\n                :process-success=\"isSaveSuccessful\"\n                :disabled=\"isLoading || !acl.can('landing_page.editor')\"\n                variant=\"primary\"\n                @update:process-success=\"saveFinish\"\n                @click.prevent=\"onSaveLandingPage\"\n            >\n                {{ $tc('sw-category.general.buttonSafeCategory') }}\n            </sw-button-process>\n            {% endblock %}\n            {% endblock %}\n        </template>\n    </template>\n\n    <template #side-content>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_category_side_content %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_category_collapse %}\n        <sw-sidebar-collapse\n            class=\"sw-category-detail__category-collapse\"\n            :expand-on-loading=\"landingPageId === null\"\n        >\n            <template #header>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_category_collapse_header %}\n                <div\n                    v-if=\"categoryCheckedItem > 0\"\n                    class=\"sw-category-detail__collapse-selected-count\"\n                >\n                    {{ $tc(`sw-category.general.treeHeadSelected`, 0, { count: categoryCheckedItem }) }}:\n                </div>\n                <div\n                    v-else\n                    class=\"sw-category-detail__collapse-headline\"\n                >\n                    {{ $tc(`sw-category.general.treeHeadline`) }}\n                </div>\n                {% endblock %}\n\n            </template>\n\n            <template #actions>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_category_collapse_actions %}\n                <div v-if=\"categoryCheckedItem > 0\">\n                    <sw-button\n                        class=\"sw-tree-actions__delete_categories\"\n                        variant=\"danger\"\n                        size=\"small\"\n                        @click=\"onCategoryDelete\"\n                    >\n                        {{ $tc('global.default.delete') }}\n                    </sw-button>\n                </div>\n                {% endblock %}\n\n            </template>\n\n            <template #content>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_category_tree %}\n                <sw-category-tree\n                    ref=\"categoryTree\"\n                    :category-id=\"categoryId\"\n                    :current-language-id=\"currentLanguageId\"\n                    :allow-edit=\"acl.can('category.editor')\"\n                    :allow-create=\"acl.can('category.creator')\"\n                    :allow-delete=\"acl.can('category.deleter')\"\n                    @unsaved-changes=\"openChangeModal\"\n                    @category-checked-elements-count=\"categoryCheckedElementsCount\"\n                />\n                {% endblock %}\n\n            </template>\n        </sw-sidebar-collapse>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_landing_page_collapse %}\n        <sw-sidebar-collapse\n            class=\"sw-category-detail__landing-page-collapse\"\n            :expand-on-loading=\"landingPageId !== null\"\n        >\n            <template #header>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_landing_page_collapse_header %}\n                <div\n                    v-if=\"landingPageCheckedItem > 0\"\n                    class=\"sw-category-detail__collapse-selected-count\"\n                >\n                    {{ $tc(`sw-landing-page.general.treeHeadSelected`, 0, { count: landingPageCheckedItem }) }}:\n                </div>\n                <div\n                    v-else\n                    class=\"sw-category-detail__collapse-headline\"\n                >\n                    {{ $tc(`sw-landing-page.general.treeHeadline`) }}\n                </div>\n                {% endblock %}\n\n            </template>\n\n            <template #actions>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_landing_page_collapse_actions %}\n                <div v-if=\"landingPageCheckedItem > 0\">\n                    <sw-button\n                        class=\"sw-tree-actions__delete_categories\"\n                        variant=\"danger\"\n                        size=\"small\"\n                        @click=\"onLandingPageDelete\"\n                    >\n                        {{ $tc('global.default.delete') }}\n                    </sw-button>\n                </div>\n                {% endblock %}\n\n            </template>\n\n            <template #content>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_landing_page_tree %}\n                <sw-landing-page-tree\n                    ref=\"landingPageTree\"\n                    :landing-page-id=\"landingPageId\"\n                    :current-language-id=\"currentLanguageId\"\n                    :allow-edit=\"acl.can('landing_page.editor')\"\n                    :allow-create=\"acl.can('landing_page.creator')\"\n                    :allow-delete=\"acl.can('landing_page.deleter')\"\n                    @unsaved-changes=\"openChangeModal\"\n                    @landing-page-checked-elements-count=\"landingPageCheckedElementsCount\"\n                />\n                {% endblock %}\n\n            </template>\n        </sw-sidebar-collapse>\n        {% endblock %}\n        {% endblock %}\n    </template>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_category_content %}\n    <template #content>\n\n        <template v-if=\"isLoading\">\n            <sw-skeleton variant=\"detail-bold\" />\n            <sw-skeleton />\n        </template>\n\n        <template v-else>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_category_content_view %}\n            <sw-category-view\n                v-if=\"category\"\n                ref=\"categoryView\"\n                :is-loading=\"isLoading\"\n                :type=\"category.type\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_category_content_entry_point_overwrite_modal %}\n            <sw-category-entry-point-overwrite-modal\n                v-if=\"showEntryPointOverwriteModal\"\n                :sales-channels=\"entryPointOverwriteSalesChannels\"\n                @cancel=\"cancelEntryPointOverwrite\"\n                @confirm=\"confirmEntryPointOverwrite\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_landing_page_content_view %}\n            <sw-landing-page-view\n                v-if=\"landingPage\"\n                ref=\"landingPageView\"\n                :is-loading=\"isLoading\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_category_content_discard_changes_modal %}\n            <sw-discard-changes-modal\n                v-if=\"isDisplayingLeavePageWarning\"\n                @keep-editing=\"onLeaveModalClose(nextRoute)\"\n                @discard-changes=\"onLeaveModalConfirm(nextRoute)\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_category_content_empty %}\n            <sw-empty-state\n                v-if=\"showEmptyState\"\n                :title=\"$tc('sw-category.general.emptyStateHeadline')\"\n            >\n                <template #icon>\n                    <img\n                        :src=\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\"\n                        :alt=\"$tc('sw-category.general.emptyStateHeadline')\"\n                    >\n                </template>\n            </sw-empty-state>\n        {% endblock %}\n\n        </template>\n    </template>\n    {% endblock %}\n\n</sw-page>\n{% endblock %}\n","import pageState from './state';\nimport template from './sw-category-detail.html.twig';\nimport './sw-category-detail.scss';\n\nconst { Context, Mixin } = Cicada;\nconst { Criteria, ChangesetGenerator, EntityCollection } = Cicada.Data;\nconst { cloneDeep, merge } = Cicada.Utils.object;\nconst type = Cicada.Utils.types;\n\n/**\n * @package discovery\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'acl',\n        'cmsService',\n        'repositoryFactory',\n        'seoUrlService',\n        'systemConfigApiService',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('placeholder'),\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': {\n            active() {\n                return this.acl.can('category.editor');\n            },\n            method: 'onSave',\n        },\n        ESCAPE: 'cancelEdit',\n    },\n\n    props: {\n        categoryId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        landingPageId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            term: '',\n            isLoading: false,\n            isCustomFieldLoading: false,\n            isSaveSuccessful: false,\n            isMobileViewport: null,\n            splitBreakpoint: 1024,\n            isDisplayingLeavePageWarning: false,\n            nextRoute: null,\n            currentLanguageId: Cicada.Context.api.languageId,\n            forceDiscardChanges: false,\n            categoryCheckedItem: 0,\n            landingPageCheckedItem: 0,\n            entryPointOverwriteConfirmed: false,\n            entryPointOverwriteSalesChannels: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        changesetGenerator() {\n            return new ChangesetGenerator();\n        },\n\n        showEmptyState() {\n            return !this.category && !this.landingPage;\n        },\n\n        identifier() {\n            return this.category ? this.placeholder(this.category, 'name') : '';\n        },\n\n        landingPageRepository() {\n            return this.repositoryFactory.create('landing_page');\n        },\n\n        categoryRepository() {\n            return this.repositoryFactory.create('category');\n        },\n\n        cmsPageRepository() {\n            return this.repositoryFactory.create('cms_page');\n        },\n\n        landingPage() {\n            if (!Cicada.State.get('swCategoryDetail')) {\n                return {};\n            }\n\n            return Cicada.State.get('swCategoryDetail').landingPage;\n        },\n\n        category() {\n            if (!Cicada.State.get('swCategoryDetail')) {\n                return {};\n            }\n\n            return Cicada.State.get('swCategoryDetail').category;\n        },\n\n        showEntryPointOverwriteModal() {\n            return this.entryPointOverwriteSalesChannels !== null && this.entryPointOverwriteSalesChannels.length;\n        },\n\n        cmsPage() {\n            return Cicada.Store.get('cmsPage').currentPage;\n        },\n\n        cmsPageState() {\n            return Cicada.Store.get('cmsPage');\n        },\n\n        cmsPageId() {\n            if (this.landingPage) {\n                return this.landingPage.cmsPageId;\n            }\n\n            return this.category ? this.category.cmsPageId : null;\n        },\n\n        customFieldSetRepository() {\n            return this.repositoryFactory.create('custom_field_set');\n        },\n\n        customFieldSetCriteria() {\n            const criteria = new Criteria(1, null);\n\n            criteria.addFilter(Criteria.equals('relations.entityName', 'category'));\n\n            return criteria;\n        },\n\n        customFieldSetLandingPageCriteria() {\n            const criteria = new Criteria(1, null);\n\n            criteria.addFilter(Criteria.equals('relations.entityName', 'landing_page'));\n\n            return criteria;\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        pageClasses() {\n            return {\n                'has--category': !!this.category,\n                'is--mobile': !!this.isMobileViewport,\n            };\n        },\n\n        tooltipSave() {\n            if (!this.acl.can('category.editor')) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.acl.can('category.editor'),\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        landingPageTooltipSave() {\n            if (!this.acl.can('landing_page.editor')) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.acl.can('landing_page.editor'),\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        tooltipCancel() {\n            return {\n                message: 'ESC',\n                appearance: 'light',\n            };\n        },\n\n        categoryCriteria() {\n            const criteria = new Criteria(1, 1);\n            criteria.getAssociation('seoUrls').addFilter(Criteria.equals('isCanonical', true));\n\n            criteria\n                .addAssociation('tags')\n                .addAssociation('media')\n                .addAssociation('navigationSalesChannels.homeCmsPage.previewMedia')\n                .addAssociation('serviceSalesChannels')\n                .addAssociation('footerSalesChannels')\n                .addAssociation('translations');\n\n            return criteria;\n        },\n\n        landingPageCriteria() {\n            const criteria = new Criteria(1, 1);\n\n            criteria.addAssociation('tags');\n            criteria.addAssociation('salesChannels');\n\n            return criteria;\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        landingPageId() {\n            this.setLandingPage();\n        },\n\n        categoryId() {\n            this.setCategory();\n        },\n\n        cmsPageId() {\n            if (this.isLoading) {\n                return;\n            }\n\n            if (this.category) {\n                this.cmsPageState.resetCmsPageState();\n                this.getAssignedCmsPage();\n            }\n\n            if (this.landingPage) {\n                this.cmsPageState.resetCmsPageState();\n                this.getAssignedCmsPageForLandingPage();\n            }\n        },\n    },\n\n    beforeCreate() {\n        Cicada.State.registerModule('swCategoryDetail', pageState);\n        Cicada.Store.get('cmsPage').resetCmsPageState();\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    beforeUnmount() {\n        Cicada.State.unregisterModule('swCategoryDetail');\n    },\n\n    beforeRouteLeave(to, from, next) {\n        if (this.forceDiscardChanges) {\n            this.forceDiscardChanges = false;\n            next();\n\n            return;\n        }\n\n        if (!this.category) {\n            next();\n            return;\n        }\n\n        /*\n         * Generate change set for category and delete `id` and `versionId` to only consider actual changes.\n         * A new version without changes should not trigger the navigation guard.\n         */\n        const { changes, deletionQueue } = this.changesetGenerator.generate(this.category);\n        if (changes === null) {\n            next();\n            return;\n        }\n\n        const keysToDelete = [\n            'id',\n            'versionId',\n        ];\n        const changedKeys = Object.keys(changes).filter((key) => !keysToDelete.includes(key));\n        const hasDeletions = deletionQueue.length > 0;\n\n        /*\n         * Allow exiting the route to the `cms.page.create` route\n         * when just the cmsPage assignment has been cleared.\n         */\n        if (\n            to.name === 'sw.cms.create' &&\n            changedKeys.length === 1 &&\n            changedKeys[0] === 'cmsPageId' &&\n            changes.cmsPageId === null &&\n            !hasDeletions\n        ) {\n            next();\n            return;\n        }\n\n        if (changedKeys.length === 0 && !hasDeletions) {\n            next();\n            return;\n        }\n\n        this.isDisplayingLeavePageWarning = true;\n        this.nextRoute = to;\n        next(false);\n    },\n\n    methods: {\n        createdComponent() {\n            Cicada.ExtensionAPI.publishData({\n                id: 'sw-category-detail__category',\n                path: 'category',\n                scope: this,\n            });\n\n            Cicada.ExtensionAPI.publishData({\n                id: 'sw-category-detail__cmsPage',\n                path: 'cmsPage',\n                scope: this,\n            });\n\n            this.isLoading = true;\n            this.checkViewport();\n            this.registerListener();\n\n            if (this.categoryId !== null) {\n                this.setCategory();\n\n                return;\n            }\n\n            this.setLandingPage();\n        },\n\n        categoryCheckedElementsCount(count) {\n            this.categoryCheckedItem = count;\n        },\n\n        landingPageCheckedElementsCount(count) {\n            this.landingPageCheckedItem = count;\n        },\n\n        registerListener() {\n            this.$device.onResize({\n                listener: this.checkViewport,\n            });\n        },\n\n        onSearch(value) {\n            if (value.length === 0) {\n                value = undefined;\n            }\n            this.term = value;\n        },\n\n        checkViewport() {\n            this.isMobileViewport = this.$device.getViewportWidth() < this.splitBreakpoint;\n        },\n\n        getAssignedCmsPage() {\n            if (this.cmsPageId === null) {\n                return Promise.resolve(null);\n            }\n\n            const cmsPageId = this.cmsPageId;\n            const criteria = new Criteria(1, 1);\n            criteria.setIds([cmsPageId]);\n            criteria.addAssociation('previewMedia');\n            criteria.addAssociation('sections');\n            criteria.getAssociation('sections').addSorting(Criteria.sort('position'));\n\n            criteria.addAssociation('sections.blocks');\n            criteria.getAssociation('sections.blocks').addSorting(Criteria.sort('position', 'ASC')).addAssociation('slots');\n\n            return this.cmsPageRepository.search(criteria).then((response) => {\n                const cmsPage = response.get(cmsPageId);\n\n                if (cmsPageId !== this.cmsPageId) {\n                    return null;\n                }\n\n                if (this.category.slotConfig !== null) {\n                    cmsPage.sections.forEach((section) => {\n                        section.blocks.forEach((block) => {\n                            block.slots.forEach((slot) => {\n                                if (this.category.slotConfig[slot.id]) {\n                                    if (slot.config === null) {\n                                        slot.config = {};\n                                    }\n                                    merge(slot.config, cloneDeep(this.category.slotConfig[slot.id]));\n                                }\n                            });\n                        });\n                    });\n                }\n\n                this.updateCmsPageDataMapping();\n                this.cmsPageState.setCurrentPage(cmsPage);\n\n                return this.cmsPage;\n            });\n        },\n\n        updateCmsPageDataMapping() {\n            this.cmsPageState.setCurrentMappingEntity('category');\n            this.cmsPageState.setCurrentMappingTypes(this.cmsService.getEntityMappingTypes('category'));\n            this.cmsPageState.setCurrentDemoEntity(this.category);\n        },\n\n        getAssignedCmsPageForLandingPage() {\n            if (this.cmsPageId === null) {\n                return Promise.resolve(null);\n            }\n\n            const cmsPageId = this.cmsPageId;\n            const criteria = new Criteria(1, 1);\n            criteria.setIds([cmsPageId]);\n            criteria.addAssociation('previewMedia');\n            criteria.addAssociation('sections');\n            criteria.getAssociation('sections').addSorting(Criteria.sort('position'));\n\n            criteria.addAssociation('sections.blocks');\n            criteria\n                .getAssociation('sections.blocks')\n                .addSorting(Criteria.sort('position', 'ASC'))\n                .getAssociation('slots')\n                .addAssociation('translations');\n\n            return this.cmsPageRepository.search(criteria).then((response) => {\n                const cmsPage = response.get(cmsPageId);\n                if (cmsPageId !== this.cmsPageId) {\n                    return null;\n                }\n\n                if (this.landingPage.slotConfig !== null) {\n                    cmsPage.sections.forEach((section) => {\n                        section.blocks.forEach((block) => {\n                            block.slots.forEach((slot) => {\n                                if (this.landingPage.slotConfig[slot.id]) {\n                                    if (slot.config === null) {\n                                        slot.config = {};\n                                    }\n                                    merge(slot.config, cloneDeep(this.landingPage.slotConfig[slot.id]));\n                                }\n                            });\n                        });\n                    });\n                }\n\n                this.updateCmsPageDataMappingForLandingPage();\n                this.cmsPageState.setCurrentPage(cmsPage);\n                return this.cmsPage;\n            });\n        },\n\n        updateCmsPageDataMappingForLandingPage() {\n            this.cmsPageState.setCurrentMappingEntity('landing_page');\n            this.cmsPageState.setCurrentMappingTypes(this.cmsService.getEntityMappingTypes('landing_page'));\n            this.cmsPageState.setCurrentDemoEntity(this.landingPage);\n        },\n\n        async setLandingPage() {\n            this.isLoading = true;\n\n            try {\n                if (this.landingPageId === null) {\n                    Cicada.State.commit('cicadaApps/setSelectedIds', []);\n\n                    await Cicada.State.dispatch('swCategoryDetail/setActiveLandingPage', { landingPage: null });\n                    this.cmsPageState.resetCmsPageState();\n\n                    return;\n                }\n\n                Cicada.State.commit('cicadaApps/setSelectedIds', [\n                    this.landingPageId,\n                ]);\n                await Cicada.State.dispatch('swCategoryDetail/loadActiveLandingPage', {\n                    repository: this.landingPageRepository,\n                    apiContext: Cicada.Context.api,\n                    id: this.landingPageId,\n                    criteria: this.landingPageCriteria,\n                });\n\n                this.cmsPageState.resetCmsPageState();\n                await this.getAssignedCmsPageForLandingPage();\n                await this.loadLandingPageCustomFieldSet();\n            } catch {\n                this.createNotificationError({\n                    title: this.$tc('global.default.error'),\n                    message: this.$tc('global.notification.unspecifiedSaveErrorMessage'),\n                });\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        setCategory() {\n            this.isLoading = true;\n\n            if (this.categoryId === null) {\n                Cicada.State.commit('cicadaApps/setSelectedIds', []);\n\n                return Cicada.State.dispatch('swCategoryDetail/setActiveCategory', { category: null }).then(() => {\n                    this.cmsPageState.resetCmsPageState();\n                    this.isLoading = false;\n                });\n            }\n\n            Cicada.State.commit('cicadaApps/setSelectedIds', [\n                this.categoryId,\n            ]);\n            return Cicada.State.dispatch('swCategoryDetail/loadActiveCategory', {\n                repository: this.categoryRepository,\n                apiContext: Cicada.Context.api,\n                id: this.categoryId,\n                criteria: this.categoryCriteria,\n            })\n                .then(() => {\n                    this.cmsPageState.resetCmsPageState();\n                    return Promise.resolve();\n                })\n                .then(this.getAssignedCmsPage)\n                .then(this.loadCustomFieldSet)\n                .then(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        loadCustomFieldSet() {\n            this.isCustomFieldLoading = true;\n\n            return this.customFieldSetRepository\n                .search(this.customFieldSetCriteria)\n                .then((customFieldSet) => {\n                    return this.$store.commit('swCategoryDetail/setCustomFieldSets', customFieldSet);\n                })\n                .finally(() => {\n                    this.isCustomFieldLoading = true;\n                });\n        },\n\n        loadLandingPageCustomFieldSet() {\n            this.isCustomFieldLoading = true;\n\n            return this.customFieldSetRepository\n                .search(this.customFieldSetLandingPageCriteria)\n                .then((customFieldSet) => {\n                    return this.$store.commit('swCategoryDetail/setCustomFieldSets', customFieldSet);\n                })\n                .finally(() => {\n                    this.isCustomFieldLoading = true;\n                });\n        },\n\n        onSaveCategories() {\n            return this.categoryRepository.save(this.category);\n        },\n\n        openChangeModal(destination) {\n            this.nextRoute = destination;\n            this.isDisplayingLeavePageWarning = true;\n        },\n\n        onLeaveModalClose() {\n            this.nextRoute = null;\n            this.isDisplayingLeavePageWarning = false;\n        },\n\n        onLeaveModalConfirm(destination) {\n            // Discard all category related errors that may have occurred\n            Cicada.State.dispatch('error/removeApiError', {\n                expression: 'category',\n            });\n\n            this.forceDiscardChanges = true;\n            this.isDisplayingLeavePageWarning = false;\n\n            this.$nextTick(() => {\n                this.$router.push({\n                    name: destination.name,\n                    params: destination.params,\n                });\n            });\n        },\n\n        cancelEdit() {\n            this.resetCategory();\n        },\n\n        resetCategory() {\n            this.$router.push({ name: 'sw.category.index' });\n        },\n\n        onChangeLanguage(newLanguageId) {\n            this.currentLanguageId = newLanguageId;\n\n            if (this.landingPageId !== null) {\n                this.setLandingPage();\n            }\n\n            this.setCategory();\n        },\n\n        abortOnLanguageChange() {\n            if (this.landingPage) {\n                return this.landingPage ? this.categoryRepository.hasChanges(this.landingPage) : false;\n            }\n\n            return this.category ? this.categoryRepository.hasChanges(this.category) : false;\n        },\n\n        saveOnLanguageChange() {\n            if (this.landingPage) {\n                return this.onSaveLandingPage();\n            }\n\n            return this.onSave();\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        async onSave() {\n            this.isSaveSuccessful = false;\n\n            const pageOverrides = this.getCmsPageOverrides();\n\n            if (type.isPlainObject(pageOverrides)) {\n                this.category.slotConfig = cloneDeep(pageOverrides);\n            }\n\n            if (!this.entryPointOverwriteConfirmed) {\n                this.checkForEntryPointOverwrite();\n                if (this.showEntryPointOverwriteModal) {\n                    return Promise.resolve();\n                }\n            }\n\n            this.isLoading = true;\n            await this.updateSeoUrls();\n\n            const response = await this.systemConfigApiService.getValues('core.cms');\n\n            this.defaultCategoryId = response['core.cms.default_category_cms_page'];\n\n            if (this.category.cmsPageId === this.defaultCategoryId) {\n                this.category.cmsPageId = null;\n            }\n\n            return this.categoryRepository\n                .save(this.category, { ...Cicada.Context.api })\n                .then(() => {\n                    this.isSaveSuccessful = true;\n                    this.entryPointOverwriteConfirmed = false;\n                    return this.setCategory();\n                })\n                .catch(() => {\n                    this.isLoading = false;\n                    this.entryPointOverwriteConfirmed = false;\n\n                    this.createNotificationError({\n                        message: this.$tc('global.notification.notificationSaveErrorMessageRequiredFieldsInvalid'),\n                    });\n                });\n        },\n\n        checkForEntryPointOverwrite() {\n            this.entryPointOverwriteSalesChannels = new EntityCollection('/sales_channel', 'sales_channel', Context.api);\n\n            this.category.navigationSalesChannels.forEach((salesChannel) => {\n                if (salesChannel.navigationCategoryId !== null && salesChannel.navigationCategoryId !== this.categoryId) {\n                    this.entryPointOverwriteSalesChannels.add(salesChannel);\n                }\n            });\n\n            this.category.footerSalesChannels.forEach((salesChannel) => {\n                if (salesChannel.footerCategoryId !== null && salesChannel.footerCategoryId !== this.categoryId) {\n                    this.entryPointOverwriteSalesChannels.add(salesChannel);\n                }\n            });\n\n            this.category.serviceSalesChannels.forEach((salesChannel) => {\n                if (salesChannel.serviceCategoryId !== null && salesChannel.serviceCategoryId !== this.categoryId) {\n                    this.entryPointOverwriteSalesChannels.add(salesChannel);\n                }\n            });\n        },\n\n        cancelEntryPointOverwrite() {\n            this.entryPointOverwriteSalesChannels = null;\n        },\n\n        confirmEntryPointOverwrite() {\n            this.entryPointOverwriteSalesChannels = null;\n            this.entryPointOverwriteConfirmed = true;\n            this.$nextTick(() => {\n                this.onSave();\n            });\n        },\n\n        onSaveLandingPage() {\n            this.isSaveSuccessful = false;\n\n            const pageOverrides = this.getCmsPageOverrides();\n\n            if (type.isPlainObject(pageOverrides)) {\n                this.landingPage.slotConfig = cloneDeep(pageOverrides);\n            }\n\n            if (this.landingPageId !== 'create') {\n                if (this.landingPage.salesChannels.length === 0) {\n                    this.addLandingPageSalesChannelError();\n\n                    return Promise.resolve();\n                }\n            }\n\n            this.isLoading = true;\n            return this.landingPageRepository\n                .save(this.landingPage, Cicada.Context.api)\n                .then(() => {\n                    this.isSaveSuccessful = true;\n\n                    if (this.landingPageId === 'create') {\n                        this.$router.push({\n                            name: 'sw.category.landingPageDetail',\n                            params: { id: this.landingPage.id },\n                        });\n                        return Promise.resolve();\n                    }\n\n                    return this.setLandingPage();\n                })\n                .catch(() => {\n                    this.isLoading = false;\n\n                    if (this.landingPage.salesChannels.length === 0) {\n                        this.addLandingPageSalesChannelError();\n\n                        return;\n                    }\n\n                    this.createNotificationError({\n                        message: this.$tc('global.notification.notificationSaveErrorMessageRequiredFieldsInvalid'),\n                    });\n                });\n        },\n\n        addLandingPageSalesChannelError() {\n            const cicadaError = new Cicada.Classes.CicadaError({\n                code: 'landing_page_sales_channel_blank',\n                detail: 'This value should not be blank.',\n                status: '400',\n            });\n\n            Cicada.State.dispatch('error/addApiError', {\n                expression: `landing_page.${this.landingPage.id}.salesChannels`,\n                error: cicadaError,\n            });\n\n            this.createNotificationError({\n                message: this.$tc('global.notification.notificationSaveErrorMessageRequiredFieldsInvalid'),\n            });\n        },\n\n        getCmsPageOverrides() {\n            if (this.cmsPage === null) {\n                return null;\n            }\n\n            this.deleteSpecifcKeys(this.cmsPage.sections);\n\n            const { changes } = this.changesetGenerator.generate(this.cmsPage);\n\n            const slotOverrides = {};\n            if (changes === null) {\n                return slotOverrides;\n            }\n\n            if (type.isArray(changes.sections)) {\n                changes.sections.forEach((section) => {\n                    if (type.isArray(section.blocks)) {\n                        section.blocks.forEach((block) => {\n                            if (type.isArray(block.slots)) {\n                                block.slots.forEach((slot) => {\n                                    slotOverrides[slot.id] = slot.config;\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n\n            return slotOverrides;\n        },\n\n        deleteSpecifcKeys(sections) {\n            if (!sections) {\n                return;\n            }\n\n            sections.forEach((section) => {\n                if (!section.blocks) {\n                    return;\n                }\n\n                section.blocks.forEach((block) => {\n                    if (!block.slots) {\n                        return;\n                    }\n\n                    block.slots.forEach((slot) => {\n                        if (!slot.config) {\n                            return;\n                        }\n\n                        Object.values(slot.config).forEach((configField) => {\n                            if (configField.entity) {\n                                delete configField.entity;\n                            }\n                            if (configField.hasOwnProperty('required')) {\n                                delete configField.required;\n                            }\n                            if (configField.type) {\n                                delete configField.type;\n                            }\n                        });\n                    });\n                });\n            });\n        },\n\n        updateSeoUrls() {\n            if (!Cicada.State.list().includes('swSeoUrl')) {\n                return Promise.resolve();\n            }\n\n            const seoUrls = Cicada.State.getters['swSeoUrl/getNewOrModifiedUrls']();\n\n            return Promise.all(\n                seoUrls.map((seoUrl) => {\n                    if (seoUrl.seoPathInfo) {\n                        seoUrl.isModified = true;\n                        return this.seoUrlService.updateCanonicalUrl(seoUrl, seoUrl.languageId);\n                    }\n\n                    return Promise.resolve();\n                }),\n            );\n        },\n\n        onLandingPageDelete() {\n            Cicada.State.commit('swCategoryDetail/setLandingPagesToDelete', {\n                landingPagesToDelete: null,\n            });\n        },\n\n        onCategoryDelete() {\n            Cicada.State.commit('swCategoryDetail/setCategoriesToDelete', {\n                categoriesToDelete: null,\n            });\n        },\n    },\n};\n"],"names":["Criteria","pageState","state","landingPage","category","newCustomFieldSets","landingPagesToDelete","categoriesToDelete","commit","payload","repository","id","apiContext","criteria","parentCriteria","parent","template","Context","Mixin","ChangesetGenerator","EntityCollection","cloneDeep","merge","type","index","to","from","next","changes","deletionQueue","keysToDelete","changedKeys","key","hasDeletions","count","value","cmsPageId","response","cmsPage","section","block","slot","customFieldSet","destination","newLanguageId","pageOverrides","salesChannel","cicadaError","slotOverrides","sections","configField","seoUrls","seoUrl"],"mappings":"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"}