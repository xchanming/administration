/* empty css                                               */const t='{% block sw_settings_search_view_live_search_keyword %} <div class="sw-settings-search-live-search-keyword"> {% block sw_settings_search_view_live_search_keyword_highlight %} <span v-if="textIsHighlighted" v-html="text" ></span> <span v-for="(keyword, i) in parsedMsg" v-else :key="i" :class="getClass(i%2)" >{{ keyword }}</span> {% endblock %} </div> {% endblock %}',r={template:t,props:{text:{type:String,required:!0,default:null},searchTerm:{type:String,required:!0,default:null},highlightClass:{type:String,required:!1,default:"sw-settings-search-live-search-keyword__highlight"}},computed:{textIsHighlighted(){return this.text.includes(this.highlightClass)},parsedSearch(){return`(${this.searchTerm.trim().replace(/[.*+?^${}()|[\]\\]/g,"\\$&").replace(/ +/g,"|")})`},parsedMsg(){return this.text.split(new RegExp(this.parsedSearch,"gi"))}},methods:{getClass(e){return e?this.highlightClass:{}}}};export{r as default};
