const e=`{% block sw_first_run_wizard_store %} <div class="sw-first-run-wizard-store"> <template v-if="loadStatus"> <sw-loader /> <p class="message"> {{ $tc('sw-first-run-wizard.store.loadStatusCollect') }} <br> {{ $tc('sw-first-run-wizard.store.takeMinutes') }} </p> </template> <template v-else-if="extensionStatus && extensionStatus.active"> <sw-label class="sw-first-run-wizard-store__label" appearance="pill" variant="success" > <sw-icon name="regular-check-circle" size="30px" /> </sw-label> <h2> {{ $tc('sw-first-run-wizard.store.alreadyActivated') }} </h2> </template> <template v-else-if="isActivating"> <sw-loader /> <p class="message"> {{ $tc('sw-first-run-wizard.store.enablingStore') }} <br> {{ $tc('sw-first-run-wizard.store.takeMinutes') }} </p> </template> <template v-else-if="activationError"> <sw-label class="sw-first-run-wizard-store__label" appearance="pill" variant="danger" > <sw-icon name="regular-times-circle" size="30px" /> </sw-label> <h2> {{ error && error.title || $tc('sw-first-run-wizard.store.activationErrorTitle') }} </h2> <p> {{ error && error.detail || $tc('sw-first-run-wizard.store.activationErrorDescription') }} </p> </template> <template v-else> <img :src="assetFilter('/administration/static/img/extension-store/store_illustration.svg')" alt="" > <h2 class="sw-first-run-wizard-store__heading"> {{ $tc('sw-first-run-wizard.store.headingOne') }} <br> {{ $tc('sw-first-run-wizard.store.headingTwo') }} </h2> <p> {{ $tc('sw-first-run-wizard.store.description') }} </p> </template> </div> {% endblock %}`,s={template:e,compatConfig:Cicada.compatConfig,inject:["extensionHelperService"],emits:["frw-set-title","frw-redirect","extension-activated","buttons-update"],data(){return{loadStatus:!1,isActivating:!1,activationError:null,extensionStatus:null,error:null}},computed:{edition(){const t=this.licenceDomains.find(i=>i.active);return t?t.edition:""},buttonConfig(){const t={key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",variant:null,action:"sw.first.run.wizard.index.cicada.account",disabled:this.isActivating||this.loadStatus};return this.extensionStatus&&this.extensionStatus.active?[t,{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:"sw.first.run.wizard.index.finish",disabled:!1}]:[t,{key:"skip",label:this.$tc("sw-first-run-wizard.general.buttonSkip"),position:"right",variant:null,action:"sw.first.run.wizard.index.finish",disabled:this.isActivating||this.loadStatus},{key:"activate",label:this.$tc("sw-first-run-wizard.general.buttonActivate"),position:"right",variant:"primary",action:this.activateStore.bind(this),disabled:this.isActivating||this.loadStatus}]},assetFilter(){return Cicada.Filter.getByName("asset")}},watch:{buttonConfig:{handler(){this.updateButtons()},deep:!0}},created(){this.createdComponent()},methods:{createdComponent(){this.updateButtons(),this.setTitle(),this.updateExtensionStatus()},setTitle(){this.$emit("frw-set-title",this.$tc("sw-first-run-wizard.store.modalTitle"))},async updateExtensionStatus(){this.loadStatus=!0;try{this.extensionStatus=await this.extensionHelperService.getStatusOfExtension("SwagExtensionStore")}catch(t){Cicada.Utils.debug.error(t)}finally{this.loadStatus=!1}},activateStore(){this.isActivating=!0,this.activationError=null,Promise.all([this.installExtensionStore()]).then(()=>{this.$emit("frw-redirect","sw.first.run.wizard.index.finish")}).catch(t=>{var i;this.activationError=!0,(i=t==null?void 0:t.response)!=null&&i.data&&Array.isArray(t.response.data.errors)&&t.response.data.errors[0]&&(this.error=t.response.data.errors[0]),Cicada.Utils.debug.error(t)}).finally(()=>{this.isActivating=!1})},async installExtensionStore(){const t=await this.extensionHelperService.downloadAndActivateExtension("SwagExtensionStore");return this.$emit("extension-activated"),t},updateButtons(){this.$emit("buttons-update",this.buttonConfig)}}};export{s as default};
//# sourceMappingURL=index-DxWvKgPd.js.map
