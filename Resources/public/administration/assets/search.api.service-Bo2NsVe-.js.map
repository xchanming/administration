{"version":3,"file":"search.api.service-Bo2NsVe-.js","sources":["../../../app/administration/src/core/service/api/search.api.service.js"],"sourcesContent":["import { CanceledError } from 'axios';\nimport ApiService from '../api.service';\n\n/**\n * Gateway for the API end point 'search'\n * @class\n * @extends ApiService\n */\nclass SearchApiService extends ApiService {\n    searchAbortController = null;\n\n    constructor(httpClient, loginService, apiEndpoint = '_admin') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'searchService';\n    }\n\n    elastic(term, entities, limit, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        if (this.searchAbortController && !this.searchAbortController.signal.aborted) {\n            this.searchAbortController.abort();\n        }\n\n        this.searchAbortController = new AbortController();\n\n        return this.httpClient\n            .post(\n                `${this.getApiBasePath()}/es-search`,\n                { term, limit, entities },\n                {\n                    headers,\n                    signal: this.searchAbortController.signal,\n                },\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            })\n            .catch((error) => {\n                if (error instanceof CanceledError) {\n                    return {};\n                }\n                throw error;\n            });\n    }\n\n    /**\n     *\n     * @param {object} queries\n     * @param {object} additionalHeaders\n     * */\n    searchQuery(queries = {}, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        Object.keys(queries).forEach((entity) => {\n            if (typeof queries[entity].parse === 'function') {\n                queries[entity] = queries[entity].parse();\n            }\n        });\n\n        if (this.searchAbortController && !this.searchAbortController.signal.aborted) {\n            this.searchAbortController.abort();\n        }\n\n        this.searchAbortController = new AbortController();\n\n        return this.httpClient\n            .post(`${this.getApiBasePath()}/search`, queries, {\n                headers,\n                signal: this.searchAbortController.signal,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            })\n            .catch((error) => {\n                if (error instanceof CanceledError) {\n                    return {};\n                }\n                throw error;\n            });\n    }\n}\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default SearchApiService;\n"],"names":["SearchApiService","ApiService","httpClient","loginService","apiEndpoint","__publicField","term","entities","limit","additionalHeaders","headers","response","error","CanceledError","queries","entity"],"mappings":"0nBAQA,MAAMA,UAAyBC,CAAW,CAGtC,YAAYC,EAAYC,EAAcC,EAAc,SAAU,CAC1D,MAAMF,EAAYC,EAAcC,CAAW,EAH/CC,EAAA,6BAAwB,MAIpB,KAAK,KAAO,eACf,CAED,QAAQC,EAAMC,EAAUC,EAAOC,EAAoB,CAAA,EAAI,CACnD,MAAMC,EAAU,KAAK,gBAAgBD,CAAiB,EAEtD,OAAI,KAAK,uBAAyB,CAAC,KAAK,sBAAsB,OAAO,SACjE,KAAK,sBAAsB,QAG/B,KAAK,sBAAwB,IAAI,gBAE1B,KAAK,WACP,KACG,GAAG,KAAK,eAAgB,CAAA,aACxB,CAAE,KAAAH,EAAM,MAAAE,EAAO,SAAAD,CAAU,EACzB,CACI,QAAAG,EACA,OAAQ,KAAK,sBAAsB,MACtC,CACJ,EACA,KAAMC,GACIV,EAAW,eAAeU,CAAQ,CAC5C,EACA,MAAOC,GAAU,CACd,GAAIA,aAAiBC,EAAAA,cACjB,MAAO,GAEX,MAAMD,CACtB,CAAa,CACR,CAOD,YAAYE,EAAU,GAAIL,EAAoB,CAAA,EAAI,CAC9C,MAAMC,EAAU,KAAK,gBAAgBD,CAAiB,EAEtD,cAAO,KAAKK,CAAO,EAAE,QAASC,GAAW,CACjC,OAAOD,EAAQC,CAAM,EAAE,OAAU,aACjCD,EAAQC,CAAM,EAAID,EAAQC,CAAM,EAAE,MAAK,EAEvD,CAAS,EAEG,KAAK,uBAAyB,CAAC,KAAK,sBAAsB,OAAO,SACjE,KAAK,sBAAsB,QAG/B,KAAK,sBAAwB,IAAI,gBAE1B,KAAK,WACP,KAAK,GAAG,KAAK,eAAc,CAAE,UAAWD,EAAS,CAC9C,QAAAJ,EACA,OAAQ,KAAK,sBAAsB,MACnD,CAAa,EACA,KAAMC,GACIV,EAAW,eAAeU,CAAQ,CAC5C,EACA,MAAOC,GAAU,CACd,GAAIA,aAAiBC,EAAAA,cACjB,MAAO,GAEX,MAAMD,CACtB,CAAa,CACR,CACL"}