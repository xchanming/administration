const i='{% block sw_search_more_results %} <router-link v-if="searchTypeRoute" :to="{ name: searchTypeRoute, query: { term: term }}" class="sw-search-more-results__link sw-search-more-results__link--v2" > {% block sw_search_more_results_content %} <slot name="content"> {% block sw_search_more_results_slot_content %} {{ searchContent }} {% endblock %} </slot> {% endblock %} </router-link> {% endblock %}',{Component:o,Application:a}=Cicada;o.register("sw-search-more-results",{template:i,compatConfig:Cicada.compatConfig,inject:["searchTypeService"],props:{entity:{required:!0,type:String,default:""},term:{type:String,required:!1,default:null}},computed:{moduleFactory(){return a.getContainer("factory").module||{}},searchTypeRoute(){var t,s,r,n;if(!this.entity||!this.searchTypes[this.entity]||!this.searchTypes[this.entity].listingRoute){const e=this.moduleFactory.getModuleByEntityName(this.entity);return(s=(t=e==null?void 0:e.manifest)==null?void 0:t.routes)!=null&&s.index?e.manifest.routes.index.name:(n=(r=e==null?void 0:e.manifest)==null?void 0:r.routes)!=null&&n.list?e.manifest.routes.list.name:""}return this.searchTypes[this.entity].listingRoute},searchTypes(){return this.searchTypeService.getTypes()},searchContent(){const t=this.$tc(`global.entities.${this.entity}`,0);return this.$tc("global.sw-search-more-results.labelShowResultsInModuleV2",0,{entityName:t,entityNameLower:t.toLowerCase()})}}});
//# sourceMappingURL=index-BbhsKSf-.js.map
