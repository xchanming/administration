{"version":3,"file":"index-C6Cjk-qI.js","sources":["../../../app/administration/src/app/component/base/sw-version/sw-version.html.twig","../../../app/administration/src/app/component/base/sw-version/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_version %}\n<div class=\"sw-version\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_version_name %}\n    <div class=\"sw-version__title\">\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_version_name_text %}\n        {{ $tc('global.sw-admin-menu.textProjectName') }}\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_version_status %}\n        <span\n            title=\"Shop status: OK\"\n            class=\"sw-version__status\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_version_status_badge %}\n            <sw-color-badge\n                variant=\"success\"\n                :rounded=\"true\"\n            />\n            {% endblock %}\n        </span>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_version_info %}\n    <div class=\"sw-version__info\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_version_info_text %}\n        {{ version }}\n        {% endblock %}\n    </div>\n    {% endblock %}\n</div>\n{% endblock %}\n","/**\n * @package admin\n */\n\nimport template from './sw-version.html.twig';\nimport './sw-version.scss';\n\nconst { Component } = Cicada;\n\n/**\n * @private\n * @description Shows the header in the administration main menu\n * @status ready\n * @example-type static\n * @component-example\n * <div style=\"background: linear-gradient(to bottom, #303A4F, #2A3345); padding: 30px;\">\n *     <sw-version class=\"collapsible-text\"></sw-version>\n * </div>\n */\nComponent.register('sw-version', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    computed: {\n        version() {\n            let output = '';\n            const version = Cicada.Context.app.config.version;\n\n            // https://regex101.com/r/oRuJjS/1\n            const match = version.match(/(\\d+)\\.?(\\d+)\\.?(\\d+)?\\.?(\\d+)?-?([a-z]+)?(\\d+(.\\d+)*)?/i);\n\n            if (match === null) {\n                return version;\n            }\n\n            // Get rid of whole regex match for example \"6.4.99999.9999999-dev\"\n            match.shift();\n\n            // Iterate version parts and append to output\n            match.forEach((versionPart, index) => {\n                if (typeof versionPart !== 'string') {\n                    return;\n                }\n\n                const hrt = this.getHumanReadableText(versionPart);\n\n                if (hrt !== versionPart) {\n                    output += ` ${hrt}`;\n\n                    return;\n                }\n\n                // Special case for the first version part. Don't append a dot to the string\n                if (index === 0) {\n                    output += `${hrt}`;\n\n                    return;\n                }\n\n                // Add dot and version part to output\n                output += `.${hrt}`;\n            });\n\n            return output;\n        },\n    },\n\n    methods: {\n        getHumanReadableText(text) {\n            if (text === 'dp') {\n                return 'Developer Preview';\n            }\n\n            if (text === 'rc') {\n                return 'Release Candidate';\n            }\n\n            if (text === 'dev') {\n                return 'Developer Version';\n            }\n\n            if (text === 'ea') {\n                return 'Early Access';\n            }\n\n            return text;\n        },\n    },\n});\n"],"names":["template","Component","output","version","match","versionPart","index","hrt","text"],"mappings":"AAAA,MAAeA,EAAA,mmBCOT,CAAE,UAAAC,CAAW,EAAG,OAYtBA,EAAU,SAAS,aAAc,CAC7B,SAAAD,EAEA,aAAc,OAAO,aAErB,SAAU,CACN,SAAU,CACN,IAAIE,EAAS,GACb,MAAMC,EAAU,OAAO,QAAQ,IAAI,OAAO,QAGpCC,EAAQD,EAAQ,MAAM,0DAA0D,EAEtF,OAAIC,IAAU,KACHD,GAIXC,EAAM,MAAK,EAGXA,EAAM,QAAQ,CAACC,EAAaC,IAAU,CAClC,GAAI,OAAOD,GAAgB,SACvB,OAGJ,MAAME,EAAM,KAAK,qBAAqBF,CAAW,EAEjD,GAAIE,IAAQF,EAAa,CACrBH,GAAU,IAAIK,CAAG,GAEjB,MACH,CAGD,GAAID,IAAU,EAAG,CACbJ,GAAU,GAAGK,CAAG,GAEhB,MACH,CAGDL,GAAU,IAAIK,CAAG,EACjC,CAAa,EAEML,EACV,CACJ,EAED,QAAS,CACL,qBAAqBM,EAAM,CACvB,OAAIA,IAAS,KACF,oBAGPA,IAAS,KACF,oBAGPA,IAAS,MACF,oBAGPA,IAAS,KACF,eAGJA,CACV,CACJ,CACL,CAAC"}