{"version":3,"file":"index-B4ovYNUD.js","sources":["../../../app/administration/src/module/sw-extension/page/sw-extension-my-extensions-listing/sw-extension-my-extensions-listing.html.twig","../../../app/administration/src/module/sw-extension/page/sw-extension-my-extensions-listing/index.js"],"sourcesContent":["<div class=\"sw-extension-my-extensions-listing\">\n    <sw-skeleton\n        v-if=\"isLoading\"\n        :variant=\"skeletonVariant\"\n    />\n\n    <div\n        v-else\n        class=\"sw-extension-my-extensions-listing__listing-grid\"\n    >\n        <sw-alert\n            v-if=\"!isAppUrlReachable\"\n            class=\"sw-extension-my-extensions-listing__app-url-warning\"\n            variant=\"warning\"\n            :title=\"$tc('sw-app.component.sw-app-wrong-app-url-modal.title')\"\n        >\n\n            <template #default>\n                <div>\n                    {{ $tc('sw-app.component.sw-app-wrong-app-url-modal.explanation') }}\n                </div>\n                <div>\n                    {{ $tc('sw-app.component.sw-app-wrong-app-url-modal.textGetSupport') }}\n                </div>\n            </template>\n\n            <template #actions>\n                <sw-button\n                    class=\"sw-app-wrong-app-url-modal__content-link-button\"\n                    variant=\"ghost\"\n                    :link=\"$tc('sw-app.component.sw-app-wrong-app-url-modal.linkToDocsArticle')\"\n                >\n                    {{ $tc('sw-app.component.sw-app-wrong-app-url-modal.labelLearnMoreButton') }}\n                </sw-button>\n            </template>\n\n        </sw-alert>\n\n        <sw-alert\n            v-if=\"extensionManagementDisabled\"\n            class=\"sw-extension-my-extensions-listing__runtime-extension-warning\"\n            variant=\"warning\"\n            :title=\"$tc('sw-extension-store.component.sw-extension-my-extensions-listing.alertExtensionManagement.title')\"\n        >\n            <template #default>\n                <div>\n                    {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.alertExtensionManagement.description') }}\n                </div>\n            </template>\n\n            <template #actions>\n                <sw-external-link\n                    href=\"https://developer.xchanming.com/docs/guides/hosting/installation-updates/extension-managment.html\"\n                >\n                    {{ $tc('sw-app.component.sw-app-wrong-app-url-modal.labelLearnMoreButton') }}\n                </sw-external-link>\n            </template>\n        </sw-alert>\n\n        {% block sw_extension_my_extensions_list_empty_state %}\n\n        <sw-meteor-card\n            v-if=\"!extensionListPaginated.length && !filterByActiveState\"\n            class=\"sw-extension-my-extensions-listing__empty-state\"\n        >\n            <img\n                :src=\"assetFilter('administration/static/img/empty-states/extensions-empty-state.svg')\"\n                alt=\"\"\n            >\n\n            <h3 v-if=\"isThemeRoute\">\n                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.themes.titleEmptyState') }}\n            </h3>\n            <h3 v-else>\n                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.apps.titleEmptyState') }}\n            </h3>\n\n            <p v-if=\"isThemeRoute\">\n                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.themes.textEmptyState') }}\n            </p>\n            <p v-else>\n                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.apps.textEmptyState') }}\n            </p>\n\n            <sw-button\n                variant=\"ghost\"\n                @click=\"isThemeRoute ? openThemesStore() : openStore()\"\n            >\n                {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.btnOpenStore') }}\n            </sw-button>\n        </sw-meteor-card>\n\n        {% endblock %}\n\n        <template v-else>\n            <div class=\"sw-extension-my-extensions-listing__container\">\n                <sw-extension-my-extensions-listing-controls\n                    @update:active-state=\"changeActiveState\"\n                    @update:sorting-option=\"changeSortingOption\"\n                />\n\n                <sw-extension-component-section\n                    v-if=\"isThemeRoute\"\n                    position-identifier=\"sw-extension-my-extensions-listing__before-content\"\n                />\n\n                <sw-meteor-card\n                    v-if=\"!extensionListPaginated.length && filterByActiveState\"\n                    class=\"sw-extension-my-extensions-listing__empty-state\"\n                >\n                    <img\n                        :src=\"assetFilter('administration/static/img/empty-states/extensions-empty-state.svg')\"\n                        alt=\"\"\n                    >\n\n                    <h3 v-if=\"isThemeRoute\">\n                        {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.themes.noActivePlugins') }}\n                    </h3>\n                    <h3 v-else>\n                        {{ $tc('sw-extension-store.component.sw-extension-my-extensions-listing.apps.noActivePlugins') }}\n                    </h3>\n                </sw-meteor-card>\n\n                <template v-else>\n                    <template\n                        v-for=\"entry in extensionListPaginated\"\n                        :key=\"entry.name\"\n                    >\n                        <component\n                            :is=\"entry.storeLicense ? 'sw-extension-card-bought' : 'sw-self-maintained-extension-card'\"\n                            :extension=\"entry\"\n                            @update-list=\"updateList\"\n                        />\n                    </template>\n\n                    <sw-pagination\n                        :total=\"total\"\n                        :limit=\"limit\"\n                        :page=\"page\"\n                        @page-change=\"changePage\"\n                    />\n                </template>\n            </div>\n        </template>\n    </div>\n</div>\n","import template from './sw-extension-my-extensions-listing.html.twig';\nimport './sw-extension-my-extensions-listing.scss';\n\nconst { mapState } = Cicada.Component.getComponentHelper();\n\n/**\n * @package checkout\n * @private\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['cicadaExtensionService'],\n\n    data() {\n        return {\n            filterByActiveState: false,\n            sortingOption: 'updated-at',\n        };\n    },\n\n    computed: {\n        ...mapState('context', {\n            isAppUrlReachable: (state) => state.app.config.settings.appUrlReachable,\n        }),\n\n        isLoading() {\n            const state = Cicada.State.get('cicadaExtensions');\n\n            return state.myExtensions.loading;\n        },\n\n        myExtensions() {\n            return Cicada.State.get('cicadaExtensions').myExtensions.data;\n        },\n\n        extensionList() {\n            const byTypeFilteredExtensions = this.filterExtensionsByType(this.myExtensions);\n            const sortedExtensions = this.sortExtensions(byTypeFilteredExtensions, this.sortingOption);\n\n            if (this.filterByActiveState) {\n                return this.filterExtensionsByActiveState(sortedExtensions);\n            }\n\n            return sortedExtensions;\n        },\n\n        extensionListPaginated() {\n            const begin = (this.page - 1) * this.limit;\n\n            return this.extensionListSearched.slice(begin, begin + this.limit);\n        },\n\n        extensionListSearched() {\n            return this.extensionList.filter((extension) => {\n                const searchTerm = this.term && this.term.toLowerCase();\n                if (!this.term) {\n                    return true;\n                }\n\n                const label = extension.label || '';\n                const name = extension.name || '';\n\n                return label.toLowerCase().includes(searchTerm) || name.toLowerCase().includes(searchTerm);\n            });\n        },\n\n        isAppRoute() {\n            return this.$route.name === 'sw.extension.my-extensions.listing.app';\n        },\n\n        isThemeRoute() {\n            return this.$route.name === 'sw.extension.my-extensions.listing.theme';\n        },\n\n        total() {\n            return this.extensionListSearched.length || 0;\n        },\n\n        limit: {\n            get() {\n                return Number(this.$route.query.limit) || 25;\n            },\n            set(newLimit) {\n                this.updateRouteQuery({ limit: newLimit });\n            },\n        },\n\n        page: {\n            get() {\n                return Number(this.$route.query.page) || 1;\n            },\n            set(newPage) {\n                this.updateRouteQuery({ page: newPage });\n            },\n        },\n\n        term: {\n            get() {\n                return this.$route.query.term || undefined;\n            },\n\n            set(newTerm) {\n                this.updateRouteQuery({\n                    term: newTerm,\n                    page: 1,\n                });\n            },\n        },\n\n        skeletonVariant() {\n            if (this.isThemeRoute) {\n                return 'extension-themes';\n            }\n\n            return 'extension-apps';\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n\n        extensionManagementDisabled() {\n            return Cicada.State.get('context').app.config.settings.disableExtensionManagement;\n        },\n    },\n\n    watch: {\n        '$route.name'() {\n            this.updateList();\n            this.filterByActiveState = false;\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.updateList();\n            this.updateRouteQuery();\n        },\n\n        updateList() {\n            this.cicadaExtensionService.updateExtensionData();\n        },\n\n        openStore() {\n            this.$router.push({\n                name: 'sw.extension.store.listing',\n            });\n        },\n\n        openThemesStore() {\n            this.$router.push({\n                name: 'sw.extension.store.listing.theme',\n            });\n        },\n\n        updateRouteQuery(query = {}) {\n            const routeQuery = this.$route.query;\n            const limit = query.limit || this.$route.query.limit;\n            const page = query.page || this.$route.query.page;\n            const term = query.term || this.$route.query.term;\n\n            // Create new route\n            const route = {\n                name: this.$route.name,\n                params: this.$route.params,\n                query: {\n                    limit: limit || 25,\n                    page: page || 1,\n                    term: term || undefined,\n                },\n            };\n\n            // If query is empty then replace route, otherwise push\n            if (Cicada.Utils.types.isEmpty(routeQuery)) {\n                this.$router.replace(route);\n            } else {\n                this.$router.push(route);\n            }\n        },\n\n        changePage({ page, limit }) {\n            this.updateRouteQuery({ page, limit });\n        },\n\n        filterExtensionsByType(extensions) {\n            return extensions.filter((extension) => {\n                // app route and no theme\n                if (this.isAppRoute && !extension.isTheme) {\n                    return true;\n                }\n\n                // theme route and theme\n                if (this.isThemeRoute && extension.isTheme) {\n                    return true;\n                }\n\n                return false;\n            });\n        },\n\n        sortExtensions(extensions, sortingOption) {\n            return extensions.sort((firstExtension, secondExtension) => {\n                if (sortingOption === 'name-asc') {\n                    return firstExtension.label.localeCompare(secondExtension.label, { sensitivity: 'base' });\n                }\n\n                if (sortingOption === 'name-desc') {\n                    return firstExtension.label.localeCompare(secondExtension.label, { sensitivity: 'base' }) * -1;\n                }\n\n                if (sortingOption === 'updated-at') {\n                    if (firstExtension.updatedAt === null && secondExtension.updatedAt !== null) {\n                        return 1;\n                    }\n\n                    if (firstExtension.updatedAt !== null && secondExtension.updatedAt === null) {\n                        return -1;\n                    }\n\n                    if (secondExtension.updatedAt === null && firstExtension.updatedAt === null) {\n                        return 0;\n                    }\n\n                    const firstExtensionDate = new Date(firstExtension.updatedAt.date);\n                    const secondExtensionDate = new Date(secondExtension.updatedAt.date);\n\n                    if (firstExtensionDate > secondExtensionDate) {\n                        return -1;\n                    }\n\n                    if (firstExtensionDate < secondExtensionDate) {\n                        return 1;\n                    }\n\n                    if (firstExtensionDate === secondExtensionDate) {\n                        return 0;\n                    }\n                }\n\n                return 0;\n            });\n        },\n\n        changeSortingOption(value) {\n            this.sortingOption = value;\n        },\n\n        changeActiveState(value) {\n            this.filterByActiveState = value;\n        },\n\n        filterExtensionsByActiveState(extensions) {\n            return extensions.filter((extension) => {\n                return extension.active;\n            });\n        },\n    },\n};\n"],"names":["template","mapState","index","state","byTypeFilteredExtensions","sortedExtensions","begin","extension","searchTerm","label","name","newLimit","newPage","newTerm","query","routeQuery","limit","page","term","route","extensions","sortingOption","firstExtension","secondExtension","firstExtensionDate","secondExtensionDate","value"],"mappings":"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"}