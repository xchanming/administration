const n=`{% block sw_category_tree_field %} <div ref="swCategoryTreeField" class="sw-category-tree-field" :class="{ 'is--disabled': disabled }" > <sw-contextual-field v-bind="$attrs" class="sw-category-tree-field__main-wrapper" > {% block sw_category_tree_field_input %} <template #sw-field-input="{ identification, error, size, setFocusClass, removeFocusClass, hasSuffix, hasPrefix }"> <sw-loader v-if="isCategoriesLoading" class="sw-cms-layout-assignment-modal__loader" /> {% block sw_category_tree_field_input_labels %} <sw-label v-for="selectedCategory in visibleTags" :key="selectedCategory.id" v-tooltip="{ message: getBreadcrumb(selectedCategory), width: 300 }" selected="" class="sw-category-tree-field__selected-label" @dismiss="removeItem(selectedCategory)" > {% block sw_category_tree_field_input_labels_property %} <span class="sw-category-tree-field__label-property"> <slot name="labelProperty"> {{ getLabelName(selectedCategory) }} </slot> </span> {% endblock %} {% block sw_category_tree_field_input_labels_dismiss_icon %} <template #dismiss-icon> <sw-icon name="regular-times-s" /> </template> {% endblock %} </sw-label> {% endblock %} {% block sw_category_tree_field_input_labels_hidden_tag %} <sw-label v-if="numberOfHiddenTags > 0" :dismiss-able="true" class="sw-category-tree-field__label-more" @selected="removeTagLimit" > <span class="sw-category-tree-field__label-more-property"> <slot name="labelProperty">+{{ numberOfHiddenTags }}</slot> </span> </sw-label> {% endblock %} {% block sw_category_tree_field_input_field %} <input ref="searchInput" v-model="term" type="text" class="sw-category-tree__input-field" :placeholder="placeholder" :disabled="disabled" @focus="openDropdown({ setFocusClass, removeFocusClass });" @keydown.delete="onDeleteKeyup" > {% endblock %} {% block sw_category_tree_field_input_transition %} {% block sw_category_tree_field_input_results %} <sw-popover v-if="isExpanded" class="sw-category-tree-field__results_base" popover-class="sw-category-tree-field__results_popover" :z-index="1100" :resize-width="true" > {% block sw_category_tree_field_input_results_tree %} <sw-tree v-if="term.length <= 0 && categories.length > 0" ref="swTree" :items="categories" after-id-property="afterCategoryId" :sortable="false" @get-tree-items="getTreeItems" > {% block sw_category_tree_field_input_results_tree_headline %} <template #headline> <span></span></template> {% endblock %} {% block sw_category_tree_field_input_results_tree_search %} <template #search> <span></span></template> {% endblock %} {% block sw_category_tree_field_input_results_tree_items %} <template #items="{ treeItems, sortable, draggedItem, newElementId, checkItem, translationContext, onChangeRoute, disableContextMenu, selectedItemsPathIds, checkedItemIds, }" > <sw-tree-item v-for="item in treeItems" :key="item.id" :item="item" :translation-context="translationContext" :dragged-item="draggedItem" :active-parent-ids="selectedCategoriesPathIds" :active-item-ids="selectedCategoriesItemsIds" :sortable="false" should-focus :active-focus-id="selectedTreeItem.id" mark-inactive should-show-active-state @check-item="onCheckItem" > <template #actions> <span></span> </template> </sw-tree-item> </template> {% endblock %} </sw-tree> {% endblock %} {% block sw_category_tree_field_input_results_search_results %} <ul v-else-if="searchResult.length > 0 && term.length > 0" class="sw-category-tree-field__search-results" > {% block sw_category_tree_field_input_results_search_results_item %} <li v-for="item in searchResult" :key="item.id" class="sw-category-tree-field__search-result" :class="{ 'is--focus': isSearchResultInFocus(item)}" @click.stop="onCheckSearchItem(item)" > {% block sw_category_tree_field_input_results_search_results_item_checkbox %} <sw-checkbox-field :value="isSearchItemChecked(item.id)" class="sw-category-tree-field__search-results-checkbox" /> {% endblock %} {% block sw_category_tree_field_input_results_search_results_item_folder %} <div v-if="item.childCount > 0" class="sw-category-tree-field__search-results-icon" > {% block sw_category_tree_field_input_results_search_results_item_folder_icon %} <sw-icon name="regular-folder" small /> {% endblock %} </div> {% endblock %} {% block sw_category_tree_field_input_results_search_results_item_endpoint %} <div v-else class="sw-category-tree-field__search-results-icon" > {% block sw_category_tree_field_input_results_search_results_item_endpoint_icon %} <sw-icon name="regular-circle-xxs" size="18" /> {% endblock %} </div> {% endblock %} {% block sw_category_tree_field_input_results_search_results_item_name %} <span class="sw-category-tree-field__search-results-name"> {% block sw_category_tree_field_input_results_search_results_item_name_highlight %} <sw-highlight-text :search-term="term" :text="getBreadcrumb(item)" /> {% endblock %} </span> {% endblock %} </li> {% endblock %} </ul> {% endblock %} {% block sw_category_tree_field_input_search_results_empty %} <p v-else class="sw-category-tree-field__empty-state" > {{ $tc('sw-category-tree-field.emptySearchResults') }} </p> {% endblock %} </sw-popover> {% endblock %} {% endblock %} </template> {% endblock %} </sw-contextual-field> </div> {% endblock %}`,{Component:d}=Shopware,h=Shopware.Utils,{Criteria:l}=Shopware.Data;d.register("sw-category-tree-field",{template:n,inject:["repositoryFactory"],emits:["selection-add","selection-remove","categories-load-more"],props:{categoriesCollection:{type:Array,required:!0},disabled:{type:Boolean,required:!1,default:!1},placeholder:{type:String,required:!0},categoryCriteria:{type:l,required:!1,default(){return new l(1,500)}},singleSelect:{type:Boolean,required:!1,default:!1},pageId:{type:String,required:!1,default:null},isCategoriesLoading:{type:Boolean,required:!1,default:!1}},data(){return{isFetching:!1,isComponentReady:!1,categories:[],selectedCategories:[],isExpanded:!1,term:"",searchResult:[],searchResultFocusItem:{},setInputFocusClass:null,removeInputFocusClass:null,selectedTreeItem:"",selectedCategoriesTotal:0}},computed:{globalCategoryRepository(){return this.repositoryFactory.create("category")},categoryRepository(){return this.repositoryFactory.create(this.categoriesCollection.entity,this.categoriesCollection.source)},visibleTags(){return this.categoriesCollection},numberOfHiddenTags(){const e=this.selectedCategoriesItemsTotal-this.visibleTags.length;return e>0?e:0},selectedCategoriesItemsIds(){return this.pageId?this.selectedCategories:this.categoriesCollection.getIds()},selectedCategoriesItemsTotal(){return this.pageId?this.selectedCategoriesTotal:this.categoriesCollection.length},selectedCategoriesPathIds(){return this.categoriesCollection.reduce((e,t)=>{const s=t.path?t.path.split("|").filter(r=>r.length>0):"";return[...e,...s]},[])},pageCategoryCriteria(){const e=new l;return e.addFilter(l.equals("cmsPageId",this.pageId)),e}},watch:{categoriesCollection:{handler(){this.categoriesCollection.entity&&!this.isComponentReady&&!this.isFetching&&this.getTreeItems().then(()=>{this.isComponentReady=!0})},immediate:!0},term:{handler(e){e.length>0?this.searchCategories(e).then(t=>{this.searchResult=t,this.searchResult.total>0&&(this.searchResultFocusItem=this.searchResult.first())}):this.$nextTick(()=>{this.$refs.swTree&&(this.selectedTreeItem=this.$refs.swTree.treeItems[0])})},immediate:!0},selectedTreeItem(e){e!=null&&e.id&&h.debounce(()=>{const t=this.findTreeItemVNodeById(e.id).$el;let s=0,r=!1,i=t;for(;!r;)i.classList.contains("sw-tree__content")?r=!0:(s+=i.offsetTop,i=i.offsetParent);i.scrollTo({top:s-i.clientHeight/2-50,behavior:"smooth"})},50)()}},created(){this.createdComponent()},unmounted(){this.destroyedComponent()},methods:{createdComponent(){document.addEventListener("click",this.closeDropdownOnClickOutside),document.addEventListener("keydown",this.handleGeneralKeyEvents),this.pageId&&this.globalCategoryRepository.searchIds(this.pageCategoryCriteria).then(e=>{this.selectedCategoriesTotal=e.total})},destroyedComponent(){document.removeEventListener("click",this.closeDropdownOnClickOutside),document.removeEventListener("keydown",this.handleGeneralKeyEvents)},getTreeItems(e=null){this.isFetching=!0;const t=l.fromCriteria(this.categoryCriteria);return t.addFilter(l.equals("parentId",e)),this.globalCategoryRepository.search(t,Shopware.Context.api).then(s=>e===null?(this.categories=s,this.isFetching=!1,this.pageId&&s[0].cmsPageId===this.pageId&&this.selectedCategories.push(s[0].id),Promise.resolve()):(s.forEach(r=>{this.categories.add(r),this.pageId&&r.cmsPageId===this.pageId&&this.selectedCategories.push(r.id)}),Promise.resolve()))},onCheckSearchItem(e){const t=!this.isSearchItemChecked(e.id);this.onCheckItem({checked:t,id:e.id,data:e})},onCheckItem(e){this.removeCheckedItems(e.id);const t=this.categoriesCollection.has(e.id);return e.checked&&!t?(e.data?(this.categoriesCollection.add(e.data),this.$emit("selection-add",e.data)):(this.categoriesCollection.add(e),this.$emit("selection-add",e)),this.singleSelect&&(this.isExpanded=!1),this.pageId&&(this.selectedCategories.push(e.id),this.selectedCategoriesTotal+=1),!0):(this.removeItem(e),!1)},removeItem(e){if(this.categoriesCollection.remove(e.id),this.pageId){const t=this.selectedCategories.findIndex(s=>s===e.id);this.selectedCategories.splice(t,1),this.selectedCategoriesTotal-=1}e.data?this.$emit("selection-remove",e.data):this.$emit("selection-remove",e)},searchCategories(e){const t=new l(1,500);return t.addFilter(l.equals("type","page")),t.setTerm(e),this.globalCategoryRepository.search(t,Shopware.Context.api)},isSearchItemChecked(e){return this.selectedCategoriesItemsIds.length>0?this.selectedCategoriesItemsIds.indexOf(e)>=0:!1},isSearchResultInFocus(e){return e.id===this.searchResultFocusItem.id},getBreadcrumb(e){var t;return e.breadcrumb?e.breadcrumb.join(" / "):((t=e.translated)==null?void 0:t.name)||e.name},getLabelName(e){return e.breadcrumb&&e.breadcrumb.length>1?`.. / ${e.translated.name||e.name} `:e.translated.name||e.name},onDeleteKeyup(){if(this.term.length<=0&&this.categoriesCollection){const e=this.categoriesCollection.last();this.removeItem(e)}},removeTagLimit(){this.$emit("categories-load-more")},openDropdown({setFocusClass:e,removeFocusClass:t}){this.isExpanded=!0,this.setInputFocusClass=e,this.removeInputFocusClass=t,this.setInputFocusClass()},closeDropdown(){this.isExpanded=!1},closeDropdownOnClickOutside(e){if(e.type==="keydown"&&this.removeInputFocusClass){this.removeInputFocusClass(),this.closeDropdown();return}const t=e.target;let s=!0;(t.closest(".sw-category-tree-field")===this.$refs.swCategoryTreeField||t.closest(".sw-category-tree-field__results_popover")||t instanceof SVGElement||t.parentNode instanceof SVGElement)&&(s=!1),s&&this.removeInputFocusClass&&(this.removeInputFocusClass(),this.closeDropdown())},handleGeneralKeyEvents(e){if(e.type!=="keydown"||!this.isExpanded)return;switch(e.key.toLowerCase()){case"tab":{this.closeDropdownOnClickOutside(e);break}case"arrowdown":case"arrowleft":case"arrowright":case"arrowup":{this.handleArrowKeyEvents(e);break}case"enter":{let s=null;this.term.length>0?s=this.searchResultFocusItem:s=this.selectedTreeItem,s.checked=!s.checked,this.onCheckItem(s),this.term="";break}case"escape":{this.closeDropdownOnClickOutside(e);break}}},handleArrowKeyEvents(e){var r,i;const t=e.key.toLowerCase();if(this.term.length>0){switch(t){case"arrowdown":{e.preventDefault(),this.changeSearchSelection("next");break}case"arrowup":{e.preventDefault(),this.changeSearchSelection("previous");break}}return}const s=this.findTreeItemVNodeById();switch(t){case"arrowdown":{if((r=s==null?void 0:s.item)!=null&&r.id){if(s.opened){const a=this.getFirstChildById(s.item.id);a&&(this.selectedTreeItem=a);break}const o=this.getSibling(!0,s.item);if(o)this.selectedTreeItem=o;else{const a=this.findTreeItemVNodeById(s.item.parentId),c=this.getSibling(!0,a.item);c&&(this.selectedTreeItem=c)}}break}case"arrowup":{if((i=s==null?void 0:s.item)!=null&&i.id){if(s.item.data.afterCategoryId===null&&s.item.parentId){const a=this.findTreeItemVNodeById(s.item.parentId).item;a&&(this.selectedTreeItem=a);break}const o=this.getSibling(!1,s.item);o&&(this.selectedTreeItem=o)}break}case"arrowright":{this.toggleSelectedTreeItem(!0);break}case"arrowleft":{if(!this.toggleSelectedTreeItem(!1)){const a=s.item.parentId,c=this.findTreeItemVNodeById(a);c&&(this.selectedTreeItem=c.item)}break}}},changeSearchSelection(e="next"){const t=e==="previous"?-1:1,s=this.searchResult.indexOf(this.searchResultFocusItem),r=this.searchResult[s+t];typeof r<"u"&&(this.searchResultFocusItem=r)},getFirstChildById(e,t=this.$refs.swTree.treeItems){const s=t.find(r=>r.id===e);if(s)return s.children[0];for(let r=0;r<t.length;r+=1){const i=this.getFirstChildById(e,t[r].children);if(i)return i}return null},getSibling(e,t,s=this.$refs.swTree.treeItems){if(!t)return null;let r=null;if(e)r=s.find(i=>i.data.afterCategoryId===t.id);else if(r=s.find(i=>i.id===t.data.afterCategoryId),r){const i=this.findTreeItemVNodeById(r.id);if(i.opened&&i.item.children[0]){const o=i.item.children.length-1;return i.item.children[o]}}if(r)return r;for(let i=0;i<s.length;i+=1){const o=this.getSibling(e,t,s[i].children);if(o)return o}return null},toggleSelectedTreeItem(e){const t=this.findTreeItemVNodeById();return t!=null&&t.openTreeItem&&t.opened!==e?(t.openTreeItem(),t.getTreeItemChildren(t.item),!0):!1},findTreeItemVNodeById(e=this.selectedTreeItem.id,t=this.$refs.swTree.$children){var i;let s=!1;if(Array.isArray(t)?s=t.find(o=>{var a;return(a=o==null?void 0:o.item)!=null&&a.id?o.item.id===e:!1}):(i=t==null?void 0:t.item)!=null&&i.id&&(s=t.item.id===e),s)return s;let r=!1;for(let o=0;o<t.length&&(r=this.findTreeItemVNodeById(e,t[o].$children),!r);o+=1);return r},removeCheckedItems(e){this.singleSelect&&this.categoriesCollection.forEach((t,s)=>{t.id!==e&&(this.categoriesCollection.splice(s,1),s-=1)})}}});
