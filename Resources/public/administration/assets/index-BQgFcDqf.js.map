{"version":3,"file":"index-BQgFcDqf.js","sources":["../../../app/administration/src/module/sw-cms/component/sw-cms-mapping-field/sw-cms-mapping-field.html.twig","../../../app/administration/src/module/sw-cms/component/sw-cms-mapping-field/index.ts"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_cms_mapping_field %}\n<div class=\"sw-cms-mapping-field\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_mapping_field_info %}\n    <div class=\"sw-cms-mapping-field__info\">\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_mapping_field_label %}\n        <div class=\"sw-cms-mapping-field__label\">\n            {{ label }}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_mapping_field_mapping %}\n        <template v-if=\"allowedMappingTypes.length\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_mapping_field_mapping_selection %}\n            <sw-context-button\n                v-if=\"!isMapped\"\n                class=\"sw-cms-mapping-field__selection\"\n                :menu-width=\"360\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_mapping_field_mapping_selection_action %}\n                <template #button>\n                    <div class=\"sw-cms-mapping-field__action\">\n                        <sw-icon\n                            name=\"regular-external-link\"\n                            size=\"16\"\n                        />\n                        <span class=\"sw-cms-mapping-field__action-label\">\n                            {{ $tc('sw-cms.detail.label.buttonMappingAction') }}\n                        </span>\n                    </div>\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_mapping_field_mapping_selection_options %}\n                <div class=\"sw-cms-mapping-field__options\">\n                    <sw-context-menu-item\n                        v-for=\"(prop, index) in allowedMappingTypes\"\n                        :key=\"index\"\n                        @click=\"onMappingSelect(prop)\"\n                    >\n                        {{ prop }}\n                    </sw-context-menu-item>\n                </div>\n                {% endblock %}\n            </sw-context-button>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_mapping_field_mapping_remove_action %}\n            <div\n                v-else\n                class=\"sw-cms-mapping-field__action-remove\"\n                role=\"button\"\n                tabindex=\"0\"\n                @click=\"onMappingRemove\"\n                @keydown.enter=\"onMappingRemove\"\n            >\n                <sw-icon name=\"regular-times\" />\n                <span class=\"sw-cms-mapping-field__action-label\">\n                    {{ $tc('sw-cms.detail.label.buttonMappingRemoveAction') }}\n                </span>\n            </div>\n            {% endblock %}\n        </template>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_mapping_field_content %}\n    <div\n        v-if=\"!isMapped\"\n        class=\"sw-cms-mapping-field__form-field\"\n    >\n        <slot><!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_mapping_field_slot_default %}{% endblock %}</slot>\n    </div>\n    {% endblock %}\n\n    <template v-else>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_mapping_field_mapping_value %}\n        <div class=\"sw-cms-mapping-field__mapping-value\">\n            {{ $tc('sw-cms.detail.label.mappingPreview') }} <b>{{ config.value }}</b>\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_mapping_field_preview %}\n        <div\n            v-if=\"hasPreview\"\n            class=\"sw-cms-mapping-field__preview\"\n        >\n            <slot\n                v-if=\"demoValue !== null\"\n                name=\"preview\"\n                :demo-value=\"demoValue\"\n            ></slot>\n\n            <sw-alert\n                v-else\n                variant=\"info\"\n                class=\"sw-cms-mapping-field__empty-demo\"\n            >\n                {{ $tc('sw-cms.detail.label.mappingEmptyPreview') }}\n            </sw-alert>\n        </div>\n        {% endblock %}\n    </template>\n</div>\n{% endblock %}\n","import { type PropType } from 'vue';\nimport template from './sw-cms-mapping-field.html.twig';\nimport './sw-cms-mapping-field.scss';\n\n/**\n * @private\n * @package discovery\n */\nexport default Cicada.Component.wrapComponentConfig({\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['cmsService'],\n\n    props: {\n        config: {\n            type: Object as PropType<{\n                source: 'static' | 'mapped' | 'default';\n                value: unknown;\n                [key: string]: unknown;\n            }>,\n            required: true,\n            default() {\n                return {\n                    source: 'static',\n                    value: null,\n                };\n            },\n        },\n\n        valueTypes: {\n            type: [\n                String,\n                Array,\n            ],\n            required: false,\n            default: 'string',\n        },\n\n        entity: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        label: {\n            type: String,\n            required: false,\n            default: '',\n        },\n    },\n\n    data() {\n        return {\n            mappingTypes: {} as unknown,\n            allowedMappingTypes: [] as string[],\n            demoValue: null as unknown,\n        };\n    },\n\n    computed: {\n        isMapped() {\n            return this.config.source === 'mapped';\n        },\n\n        hasPreview() {\n            if (this.isCompatEnabled('INSTANCE_SCOPED_SLOTS')) {\n                return typeof this.$scopedSlots.preview !== 'undefined';\n            }\n\n            return this.$slots.preview !== undefined;\n        },\n\n        cmsPageState() {\n            return Cicada.Store.get('cmsPage');\n        },\n    },\n\n    watch: {\n        cmsPageState: {\n            deep: true,\n            handler() {\n                this.updateMappingTypes();\n                this.updateDemoValue();\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.updateMappingTypes();\n            this.updateDemoValue();\n        },\n\n        updateMappingTypes() {\n            this.mappingTypes = this.cmsPageState.currentMappingTypes;\n            this.getAllowedMappingTypes();\n\n            if (this.config.source !== 'mapped') {\n                return;\n            }\n\n            const mappingPath = (this.config.value as string).split('.');\n\n            if (mappingPath[0] !== this.cmsPageState.currentMappingEntity) {\n                this.onMappingRemove();\n            }\n        },\n\n        updateDemoValue() {\n            if (this.config.source !== 'mapped') {\n                return;\n            }\n\n            this.demoValue = this.getDemoValue(this.config.value as string);\n        },\n\n        onMappingSelect(property: string) {\n            this.config.source = 'mapped';\n            this.config.value = property;\n            this.demoValue = this.getDemoValue(property);\n        },\n\n        onMappingRemove() {\n            this.config.source = 'static';\n            this.config.value = this.config.type === Array ? [] : null;\n            this.demoValue = null;\n        },\n\n        getAllowedMappingTypes() {\n            let types: string[] = [];\n\n            if (this.valueTypes === 'entity') {\n                const mappingTypes = this.mappingTypes as {\n                    entity: {\n                        [key: string]: string[];\n                    };\n                };\n\n                if (this.entity !== null && mappingTypes.entity && mappingTypes.entity[this.entity]) {\n                    types = mappingTypes.entity[this.entity];\n                }\n            } else {\n                const mappingTypes = this.mappingTypes as {\n                    [key: string]: string[];\n                };\n\n                Object.keys(mappingTypes).forEach((type) => {\n                    if (type === this.valueTypes || this.valueTypes.includes(type)) {\n                        types = [\n                            ...types,\n                            ...mappingTypes[type],\n                        ];\n                        types.sort();\n                    }\n                });\n            }\n\n            this.allowedMappingTypes = types;\n        },\n\n        getDemoValue(mappingPath: string): unknown {\n            return this.cmsService.getPropertyByMappingPath(this.cmsPageState.currentDemoEntity, mappingPath);\n        },\n    },\n});\n"],"names":["template","index","property","types","mappingTypes","type","mappingPath"],"mappings":"AAAA,MAAeA,EAAA,8xECQfC,EAAe,OAAO,UAAU,oBAAoB,CAChD,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,YAAY,EAErB,MAAO,CACH,OAAQ,CACJ,KAAM,OAKN,SAAU,GACV,SAAU,CACC,MAAA,CACH,OAAQ,SACR,MAAO,IAAA,CAEf,CACJ,EAEA,WAAY,CACR,KAAM,CACF,OACA,KACJ,EACA,SAAU,GACV,QAAS,QACb,EAEA,OAAQ,CACJ,KAAM,OACN,SAAU,GACV,QAAS,IACb,EAEA,MAAO,CACH,KAAM,OACN,SAAU,GACV,QAAS,EACb,CACJ,EAEA,MAAO,CACI,MAAA,CACH,aAAc,CAAC,EACf,oBAAqB,CAAC,EACtB,UAAW,IAAA,CAEnB,EAEA,SAAU,CACN,UAAW,CACA,OAAA,KAAK,OAAO,SAAW,QAClC,EAEA,YAAa,CACL,OAAA,KAAK,gBAAgB,uBAAuB,EACrC,OAAO,KAAK,aAAa,QAAY,IAGzC,KAAK,OAAO,UAAY,MACnC,EAEA,cAAe,CACJ,OAAA,OAAO,MAAM,IAAI,SAAS,CACrC,CACJ,EAEA,MAAO,CACH,aAAc,CACV,KAAM,GACN,SAAU,CACN,KAAK,mBAAmB,EACxB,KAAK,gBAAgB,CACzB,CACJ,CACJ,EAEA,SAAU,CACN,KAAK,iBAAiB,CAC1B,EAEA,QAAS,CACL,kBAAmB,CACf,KAAK,mBAAmB,EACxB,KAAK,gBAAgB,CACzB,EAEA,oBAAqB,CAIb,GAHC,KAAA,aAAe,KAAK,aAAa,oBACtC,KAAK,uBAAuB,EAExB,KAAK,OAAO,SAAW,SACvB,OAGiB,KAAK,OAAO,MAAiB,MAAM,GAAG,EAE3C,CAAC,IAAM,KAAK,aAAa,sBACrC,KAAK,gBAAgB,CAE7B,EAEA,iBAAkB,CACV,KAAK,OAAO,SAAW,WAI3B,KAAK,UAAY,KAAK,aAAa,KAAK,OAAO,KAAe,EAClE,EAEA,gBAAgBE,EAAkB,CAC9B,KAAK,OAAO,OAAS,SACrB,KAAK,OAAO,MAAQA,EACf,KAAA,UAAY,KAAK,aAAaA,CAAQ,CAC/C,EAEA,iBAAkB,CACd,KAAK,OAAO,OAAS,SACrB,KAAK,OAAO,MAAQ,KAAK,OAAO,OAAS,MAAQ,CAAK,EAAA,KACtD,KAAK,UAAY,IACrB,EAEA,wBAAyB,CACrB,IAAIC,EAAkB,CAAA,EAElB,GAAA,KAAK,aAAe,SAAU,CAC9B,MAAMC,EAAe,KAAK,aAMtB,KAAK,SAAW,MAAQA,EAAa,QAAUA,EAAa,OAAO,KAAK,MAAM,IACtED,EAAAC,EAAa,OAAO,KAAK,MAAM,EAC3C,KACG,CACH,MAAMA,EAAe,KAAK,aAI1B,OAAO,KAAKA,CAAY,EAAE,QAASC,GAAS,EACpCA,IAAS,KAAK,YAAc,KAAK,WAAW,SAASA,CAAI,KACjDF,EAAA,CACJ,GAAGA,EACH,GAAGC,EAAaC,CAAI,CAAA,EAExBF,EAAM,KAAK,EACf,CACH,CACL,CAEA,KAAK,oBAAsBA,CAC/B,EAEA,aAAaG,EAA8B,CACvC,OAAO,KAAK,WAAW,yBAAyB,KAAK,aAAa,kBAAmBA,CAAW,CACpG,CACJ,CACJ,CAAC"}