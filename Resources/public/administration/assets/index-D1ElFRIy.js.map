{"version":3,"file":"index-D1ElFRIy.js","sources":["../../../app/administration/src/app/component/rule/condition-type/sw-condition-not-found/sw-condition-not-found.html.twig","../../../app/administration/src/app/component/rule/condition-type/sw-condition-not-found/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_condition_base_field_condition %}\n<sw-condition-type-select\n    :condition=\"condition\"\n    :disabled=\"disabled || undefined\"\n    :available-types=\"extendedTypes\"\n/>\n{% endblock %}\n\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_condition_value_content %}\n<div class=\"sw-condition-not-found\">\n    <sw-textarea-field\n        v-model:value=\"value\"\n        name=\"sw-field--value\"\n        size=\"medium\"\n        :disabled=\"true\"\n    />\n</div>\n{% endblock %}\n","import template from './sw-condition-not-found.html.twig';\nimport './sw-condition-not-found.scss';\n\nconst { Component } = Cicada;\nconst { debounce } = Cicada.Utils;\n\n/**\n * @public\n * @package services-settings\n * @description This condition is shown, if the specific condition was not found.\n * This component must a be child of sw-condition-tree.\n * @status prototype\n * @example-type code-only\n * @component-example\n * <sw-condition-not-found :condition=\"condition\" :level=\"0\"></sw-condition-not-found>\n */\nComponent.extend('sw-condition-not-found', 'sw-condition-base', {\n    template,\n\n    computed: {\n        extendedTypes() {\n            return [\n                {\n                    label: this.condition.type,\n                    type: this.condition.type,\n                },\n                ...this.availableTypes,\n            ];\n        },\n\n        value: {\n            get() {\n                this.ensureValueExist();\n                return JSON.stringify(this.condition.value, null, 4);\n            },\n            set: debounce(function updateValue(value) {\n                try {\n                    this.condition.value = JSON.parse(value);\n                } catch (e) {\n                    /* eslint-ignore-line */\n                }\n            }, 300),\n        },\n    },\n});\n"],"names":["template","Component","debounce","value"],"mappings":"AAAA,MAAeA,EAAA,0XCGT,CAAE,UAAAC,CAAW,EAAG,OAChB,CAAE,SAAAC,CAAQ,EAAK,OAAO,MAY5BD,EAAU,OAAO,yBAA0B,oBAAqB,CAC5D,SAAAD,EAEA,SAAU,CACN,eAAgB,CACZ,MAAO,CACH,CACI,MAAO,KAAK,UAAU,KACtB,KAAM,KAAK,UAAU,IACxB,EACD,GAAG,KAAK,cACxB,CACS,EAED,MAAO,CACH,KAAM,CACF,YAAK,iBAAgB,EACd,KAAK,UAAU,KAAK,UAAU,MAAO,KAAM,CAAC,CACtD,EACD,IAAKE,EAAS,SAAqBC,EAAO,CACtC,GAAI,CACA,KAAK,UAAU,MAAQ,KAAK,MAAMA,CAAK,CAC1C,MAAW,CAEX,CACJ,EAAE,GAAG,CACT,CACJ,CACL,CAAC"}