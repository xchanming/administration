{"version":3,"file":"index-yDW0iOew.js","sources":["../../../app/administration/src/app/component/form/select/base/sw-grouped-single-select/sw-grouped-single-select.html.twig","../../../app/administration/src/app/component/form/select/base/sw-grouped-single-select/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_single_select_base_results_list_result %}\n<!-- eslint-disable-next-line vue/valid-v-slot -->\n<template #result-item=\"{ item, index }\">\n    <slot\n        name=\"result-group\"\n        v-bind=\"{ shouldShowGroupTitle, item, index, getGroupLabel, getGroupClasses }\"\n    >\n        <li\n            v-if=\"shouldShowGroupTitle(item, index)\"\n            :class=\"getGroupClasses(item)\"\n            @click.stop\n        >\n            {{ getGroupLabel(item) }}\n        </li>\n    </slot>\n    <slot\n        name=\"result-item\"\n        v-bind=\"{ item, index, labelProperty, searchTerm, highlightSearchTerm, isSelected, setValue, getKey }\"\n    >\n        <sw-select-result\n            :disabled=\"item.disabled\"\n            :class=\"'sw-select-option--' + item.value\"\n            :selected=\"isSelected(item)\"\n            v-bind=\"{ item, index }\"\n            @item-select=\"setValue\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_single_select_base_results_list_result_label %}\n            <slot\n                name=\"result-label-property\"\n                v-bind=\"{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, getKey }\"\n            >\n                <sw-highlight-text\n                    v-if=\"highlightSearchTerm && !isSelected(item)\"\n                    :text=\"getKey(item, labelProperty)\"\n                    :search-term=\"searchTerm\"\n                />\n                <template v-else>\n                    {{ getKey(item, labelProperty) }}\n                </template>\n            </slot>\n            {% endblock %}\n        </sw-select-result>\n    </slot>\n</template>\n{% endblock %}\n","import './sw-grouped-single-select.scss';\nimport template from './sw-grouped-single-select.html.twig';\n\nconst { Component } = Cicada;\n\n/**\n * @package admin\n *\n * @private\n * @description The <u>sw-grouped-single-select</u> component can be used to show a single sleect with grouped result items.\n * @example-type code-only\n * @component-example\n * <sw-grouped-single-select\n *     v-model=\"itemId\"\n *     label=\"Grouped single select\"\n *     :options=\"[\n *          {\n *                \"label\": \"Option 1\",\n *                \"group\": \"exampleGroup1\",\n *                \"value\": \"option1\"\n *          },\n *          {\n *                \"label\": \"Option 2\",\n *                \"group\": \"exampleGroup1\",\n *                \"value\": \"option2\"\n *          },\n *          {\n *                \"label\": \"Option 3\",\n *                \"group\": \"exampleGroup2\",\n *                \"value\": \"option3\"\n *          }]\"\n *      groups=\"[\n *          {\"id\": \"exampleGroup1\", \"label\": \"Example group one\"},\n *          {\"id\": \"exampleGroup2\", \"label\": \"Example group two\"},\n *      ]\"\n * </sw-grouped-single-select>\n */\nComponent.extend('sw-grouped-single-select', 'sw-single-select', {\n    template,\n\n    inject: ['feature'],\n\n    props: {\n        groups: {\n            type: Array,\n            required: true,\n        },\n        /** Property of a group that is used to identify them */\n        groupIdProperty: {\n            type: String,\n            required: false,\n            default: 'id',\n        },\n    },\n\n    methods: {\n        getGroupClasses(item) {\n            const classes = ['sw-grouped-single-select__group-separator'];\n            if (item.group === 'misc') {\n                classes.push('sw_grouped-single-select_group-misc-separator');\n            }\n\n            return classes;\n        },\n\n        getGroupLabel(item) {\n            const itemGroup = this.groups.find((group) => group[this.groupIdProperty] === item.group);\n\n            return itemGroup?.label ?? '';\n        },\n\n        shouldShowGroupTitle(item, index) {\n            return item.group && item.group !== this.visibleResults[index - 1]?.group;\n        },\n    },\n});\n"],"names":["template","Component","item","classes","itemGroup","group","index","_a"],"mappings":"AAAA,MAAeA,EAAA,2kCCGT,CAAE,UAAAC,CAAW,EAAG,OAkCtBA,EAAU,OAAO,2BAA4B,mBAAoB,CAC7D,SAAAD,EAEA,OAAQ,CAAC,SAAS,EAElB,MAAO,CACH,OAAQ,CACJ,KAAM,MACN,SAAU,EACb,EAED,gBAAiB,CACb,KAAM,OACN,SAAU,GACV,QAAS,IACZ,CACJ,EAED,QAAS,CACL,gBAAgBE,EAAM,CAClB,MAAMC,EAAU,CAAC,2CAA2C,EAC5D,OAAID,EAAK,QAAU,QACfC,EAAQ,KAAK,+CAA+C,EAGzDA,CACV,EAED,cAAcD,EAAM,CAChB,MAAME,EAAY,KAAK,OAAO,KAAMC,GAAUA,EAAM,KAAK,eAAe,IAAMH,EAAK,KAAK,EAExF,OAAOE,GAAA,YAAAA,EAAW,QAAS,EAC9B,EAED,qBAAqBF,EAAMI,EAAO,CDvE1C,IAAAC,ECwEY,OAAOL,EAAK,OAASA,EAAK,UAAUK,EAAA,KAAK,eAAeD,EAAQ,CAAC,IAA7B,YAAAC,EAAgC,MACvE,CACJ,CACL,CAAC"}