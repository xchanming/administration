import{F as n}from"./feature-grid-translation.service-CXBbmI10.js";const l=`{% block sw_settings_list %} {% block sw_settings_product_feature_set_index %} <sw-page class="sw-settings-product-feature-sets-list"> {% block sw_settings_product_feature_set_list_search_bar %} <template #search-bar> <sw-search-bar initial-search-type="feature_set" :placeholder="$tc('sw-settings-product-feature-sets.general.placeholderSearchBar')" :initial-search="term" @search="onSearch" /> </template> {% endblock %} {% block sw_settings_product_feature_set_list_smart_bar_header %} <template #smart-bar-header> {% block sw_settings_product_feature_set_list_smart_bar_header_title %} <h2> {% block sw_settings_product_feature_set_list_smart_bar_header_title_text %} {{ $tc('sw-settings.index.title') }} <sw-icon name="regular-chevron-right-xs" small /> {{ $tc('sw-settings-product-feature-sets.list.textHeadline') }} {% endblock %} </h2> {% endblock %} </template> {% endblock %} {% block sw_settings_product_feature_set_list_smart_bar_actions %} <template #smart-bar-actions> {% block sw_settings_product_feature_set_list_smart_bar_actions_add %} <sw-button :router-link="{ name: 'sw.settings.product.feature.sets.create' }" :disabled="!acl.can('product_feature_sets.creator') || undefined" class="sw-settings-product-feature-sets-list-grid__create-button" variant="primary" > {{ $tc('sw-settings-product-feature-sets.list.buttonAddEssentialCharacteristics') }} </sw-button> {% endblock %} </template> {% endblock %} {% block sw_settings_product_feature_set_list_smart_bar_language_switch %} <template #language-switch> <sw-language-switch @on-change="onChangeLanguage" /> </template> {% endblock %} <template #content> {% block sw_settings_product_feature_set_list_content %} <div class="sw-product-feature-sets-list__content"> <sw-entity-listing v-if="isLoading || productFeatureSets" ref="swSettingsProductFeatureSetsGrid" class="sw-settings-product-feature-sets-list-grid" :items="productFeatureSets" :columns="getProductFeatureSetsColumns()" :repository="productFeatureSetsRepository" detail-route="sw.settings.product.feature.sets.detail" :disable-data-fetching="true" :sort-by="sortBy" :sort-direction="sortDirection" :allow-inline-edit="acl.can('product_feature_sets.editor')" :allow-edit="acl.can('product_feature_sets.editor')" :allow-view="acl.can('product_feature_sets.viewer')" :allow-delete="acl.can('product_feature_sets.deleter')" :is-loading="isLoading" @page-change="onPageChange" @column-sort="onSortColumn" @inline-edit-save="onInlineEditSave" > <template #column-features="{ item }"> <span v-if="item.features"> {{ renderFeaturePreview(item.features) }} </span> </template> {% block sw_settings_product_feature_set_list_grid_columns_actions %} <template #actions="{ item }"> {% block sw_settings_product_feature_set_list_grid_columns_actions_edit %} <sw-context-menu-item :router-link="{ name: 'sw.settings.product.feature.sets.detail', params: { id: item.id, edit: 'edit' }}" :disabled="!acl.can('product_feature_sets.editor') || undefined" class="sw-product-feature-sets-list__edit-action" > {{ $tc('sw-settings-product-feature-sets.list.contextMenuEdit') }} </sw-context-menu-item> {% endblock %} {% block sw_settings_product_feature_set_list_grid_columns_actions_delete %} <sw-context-menu-item :disabled="item.isSystemDefault || !acl.can('product_feature_sets.deleter') || undefined" variant="danger" class="sw-product-feature-sets-list__delete-action" @click="onDelete(item.id)" > {{ $tc('sw-settings-product-feature-sets.list.contextMenuDelete') }} </sw-context-menu-item> {% endblock %} </template> {% endblock %} {% block sw_settings_product_feature_set_list_grid_action_modals %} <template #action-modals="{ item }"> {% block sw_settings_product_feature_set_list_delete_modal %} <sw-modal v-if="showDeleteModal" :title="$tc('global.default.warning')" variant="small" @modal-close="onCloseDeleteModal" > {% block sw_settings_product_feature_set_list_delete_modal_confirm_delete_text %} <p class="sw-settings-product-feature-sets-list__confirm-delete-text"> {{ $tc('sw-settings-product-feature-sets.list.textDeleteConfirm', 0, { name: item.name }) }} </p> {% endblock %} {% block sw_settings_product_feature_set_list_delete_modal_footer %} <template #modal-footer> {% block sw_settings_product_feature_set_list_delete_modal_cancel %} <sw-button size="small" @click="onCloseDeleteModal" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_settings_product_feature_set_list_delete_modal_confirm %} <sw-button variant="danger" size="small" @click="onConfirmDelete(item.id)" > {{ $tc('sw-settings-product-feature-sets.list.buttonDelete') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} </template> {% endblock %} </sw-entity-listing> </div> {% endblock %} </template> </sw-page> {% endblock %} {% endblock %}`,{Mixin:a}=Cicada,{Criteria:o}=Cicada.Data,u={template:l,compatConfig:Cicada.compatConfig,inject:["repositoryFactory","acl"],mixins:[a.getByName("listing"),a.getByName("notification")],data(){return{entityName:"product_feature_set",productFeatureSets:null,sortBy:"product_feature_set.name",isLoading:!1,sortDirection:"ASC",naturalSorting:!0,showDeleteModal:!1,translationService:null}},metaInfo(){return{title:this.$createTitle()}},computed:{productFeatureSetsRepository(){return this.repositoryFactory.create("product_feature_set")},propertyGroupRepository(){return this.repositoryFactory.create("property_group")},customFieldRepository(){return this.repositoryFactory.create("custom_field")},featureGridTranslationService(){return this.translationService===null&&(this.translationService=new n(this,this.propertyGroupRepository,this.customFieldRepository)),this.translationService}},methods:{metaInfo(){return{title:this.$createTitle()}},getList(){this.isLoading=!0,this.naturalSorting=this.sortBy==="name";const t=new o(this.page,this.limit);t.setTerm(this.term),t.addSorting(o.sort(this.sortBy,this.sortDirection,this.naturalSorting)),this.productFeatureSetsRepository.search(t).then(e=>(this.total=e.total,this.productFeatureSets=e,e)).then(e=>{const s=e.reduce((r,i)=>(i.features&&i.features.length&&(r=[...r,...i.features||[]]),r),[]);return Promise.all([this.featureGridTranslationService.fetchPropertyGroupEntities(s),this.featureGridTranslationService.fetchCustomFieldEntities(s)])}).then(()=>{this.isLoading=!1})},onChangeLanguage(t){Cicada.State.commit("context/setApiLanguageId",t),this.getList()},onInlineEditSave(t,e){t.then(()=>{this.createNotificationSuccess({message:this.$tc("sw-settings-product-feature-sets.detail.messageSaveSuccess",0,{name:e.name})})}).catch(()=>{this.getList(),this.createNotificationError({message:this.$tc("sw-settings-product-feature-sets.detail.messageSaveError")})})},onDelete(t){this.showDeleteModal=t},onCloseDeleteModal(){this.showDeleteModal=!1},onConfirmDelete(t){return this.showDeleteModal=!1,this.productFeatureSetsRepository.delete(t).then(()=>{this.getList()})},getProductFeatureSetsColumns(){return[{property:"name",inlineEdit:"string",label:"sw-settings-product-feature-sets.list.columnTemplate",routerLink:"sw.settings.product.feature.sets.detail",allowResize:!0,primary:!0},{property:"description",inlineEdit:"string",label:"sw-settings-product-feature-sets.list.columnDescription",allowResize:!0},{property:"features",label:"sw-settings-product-feature-sets.list.columnValues",allowResize:!0}]},renderFeaturePreview(t){if(!t.length)return null;const e=t.slice(0,4).map(s=>this.featureGridTranslationService.getNameTranslation(s)).join(", ");return t.length>4?`${e}, ...`:e}}};export{u as default};
//# sourceMappingURL=index-BUa6xLoZ.js.map
