{"version":3,"file":"index-CD2TYPgx.js","sources":["../../../app/administration/src/module/sw-order/component/sw-order-line-items-grid/sw-order-line-items-grid.html.twig","../../../app/administration/src/module/sw-order/component/sw-order-line-items-grid/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_order_line_items_grid %}\n<sw-container\n    type=\"row\"\n    class=\"sw-order-line-items-grid\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_order_line_items_grid_actions %}\n    <sw-container\n        class=\"sw-order-line-items-grid__actions-container\"\n        columns=\"1fr auto\"\n        gap=\"16px\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_line_items_grid_line_item_filter %}\n        <div align=\"left\">\n            <sw-card-filter\n                ref=\"itemFilter\"\n                :placeholder=\"$tc('sw-order.createBase.placeholderSearchBarItem')\"\n                @sw-card-filter-term-change=\"onSearchTermChange\"\n            />\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_line_items_grid_create_actions %}\n        <div align=\"right\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_create_actions_button_group %}\n            <sw-button-group :disabled=\"isLoading || undefined\">\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_line_items_grid_add_existing_product %}\n                <sw-button\n                    class=\"sw-order-line-items-grid__actions-container-add-product-btn\"\n                    variant=\"ghost\"\n                    size=\"small\"\n                    :disabled=\"!editable || undefined\"\n                    @click=\"onInsertExistingItem\"\n                >\n                    {{ $tc('sw-order.detailBase.buttonAddProduct') }}\n                </sw-button>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_line_items_grid_create_actions_dropdown %}\n                <sw-context-button>\n                    <template #button>\n                        <sw-button\n                            variant=\"ghost\"\n                            size=\"small\"\n                            square\n                        >\n                            <sw-icon\n                                name=\"regular-chevron-down-xs\"\n                                decorative\n                            />\n                        </sw-button>\n                    </template>\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_order_line_items_grid_create_actions_dropdown_menu_item %}\n                    <sw-context-menu-item\n                        v-tooltip.left=\"{\n                            message: $tc('sw-privileges.tooltip.warning'),\n                            disabled: editable,\n                            showOnDisabledElements: true\n                        }\"\n                        class=\"sw-order-line-items-grid__create-custom-item\"\n                        :disabled=\"!editable || undefined\"\n                        @click=\"onInsertBlankItem\"\n                    >\n                        {{ $tc('sw-order.detailBase.buttonAddBlankProduct') }}\n                    </sw-context-menu-item>\n                    <sw-context-menu-item\n                        v-tooltip.left=\"{\n                            message: $tc('sw-privileges.tooltip.warning'),\n                            disabled: canCreateDiscounts,\n                            showOnDisabledElements: true\n                        }\"\n                        class=\"sw-order-line-items-grid__can-create-discounts-button\"\n                        :disabled=\"!canCreateDiscounts || undefined\"\n                        @click=\"onInsertCreditItem\"\n                    >\n                        {{ $tc('sw-order.detailBase.buttonAddCredit') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                </sw-context-button>\n                {% endblock %}\n\n            </sw-button-group>\n            {% endblock %}\n\n        </div>\n        {% endblock %}\n\n    </sw-container>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_order_line_items_grid_grid %}\n    <sw-data-grid\n        ref=\"dataGrid\"\n        class=\"sw-order-line-items-grid__data-grid\"\n        identifier=\"sw-order-line-item-grid\"\n        :data-source=\"orderLineItems\"\n        :columns=\"getLineItemColumns\"\n        show-settings\n        :show-selection=\"editable\"\n        :is-loading=\"isLoading\"\n        :allow-inline-edit=\"editable\"\n        :is-record-editable=\"(item) => !isPromotionItem(item)\"\n        @inline-edit-cancel=\"onInlineEditCancel\"\n        @inline-edit-save=\"onInlineEditSave\"\n        @selection-change=\"onSelectionChanged\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_line_items_grid_grid_columns %}\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_line_items_grid_grid_columns_label %}\n        <template #column-label=\"{ item, isInlineEdit }\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_columns_label_inline_edit %}\n            <sw-order-product-select\n                v-if=\"isInlineEdit\"\n                name=\"sw-field--item-label\"\n                :sales-channel-id=\"salesChannelId\"\n                :tax-status=\"taxStatus\"\n                :item=\"item\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_columns_label_link %}\n            <div\n                v-else-if=\"!isInlineEdit && (isProductItem(item) || isContainerItem(item))\"\n                class=\"sw-order-line-items-grid__item-product\"\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_line_items_grid_grid_columns_label_nested_modal_button %}\n                <sw-button\n                    v-if=\"hasChildren(item)\"\n                    v-tooltip=\"{ message: $tc('sw-order.detailBase.tooltipNestedLineItemsButton') }\"\n                    class=\"sw-order-line-items-grid__item-nested-indicator\"\n                    size=\"x-small\"\n                    @click=\"openNestedLineItemsModal(item)\"\n                >\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_order_line_items_grid_grid_columns_label_nested_modal_button_icon %}\n                    <sw-icon\n                        class=\"sw-order-line-items-grid__nested-indicator-icon\"\n                        name=\"regular-list-xs\"\n                        size=\"14px\"\n                    />\n                    {% endblock %}\n\n                </sw-button>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_line_items_grid_column_payload_options %}\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_line_items_grid_column_payload_options_link %}\n                <router-link\n                    v-if=\"item.payload && item.payload.options\"\n                    class=\"sw-order-line-items-grid__item-payload-options\"\n                    :title=\"$tc('sw-order.detailBase.contextMenuShowProduct')\"\n                    :to=\"{ name: 'sw.product.detail', params: { id: item.productId } }\"\n                >\n                    <sw-product-variant-info :variations=\"item.payload.options\">\n                        <div class=\"sw-order-line-items-grid__item-label\">\n                            {{ item.label }}\n                        </div>\n                    </sw-product-variant-info>\n                </router-link>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_line_items_grid_column_payload_options_linkless %}\n                <div\n                    v-else\n                    class=\"sw-order-line-items-grid__item-payload-options\"\n                >\n                    <span class=\"sw-order-line-items-grid__item-label\">\n                        {{ item.label }}\n                    </span>\n                </div>\n                {% endblock %}\n                {% endblock %}\n\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_columns_label_content %}\n            <template v-else>\n                <span class=\"sw-order-line-items-grid__item-label\">\n                    {{ item.label }}\n                </span>\n            </template>\n            {% endblock %}\n\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_line_items_grid_grid_columns_unit_price %}\n        <template #column-unitPrice=\"{ item, isInlineEdit }\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_columns_unit_price_inline_edit %}\n            <sw-number-field\n                v-if=\"isInlineEdit && !itemCreatedFromProduct(item.id)\"\n                v-model:value=\"item.priceDefinition.price\"\n                name=\"sw-field--item-priceDefinition-price\"\n                placeholder=\"0\"\n                size=\"small\"\n                :min=\"getMinItemPrice(item.id)\"\n                :digits=\"order.itemRounding.decimals\"\n                number-align-end\n                @update:value=\"checkItemPrice($event, item)\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_columns_unit_price_content %}\n            <span v-else>{{ currencyFilter(item.unitPrice, order.currency.isoCode, order.itemRounding.decimals) }}</span>\n            {% endblock %}\n\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_line_items_grid_grid_columns_total_price %}\n        <template #column-totalPrice=\"{ item }\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_columns_total_price_content %}\n            <span>\n                {{ currencyFilter(item.totalPrice, order.currency.isoCode, order.itemRounding.decimals) }}\n            </span>\n            {% endblock %}\n\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_line_items_grid_grid_columns_quantity %}\n        <template #column-quantity=\"{ item, isInlineEdit }\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_columns_quantity_inline_edit %}\n            <sw-number-field\n                v-if=\"isInlineEdit && !isCreditItem(item.id)\"\n                v-model:value=\"item.quantity\"\n                name=\"sw-field--item-quantity\"\n                number-type=\"int\"\n                :min=\"1\"\n                size=\"small\"\n                placeholder=\"0\"\n                number-align-end\n                @update:value=\"updateItemQuantity(item)\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_columns_quantity_content %}\n            <span v-else>\n                {{ item.quantity }} x\n            </span>\n            {% endblock %}\n\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_line_items_grid_grid_columns_tax %}\n\n        <template #column-price.taxRules[0]=\"{ item, isInlineEdit }\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_columns_tax_inline_edit %}\n            <sw-number-field\n                v-if=\"isInlineEdit && showTaxRulesInlineEdit(item)\"\n                key=\"order-line-item-tax-edit-default\"\n                v-model:value=\"item.priceDefinition.taxRules[0].taxRate\"\n                name=\"sw-field--item-priceDefinition-taxRules[0]-taxRate\"\n                size=\"small\"\n                placeholder=\"0\"\n                number-align-end\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_columns_tax_content_tooltip %}\n            <span\n                v-else-if=\"hasMultipleTaxes(item)\"\n                v-tooltip=\"tooltipTaxDetail(item)\"\n                class=\"sw-order-line-items-grid__item-tax-tooltip\"\n            >\n                {{ showTaxValue(item) }}\n            </span>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_columns_tax_content %}\n            <span v-else-if=\"item.price && item.price.taxRules.length\">\n                {{ showTaxValue(item) }}\n            </span>\n            {% endblock %}\n\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_line_items_grid_grid_actions %}\n        <template #actions=\"{ item, itemIndex }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_actions_show %}\n            <sw-context-menu-item\n                :disabled=\"!isProductItem(item) || undefined\"\n                :router-link=\"{ name: 'sw.product.detail', params: { id: item.productId } }\"\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_line_items_grid_grid_actions_show_label %}\n                {{ $tc('sw-order.detailBase.contextMenuShowProduct') }}\n                {% endblock %}\n\n            </sw-context-menu-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_actions_extension %}{% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_actions_delete %}\n            <sw-context-menu-item\n                v-tooltip.left=\"{\n                    message: $tc('sw-privileges.tooltip.warning'),\n                    disabled: editable,\n                    showOnDisabledElements: true\n                }\"\n                variant=\"danger\"\n                class=\"sw_order_line_items_grid-item__delete-action\"\n                :disabled=\"!editable || undefined\"\n                @click=\"onDeleteItem(item, itemIndex)\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_line_items_grid_grid_actions_delete_label %}\n                {{ $tc('sw-order.detailBase.contextMenuDelete') }}\n                {% endblock %}\n\n            </sw-context-menu-item>\n            {% endblock %}\n\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_line_items_grid_grid_actions_modals %}\n        <template #action-modals=\"{ item }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_grid_actions_modals_items %}{% endblock %}\n            <sw-modal\n                v-if=\"showDeleteModal === item.id\"\n                class=\"sw-order-line-items-grid__delete-item-modal\"\n                :title=\"$tc('global.default.warning')\"\n                variant=\"small\"\n                @modal-close=\"onCloseDeleteModal\"\n            >\n                <p class=\"sw-order-list__confirm-delete-text\">\n                    {{ $tc('sw-order.detailBase.textDeleteLineItemConfirm', 0, { label: `${item.label}` }) }}\n                </p>\n\n                <template #modal-footer>\n                    <sw-button\n                        size=\"small\"\n                        class=\"sw_order_line_items_grid-actions_modal__close-action\"\n                        @click=\"onCloseDeleteModal\"\n                    >\n                        {{ $tc('global.default.cancel') }}\n                    </sw-button>\n\n                    <sw-button\n                        variant=\"danger\"\n                        size=\"small\"\n\n                        class=\"sw_order_line_items_grid-actions_modal__confirm-action\"\n                        @click=\"onConfirmDelete(item.id)\"\n                    >\n                        {{ $tc('global.default.delete') }}\n                    </sw-button>\n                </template>\n            </sw-modal>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_line_items_grid_bulk_actions %}\n        <template #bulk>\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_bulk_actions_delete %}\n            <a\n                class=\"link link-danger\"\n                role=\"link\"\n                tabindex=\"0\"\n                @click=\"onDeleteSelectedItems\"\n                @keydown.enter=\"onDeleteSelectedItems\"\n            >\n                {{ $tc('global.default.delete') }}\n            </a>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_line_items_grid_bulk_actions_extension %}{% endblock %}\n        </template>\n        {% endblock %}\n        {% endblock %}\n\n    </sw-data-grid>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_order_line_items_nested_line_item_modal %}\n    <sw-order-nested-line-items-modal\n        v-if=\"nestedLineItemsModal\"\n        :line-item=\"nestedLineItemsModal\"\n        :order=\"order\"\n        @modal-close=\"closeNestedLineItemsModal\"\n    />\n    {% endblock %}\n\n</sw-container>\n{% endblock %}\n","import template from './sw-order-line-items-grid.html.twig';\nimport { LineItemType } from '../../order.types';\nimport './sw-order-line-items-grid.scss';\n\n/**\n * @package checkout\n */\n\nconst { Utils } = Cicada;\nconst { get, format } = Utils;\n\n// merge 16.11.2020\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'orderService',\n        'acl',\n        'feature',\n    ],\n\n    emits: [\n        'item-edit',\n        'existing-item-edit',\n        'item-cancel',\n        'item-delete',\n    ],\n    props: {\n        order: {\n            type: Object,\n            required: true,\n        },\n        context: {\n            type: Object,\n            required: true,\n        },\n        editable: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            selectedItems: {},\n            searchTerm: '',\n            nestedLineItemsModal: null,\n            showDeleteModal: false,\n        };\n    },\n    computed: {\n        canCreateDiscounts() {\n            return this.acl.can('orders.create_discounts');\n        },\n\n        orderLineItemRepository() {\n            return this.repositoryFactory.create('order_line_item');\n        },\n\n        orderLineItems() {\n            if (!this.searchTerm) {\n                return this.order.lineItems;\n            }\n\n            // Filter based on the product label is not blank and contains the search term or not\n            const keyWords = this.searchTerm.split(/[\\W_]+/gi);\n            return this.order.lineItems.filter((item) => {\n                if (!item.label) {\n                    return false;\n                }\n\n                const targets = [item.label.toLowerCase()];\n\n                if (this.isProductNumberColumnVisible && item.payload?.productNumber) {\n                    targets.push(item.payload.productNumber.toLowerCase());\n                }\n\n                return keyWords.every((key) => targets.some((i) => i.includes(key.toLowerCase())));\n            });\n        },\n\n        lineItemTypes() {\n            return LineItemType;\n        },\n\n        taxStatus() {\n            return get(this.order, 'taxStatus', '');\n        },\n\n        unitPriceLabel() {\n            if (this.taxStatus === 'net') {\n                return this.$tc('sw-order.detailBase.columnPriceNet');\n            }\n\n            if (this.taxStatus === 'tax-free') {\n                return this.$tc('sw-order.detailBase.columnPriceTaxFree');\n            }\n\n            return this.$tc('sw-order.detailBase.columnPriceGross');\n        },\n\n        getLineItemColumns() {\n            const columnDefinitions = [\n                {\n                    property: 'quantity',\n                    dataIndex: 'quantity',\n                    label: 'sw-order.detailBase.columnQuantity',\n                    allowResize: false,\n                    align: 'right',\n                    inlineEdit: true,\n                    width: '90px',\n                },\n                {\n                    property: 'label',\n                    dataIndex: 'label',\n                    label: 'sw-order.detailBase.columnProductName',\n                    allowResize: false,\n                    primary: true,\n                    inlineEdit: true,\n                    multiLine: true,\n                },\n                {\n                    property: 'payload.productNumber',\n                    dataIndex: 'payload.productNumber',\n                    label: 'sw-order.detailBase.columnProductNumber',\n                    allowResize: false,\n                    align: 'left',\n                    visible: false,\n                },\n                {\n                    property: 'unitPrice',\n                    dataIndex: 'unitPrice',\n                    label: this.unitPriceLabel,\n                    allowResize: false,\n                    align: 'right',\n                    inlineEdit: true,\n                    width: '120px',\n                },\n            ];\n\n            if (this.taxStatus !== 'tax-free') {\n                columnDefinitions.push({\n                    property: 'price.taxRules[0]',\n                    label: 'sw-order.detailBase.columnTax',\n                    allowResize: false,\n                    align: 'right',\n                    inlineEdit: true,\n                    width: '90px',\n                });\n            }\n\n            return [\n                ...columnDefinitions,\n                {\n                    property: 'totalPrice',\n                    dataIndex: 'totalPrice',\n                    label:\n                        this.taxStatus === 'gross'\n                            ? 'sw-order.detailBase.columnTotalPriceGross'\n                            : 'sw-order.detailBase.columnTotalPriceNet',\n                    allowResize: false,\n                    align: 'right',\n                    width: '120px',\n                },\n            ];\n        },\n\n        salesChannelId() {\n            return this.order?.salesChannelId ?? '';\n        },\n\n        isProductNumberColumnVisible() {\n            return this.$refs.dataGrid?.currentColumns.find((item) => item.property === 'payload.productNumber')?.visible;\n        },\n\n        currencyFilter() {\n            return Cicada.Filter.getByName('currency');\n        },\n    },\n    methods: {\n        onInlineEditSave(item) {\n            return new Promise((resolve) => {\n                if (item.isNew()) {\n                    // This item is based on a product\n                    if (item.type === this.lineItemTypes.PRODUCT) {\n                        this.orderService\n                            .addProductToOrder(this.order.id, this.order.versionId, item.identifier, item.quantity)\n                            .then((lineItem) => {\n                                this.$emit('item-edit');\n                                resolve(lineItem);\n                            });\n                    } else if (item.type === this.lineItemTypes.CREDIT) {\n                        this.orderService\n                            .addCreditItemToOrder(this.order.id, this.order.versionId, item)\n                            .then((lineItem) => {\n                                this.$emit('item-edit');\n                                resolve(lineItem);\n                            });\n                    } else {\n                        // This item not based on an existing product (blank item)\n                        this.orderService\n                            .addCustomLineItemToOrder(this.order.id, this.order.versionId, item)\n                            .then((lineItem) => {\n                                this.$emit('item-edit');\n                                resolve(lineItem);\n                            });\n                    }\n                } else {\n                    this.$emit('existing-item-edit');\n                    resolve();\n                }\n            });\n        },\n\n        onInlineEditCancel() {\n            this.$emit('item-cancel');\n        },\n\n        createNewOrderLineItem() {\n            const item = this.orderLineItemRepository.create();\n            item.versionId = this.order.versionId;\n            item.priceDefinition = {\n                isCalculated: false,\n                taxRules: [{ taxRate: 0, percentage: 100 }],\n                price: 0,\n            };\n            item.price = {\n                taxRules: [{ taxRate: 0 }],\n                unitPrice: 0,\n                quantity: 1,\n                totalPrice: 0,\n            };\n            item.quantity = 1;\n            item.unitPrice = '...';\n            item.totalPrice = '...';\n            item.precision = 2;\n            item.label = '';\n            item.payload = {\n                productNumber: '',\n            };\n\n            return item;\n        },\n\n        onInsertBlankItem() {\n            const item = this.createNewOrderLineItem();\n            item.description = 'custom line item';\n            item.type = this.lineItemTypes.CUSTOM;\n            this.order.lineItems.unshift(item);\n        },\n\n        onInsertExistingItem() {\n            const item = this.createNewOrderLineItem();\n            item.type = this.lineItemTypes.PRODUCT;\n            this.order.lineItems.unshift(item);\n        },\n\n        onInsertCreditItem() {\n            const item = this.createNewOrderLineItem();\n            item.description = 'credit line item';\n            item.type = this.lineItemTypes.CREDIT;\n            this.order.lineItems.unshift(item);\n        },\n\n        onSelectionChanged(selection) {\n            this.selectedItems = selection;\n        },\n\n        onDeleteSelectedItems() {\n            const deletionPromises = [];\n\n            Object.values(this.selectedItems).forEach((item) => {\n                if (item.isNew()) {\n                    const itemIndex = this.order.lineItems.findIndex((lineItem) => item.id === lineItem?.id);\n                    this.order.lineItems.splice(itemIndex, 1);\n\n                    return;\n                }\n\n                deletionPromises.push(this.orderLineItemRepository.delete(item.id, this.context));\n            });\n\n            if (!deletionPromises.length) {\n                this.selectedItems = {};\n                this.$refs.dataGrid.resetSelection();\n                return;\n            }\n\n            Promise.all(deletionPromises).then(() => {\n                this.$emit('item-delete');\n                this.selectedItems = {};\n                this.$refs.dataGrid.resetSelection();\n            });\n        },\n\n        onDeleteItem(item, itemIndex) {\n            if (item.isNew()) {\n                this.order.lineItems.splice(itemIndex, 1);\n\n                return;\n            }\n\n            this.showDeleteModal = item.id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete() {\n            this.orderLineItemRepository.delete(this.showDeleteModal, this.context).then(() => {\n                this.$emit('item-delete');\n            });\n\n            this.showDeleteModal = false;\n        },\n\n        itemCreatedFromProduct(id) {\n            const item = this.orderLineItems.find((elem) => {\n                return elem.id === id;\n            });\n            return item.isNew() && item.type === this.lineItemTypes.PRODUCT;\n        },\n\n        onSearchTermChange(searchTerm) {\n            this.searchTerm = searchTerm.toLowerCase();\n        },\n\n        isCreditItem(id) {\n            const item = this.orderLineItems.find((elem) => {\n                return elem.id === id;\n            });\n            return item.type === this.lineItemTypes.CREDIT;\n        },\n\n        isProductItem(item) {\n            return item.type === this.lineItemTypes.PRODUCT;\n        },\n\n        isPromotionItem(item) {\n            return item.type === this.lineItemTypes.PROMOTION;\n        },\n\n        isContainerItem(item) {\n            return item.type === this.lineItemTypes.CONTAINER;\n        },\n\n        getMinItemPrice(id) {\n            if (this.isCreditItem(id)) {\n                return null;\n            }\n            return 0;\n        },\n\n        showTaxValue(item) {\n            return (this.isCreditItem(item.id) || this.isPromotionItem(item)) && item.price.taxRules.length > 1\n                ? this.$tc('sw-order.detailBase.textCreditTax')\n                : `${item.price.taxRules[0].taxRate} %`;\n        },\n\n        checkItemPrice(price, item) {\n            if (this.isCreditItem(item.id)) {\n                item.priceDefinition.price = Math.abs(price) * -1;\n                return;\n            }\n\n            item.priceDefinition.price = price;\n        },\n\n        tooltipTaxDetail(item) {\n            const sortTaxes = [...item.price.calculatedTaxes].sort((prev, current) => {\n                return prev.taxRate - current.taxRate;\n            });\n\n            const decorateTaxes = sortTaxes.map((taxItem) => {\n                return this.$tc('sw-order.detailBase.taxDetail', 0, {\n                    taxRate: taxItem.taxRate,\n                    tax: format.currency(taxItem.tax, this.order.currency.isoCode),\n                });\n            });\n\n            return {\n                showDelay: 300,\n                message: `${this.$tc('sw-order.detailBase.tax')}<br>${decorateTaxes.join('<br>')}`,\n            };\n        },\n\n        openNestedLineItemsModal(item) {\n            this.nestedLineItemsModal = item;\n        },\n\n        closeNestedLineItemsModal() {\n            this.nestedLineItemsModal = null;\n        },\n\n        hasChildren(item) {\n            return item.children && item.children.length > 0;\n        },\n\n        hasMultipleTaxes(item) {\n            return get(item, 'price.calculatedTaxes') && item.price.calculatedTaxes.length > 1;\n        },\n\n        updateItemQuantity(item) {\n            if (item.type !== this.lineItemTypes.CUSTOM) {\n                return;\n            }\n\n            item.priceDefinition.quantity = item.quantity;\n        },\n\n        showTaxRulesInlineEdit(item) {\n            return (\n                !this.itemCreatedFromProduct(item.id) &&\n                item.priceDefinition &&\n                item.priceDefinition.taxRules &&\n                !this.isCreditItem(item.id)\n            );\n        },\n    },\n};\n"],"names":["template","Utils","get","format","index","keyWords","item","targets","_a","key","i","LineItemType","columnDefinitions","_b","resolve","lineItem","selection","deletionPromises","itemIndex","id","elem","searchTerm","price","decorateTaxes","prev","current","taxItem"],"mappings":"8CAAA,MAAeA,EAAA,+zTCQT,CAAE,MAAAC,CAAO,EAAG,OACZ,CAAE,IAAAC,EAAK,OAAAC,CAAQ,EAAGF,EAITG,EAAA,CACX,SAAAJ,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,oBACA,eACA,MACA,SACH,EAED,MAAO,CACH,YACA,qBACA,cACA,aACH,EACD,MAAO,CACH,MAAO,CACH,KAAM,OACN,SAAU,EACb,EACD,QAAS,CACL,KAAM,OACN,SAAU,EACb,EACD,SAAU,CACN,KAAM,QACN,SAAU,GAEV,QAAS,EACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,UAAW,GACX,cAAe,CAAE,EACjB,WAAY,GACZ,qBAAsB,KACtB,gBAAiB,EAC7B,CACK,EACD,SAAU,CACN,oBAAqB,CACjB,OAAO,KAAK,IAAI,IAAI,yBAAyB,CAChD,EAED,yBAA0B,CACtB,OAAO,KAAK,kBAAkB,OAAO,iBAAiB,CACzD,EAED,gBAAiB,CACb,GAAI,CAAC,KAAK,WACN,OAAO,KAAK,MAAM,UAItB,MAAMK,EAAW,KAAK,WAAW,MAAM,UAAU,EACjD,OAAO,KAAK,MAAM,UAAU,OAAQC,GAAS,OACzC,GAAI,CAACA,EAAK,MACN,MAAO,GAGX,MAAMC,EAAU,CAACD,EAAK,MAAM,YAAa,CAAA,EAEzC,OAAI,KAAK,gCAAgCE,EAAAF,EAAK,UAAL,MAAAE,EAAc,gBACnDD,EAAQ,KAAKD,EAAK,QAAQ,cAAc,YAAW,CAAE,EAGlDD,EAAS,MAAOI,GAAQF,EAAQ,KAAMG,GAAMA,EAAE,SAASD,EAAI,YAAa,CAAA,CAAC,CAAC,CACjG,CAAa,CACJ,EAED,eAAgB,CACZ,OAAOE,CACV,EAED,WAAY,CACR,OAAOT,EAAI,KAAK,MAAO,YAAa,EAAE,CACzC,EAED,gBAAiB,CACb,OAAI,KAAK,YAAc,MACZ,KAAK,IAAI,oCAAoC,EAGpD,KAAK,YAAc,WACZ,KAAK,IAAI,wCAAwC,EAGrD,KAAK,IAAI,sCAAsC,CACzD,EAED,oBAAqB,CACjB,MAAMU,EAAoB,CACtB,CACI,SAAU,WACV,UAAW,WACX,MAAO,qCACP,YAAa,GACb,MAAO,QACP,WAAY,GACZ,MAAO,MACV,EACD,CACI,SAAU,QACV,UAAW,QACX,MAAO,wCACP,YAAa,GACb,QAAS,GACT,WAAY,GACZ,UAAW,EACd,EACD,CACI,SAAU,wBACV,UAAW,wBACX,MAAO,0CACP,YAAa,GACb,MAAO,OACP,QAAS,EACZ,EACD,CACI,SAAU,YACV,UAAW,YACX,MAAO,KAAK,eACZ,YAAa,GACb,MAAO,QACP,WAAY,GACZ,MAAO,OACV,CACjB,EAEY,OAAI,KAAK,YAAc,YACnBA,EAAkB,KAAK,CACnB,SAAU,oBACV,MAAO,gCACP,YAAa,GACb,MAAO,QACP,WAAY,GACZ,MAAO,MAC3B,CAAiB,EAGE,CACH,GAAGA,EACH,CACI,SAAU,aACV,UAAW,aACX,MACI,KAAK,YAAc,QACb,4CACA,0CACV,YAAa,GACb,MAAO,QACP,MAAO,OACV,CACjB,CACS,EAED,gBAAiB,OACb,QAAOJ,EAAA,KAAK,QAAL,YAAAA,EAAY,iBAAkB,EACxC,EAED,8BAA+B,SAC3B,OAAOK,GAAAL,EAAA,KAAK,MAAM,WAAX,YAAAA,EAAqB,eAAe,KAAMF,GAASA,EAAK,WAAa,2BAArE,YAAAO,EAA+F,OACzG,EAED,gBAAiB,CACb,OAAO,OAAO,OAAO,UAAU,UAAU,CAC5C,CACJ,EACD,QAAS,CACL,iBAAiBP,EAAM,CACnB,OAAO,IAAI,QAASQ,GAAY,CACxBR,EAAK,QAEDA,EAAK,OAAS,KAAK,cAAc,QACjC,KAAK,aACA,kBAAkB,KAAK,MAAM,GAAI,KAAK,MAAM,UAAWA,EAAK,WAAYA,EAAK,QAAQ,EACrF,KAAMS,GAAa,CAChB,KAAK,MAAM,WAAW,EACtBD,EAAQC,CAAQ,CAChD,CAA6B,EACET,EAAK,OAAS,KAAK,cAAc,OACxC,KAAK,aACA,qBAAqB,KAAK,MAAM,GAAI,KAAK,MAAM,UAAWA,CAAI,EAC9D,KAAMS,GAAa,CAChB,KAAK,MAAM,WAAW,EACtBD,EAAQC,CAAQ,CAChD,CAA6B,EAGL,KAAK,aACA,yBAAyB,KAAK,MAAM,GAAI,KAAK,MAAM,UAAWT,CAAI,EAClE,KAAMS,GAAa,CAChB,KAAK,MAAM,WAAW,EACtBD,EAAQC,CAAQ,CAChD,CAA6B,GAGT,KAAK,MAAM,oBAAoB,EAC/BD,IAEpB,CAAa,CACJ,EAED,oBAAqB,CACjB,KAAK,MAAM,aAAa,CAC3B,EAED,wBAAyB,CACrB,MAAMR,EAAO,KAAK,wBAAwB,OAAM,EAChD,OAAAA,EAAK,UAAY,KAAK,MAAM,UAC5BA,EAAK,gBAAkB,CACnB,aAAc,GACd,SAAU,CAAC,CAAE,QAAS,EAAG,WAAY,GAAG,CAAE,EAC1C,MAAO,CACvB,EACYA,EAAK,MAAQ,CACT,SAAU,CAAC,CAAE,QAAS,EAAG,EACzB,UAAW,EACX,SAAU,EACV,WAAY,CAC5B,EACYA,EAAK,SAAW,EAChBA,EAAK,UAAY,MACjBA,EAAK,WAAa,MAClBA,EAAK,UAAY,EACjBA,EAAK,MAAQ,GACbA,EAAK,QAAU,CACX,cAAe,EAC/B,EAEmBA,CACV,EAED,mBAAoB,CAChB,MAAMA,EAAO,KAAK,yBAClBA,EAAK,YAAc,mBACnBA,EAAK,KAAO,KAAK,cAAc,OAC/B,KAAK,MAAM,UAAU,QAAQA,CAAI,CACpC,EAED,sBAAuB,CACnB,MAAMA,EAAO,KAAK,yBAClBA,EAAK,KAAO,KAAK,cAAc,QAC/B,KAAK,MAAM,UAAU,QAAQA,CAAI,CACpC,EAED,oBAAqB,CACjB,MAAMA,EAAO,KAAK,yBAClBA,EAAK,YAAc,mBACnBA,EAAK,KAAO,KAAK,cAAc,OAC/B,KAAK,MAAM,UAAU,QAAQA,CAAI,CACpC,EAED,mBAAmBU,EAAW,CAC1B,KAAK,cAAgBA,CACxB,EAED,uBAAwB,CACpB,MAAMC,EAAmB,CAAA,EAazB,GAXA,OAAO,OAAO,KAAK,aAAa,EAAE,QAASX,GAAS,CAChD,GAAIA,EAAK,QAAS,CACd,MAAMY,EAAY,KAAK,MAAM,UAAU,UAAWH,GAAaT,EAAK,MAAOS,GAAA,YAAAA,EAAU,GAAE,EACvF,KAAK,MAAM,UAAU,OAAOG,EAAW,CAAC,EAExC,MACH,CAEDD,EAAiB,KAAK,KAAK,wBAAwB,OAAOX,EAAK,GAAI,KAAK,OAAO,CAAC,CAChG,CAAa,EAEG,CAACW,EAAiB,OAAQ,CAC1B,KAAK,cAAgB,GACrB,KAAK,MAAM,SAAS,iBACpB,MACH,CAED,QAAQ,IAAIA,CAAgB,EAAE,KAAK,IAAM,CACrC,KAAK,MAAM,aAAa,EACxB,KAAK,cAAgB,GACrB,KAAK,MAAM,SAAS,gBACpC,CAAa,CACJ,EAED,aAAaX,EAAMY,EAAW,CAC1B,GAAIZ,EAAK,QAAS,CACd,KAAK,MAAM,UAAU,OAAOY,EAAW,CAAC,EAExC,MACH,CAED,KAAK,gBAAkBZ,EAAK,EAC/B,EAED,oBAAqB,CACjB,KAAK,gBAAkB,EAC1B,EAED,iBAAkB,CACd,KAAK,wBAAwB,OAAO,KAAK,gBAAiB,KAAK,OAAO,EAAE,KAAK,IAAM,CAC/E,KAAK,MAAM,aAAa,CACxC,CAAa,EAED,KAAK,gBAAkB,EAC1B,EAED,uBAAuBa,EAAI,CACvB,MAAMb,EAAO,KAAK,eAAe,KAAMc,GAC5BA,EAAK,KAAOD,CACtB,EACD,OAAOb,EAAK,SAAWA,EAAK,OAAS,KAAK,cAAc,OAC3D,EAED,mBAAmBe,EAAY,CAC3B,KAAK,WAAaA,EAAW,aAChC,EAED,aAAaF,EAAI,CAIb,OAHa,KAAK,eAAe,KAAMC,GAC5BA,EAAK,KAAOD,CACtB,EACW,OAAS,KAAK,cAAc,MAC3C,EAED,cAAcb,EAAM,CAChB,OAAOA,EAAK,OAAS,KAAK,cAAc,OAC3C,EAED,gBAAgBA,EAAM,CAClB,OAAOA,EAAK,OAAS,KAAK,cAAc,SAC3C,EAED,gBAAgBA,EAAM,CAClB,OAAOA,EAAK,OAAS,KAAK,cAAc,SAC3C,EAED,gBAAgBa,EAAI,CAChB,OAAI,KAAK,aAAaA,CAAE,EACb,KAEJ,CACV,EAED,aAAab,EAAM,CACf,OAAQ,KAAK,aAAaA,EAAK,EAAE,GAAK,KAAK,gBAAgBA,CAAI,IAAMA,EAAK,MAAM,SAAS,OAAS,EAC5F,KAAK,IAAI,mCAAmC,EAC5C,GAAGA,EAAK,MAAM,SAAS,CAAC,EAAE,OAAO,IAC1C,EAED,eAAegB,EAAOhB,EAAM,CACxB,GAAI,KAAK,aAAaA,EAAK,EAAE,EAAG,CAC5BA,EAAK,gBAAgB,MAAQ,KAAK,IAAIgB,CAAK,EAAI,GAC/C,MACH,CAEDhB,EAAK,gBAAgB,MAAQgB,CAChC,EAED,iBAAiBhB,EAAM,CAKnB,MAAMiB,EAJY,CAAC,GAAGjB,EAAK,MAAM,eAAe,EAAE,KAAK,CAACkB,EAAMC,IACnDD,EAAK,QAAUC,EAAQ,OACjC,EAE+B,IAAKC,GAC1B,KAAK,IAAI,gCAAiC,EAAG,CAChD,QAASA,EAAQ,QACjB,IAAKvB,EAAO,SAASuB,EAAQ,IAAK,KAAK,MAAM,SAAS,OAAO,CACjF,CAAiB,CACJ,EAED,MAAO,CACH,UAAW,IACX,QAAS,GAAG,KAAK,IAAI,yBAAyB,CAAC,OAAOH,EAAc,KAAK,MAAM,CAAC,EAChG,CACS,EAED,yBAAyBjB,EAAM,CAC3B,KAAK,qBAAuBA,CAC/B,EAED,2BAA4B,CACxB,KAAK,qBAAuB,IAC/B,EAED,YAAYA,EAAM,CACd,OAAOA,EAAK,UAAYA,EAAK,SAAS,OAAS,CAClD,EAED,iBAAiBA,EAAM,CACnB,OAAOJ,EAAII,EAAM,uBAAuB,GAAKA,EAAK,MAAM,gBAAgB,OAAS,CACpF,EAED,mBAAmBA,EAAM,CACjBA,EAAK,OAAS,KAAK,cAAc,SAIrCA,EAAK,gBAAgB,SAAWA,EAAK,SACxC,EAED,uBAAuBA,EAAM,CACzB,MACI,CAAC,KAAK,uBAAuBA,EAAK,EAAE,GACpCA,EAAK,iBACLA,EAAK,gBAAgB,UACrB,CAAC,KAAK,aAAaA,EAAK,EAAE,CAEjC,CACJ,CACL"}