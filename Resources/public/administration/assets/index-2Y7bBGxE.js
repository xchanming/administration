const s=`{% block sw_customer_detail_base %} <div class="sw-customer-detail-base"> {% block sw_customer_detail_base_info_holder %} <div class="sw-customer-detail-base__info-holder"> {% block sw_customer_detail_base_info_card %} <sw-customer-card :title="$tc('sw-customer.detailBase.labelAccountCard')" :customer="customer" :edit-mode="customerEditMode" :is-loading="isLoading" > {% block sw_customer_detail_base_info_metadata %} <sw-customer-base-info :customer="customer" :is-loading="isLoading" :customer-edit-mode="customerEditMode" /> {% endblock %} </sw-customer-card> {% endblock %} {% block sw_customer_detail_base_default_addresses_card %} <sw-card v-if="customer.defaultShippingAddress || customer.defaultBillingAddress" :title="$tc('sw-customer.detailBase.labelAddressesCard')" position-identifier="sw-customer-detail-base-default-addresses" class="sw-customer-detail-base__default-addresses" :is-loading="customer.isLoading" > {% block sw_customer_detail_base_default_addresses %} <template #grid> <sw-customer-default-addresses :customer-edit-mode="customerEditMode" :customer="customer" /> </template> {% endblock %} </sw-card> {% endblock %} {% block sw_customer_detail_custom_field_sets %} <sw-card v-if="!!customerCustomFieldSets && customerCustomFieldSets.length > 0" position-identifier="sw-customer-detail-base-custom-field-sets" :title="$tc('sw-settings-custom-field.general.mainMenuItemGeneral')" :is-loading="customer.isLoading" > <sw-custom-field-set-renderer :entity="customer" :disabled="!customerEditMode" :sets="customerCustomFieldSets" /> </sw-card> {% endblock %} </div> {% endblock %} </div> {% endblock %}`,{Criteria:t}=Shopware.Data,o={template:s,inject:["repositoryFactory"],props:{customer:{type:Object,required:!0},customerEditMode:{type:Boolean,required:!0,default:!1},isLoading:{type:Boolean,required:!1,default:!1}},data(){return{customerCustomFieldSets:null}},computed:{customFieldSetRepository(){return this.repositoryFactory.create("custom_field_set")},customFieldSetCriteria(){const e=new t(1,25);return e.addFilter(t.equals("relations.entityName","customer")),e.getAssociation("customFields").addSorting(t.naturalSorting("config.customFieldPosition")),e}},created(){this.createdComponent()},methods:{createdComponent(){Shopware.Store.get("shopwareApps").selectedIds=this.customer.id?[this.customer.id]:[],this.customFieldSetRepository.search(this.customFieldSetCriteria).then(e=>{this.customerCustomFieldSets=e})}}};export{o as default};
