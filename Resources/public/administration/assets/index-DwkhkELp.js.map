{"version":3,"file":"index-DwkhkELp.js","sources":["../../../app/administration/src/app/component/base/sw-highlight-text/index.js"],"sourcesContent":["import { h } from 'vue';\nimport './sw-highlight-text.scss';\n\nconst { Component, Context } = Cicada;\n\n/**\n * @package admin\n *\n * @private\n * @description This component highlights text based on the searchTerm using regex\n * @status ready\n * @example-type dynamic\n * @component-example\n * <sw-highlight-text text=\"Lorem ipsum dolor sit amet, consetetur sadipscing elitr\" searchTerm=\"sit\"></sw-highlight-text>\n */\nComponent.register('sw-highlight-text', {\n    template: '',\n\n    compatConfig: Cicada.compatConfig,\n\n    render(createElement) {\n        // Vue2 syntax\n        if (typeof createElement === 'function') {\n            return createElement('div', {\n                class: 'sw-highlight-text',\n                domProps: { innerHTML: this.searchAndReplace() },\n            });\n        }\n\n        // Vue3 syntax\n        return h('div', {\n            class: 'sw-highlight-text',\n            innerHTML: this.searchAndReplace(),\n        });\n    },\n\n    props: {\n        searchTerm: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        text: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    methods: {\n        searchAndReplace() {\n            if (!this.text) {\n                return '';\n            }\n\n            if (!this.searchTerm) {\n                return this.text;\n            }\n\n            const prefix = '<span class=\"sw-highlight-text__highlight\">';\n            const suffix = '</span>';\n\n            const regExp = new RegExp(this.escapeRegExp(this.searchTerm), 'ig');\n            return this.text.replace(regExp, (str) => `${prefix}${str}${suffix}`);\n        },\n\n        // Remove regex special characters from search string\n        escapeRegExp(string) {\n            if (Context.app.adminEsEnable) {\n                // remove simple query string syntax\n                return string\n                    .replace(/[+-.*~\"|()]/g, '')\n                    .replace(/ AND | and | OR | or |  +/g, ' ')\n                    .replace(/[?^${}[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n            }\n\n            return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n        },\n    },\n});\n"],"names":["Component","Context","createElement","h","prefix","suffix","regExp","str","string"],"mappings":"iDAGA,KAAM,CAAE,UAAAA,EAAW,QAAAC,CAAS,EAAG,OAY/BD,EAAU,SAAS,oBAAqB,CACpC,SAAU,GAEV,aAAc,OAAO,aAErB,OAAOE,EAAe,CAElB,OAAI,OAAOA,GAAkB,WAClBA,EAAc,MAAO,CACxB,MAAO,oBACP,SAAU,CAAE,UAAW,KAAK,iBAAgB,CAAI,CAChE,CAAa,EAIEC,EAAE,MAAO,CACZ,MAAO,oBACP,UAAW,KAAK,iBAAkB,CAC9C,CAAS,CACJ,EAED,MAAO,CACH,WAAY,CACR,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EACD,KAAM,CACF,KAAM,OACN,SAAU,GACV,QAAS,IACZ,CACJ,EAED,QAAS,CACL,kBAAmB,CACf,GAAI,CAAC,KAAK,KACN,MAAO,GAGX,GAAI,CAAC,KAAK,WACN,OAAO,KAAK,KAGhB,MAAMC,EAAS,8CACTC,EAAS,UAETC,EAAS,IAAI,OAAO,KAAK,aAAa,KAAK,UAAU,EAAG,IAAI,EAClE,OAAO,KAAK,KAAK,QAAQA,EAASC,GAAQ,GAAGH,CAAM,GAAGG,CAAG,GAAGF,CAAM,EAAE,CACvE,EAGD,aAAaG,EAAQ,CACjB,OAAIP,EAAQ,IAAI,cAELO,EACF,QAAQ,eAAgB,EAAE,EAC1B,QAAQ,6BAA8B,GAAG,EACzC,QAAQ,gBAAiB,MAAM,EAGjCA,EAAO,QAAQ,sBAAuB,MAAM,CACtD,CACJ,CACL,CAAC"}