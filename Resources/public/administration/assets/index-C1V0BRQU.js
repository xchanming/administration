const r=`{% block sw_number_filter %} <sw-range-filter class="sw-number-filter" :title="filter.label" :filter="filter" :active="active" :value="numberValue" :property="filter.property" :show-reset-button="!!numberValue.from || !!numberValue.to" @filter-update="updateFilter" @filter-reset="resetFilter" > {% block sw_number_filter_from_field %} <template #from-field> <sw-number-field v-model:value="numberValue.from" v-bind="$attrs" class="sw-number-filter__from" :label="fromToFieldLabel('from')" :placeholder="filter.fromPlaceholder" /> </template> {% endblock %} {% block sw_number_filter_to_field %} <template #to-field> <sw-number-field v-model:value="numberValue.to" v-bind="$attrs" class="sw-number-filter__to" :label="fromToFieldLabel('to')" :placeholder="filter.toPlaceholder" /> </template> {% endblock %} </sw-range-filter> {% endblock %}`,{Component:i}=Cicada;i.register("sw-number-filter",{template:r,compatConfig:Cicada.compatConfig,emits:["filter-reset","filter-update"],props:{filter:{type:Object,required:!0},active:{type:Boolean,required:!0}},data(){return{numberValue:{from:null,to:null}}},watch:{"filter.value":{handler(){this.filter.value&&(this.numberValue={...this.filter.value})}}},methods:{fromToFieldLabel(t){const e=`${t}FieldLabel`;if(!this.filter.hasOwnProperty(e))return this.$tc(`global.default.${t}`);const l=this.filter[e];return l||null},updateFilter(t){if(!this.numberValue.from&&!this.numberValue.to){this.$emit("filter-reset",this.filter.name);return}const{value:e}=this.filter;e&&e.from===this.numberValue.from&&e.to===this.numberValue.to||this.$emit("filter-update",this.filter.name,t,this.numberValue)},resetFilter(){this.numberValue={from:null,to:null},this.$emit("filter-reset",this.filter.name,this.numberValue)}}});
//# sourceMappingURL=index-C1V0BRQU.js.map
