const t=`{% block sw_page %} <div class="sw-page" :class="pageClasses" > {% block sw_page_head_area %} <div v-if="showHeadArea" class="sw-page__head-area" :style="headerStyles" > {% block sw_page_search_bar %} <div v-if="showSearchBar" class="sw-page__search-bar" > <slot name="search-bar"> {% block sw_page_slot_search_bar %} <sw-search-bar /> {% endblock %} </slot> </div> {% block sw_page_top_bar_actions %} <div class="sw-page__top-bar-actions" :style="topBarActionStyles" > <sw-app-topbar-button /> {% block sw_page_notification_center %} <sw-notification-center /> {% endblock %} <sw-help-center-v2 /> </div> {% endblock %} {% endblock %} {% block sw_page_smart_bar %} <template v-if="showSmartBar"> {% block sw_page_smart_bar_divider %} <div v-if="showSmartBar && showSearchBar" class="sw-page__smart-bar-divider" ></div> {% endblock %} {% block sw_page_smart_bar_back_btn %} <div class="sw-page__back-btn-container" :style="smartBarContentStyle" > <slot name="smart-bar-back"> {% block sw_page_slot_smart_bar_back %} <router-link v-if="parentRoute" class="smart-bar__back-btn" :aria-label="$tc('global.sw-page.backButton')" :title="$tc('global.sw-page.backButton')" :to="{ name: parentRoute }" :style="{ 'color': pageColor }" > <sw-icon name="regular-chevron-left" small /> <sw-icon v-if="module && module.icon" :name="module.icon" small /> </router-link> {% endblock %} </slot> </div> {% endblock %} {% block sw_page_smart_bar_content %} <div class="smart-bar__content" :style="smartBarContentStyle" > {% block sw_page_smart_bar_content_header %} <div class="smart-bar__header"> <slot name="smart-bar-header"> {% block sw_page_slot_smart_bar_header %} <h2 v-if="module && module.title"> {{ $t(module.title) }} </h2> {% endblock %} </slot> </div> {% endblock %} {% block sw_page_smart_bar_content_language_switch %} <div class="smart-bar__language-switch"> <slot name="language-switch"> {% block sw_page_slot_language_switch%}{% endblock %} </slot> </div> {% endblock %} {% block sw_page_smart_bar_content_app_actions %} <sw-app-actions /> {% endblock %} {% block sw_page_smart_bar_content_actions %} <div class="smart-bar__actions"> <slot name="smart-bar-actions"> {% block sw_page_slot_smart_bar_actions %}{% endblock %} </slot> </div> {% endblock %} </div> {% endblock %} </template> {% endblock %} </div> {% endblock %} {% block sw_page_content %} <div ref="swPageContent" class="sw-page__content" :class="pageContentClasses" > <div v-if="hasSideContentSlot" class="sw-page__side-content" > <div class="sw-page__side-content-inner"> <slot name="side-content"> {% block sw_page_slot_side_content %}{% endblock %} </slot> </div> </div> <main id="main" class="sw-page__main-content" tabindex="-1" > <div class="sw-page__main-content-inner" v-bind="$attrs" v-on="additionalEventListeners" > <slot name="content"> {% block sw_page_slot_content %}{% endblock %} </slot> </div> </main> {% block sw_page_content_sidebar %} <div v-if="hasSidebarSlot" class="sw-page__sidebar" > <slot name="sidebar"> {% block sw_page_sidebar_slot %}{% endblock %} </slot> </div> {% endblock %} </div> {% endblock %} </div> {% endblock %}`,{Component:a}=Cicada,{dom:s}=Cicada.Utils;a.register("sw-page",{template:t,compatConfig:Cicada.compatConfig,provide(){return this.isCompatEnabled("INSTANCE_EVENT_EMITTER")?{}:{setSwPageSidebarOffset:this.setSidebarOffset,removeSwPageSidebarOffset:this.removeSidebarOffset}},props:{showSmartBar:{type:Boolean,default:!0},showSearchBar:{type:Boolean,default:!0},headerBorderColor:{type:String,required:!1,default:""}},data(){return{module:null,parentRoute:null,sidebarOffset:0,scrollbarOffset:0,hasFullWidthHeader:!1,languageId:""}},computed:{pageColor(){var e;return this.headerBorderColor?this.headerBorderColor:(e=this.module)!=null&&e.color?this.module.color:"#d8dde6"},hasSideContentSlot(){return!!this.$slots["side-content"]},hasSidebarSlot(){return!!this.$slots.sidebar},showHeadArea(){return this.showSearchBar||this.showSmartBar},pageClasses(){return{"has--head-area":this.showHeadArea}},pageContainerClasses(){return{"has--smart-bar":this.showSmartBar}},pageContentClasses(){return{"has--smart-bar":!!this.showSmartBar,"has--side-content":!!this.hasSideContentSlot,"has--side-bar ":!!this.hasSidebarSlot&&!this.hasSideContentSlot}},pageOffset(){return this.hasFullWidthHeader?0:`${this.sidebarOffset+this.scrollbarOffset}px`},headerStyles(){return{"border-bottom-color":this.pageColor,"padding-right":this.pageOffset}},topBarActionStyles(){return{"margin-right":`-${this.pageOffset}`}},additionalEventListeners(){return this.isCompatEnabled("INSTANCE_LISTENERS")?this.$listeners:{}},smartBarContentStyle(){return{"grid-row":this.showSearchBar?2:1}}},created(){this.createdComponent()},mounted(){this.mountedComponent()},updated(){this.updatedComponent()},beforeUnmount(){Cicada.State.dispatch("error/resetApiErrors"),this.beforeDestroyComponent()},methods:{createdComponent(){this.isCompatEnabled("INSTANCE_EVENT_EMITTER")&&(this.$on("mount",this.setSidebarOffset),this.$on("destroy",this.removeSidebarOffset)),window.addEventListener("resize",this.readScreenWidth)},mountedComponent(){this.initPage(),this.readScreenWidth(),this.setScrollbarOffset()},updatedComponent(){this.setScrollbarOffset()},beforeDestroyComponent(){window.removeEventListener("resize",this.readScreenWidth)},readScreenWidth(){this.hasFullWidthHeader=document.body.clientWidth<=500},setSidebarOffset(e){this.sidebarOffset=e},removeSidebarOffset(){this.sidebarOffset=0},setScrollbarOffset(){let e=document.querySelector(".sw-card-view__content");e||(e=document.querySelector(".sw-page__main-content-inner")),e!==null&&(this.scrollbarOffset=s.getScrollbarWidth(e))},initPage(){this.$route.meta.$module&&(this.module=this.$route.meta.$module),this.$route.meta.parentPath&&(this.parentRoute=this.$route.meta.parentPath)}}});
//# sourceMappingURL=index-B9XvHjDA.js.map
