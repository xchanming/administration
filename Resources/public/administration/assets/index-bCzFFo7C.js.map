{"version":3,"file":"index-bCzFFo7C.js","sources":["../../../app/administration/src/module/sw-bulk-edit/component/sw-bulk-edit-save-modal-success/sw-bulk-edit-save-modal-success.html.twig","../../../app/administration/src/module/sw-bulk-edit/component/sw-bulk-edit-save-modal-success/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_bulk_edit_save_modal_success %}\n<div class=\"sw-bulk-edit-save-modal-success\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_bulk_edit_save_modal_success_icon %}\n    <sw-label\n        class=\"sw-bulk-edit-save-modal__icon\"\n        appearance=\"pill\"\n        variant=\"success\"\n    >\n        <sw-icon\n            name=\"regular-check-circle\"\n            size=\"30px\"\n        />\n    </sw-label>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_bulk_edit_save_modal_error_content %}\n    <p\n        class=\"sw-bulk-edit-save-modal__help-text\"\n        v-html=\"description\"\n    >\n    </p>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_bulk_edit_save_modal_success_download_document %}\n    <ul\n        v-if=\"selectedDocumentTypes.length > 0\"\n        class=\"sw-bulk-edit-save-modal-success__download-document-container\"\n    >\n        <li\n            v-for=\"selectedDocumentType in selectedDocumentTypes\"\n            :key=\"selectedDocumentType.id\"\n            class=\"sw-bulk-edit-save-modal-success__download-document\"\n            :class=\"`is--${selectedDocumentType.technicalName}`\"\n        >\n            <span class=\"label\">\n                {{ selectedDocumentType.translated.name }}\n            </span>\n            <sw-button\n                class=\"action\"\n                size=\"small\"\n                :disabled=\"document[selectedDocumentType.technicalName].isDownloading\"\n                @click=\"downloadDocument(selectedDocumentType.technicalName)\"\n            >\n                {{ $tc('sw-bulk-edit.modal.success.buttonDownload') }}\n            </sw-button>\n        </li>\n    </ul>\n    {% endblock %}\n</div>\n{% endblock %}\n","/**\n * @package services-settings\n */\nimport template from './sw-bulk-edit-save-modal-success.html.twig';\nimport './sw-bulk-edit-save-modal-success.scss';\n\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'orderDocumentApiService',\n    ],\n\n    emits: [\n        'title-set',\n        'buttons-update',\n    ],\n\n    mixins: [\n        Cicada.Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            latestDocuments: {},\n            document: {\n                invoice: {\n                    isDownloading: false,\n                },\n                storno: {\n                    isDownloading: false,\n                },\n                delivery_note: {\n                    isDownloading: false,\n                },\n                credit_note: {\n                    isDownloading: false,\n                },\n            },\n        };\n    },\n\n    computed: {\n        documentRepository() {\n            return this.repositoryFactory.create('document');\n        },\n\n        selectedIds() {\n            return Cicada.State.get('cicadaApps').selectedIds;\n        },\n\n        downloadOrderDocuments() {\n            return Cicada.State.get('swBulkEdit')?.orderDocuments?.download;\n        },\n\n        latestDocumentsCriteria() {\n            const criteria = new Criteria(1, null);\n            criteria.addFilter(\n                Criteria.equalsAny(\n                    'documentTypeId',\n                    this.selectedDocumentTypes.map((item) => item.id),\n                ),\n            );\n            criteria.addFilter(Criteria.equalsAny('orderId', this.selectedIds));\n            criteria.addSorting(Criteria.sort('createdAt', 'DESC'));\n\n            return criteria;\n        },\n\n        selectedDocumentTypes() {\n            if (!this.downloadOrderDocuments) {\n                return [];\n            }\n\n            if (!this.downloadOrderDocuments.isChanged) {\n                return [];\n            }\n\n            if (this.downloadOrderDocuments.value.length <= 0) {\n                return [];\n            }\n\n            return this.downloadOrderDocuments.value.filter((item) => item.selected);\n        },\n\n        description() {\n            return this.selectedDocumentTypes.length > 0\n                ? this.$tc('sw-bulk-edit.modal.success.instruction')\n                : this.$tc('sw-bulk-edit.modal.success.description');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            this.updateButtons();\n            this.setTitle();\n            await this.getLatestDocuments();\n        },\n\n        setTitle() {\n            this.$emit('title-set', this.$tc('sw-bulk-edit.modal.success.title'));\n        },\n\n        updateButtons() {\n            const buttonConfig = [\n                {\n                    key: 'close',\n                    label: this.$tc('global.sw-modal.labelClose'),\n                    position: 'right',\n                    variant: 'primary',\n                    action: '',\n                    disabled: false,\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        async getLatestDocuments() {\n            if (this.selectedDocumentTypes.length <= 0) {\n                return;\n            }\n\n            const latestDocuments = {};\n            const maxDocsPerType = this.selectedIds.length;\n\n            const documents = await this.documentRepository.search(this.latestDocumentsCriteria);\n\n            this.selectedDocumentTypes.forEach((documentType) => {\n                latestDocuments[documentType.technicalName] ??= [];\n                const latestDoc = latestDocuments[documentType.technicalName];\n\n                const documentsGrouped = documents.filter((document) => {\n                    return document.documentTypeId === documentType.id;\n                });\n\n                const latestDocKeyedByOrderId = {};\n\n                documentsGrouped.forEach((doc) => {\n                    if (Object.values(latestDoc).length === maxDocsPerType) {\n                        return;\n                    }\n\n                    if (!latestDocKeyedByOrderId.hasOwnProperty(doc.orderId)) {\n                        latestDocKeyedByOrderId[doc.orderId] = doc.id;\n                        latestDoc.push(doc.id);\n                    }\n                });\n            });\n\n            this.latestDocuments = latestDocuments;\n        },\n\n        downloadDocument(documentType) {\n            const documentIds = this.latestDocuments[documentType];\n\n            if (!documentIds || documentIds.length === 0) {\n                this.createNotificationInfo({\n                    message: this.$tc('sw-bulk-edit.modal.success.messageNoDocumentsFound'),\n                });\n\n                return Promise.resolve();\n            }\n\n            if (this.isCompatEnabled('INSTANCE_SET')) {\n                this.$set(this.document[documentType], 'isDownloading', true);\n            } else {\n                this.document[documentType].isDownloading = true;\n            }\n            return this.orderDocumentApiService\n                .download(documentIds)\n                .then((response) => {\n                    if (!response.data) {\n                        return;\n                    }\n\n                    const filename = response.headers['content-disposition'].split('filename=')[1];\n                    const link = document.createElement('a');\n                    link.href = URL.createObjectURL(response.data);\n                    link.download = filename;\n                    link.dispatchEvent(new MouseEvent('click'));\n                    link.remove();\n                })\n                .catch((error) => {\n                    this.createNotificationError({\n                        message: error.message,\n                    });\n                })\n                .finally(() => {\n                    if (this.isCompatEnabled('INSTANCE_SET')) {\n                        this.$set(this.document[documentType], 'isDownloading', false);\n                    } else {\n                        this.document[documentType].isDownloading = false;\n                    }\n                });\n        },\n    },\n};\n"],"names":["template","Criteria","index","_a","_b","criteria","item","buttonConfig","latestDocuments","maxDocsPerType","documents","documentType","latestDoc","documentsGrouped","document","latestDocKeyedByOrderId","doc","documentIds","response","filename","link","error"],"mappings":"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"}