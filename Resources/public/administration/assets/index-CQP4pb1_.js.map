{"version":3,"file":"index-CQP4pb1_.js","sources":["../../../app/administration/src/module/sw-order/component/sw-order-state-history-card/sw-order-state-history-card.html.twig","../../../app/administration/src/module/sw-order/component/sw-order-state-history-card/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_order_state_history_card %}\n<sw-card\n    :title=\"title\"\n    :is-loading=\"isLoading || statesLoading\"\n    class=\"sw-order-state-card\"\n    position-identifier=\"sw-order-state-history-card\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_order_state_change_card_modal %}\n    <sw-order-state-change-modal\n        v-if=\"showModal\"\n        :order=\"order\"\n        :is-loading=\"isLoading\"\n        :technical-name=\"technicalName\"\n        @page-leave=\"onLeaveModalClose\"\n        @page-leave-confirm=\"onLeaveModalConfirm\"\n    />\n    {% endblock %}\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_order_state_history_card_container %}\n    <sw-container\n        columns=\"repeat(auto-fit, minmax(250px, 1fr))\"\n        gap=\"30px 30px\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_state_history_card_transaction %}\n        <sw-order-state-history-card-entry\n            v-if=\"transaction\"\n            v-tooltip=\"{\n                message: $tc('sw-privileges.tooltip.warning'),\n                disabled: acl.can('order.editor'),\n                showOnDisabledElements: true\n            }\"\n            class=\"sw-order-state-history-card__payment-state\"\n            :disabled=\"!acl.can('order.editor') || undefined\"\n            :history=\"transactionHistory\"\n            :transition-options=\"transactionOptions\"\n            state-machine-name=\"order_transaction.state\"\n            :title=\"$tc('sw-order.stateCard.headlineTransactionState')\"\n            @state-select=\"onTransactionStateSelected\"\n        />\n\n        <template v-else>\n            <div>\n                <h2>{{ $tc('sw-order.stateCard.headlineTransactionState') }}</h2>\n                {{ $tc('sw-order.stateCard.labelNoTransactionState') }}\n            </div>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_state_history_card_delivery %}\n        <sw-order-state-history-card-entry\n            v-if=\"delivery\"\n            v-tooltip=\"{\n                message: $tc('sw-privileges.tooltip.warning'),\n                disabled: acl.can('order.editor'),\n                showOnDisabledElements: true\n            }\"\n            class=\"sw-order-state-history-card__delivery-state\"\n            :history=\"deliveryHistory\"\n            :disabled=\"!acl.can('order.editor') || undefined\"\n            :transition-options=\"deliveryOptions\"\n            state-machine-name=\"order_delivery.state\"\n            :title=\"$tc('sw-order.stateCard.headlineDeliveryState')\"\n            @state-select=\"onDeliveryStateSelected\"\n        />\n\n        <template v-else>\n            <div>\n                <h2>{{ $tc('sw-order.stateCard.headlineDeliveryState') }}</h2>\n                {{ $tc('sw-order.stateCard.labelNoDeliveryState') }}\n            </div>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_state_history_card_order%}\n        <sw-order-state-history-card-entry\n            v-tooltip=\"{\n                message: $tc('sw-privileges.tooltip.warning'),\n                disabled: acl.can('order.editor'),\n                showOnDisabledElements: true\n            }\"\n            class=\"sw-order-state-history-card__order-state\"\n            :history=\"orderHistory\"\n            :disabled=\"!acl.can('order.editor') || undefined\"\n            :transition-options=\"orderOptions\"\n            state-machine-name=\"order.state\"\n            :title=\"$tc('sw-order.stateCard.headlineOrderState')\"\n            @state-select=\"onOrderStateSelected\"\n        />\n        {% endblock %}\n    </sw-container>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n","import template from './sw-order-state-history-card.html.twig';\n\n/**\n * @package checkout\n */\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'orderService',\n        'stateMachineService',\n        'orderStateMachineService',\n        'repositoryFactory',\n        'acl',\n        'feature',\n    ],\n\n    emits: [\n        'options-change',\n        'order-state-change',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        title: {\n            type: String,\n            required: true,\n        },\n        order: {\n            type: Object,\n            required: true,\n        },\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n    data() {\n        return {\n            showModal: false,\n            orderHistory: [],\n            orderOptions: [],\n            transactionHistory: [],\n            transactionOptions: [],\n            deliveryHistory: [],\n            deliveryOptions: [],\n            statesLoading: true,\n            modalConfirmed: false,\n            currentActionName: null,\n            currentStateType: null,\n            technicalName: '',\n        };\n    },\n    computed: {\n        stateMachineStateRepository() {\n            return this.repositoryFactory.create('state_machine_state');\n        },\n\n        mailTemplateRepository() {\n            return this.repositoryFactory.create('mail_template');\n        },\n\n        stateMachineHistoryRepository() {\n            return this.repositoryFactory.create('state_machine_history');\n        },\n\n        transaction() {\n            for (let i = 0; i < this.order.transactions.length; i += 1) {\n                if (\n                    ![\n                        'cancelled',\n                        'failed',\n                    ].includes(this.order.transactions[i].stateMachineState.technicalName)\n                ) {\n                    return this.order.transactions[i];\n                }\n            }\n            return this.order.transactions.last();\n        },\n\n        delivery() {\n            return this.order.deliveries[0];\n        },\n\n        stateMachineHistoryCriteria() {\n            const criteria = new Criteria(1, null);\n\n            const entityIds = [\n                this.order.id,\n                ...(this.order.transactions?.getIds() || []),\n                ...(this.order.deliveries?.getIds() || []),\n            ];\n\n            criteria.addFilter(Criteria.equalsAny('state_machine_history.referencedId', entityIds));\n            criteria.addFilter(\n                Criteria.equalsAny('state_machine_history.entityName', [\n                    'order',\n                    'order_transaction',\n                    'order_delivery',\n                ]),\n            );\n            criteria.addAssociation('fromStateMachineState');\n            criteria.addAssociation('toStateMachineState');\n            criteria.addAssociation('user');\n            criteria.addSorting({\n                field: 'state_machine_history.createdAt',\n                order: 'ASC',\n            });\n\n            return criteria;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.loadHistory();\n        },\n\n        loadHistory() {\n            this.statesLoading = true;\n            this.modalConfirmed = false;\n\n            Promise.all([\n                this.getStateHistoryEntries(),\n                this.getTransitionOptions(),\n            ])\n                .then(() => {\n                    this.$emit('options-change', 'order.states', this.orderOptions);\n                    if (this.transaction) {\n                        this.$emit('options-change', 'order_transaction.states', this.transactionOptions);\n                    }\n                    if (this.delivery) {\n                        this.$emit('options-change', 'order_delivery.states', this.deliveryOptions);\n                    }\n                })\n                .catch((error) => {\n                    this.createNotificationError(error);\n                })\n                .finally(() => {\n                    this.statesLoading = false;\n                });\n        },\n\n        getStateHistoryEntries() {\n            return this.stateMachineHistoryRepository.search(this.stateMachineHistoryCriteria).then((fetchedEntries) => {\n                this.orderHistory = this.buildStateHistory(this.order, this.fetchEntries([this.order.id], fetchedEntries));\n\n                if (this.transaction && this.order.transactions) {\n                    this.transactionHistory = this.buildStateHistory(\n                        this.transaction,\n                        this.fetchEntries(this.order.transactions.getIds(), fetchedEntries),\n                    );\n                }\n\n                if (this.delivery && this.order.deliveries) {\n                    this.deliveryHistory = this.buildStateHistory(\n                        this.delivery,\n                        this.fetchEntries(this.order.deliveries.getIds(), fetchedEntries),\n                    );\n                }\n\n                return Promise.resolve(fetchedEntries);\n            });\n        },\n\n        fetchEntries(ids, allEntries) {\n            if (!ids.length || !allEntries.length) {\n                return [];\n            }\n\n            return allEntries.filter((entry) => {\n                return ids.includes(entry.referencedId);\n            });\n        },\n\n        buildStateHistory(entity, fetchedEntries) {\n            // this entity has no state history\n            if (fetchedEntries.length === 0) {\n                return [\n                    {\n                        state: entity.stateMachineState,\n                        createdAt: entity.createdAt,\n                        user: null,\n                    },\n                ];\n            }\n\n            const entries = [];\n            // Prepend start state\n            entries.push({\n                state: fetchedEntries[0].fromStateMachineState,\n                createdAt: fetchedEntries[0].createdAt,\n                user: null,\n            });\n\n            fetchedEntries.forEach((entry) => {\n                entries.push({\n                    state: entry.toStateMachineState,\n                    createdAt: entry.createdAt,\n                    user: entry.user ? entry.user : null,\n                });\n            });\n\n            return entries;\n        },\n\n        getTransitionOptions() {\n            const statePromises = [\n                this.stateMachineService.getState('order', this.order.id),\n            ];\n            if (this.transaction) {\n                statePromises.push(this.stateMachineService.getState('order_transaction', this.transaction.id));\n            }\n            if (this.delivery) {\n                statePromises.push(this.stateMachineService.getState('order_delivery', this.delivery.id));\n            }\n\n            return Promise.all([\n                this.getAllStates(),\n                ...statePromises,\n            ]).then((data) => {\n                const allStates = data[0];\n                const orderState = data[1];\n                this.orderOptions = this.buildTransitionOptions('order.state', allStates, orderState.data.transitions);\n\n                if (this.transaction) {\n                    const orderTransactionState = data[2];\n                    this.transactionOptions = this.buildTransitionOptions(\n                        'order_transaction.state',\n                        allStates,\n                        orderTransactionState.data.transitions,\n                    );\n                }\n\n                if (this.delivery) {\n                    const orderDeliveryState = data[3];\n                    this.deliveryOptions = this.buildTransitionOptions(\n                        'order_delivery.state',\n                        allStates,\n                        orderDeliveryState.data.transitions,\n                    );\n                }\n\n                return Promise.resolve();\n            });\n        },\n\n        getAllStates() {\n            return this.stateMachineStateRepository.search(this.stateMachineStateCriteria());\n        },\n\n        stateMachineStateCriteria() {\n            const criteria = new Criteria(1, null);\n            criteria.addSorting({ field: 'name', order: 'ASC' });\n            criteria.addAssociation('stateMachine');\n            criteria.addFilter(\n                Criteria.equalsAny('state_machine_state.stateMachine.technicalName', [\n                    'order.state',\n                    'order_transaction.state',\n                    'order_delivery.state',\n                ]),\n            );\n\n            return criteria;\n        },\n\n        buildTransitionOptions(stateMachineName, allTransitions, possibleTransitions) {\n            const entries = allTransitions.filter((entry) => {\n                return entry.stateMachine.technicalName === stateMachineName;\n            });\n\n            const options = entries.map((state, index) => {\n                return {\n                    stateName: state.technicalName,\n                    id: index,\n                    name: state.translated.name,\n                    disabled: true,\n                };\n            });\n\n            options.forEach((option) => {\n                const transitionToState = possibleTransitions.filter((transition) => {\n                    return transition.toStateName === option.stateName;\n                });\n                if (transitionToState.length >= 1) {\n                    option.disabled = false;\n                    option.id = transitionToState[0].actionName;\n                }\n            });\n            return options;\n        },\n\n        onOrderStateSelected(actionName) {\n            if (!actionName) {\n                this.createStateChangeErrorNotification(this.$tc('sw-order.stateCard.labelErrorNoAction'));\n                return;\n            }\n\n            if (this.modalConfirmed === false) {\n                this.currentActionName = actionName;\n                this.currentStateType = 'orderState';\n\n                this.showModal = true;\n\n                return;\n            }\n            this.modalConfirmed = false;\n        },\n\n        onCancelCreation() {\n            this.showModal = false;\n        },\n\n        onTransactionStateSelected(actionName) {\n            if (!actionName) {\n                this.createStateChangeErrorNotification(this.$tc('sw-order.stateCard.labelErrorNoAction'));\n                return;\n            }\n\n            if (this.modalConfirmed === false) {\n                this.currentActionName = actionName;\n                this.currentStateType = 'orderTransactionState';\n\n                this.showModal = true;\n                return;\n            }\n            this.modalConfirmed = false;\n        },\n\n        onDeliveryStateSelected(actionName) {\n            if (!actionName) {\n                this.createStateChangeErrorNotification(this.$tc('sw-order.stateCard.labelErrorNoAction'));\n                return;\n            }\n\n            if (this.modalConfirmed === false) {\n                this.currentActionName = actionName;\n                this.currentStateType = 'orderDeliveryState';\n\n                this.showModal = true;\n                return;\n            }\n            this.modalConfirmed = false;\n        },\n\n        onLeaveModalClose() {\n            this.modalConfirmed = false;\n            this.currentActionName = null;\n            this.currentStateType = null;\n            this.showModal = false;\n        },\n\n        onLeaveModalConfirm(docIds, sendMail = true) {\n            this.showModal = false;\n            if (this.currentStateType === 'orderTransactionState') {\n                this.orderStateMachineService\n                    .transitionOrderTransactionState(this.transaction.id, this.currentActionName, {\n                        documentIds: docIds,\n                        sendMail,\n                    })\n                    .then(() => {\n                        this.$emit('order-state-change');\n                        this.loadHistory();\n                    })\n                    .catch((error) => {\n                        this.createStateChangeErrorNotification(error);\n                    });\n            } else if (this.currentStateType === 'orderState') {\n                this.orderStateMachineService\n                    .transitionOrderState(this.order.id, this.currentActionName, { documentIds: docIds, sendMail })\n                    .then(() => {\n                        this.$emit('order-state-change');\n                        this.loadHistory();\n                    })\n                    .catch((error) => {\n                        this.createStateChangeErrorNotification(error);\n                    });\n            } else if (this.currentStateType === 'orderDeliveryState') {\n                this.orderStateMachineService\n                    .transitionOrderDeliveryState(this.delivery.id, this.currentActionName, {\n                        documentIds: docIds,\n                        sendMail,\n                    })\n                    .then(() => {\n                        this.$emit('order-state-change');\n                        this.loadHistory();\n                    })\n                    .catch((error) => {\n                        this.createStateChangeErrorNotification(error);\n                    });\n            }\n            this.currentActionName = null;\n            this.currentStateType = null;\n        },\n\n        createStateChangeErrorNotification(errorMessage) {\n            this.createNotificationError({\n                message: this.$tc('sw-order.stateCard.labelErrorStateChange') + errorMessage,\n            });\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","index","i","_a","_b","criteria","entityIds","error","fetchedEntries","ids","allEntries","entry","entity","entries","statePromises","data","allStates","orderState","orderTransactionState","orderDeliveryState","stateMachineName","allTransitions","possibleTransitions","options","state","option","transitionToState","transition","actionName","docIds","sendMail","errorMessage"],"mappings":"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"}