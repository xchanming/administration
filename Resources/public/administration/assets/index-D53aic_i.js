const e=`{% block sw_extension_review %} <div class="sw-extension-review"> {% block sw_extension_review_headline %} <h4 class="sw-extension-review__headline"> {{ review.headline }} </h4> {% endblock %} {% block sw_extension_review_stars %} <sw-extension-rating-stars :rating="review.rating" :size="12" /> {% endblock %} {% block sw_extension_review_text %} <p v-if="review.text" class="sw-extension-review__text" > {{ review.text }} </p> {% endblock %} {% block sw_extension_review_meta_data %} <p class="sw-extension-review__meta-data"> {% block sw_extension_review_meta_data_date %} <span class="sw-extension-review__comma"> {{ $tc('sw-extension-store.component.sw-extension-ratings.sw-extension-review.labelLastChangeDate', 0, { lastChangeDate: lastChangeDate, author: review.authorName }) }} </span> {% endblock %} {% block sw_extension_review_meta_data_version %} <span v-if="review.version"> {{ $tc('sw-extension-store.component.sw-extension-ratings.sw-extension-review.labelExtensionVersion', 0, { extensionVersion: review.version }) }} </span> {% endblock %} </p> {% endblock %} {% block sw_extension_review_replies %} <template v-if="reviewHasReplies"> {% block sw_extension_review_replies_loop %} <sw-extension-review-reply v-for="(reply, index) in review.replies" :key="\`sw-extension-review__reply-\${index}\`" :producer-name="producerName" :reply="reply" /> {% endblock %} </template> {% endblock %} </div> {% endblock %}`,{date:n}=Cicada.Utils.format,i={template:e,compatConfig:Cicada.compatConfig,props:{review:{type:Object,required:!0},producerName:{type:String,required:!0}},computed:{lastChangeDate(){return this.review.lastChangeDate!==null?n(this.review.lastChangeDate,{month:"numeric",year:"numeric",hour:void 0,minute:void 0}):null},reviewHasReplies(){return this.review.replies&&this.review.replies.length>0}}};export{i as default};
//# sourceMappingURL=index-D53aic_i.js.map
