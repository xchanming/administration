{"version":3,"file":"index-_kCl0aVm.js","sources":["../../../app/administration/src/app/asyncComponent/media/sw-media-media-item/sw-media-media-item.html.twig","../../../app/administration/src/app/asyncComponent/media/sw-media-media-item/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_media_media_item %}\n<sw-media-base-item\n    class=\"sw-media-media-item\"\n    v-bind=\"$attrs\"\n    v-on=\"listeners\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_media_item_preview %}\n    <template #preview=\"{ item }\">\n        <sw-media-preview-v2\n            :source=\"item\"\n            :media-is-private=\"item.private\"\n            @media-preview-play=\"emitPlayEvent($event, item)\"\n        />\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_media_item_name_container %}\n    <template #name=\"{ item, isInlineEdit, startInlineEdit, endInlineEdit }\">\n        <sw-text-field\n            v-if=\"isInlineEdit\"\n            v-autofocus\n            class=\"sw-media-base-item__name-field\"\n            :value=\"item.fileName\"\n            name=\"media-item-name\"\n            @blur=\"onBlur($event, item, endInlineEdit)\"\n            @keyup.esc=\"endInlineEdit\"\n            @click.stop\n            @keydown.enter=\"endInlineEdit\"\n        />\n        <div\n            v-else\n            ref=\"itemName\"\n            class=\"sw-media-base-item__name\"\n            :title=\"`${item.fileName}.${item.fileExtension}`\"\n            role=\"menuitem\"\n            tabindex=\"0\"\n            @dblclick=\"startInlineEdit\"\n        >\n\n            <template v-if=\"item.hasFile\">\n                {{ mediaNameFilter(item) }}\n            </template>\n        </div>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_media_item_metadata %}\n    <template #metadata=\"{ item }\">\n        <div class=\"sw-media-media-item__metadata\">\n            {{ dateFilter(item.uploadedAt) }}, {{ fileSizeFilter(item.fileSize, locale) }}\n        </div>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_media_item_context_menu %}\n    <template #context-menu=\"{ item, startInlineEdit, allowEdit, allowDelete }\">\n        <slot>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_media_item_additional_context_menu_slot %}{% endblock %}\n        </slot>\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_media_item_context_group_quick_actions %}\n        <div :class=\"defaultContextMenuClass\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_media_item_context_item_rename_item %}\n            <sw-context-menu-item\n                :disabled=\"!item.hasFile || item.private || !allowEdit\"\n                @click=\"startInlineEdit\"\n            >\n                {{ $tc('global.sw-media-media-item.labelContextMenuRename') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_media_item_context_item_copy_item_link %}\n            <sw-context-menu-item\n                v-if=\"item.hasFile\"\n                @click=\"copyItemLink(item)\"\n            >\n                {{ $tc('global.sw-media-media-item.labelContextMenuCopyLink') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_media_item_context_item_replace %}\n            <sw-context-menu-item\n                :disabled=\"item.private || !allowEdit\"\n                class=\"sw-media-context-item__replace-media-action\"\n                @click=\"openModalReplace\"\n            >\n                {{ $tc('global.sw-media-media-item.labelContextMenuReplace') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_media_item_context_item_move %}\n            <sw-context-menu-item\n                :disabled=\"!allowEdit\"\n                class=\"sw-media-context-item__move-media-action\"\n                @click=\"openModalMove\"\n            >\n                {{ $tc('global.sw-media-media-item.labelContextMenuMove') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_media_item_context_item_delete %}\n            <sw-context-menu-item\n                :disabled=\"item.private || !allowDelete\"\n                variant=\"danger\"\n                @click=\"openModalDelete\"\n            >\n                {{ $tc('global.default.delete') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n        </div>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <template #modal-windows=\"{ item, allowEdit, allowDelete }\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_media_item_modal_replace %}\n        <sw-media-modal-replace\n            v-if=\"showModalReplace && allowEdit\"\n            :item-to-replace=\"item\"\n            @media-replace-modal-item-replaced=\"emitRefreshMediaLibrary\"\n            @media-replace-modal-close=\"closeModalReplace\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_media_item_delete_modal %}\n        <sw-media-modal-delete\n            v-if=\"showModalDelete && allowDelete\"\n            :items-to-delete=\"[item]\"\n            @media-delete-modal-items-delete=\"emitItemDeleted\"\n            @media-delete-modal-close=\"closeModalDelete\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_media_item_move_modal %}\n        <sw-media-modal-move\n            v-if=\"showModalMove && allowEdit\"\n            :items-to-move=\"[item]\"\n            @media-move-modal-close=\"closeModalMove\"\n            @media-move-modal-items-move=\"onMediaItemMoved\"\n        />\n        {% endblock %}\n    </template>\n</sw-media-base-item>\n{% endblock %}\n","import template from './sw-media-media-item.html.twig';\nimport './sw-media-media-item.scss';\n\nconst { Mixin } = Cicada;\nconst { dom } = Cicada.Utils;\n\n/**\n * @status ready\n * @description The <u>sw-media-media-item</u> component is used to store the media item and manage it through the\n * <u>sw-media-base-item</u> component. Use the default slot to add additional context menu items.\n * @package content\n * @example-type code-only\n * @component-example\n * <sw-media-media-item\n *     :key=\"mediaItem.id\"\n *     :item=\"mediaItem\"\n *     :selected=\"false\"\n *     :showSelectionIndicator=\"false\"\n *     :isList=\"false\">\n *\n *       <sw-context-menu-item\n *            #additional-context-menu-items\n *            \\@click=\"showDetails(mediaItem)\">\n *          Lorem ipsum dolor sit amet\n *       </sw-context-menu-item>\n * </sw-media-media-item>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inheritAttrs: false,\n\n    inject: ['mediaService'],\n\n    emits: [\n        'media-item-rename-success',\n        'media-item-play',\n        'media-item-delete',\n        'media-folder-move',\n        'media-item-replaced',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            showModalReplace: false,\n            showModalDelete: false,\n            showModalMove: false,\n        };\n    },\n\n    computed: {\n        locale() {\n            return this.$root.$i18n.locale;\n        },\n\n        defaultContextMenuClass() {\n            return {\n                'sw-context-menu__group': this.$slots.default,\n            };\n        },\n\n        mediaNameFilter() {\n            return Cicada.Filter.getByName('mediaName');\n        },\n\n        dateFilter() {\n            return Cicada.Filter.getByName('date');\n        },\n\n        fileSizeFilter() {\n            return Cicada.Filter.getByName('fileSize');\n        },\n\n        listeners() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return this.$listeners;\n            }\n\n            return {};\n        },\n    },\n\n    methods: {\n        async onChangeName(updatedName, item, endInlineEdit) {\n            if (!updatedName || !updatedName.trim()) {\n                this.rejectRenaming(endInlineEdit);\n                return;\n            }\n\n            item.isLoading = true;\n\n            try {\n                await this.mediaService.renameMedia(item.id, updatedName);\n                item.fileName = updatedName;\n                item.isLoading = false;\n                this.createNotificationSuccess({\n                    message: this.$tc('global.sw-media-media-item.notification.renamingSuccess.message'),\n                });\n                this.$emit('media-item-rename-success', item);\n            } catch (exception) {\n                const errors = exception.response.data.errors;\n\n                errors.forEach((error) => {\n                    this.handleErrorMessage(error);\n                });\n            } finally {\n                item.isLoading = false;\n                endInlineEdit();\n            }\n        },\n\n        handleErrorMessage(error) {\n            switch (error.code) {\n                case 'CONTENT__MEDIA_FILE_NAME_IS_TOO_LONG':\n                    this.createNotificationError({\n                        message: this.$tc('global.sw-media-media-item.notification.fileNameTooLong.message', 0, {\n                            length: error.meta.parameters.maxLength,\n                        }),\n                    });\n                    break;\n                default:\n                    this.createNotificationError({\n                        message: this.$tc('global.sw-media-media-item.notification.renamingError.message'),\n                    });\n            }\n        },\n\n        rejectRenaming(endInlineEdit) {\n            this.createNotificationError({\n                message: this.$tc('global.sw-media-media-item.notification.errorBlankItemName.message'),\n            });\n\n            endInlineEdit();\n        },\n\n        onBlur(event, item, endInlineEdit) {\n            const input = event.target.value;\n\n            if (input !== item.fileName) {\n                this.onChangeName(input, item, endInlineEdit);\n                return;\n            }\n\n            endInlineEdit();\n        },\n\n        emitPlayEvent(originalDomEvent, item) {\n            if (!this.selected) {\n                this.$emit('media-item-play', {\n                    originalDomEvent,\n                    item,\n                });\n                return;\n            }\n\n            this.removeFromSelection(originalDomEvent);\n        },\n\n        async copyItemLink(item) {\n            try {\n                await dom.copyStringToClipboard(item.url);\n                this.createNotificationSuccess({\n                    message: this.$tc('sw-media.general.notification.urlCopied.message'),\n                });\n            } catch (err) {\n                this.createNotificationError({\n                    title: this.$tc('global.default.error'),\n                    message: this.$tc('global.sw-field.notification.notificationCopyFailureMessage'),\n                });\n            }\n        },\n\n        openModalDelete() {\n            this.showModalDelete = true;\n        },\n\n        closeModalDelete() {\n            this.showModalDelete = false;\n        },\n\n        async emitItemDeleted(deletePromise) {\n            this.closeModalDelete();\n            const ids = await deletePromise;\n            this.$emit('media-item-delete', ids.mediaIds);\n        },\n\n        openModalReplace() {\n            this.showModalReplace = true;\n        },\n\n        closeModalReplace() {\n            this.showModalReplace = false;\n        },\n\n        openModalMove() {\n            this.showModalMove = true;\n        },\n\n        closeModalMove() {\n            this.showModalMove = false;\n        },\n\n        async onMediaItemMoved(movePromise) {\n            this.closeModalMove();\n            const ids = await movePromise;\n            this.$emit('media-folder-move', ids);\n        },\n\n        emitRefreshMediaLibrary() {\n            this.closeModalReplace();\n\n            this.$nextTick(() => {\n                this.$emit('media-item-replaced');\n            });\n        },\n    },\n};\n"],"names":["template","Mixin","dom","index","updatedName","item","endInlineEdit","exception","error","event","input","originalDomEvent","deletePromise","ids","movePromise"],"mappings":"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"}