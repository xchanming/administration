{"version":3,"file":"index-8OgY_BWE.js","sources":["../../../app/administration/src/module/sw-mail-template/page/sw-mail-template-detail/sw-mail-template-detail.html.twig","../../../app/administration/src/module/sw-mail-template/page/sw-mail-template-detail/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_mail_template_detail %}\n<sw-page class=\"sw-mail-template-detail\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_mail_template_detail_header %}\n    <template #smart-bar-header>\n        <h2 v-if=\"mailTemplate\">\n            {{ $tc('sw-mail-template.detail.textHeadlineEdit') }}\n        </h2>\n        <h2\n            v-else\n            class=\"sw-mail-template-detail__empty-title\"\n        >\n            {{ $tc('sw-mail-template.detail.textHeadline') }}\n        </h2>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_mail_template_detail_actions %}\n    <template #smart-bar-actions>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_mail_template_detail_actions_abort %}\n        <sw-button\n            v-tooltip.bottom=\"{\n                message: 'ESC',\n                appearance: 'light'\n            }\"\n            :disabled=\"isLoading\"\n            @click=\"onCancel\"\n        >\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_mail_template_detail_actions_save %}\n        <sw-button-process\n            v-tooltip.bottom=\"tooltipSave\"\n            class=\"sw-mail-template-detail__save-action\"\n            variant=\"primary\"\n            :is-loading=\"isLoading\"\n            :process-success=\"isSaveSuccessful\"\n            :disabled=\"!allowSave || undefined\"\n            @update:process-success=\"saveFinish\"\n            @click.prevent=\"onSave\"\n        >\n            {{ $tc('sw-mail-template.detail.buttonSave') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_mail_template_detail_language_switch %}\n    <template #language-switch>\n        <sw-language-switch\n            :save-changes-function=\"saveOnLanguageChange\"\n            :abort-change-function=\"abortOnLanguageChange\"\n            @on-change=\"onChangeLanguage\"\n        />\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_mail_template_detail_content %}\n    <template #content>\n        <sw-card-view sidebar>\n            <template v-if=\"isLoading\">\n                <sw-skeleton variant=\"detail-bold\" />\n                <sw-skeleton />\n            </template>\n\n            <template v-else>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_mail_template_detail_content_language_info %}\n                <sw-language-info\n                    :entity-description=\"placeholder(mailTemplate.mailTemplateType, 'name', $tc('sw-mail-template.detail.textHeadline'))\"\n                />\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_mail_template_detail_basic_info %}\n                <sw-card\n                    :title=\"$tc('sw-mail-template.detail.basic.titleCard')\"\n                    position-identifier=\"sw-mail-template-detail-basic-info\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_mail_template_basic_form_mail_type_field %}\n                    <sw-entity-single-select\n                        id=\"mailTemplateTypes\"\n                        v-model:value=\"mailTemplate.mailTemplateTypeId\"\n                        name=\"sw-field--mailTemplate-mailTemplateTypeId\"\n                        entity=\"mail_template_type\"\n                        required\n                        show-clearable-button\n                        :label=\"$tc('sw-mail-template.detail.basic.labelMailType')\"\n                        :placeholder=\"$tc('sw-mail-template.detail.basic.placeholderMailType')\"\n                        :disabled=\"!acl.can('mail_templates.editor') || undefined\"\n                        :error=\"mailTemplateMailTemplateTypeIdError\"\n                        @update:value=\"onChangeType\"\n                    />\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_mail_template_basic_form_description_field %}\n                    <sw-textarea-field\n                        v-model:value=\"mailTemplate.description\"\n                        name=\"sw-field--mailTemplate-description\"\n                        :label=\"$tc('sw-mail-template.detail.basic.labelDescription')\"\n                        :placeholder=\"$tc('sw-mail-template.detail.basic.placeholderDescription')\"\n                        :disabled=\"!acl.can('mail_templates.editor') || undefined\"\n                    />\n                    {% endblock %}\n                </sw-card>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_mail_template_detail_options_info %}\n                <sw-card\n                    position-identifier=\"sw-mail-template-detail-options-info\"\n                    :title=\"$tc('sw-mail-template.detail.options.titleCard')\"\n                >\n                    <sw-container\n                        columns=\"repeat(auto-fit, minmax(250px, 1fr))\"\n                        gap=\"0 30px\"\n                        class=\"sw-mail-template-detail-options__container\"\n                    >\n                        <div class=\"sw-mail-template-detail__options-info-wrapper\">\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_mail_template_options_form_subject_field %}\n                            <sw-text-field\n                                v-model:value=\"mailTemplate.subject\"\n                                name=\"sw-field--mailTemplate-subject\"\n                                required\n                                :label=\"$tc('sw-mail-template.detail.options.labelSubject')\"\n                                :placeholder=\"placeholder(mailTemplate, 'subject', $tc('sw-mail-template.detail.options.placeholderSubject'))\"\n                                :disabled=\"!acl.can('mail_templates.editor') || undefined\"\n                                :error=\"mailTemplateSubjectError\"\n                            />\n                            {% endblock %}\n                        </div>\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_mail_template_options_form_sender_name_field %}\n                        <sw-text-field\n                            v-model:value=\"mailTemplate.senderName\"\n                            name=\"sw-field--mailTemplate-senderName\"\n                            :label=\"$tc('sw-mail-template.detail.options.labelSenderName')\"\n                            :placeholder=\"placeholder(mailTemplate, 'senderName', $tc('sw-mail-template.detail.options.placeholderSenderName'))\"\n                            :disabled=\"!acl.can('mail_templates.editor') || undefined\"\n                        />\n                        {% endblock %}\n                    </sw-container>\n                </sw-card>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_mail_template_detail_attachments_info %}\n                <sw-card\n                    :title=\"$tc('sw-mail-template.detail.media.titleCard')\"\n                    position-identifier=\"sw-mail-template-detail-atttachments-info\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_mail_template_detail_attachments_info_upload %}\n                    <sw-upload-listener\n                        v-if=\"mailTemplate.id\"\n                        auto-upload\n                        :upload-tag=\"mailTemplate.id\"\n                        @media-upload-finish=\"successfulUpload\"\n                    />\n\n                    <sw-media-upload-v2\n                        v-if=\"mailTemplate.id\"\n                        variant=\"regular\"\n                        default-folder=\"mail_template\"\n                        :upload-tag=\"mailTemplate.id\"\n                        :file-accept=\"fileAccept\"\n                        :disabled=\"!acl.can('mail_templates.editor') || undefined\"\n                        @media-drop=\"onMediaDrop\"\n                        @media-upload-sidebar-open=\"openMediaSidebar\"\n                    />\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_mail_template_detail_attachments_info_grid %}\n                    <sw-data-grid\n                        v-if=\"mailTemplateMedia && mailTemplateMedia.length > 0\"\n                        class=\"sw-mail-template-detail__attachments-info-grid\"\n                        :data-source=\"mailTemplateMedia\"\n                        :columns=\"mediaColumns\"\n                        :full-page=\"false\"\n                        :show-settings=\"false\"\n                        :allow-column-edit=\"false\"\n                        :allow-inline-edit=\"false\"\n                        :compact-mode=\"false\"\n                        :show-selection=\"acl.can('mail_templates.editor') || undefined\"\n                        @selection-change=\"onSelectionChanged\"\n                    >\n                        <template #preview-fileName=\"{ item }\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_mail_template_detail_attachments_info_grid_preview %}\n                            <sw-media-preview :source=\"item.id\" />\n                            {% endblock %}\n                        </template>\n\n                        <template #actions=\"{ item }\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_mail_template_detail_attachments_info_grid_actions %}\n                            <sw-context-menu-item\n                                v-tooltip.bottom=\"{\n                                    message: $tc('sw-privileges.tooltip.warning'),\n                                    disabled: acl.can('mail_templates.editor') || undefined,\n                                    showOnDisabledElements: true\n                                }\"\n                                variant=\"danger\"\n                                :disabled=\"!acl.can('mail_templates.editor') || undefined\"\n                                @click=\"onDeleteMedia(item.id)\"\n                            >\n                                {{ $tc('global.default.delete') }}\n                            </sw-context-menu-item>\n                            {% endblock %}\n                        </template>\n\n                        <template #bulk>\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_mail_template_detail_attachments_info_grid_bulk %}\n                            <a\n                                class=\"link link-danger\"\n                                role=\"link\"\n                                tabindex=\"0\"\n                                @click=\"onDeleteSelectedMedia\"\n                                @keydown.enter=\"onDeleteSelectedMedia\"\n                            >\n                                {{ $tc('global.default.delete') }}\n                            </a>\n                            {% endblock %}\n                        </template>\n                    </sw-data-grid>\n                    {% endblock %}\n                </sw-card>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_mail_template_detail_mail_text_info %}\n                <sw-card\n                    :title=\"$tc('sw-mail-template.detail.mailText.titleCard')\"\n                    position-identifier=\"sw-mail-template-detail-text-info\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_mail_template_mail_text_form_content_plain_field %}\n                    <sw-code-editor\n                        ref=\"plainEditor\"\n                        :key=\"`${mailTemplate.mailTemplateTypeId}plain`\"\n                        v-model:value=\"mailTemplate.contentPlain\"\n                        name=\"content_plain\"\n                        completion-mode=\"entity\"\n                        :label=\"$tc('sw-mail-template.detail.mailText.labelContentPlain')\"\n                        :placeholder=\"placeholder(mailTemplate, 'contentPlain', $tc('sw-mail-template.detail.mailText.placeholderPlain'))\"\n                        :completer-function=\"outerCompleterFunction\"\n                        :editor-config=\"editorConfig\"\n                        :disabled=\"!acl.can('mail_templates.editor')\"\n                        :error=\"mailTemplateContentPlainError\"\n                        required\n                    />\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_mail_template_mail_text_form_content_html_field %}\n                    <sw-code-editor\n                        ref=\"htmlEditor\"\n                        :key=\"`${mailTemplate.mailTemplateTypeId}html`\"\n                        v-model:value=\"mailTemplate.contentHtml\"\n                        name=\"content_html\"\n                        completion-mode=\"entity\"\n                        :label=\"$tc('sw-mail-template.detail.mailText.labelContentHtml')\"\n                        :placeholder=\"placeholder(mailTemplate, 'contentHtml', $tc('sw-mail-template.detail.mailText.placeholderHtml'))\"\n                        :completer-function=\"outerCompleterFunction\"\n                        :editor-config=\"editorConfig\"\n                        :disabled=\"!acl.can('mail_templates.editor')\"\n                        :error=\"mailTemplateContentHtmlError\"\n                        required\n                    />\n                    {% endblock %}\n                </sw-card>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_mail_template_detail_preview_modal %}\n                <sw-modal\n                    v-if=\"mailPreview\"\n                    class=\"sw-mail-template-preview-modal\"\n                    :title=\"$tc('sw-mail-template.detail.previewModalTitle')\"\n                    :is-loading=\"isLoading\"\n                    @modal-close=\"onCancelShowPreview\"\n                >\n                    <template v-if=\"!isLoading\">\n                        <span v-html=\"mailPreview\"></span>\n                    </template>\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_mail_template_detail_preview_modal_footer %}\n                    <template #modal-footer>\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_mail_template_detail_preview_modal_footer_cancel %}\n                        <sw-button\n                            size=\"small\"\n                            @click=\"onCancelShowPreview\"\n                        >\n                            {{ $tc('global.default.close') }}\n                        </sw-button>\n                        {% endblock %}\n                    </template>\n                    {% endblock %}\n                </sw-modal>\n                {% endblock %}\n                {% endblock %}\n            </template>\n        </sw-card-view>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_mail_template_detail_sidebar %}\n    <template #sidebar>\n        <sw-sidebar :propagate-width=\"true\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_mail_template_detail_sidebar_inner %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_mail_template_detail_sidebar_inner_test_mail %}\n            <sw-sidebar-item\n                icon=\"regular-paper-plane\"\n                :title=\"$tc('sw-mail-template.detail.sidebar.titleTestMail')\"\n                class=\"sw-mail-template-detail__test-mail-sidebar\"\n            >\n                <div class=\"sw-mail-template-detail__test-mail-sidebar-container\">\n                    <sw-alert\n                        v-if=\"showLanguageNotAssignedToSalesChannelWarning\"\n                        variant=\"warning\"\n                    >\n                        {{ $tc('sw-mail-template.detail.sidebar.languageNotAssignedToSalesChannel') }}\n                    </sw-alert>\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_mail_template_mail_text_form_test_mail_field %}\n                    <sw-text-field\n                        v-model:value=\"testerMail\"\n                        name=\"sw-field--testerMail\"\n                        :placeholder=\"$tc('sw-mail-template.detail.sidebar.placeholderTestMail')\"\n                        :label=\"$tc('sw-mail-template.detail.sidebar.labelTestMail')\"\n                        :disabled=\"!acl.can('mail_templates.editor') || undefined\"\n                    />\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_mail_template_mail_text_form_test_sales_channel_field %}\n                    <sw-entity-single-select\n                        v-model:value=\"testMailSalesChannelId\"\n                        name=\"sw-field--testMailSalesChannelId\"\n                        entity=\"sales_channel\"\n                        :label=\"$tc('sw-mail-template.detail.basic.labelSalesChannels')\"\n                        :placeholder=\"$tc('sw-mail-template.detail.basic.placeholderSalesChannels')\"\n                        show-clearable-button\n                    />\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_mail_template_mail_text_form_test_mail_button %}\n                    <sw-button\n                        :disabled=\"isSendButtonDisabled\"\n                        class=\"sw-mail-template-detail__send-test-mail\"\n                        @click=\"onClickTestMailTemplate\"\n                    >\n                        {{ $tc('sw-mail-template.detail.sidebar.buttonTestMail') }}\n                    </sw-button>\n                    {% endblock %}\n                </div>\n            </sw-sidebar-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_mail_template_detail_sidebar_inner_variables %}\n            <sw-sidebar-item\n                icon=\"regular-code\"\n                :title=\"$tc('sw-mail-template.detail.sidebar.titleShowAvailableVariables')\"\n                :disabled=\"isLoading || !hasTemplateData\"\n                class=\"sw-mail-template-detail__show-available-variables\"\n            >\n                <div class=\"sw-mail-template-detail__available-variables-sidebar-container\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_mail_template_available_variables_tree %}\n                    <sw-tree\n                        class=\"sw-mail-template-detail__available-variables-sidebar-container__tree\"\n                        :searchable=\"false\"\n                        :disable-context-menu=\"true\"\n                        :on-change-route=\"() => { return false; }\"\n                        :items=\"loadedAvailableVariables\"\n                        :sortable=\"false\"\n                        @get-tree-items=\"onGetTreeItems\"\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_mail_template_available_variables_tree_headline %}\n                        <template #headline>\n                            <span></span>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_mail_template_available_variables_tree_items %}\n                        <template\n                            #items=\"{ treeItems, sortable, draggedItem, disableContextMenu, onChangeRoute }\"\n                        >\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_mail_template_available_variables_tree_items_item %}\n                            <sw-tree-item\n                                v-for=\"(item, index) in treeItems\"\n                                :key=\"item.id\"\n                                :item=\"item\"\n                                :disable-context-menu=\"disableContextMenu\"\n                                :on-change-route=\"onChangeRoute\"\n                                :sortable=\"false\"\n                                :display-checkbox=\"false\"\n                            >\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_mail_template_available_variables_tree_items_item_grip %}\n                                <template #grip>\n                                    <span></span>\n                                </template>\n                                {% endblock %}\n\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_mail_template_available_variables_tree_items_item_actions %}\n                                <template #actions=\"{ item }\">\n                                    <sw-icon\n                                        v-tooltip=\"{\n                                            message: $tc('sw-mail-template.detail.sidebar.copyTooltip'),\n                                            width: 150,\n                                            position: 'bottom'\n                                        }\"\n                                        name=\"regular-products-s\"\n                                        class=\"sw-mail-template-detail__copy_icon\"\n                                        @click=\"onCopyVariable(item.schema)\"\n                                    />\n                                </template>\n                                {% endblock %}\n                            </sw-tree-item>\n                            {% endblock %}\n                        </template>\n                        {% endblock %}\n                    </sw-tree>\n                    {% endblock %}\n                </div>\n            </sw-sidebar-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_mail_template_detail_sidebar_inner_preview %}\n            <sw-sidebar-item\n                icon=\"regular-eye\"\n                :title=\"$tc('sw-mail-template.detail.sidebar.titleShowPreview')\"\n                :disabled=\"isLoading || showPreview || !hasTemplateData\"\n                class=\"sw-mail-template-detail__show-preview-sidebar\"\n                @click=\"onClickShowPreview\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_mail_template_detail_sidebar_inner_media %}\n            <sw-sidebar-media-item ref=\"mediaSidebarItem\">\n                <template\n                    #context-menu-items=\"media\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_mail_template_detail_sidebar_add_attachment %}\n                    <sw-context-menu-item\n                        :disabled=\"!acl.can('mail_templates.editor') || undefined\"\n                        @click=\"onAddItemToAttachment(media.mediaItem)\"\n                    >\n                        {{ $tc('sw-mail-template.detail.sidebar.labelContextMenuAddToMailTemplate') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n                </template>\n            </sw-sidebar-media-item>\n            {% endblock %}\n\n            {% endblock %}\n        </sw-sidebar>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n","import { dom } from 'src/core/service/util.service';\nimport template from './sw-mail-template-detail.html.twig';\nimport './sw-mail-template-detail.scss';\n\nconst { Mixin, Context } = Cicada;\nconst { Criteria, EntityCollection } = Cicada.Data;\nconst { warn } = Cicada.Utils.debug;\nconst { mapPropertyErrors } = Cicada.Component.getComponentHelper();\n\n/**\n * @package buyers-experience\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'mailService',\n        'entityMappingService',\n        'repositoryFactory',\n        'acl',\n        'feature',\n    ],\n\n    mixins: [\n        Mixin.getByName('placeholder'),\n        Mixin.getByName('notification'),\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': {\n            active() {\n                return this.allowSave;\n            },\n            method: 'onSave',\n        },\n        ESCAPE: 'onCancel',\n    },\n\n    data() {\n        return {\n            mailTemplate: false,\n            testerMail: '',\n            mailTemplateId: null,\n            mailPreview: null,\n            isLoading: false,\n            isSaveSuccessful: false,\n            mailTemplateType: {},\n            selectedType: {},\n            editorConfig: {\n                enableBasicAutocompletion: true,\n            },\n            mailTemplateMedia: null,\n            mailTemplateMediaSelected: {},\n            fileAccept: 'application/pdf, image/*',\n            testMailSalesChannelId: null,\n            availableVariables: {},\n            entitySchema: Object.fromEntries(Cicada.EntityDefinition.getDefinitionRegistry()),\n            showLanguageNotAssignedToSalesChannelWarning: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        ...mapPropertyErrors('mailTemplate', [\n            'contentHtml',\n            'contentPlain',\n            'mailTemplateTypeId',\n            'subject',\n        ]),\n\n        loadedAvailableVariables() {\n            if (!this.mailTemplateType || !this.mailTemplateType.templateData) {\n                return [];\n            }\n            if (Object.values(this.availableVariables).length === 0) {\n                this.loadInitialAvailableVariables();\n            }\n            return Object.values(this.availableVariables);\n        },\n\n        identifier() {\n            return this.placeholder(this.mailTemplateType, 'name');\n        },\n\n        mailTemplateRepository() {\n            return this.repositoryFactory.create('mail_template');\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        mailTemplateMediaRepository() {\n            return this.repositoryFactory.create('mail_template_media');\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        outerCompleterFunction() {\n            return (function completerWrapper(entityMappingService, innerMailTemplateType) {\n                function completerFunction(prefix) {\n                    const properties = [];\n                    Object.keys(\n                        entityMappingService.getEntityMapping(prefix, innerMailTemplateType.availableEntities),\n                    ).forEach((val) => {\n                        properties.push({\n                            value: val,\n                        });\n                    });\n                    return properties;\n                }\n                return completerFunction;\n            })(this.entityMappingService, this.mailTemplateType);\n        },\n\n        mailTemplateTypeRepository() {\n            return this.repositoryFactory.create('mail_template_type');\n        },\n\n        testMailRequirementsMet() {\n            return (\n                this.testerMail &&\n                (this.mailTemplate.subject || this.mailTemplate.translated?.subject) &&\n                (this.mailTemplate.contentPlain || this.mailTemplate.translated?.contentPlain) &&\n                (this.mailTemplate.contentHtml || this.mailTemplate.translated?.contentHtml) &&\n                (this.mailTemplate.senderName || this.mailTemplate.translated?.senderName)\n            );\n        },\n\n        mediaColumns() {\n            return this.getMediaColumns();\n        },\n\n        allowSave() {\n            return this.mailTemplate && this.mailTemplate.isNew()\n                ? this.acl.can('mail_templates.creator')\n                : this.acl.can('mail_templates.editor');\n        },\n\n        tooltipSave() {\n            if (!this.allowSave) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.allowSave,\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        showPreview() {\n            if (\n                this.mailTemplate.contentHtml === undefined ||\n                this.mailTemplate.mailTemplateTypeId === undefined ||\n                this.mailTemplate.contentHtml === ''\n            ) {\n                return true;\n            }\n            return false;\n        },\n\n        hasTemplateData() {\n            return Object.keys(this.mailTemplateType?.templateData || {}).length > 0;\n        },\n\n        lacksEmailSendPermission() {\n            return !this.acl.can('api_send_email');\n        },\n\n        isSendButtonDisabled() {\n            return this.isLoading || !this.testMailRequirementsMet || this.lacksEmailSendPermission;\n        },\n    },\n\n    watch: {\n        '$route.params.id'() {\n            this.createdComponent();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Cicada.ExtensionAPI.publishData({\n                id: 'sw-mail-template-detail__mailTemplate',\n                path: 'mailTemplate',\n                scope: this,\n            });\n            Cicada.ExtensionAPI.publishData({\n                id: 'sw-mail-template-detail__mailTemplateMedia',\n                path: 'mailTemplateMedia',\n                scope: this,\n            });\n            Cicada.ExtensionAPI.publishData({\n                id: 'sw-mail-template-detail__mailTemplateMediaSelected',\n                path: 'mailTemplateMediaSelected',\n                scope: this,\n            });\n            Cicada.ExtensionAPI.publishData({\n                id: 'sw-mail-template-detail__mailTemplateType',\n                path: 'mailTemplateType',\n                scope: this,\n            });\n            Cicada.ExtensionAPI.publishData({\n                id: 'sw-mail-template-detail__availableVariables',\n                path: 'availableVariables',\n                scope: this,\n            });\n            Cicada.ExtensionAPI.publishData({\n                id: 'sw-mail-template-detail__testMailSalesChannelId',\n                path: 'testMailSalesChannelId',\n                scope: this,\n            });\n            Cicada.ExtensionAPI.publishData({\n                id: 'sw-mail-template-detail__testerMail',\n                path: 'testerMail',\n                scope: this,\n            });\n            if (this.$route.params.id) {\n                this.mailTemplateId = this.$route.params.id;\n                this.loadEntityData();\n            }\n        },\n\n        loadEntityData() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addAssociation('mailTemplateType');\n            criteria.addAssociation('media.media');\n            this.isLoading = true;\n            this.mailTemplateRepository.get(this.mailTemplateId, Cicada.Context.api, criteria).then((item) => {\n                this.mailTemplate = item;\n                if (!this.mailTemplate.mailTemplateType?.id) {\n                    this.isLoading = false;\n                    this.createNotificationError({\n                        message: this.$tc('sw-mail-template.general.missingMailTemplateTypeErrorMessage'),\n                    });\n                } else {\n                    this.onChangeType(this.mailTemplate.mailTemplateType.id);\n                    this.getMailTemplateMedia();\n                }\n            });\n        },\n\n        getMailTemplateType() {\n            if (!this.mailTemplate.mailTemplateTypeId) {\n                return Promise.resolve();\n            }\n\n            return this.mailTemplateTypeRepository.get(this.mailTemplate.mailTemplateTypeId).then((item) => {\n                this.mailTemplateType = item;\n\n                // Not needed because the autocompletion method is passed as property to editor\n            });\n        },\n\n        createMediaCollection() {\n            return new EntityCollection('/media', 'media', Cicada.Context.api);\n        },\n\n        getMailTemplateMedia() {\n            this.mailTemplateMedia = this.createMediaCollection();\n\n            this.mailTemplate.media.forEach((mediaAssoc) => {\n                if (mediaAssoc.languageId === Cicada.Context.api.languageId) {\n                    this.mailTemplateMedia.push(mediaAssoc.media);\n                }\n            });\n        },\n\n        abortOnLanguageChange() {\n            return this.mailTemplateRepository.hasChanges(this.mailTemplate);\n        },\n\n        saveOnLanguageChange() {\n            return this.onSave();\n        },\n\n        onChangeLanguage(languageId) {\n            Cicada.State.commit('context/setApiLanguageId', languageId);\n            this.loadEntityData();\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'sw.mail.template.index' });\n        },\n\n        onSave() {\n            const updatePromises = [];\n            const mailTemplateSubject = this.mailTemplate.subject || this.placeholder(this.mailTemplate, 'subject');\n\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            updatePromises.push(\n                this.mailTemplateRepository\n                    .save(this.mailTemplate)\n                    .then(() => {\n                        Promise.all(updatePromises).then(() => {\n                            this.loadEntityData();\n                            this.saveFinish();\n                        });\n                    })\n                    .catch((error) => {\n                        let errormsg = '';\n                        this.isLoading = false;\n\n                        if (error.response.data.errors.length > 0) {\n                            const errorDetailMsg = error.response.data.errors[0].detail;\n                            errormsg = `<br/> ${this.$tc('sw-mail-template.detail.textErrorMessage')}: \"${errorDetailMsg}\"`;\n                        }\n\n                        this.createNotificationError({\n                            message:\n                                this.$tc('sw-mail-template.detail.messageSaveError', 0, { subject: mailTemplateSubject }) +\n                                errormsg,\n                        });\n                    }),\n            );\n\n            return Promise.all(updatePromises);\n        },\n\n        onClickTestMailTemplate() {\n            const notificationTestMailSuccess = {\n                message: this.$tc('sw-mail-template.general.notificationTestMailSuccessMessage'),\n            };\n\n            const notificationTestMailError = {\n                message: this.$tc('sw-mail-template.general.notificationTestMailErrorMessage'),\n            };\n\n            const notificationTestMailErrorSalesChannel = {\n                message: this.$tc('sw-mail-template.general.notificationTestMailSalesChannelErrorMessage'),\n            };\n\n            if (!this.testMailSalesChannelId) {\n                this.createNotificationError(notificationTestMailErrorSalesChannel);\n                return;\n            }\n\n            const criteria = new Criteria();\n            criteria.addAssociation('languages');\n\n            this.salesChannelRepository.get(this.testMailSalesChannelId, Context.api, criteria).then((salesChannel) => {\n                if (!salesChannel.languages.has(Cicada.Context.api.languageId)) {\n                    this.showLanguageNotAssignedToSalesChannelWarning = true;\n\n                    return;\n                }\n\n                this.showLanguageNotAssignedToSalesChannelWarning = false;\n            });\n\n            this.mailService\n                .testMailTemplate(\n                    this.testerMail,\n                    this.mailPreviewContent(),\n                    this.mailTemplateMedia,\n                    this.testMailSalesChannelId,\n                    this.mailTemplate.mailTemplateTypeId,\n                    this.mailTemplate.id,\n                )\n                .then((response) => {\n                    // Size is the length of the mail message, if the size is zero then no mail was sent\n                    const isMailSent = response?.size !== 0;\n                    if (!isMailSent) {\n                        this.createNotificationError({\n                            message: this.$tc('sw-mail-template.general.notificationGeneralSyntaxValidationErrorMessage'),\n                        });\n                        return;\n                    }\n\n                    this.createNotificationSuccess(notificationTestMailSuccess);\n                })\n                .catch((exception) => {\n                    this.createNotificationError(notificationTestMailError);\n                    warn(this._name, exception.message, exception.response);\n                });\n        },\n\n        onClickShowPreview() {\n            this.isLoading = true;\n\n            this.mailPreview = this.mailService\n                .buildRenderPreview(this.mailTemplateType, this.mailPreviewContent())\n                .then((response) => {\n                    this.mailPreview = response;\n                })\n                .catch((error) => {\n                    this.mailPreview = null;\n                    if (!error.response?.data?.errors?.[0]?.detail) {\n                        this.createNotificationError({\n                            message: this.$tc('sw-mail-template.general.notificationGeneralSyntaxValidationErrorMessage'),\n                        });\n                    } else {\n                        this.createNotificationError({\n                            message: this.$tc('sw-mail-template.general.notificationSyntaxValidationErrorMessage', 0, {\n                                errorMsg: error.response?.data?.errors?.[0]?.detail,\n                            }),\n                        });\n                    }\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        mailPreviewContent() {\n            const mailTemplate = { ...this.mailTemplate };\n\n            if (mailTemplate.contentHtml) {\n                mailTemplate.contentHtml = this.replaceContent(mailTemplate.contentHtml);\n            }\n\n            if (mailTemplate.translated?.contentHtml) {\n                mailTemplate.translated.contentHtml = this.replaceContent(mailTemplate.translated.contentHtml);\n            }\n\n            if (mailTemplate.contentPlain) {\n                mailTemplate.contentPlain = this.replaceContent(mailTemplate.contentPlain);\n            }\n\n            if (mailTemplate.translated?.contentPlain) {\n                mailTemplate.translated.contentPlain = this.replaceContent(mailTemplate.translated.contentPlain);\n            }\n\n            return mailTemplate;\n        },\n\n        replaceContent(string) {\n            // Replace .at([index]), first -> `.[index]` to suitable with mail template data\n            return string\n                .replace(/\\.at\\(([0-9]*)\\)\\./g, (matchs) => {\n                    const index = parseInt(matchs.match(/[0-9]/g).join(''), 10);\n                    return `.${index}.`;\n                })\n                .replace(/\\.first\\./g, '.0.');\n        },\n\n        onCancelShowPreview() {\n            this.mailPreview = null;\n        },\n\n        async onCopyVariable(variable) {\n            try {\n                await dom.copyStringToClipboard(variable);\n            } catch (error) {\n                let errormsg = '';\n                if (error.response.data.errors.length > 0) {\n                    const errorDetailMsg = error.response.data.errors[0].detail;\n                    errormsg = `<br/> ${this.$tc('sw-mail-template.detail.textErrorMessage')}: \"${errorDetailMsg}\"`;\n                }\n\n                this.createNotificationError({\n                    message: errormsg,\n                });\n            }\n        },\n\n        async onChangeType(id) {\n            if (!id) {\n                this.selectedType = {};\n                return;\n            }\n            this.isLoading = true;\n\n            try {\n                await this.getMailTemplateType();\n                this.selectedType = await this.mailTemplateTypeRepository.get(id);\n                this.loadInitialAvailableVariables();\n                this.outerCompleterFunction();\n            } catch (e) {\n                let errormsg = e.message ?? '';\n                if (e.response?.data?.errors?.length > 0) {\n                    const errorDetailMsg = e.response.data.errors[0].detail;\n                    errormsg = `<br/> ${this.$tc('sw-mail-template.detail.textErrorMessage')}: \"${errorDetailMsg}\"`;\n                }\n\n                this.createNotificationError({\n                    message: errormsg,\n                });\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        getMediaColumns() {\n            return [\n                {\n                    property: 'fileName',\n                    label: 'sw-mail-template.list.columnFilename',\n                },\n            ];\n        },\n\n        successfulUpload({ targetId }) {\n            if (this.mailTemplate.media.find((mailTemplateMedia) => mailTemplateMedia.mediaId === targetId)) {\n                return;\n            }\n\n            this.mediaRepository.get(targetId).then((mediaItem) => {\n                this.createMailTemplateMediaAssoc(mediaItem);\n            });\n        },\n\n        onMediaDrop(media) {\n            this.successfulUpload({ targetId: media.id });\n        },\n\n        createMailTemplateMediaAssoc(mediaItem) {\n            const mailTemplateMedia = this.mailTemplateMediaRepository.create();\n            mailTemplateMedia.mailTemplateId = this.mailTemplateId;\n            mailTemplateMedia.languageId = Cicada.Context.api.languageId;\n            mailTemplateMedia.mediaId = mediaItem.id;\n            if (this.mailTemplate.media.length <= 0) {\n                mailTemplateMedia.position = 0;\n            } else {\n                mailTemplateMedia.position = this.mailTemplate.media.length;\n            }\n            this.mailTemplate.media.push(mailTemplateMedia);\n            this.mailTemplateMedia.push(mediaItem);\n        },\n\n        openMediaSidebar() {\n            this.$refs.mediaSidebarItem.openContent();\n        },\n\n        onDeleteMedia(mailTemplateMediaId) {\n            const foundItem = this.mailTemplate.media.find(\n                (mailTemplateMedia) => mailTemplateMedia.mediaId === mailTemplateMediaId,\n            );\n            if (foundItem) {\n                this.mailTemplate.media.remove(foundItem.id);\n                this.getMailTemplateMedia();\n            }\n        },\n\n        onSelectionChanged(selection) {\n            this.selectedItems = selection;\n        },\n\n        onDeleteSelectedMedia() {\n            Object.keys(this.selectedItems).forEach((mailTemplateMediaId) => {\n                this.onDeleteMedia(mailTemplateMediaId);\n            });\n        },\n\n        _checkIfMediaIsAlreadyUsed(mediaId) {\n            return this.mailTemplate.media.some((mailTemplateMedia) => {\n                return (\n                    mailTemplateMedia.mediaId === mediaId && mailTemplateMedia.languageId === Cicada.Context.api.languageId\n                );\n            });\n        },\n\n        onAddItemToAttachment(mediaItem) {\n            if (this._checkIfMediaIsAlreadyUsed(mediaItem.id)) {\n                this.createNotificationInfo({\n                    message: this.$tc('sw-mail-template.list.errorMediaItemDuplicated'),\n                });\n                return false;\n            }\n\n            this.createMailTemplateMediaAssoc(mediaItem);\n            return true;\n        },\n\n        loadAvailableVariables(variable, variableEntitySchema) {\n            if (!this.mailTemplateType || !this.mailTemplateType.availableEntities) {\n                return [];\n            }\n\n            const variablePath = variable.concat('.');\n            const variableEntitySchemaPath = variableEntitySchema.concat('.');\n\n            const foundVariables = Object.keys(Cicada.Utils.get(this.mailTemplateType.templateData, variable));\n\n            const keys = foundVariables.map((val) => {\n                const availableVariable = Cicada.Utils.get(this.mailTemplateType.templateData, variablePath.concat(val));\n                const isObject = typeof availableVariable === 'object' && availableVariable !== null;\n                const length = isObject ? Object.values(availableVariable).length : 0;\n\n                // the pattern for schema is `.at(0)` or `.at(1)` instead of `.0` or `.1`\n                const schema = this.isToManyAssociationVariable(variable)\n                    ? `${variableEntitySchemaPath}at(${parseInt(val, 10)})`\n                    : variableEntitySchemaPath + val;\n\n                return {\n                    id: variablePath + val,\n                    schema,\n                    name: val,\n                    childCount: length,\n                    parentId: variable,\n                    afterId: null,\n                };\n            });\n\n            this.addVariables(keys);\n\n            return true;\n        },\n\n        isToManyAssociationVariable(variable) {\n            if (!variable) {\n                return false;\n            }\n\n            const variables = variable.split('.');\n            variables.splice(1, 0, 'properties');\n            const field = Cicada.Utils.get(this.entitySchema, `${variables.join('.')}`);\n\n            return (\n                field &&\n                field.type === 'association' &&\n                [\n                    'one_to_many',\n                    'many_to_many',\n                ].includes(field.relation)\n            );\n        },\n\n        onGetTreeItems(parent, schema) {\n            this.loadAvailableVariables(parent, schema);\n        },\n\n        addVariables(variables) {\n            variables.forEach((variable) => {\n                if (this.isCompatEnabled('INSTANCE_SET')) {\n                    this.$set(this.availableVariables, variable.id, variable);\n                } else {\n                    this.availableVariables[variable.id] = variable;\n                }\n            });\n        },\n\n        loadInitialAvailableVariables() {\n            this.availableVariables = {};\n\n            if (!this.hasTemplateData) {\n                return;\n            }\n\n            Object.keys(this.mailTemplateType.templateData).forEach((variable) => {\n                const availableVariable = Cicada.Utils.get(this.mailTemplateType.templateData, variable);\n                let length = 0;\n                if (typeof availableVariable === 'object' && availableVariable !== null) {\n                    length = Object.values(availableVariable).length;\n                }\n\n                this.addVariables([\n                    {\n                        id: variable,\n                        schema: variable,\n                        name: variable,\n                        childCount: length,\n                        parentId: null,\n                        afterId: null,\n                    },\n                ]);\n            });\n        },\n    },\n};\n"],"names":["template","Mixin","Context","Criteria","EntityCollection","warn","mapPropertyErrors","index","entityMappingService","innerMailTemplateType","completerFunction","prefix","properties","val","_a","_b","_c","_d","criteria","item","mediaAssoc","languageId","updatePromises","mailTemplateSubject","error","errormsg","errorDetailMsg","notificationTestMailSuccess","notificationTestMailError","notificationTestMailErrorSalesChannel","salesChannel","response","exception","_h","_g","_f","_e","mailTemplate","string","matchs","variable","dom","id","e","targetId","mailTemplateMedia","mediaItem","media","mailTemplateMediaId","foundItem","selection","mediaId","variableEntitySchema","variablePath","variableEntitySchemaPath","keys","availableVariable","length","schema","variables","field","parent"],"mappings":"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"}