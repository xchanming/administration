import{L as r,P as a}from"./order.types-BvKP5qzO.js";const l=`{% block sw_order_product_select %} <span class="sw-order-product-select"> {% block sw_order_product_select_blank_item %} <sw-text-field v-if="isShownItemLabelInput" v-model:value="item.label" v-bind="$attrs" size="small" :placeholder="$tc('sw-order.detailBase.columnProductName')" /> {% endblock %} {% block sw_order_product_select_existing_product %} <sw-entity-single-select v-else-if="isShownProductSelect" v-model:value="product" class="sw-order-product-select__single-select" :context="contextWithInheritance" :criteria="productCriteria" entity="product" size="small" show-clearable-button @update:value="onItemChanged" > <template #selection-label-property="{ item }"> <slot name="selection-label-property" v-bind="{ item }" > {% block sw_order_product_select_results_variant_info %} <sw-product-variant-info :variations="item.variation"> {{ item.translated.name || item.name }} </sw-product-variant-info> {% endblock %} </slot> </template> <template #result-item="{ item, index }"> <slot name="result-item" v-bind="{ item, index }" > <sw-select-result v-bind="{ item, index }" > {% block sw_order_product_select_results_list_result_label %} <sw-product-variant-info :variations="item.variation"> {{ item.translated.name || item.name }} </sw-product-variant-info> {% endblock %} </sw-select-result> </slot> </template> </sw-entity-single-select> {% endblock %} {% block sw_order_product_show_product %} <template v-else> <span class="sw-order-product-select__label"> {{ item.label }} </span> </template> {% endblock %} </span> {% endblock %}`,{Service:n}=Cicada,{Criteria:t}=Cicada.Data,c={template:l,compatConfig:Cicada.compatConfig,props:{item:{type:Object,required:!0},salesChannelId:{type:String,required:!0,default:""},taxStatus:{type:String,required:!0,default:""}},data(){return{product:null}},computed:{productRepository(){return n("repositoryFactory").create("product")},lineItemTypes(){return r},lineItemPriceTypes(){return a},isShownProductSelect(){return this.item._isNew&&this.item.type===this.lineItemTypes.PRODUCT},isShownItemLabelInput(){return this.item.type!==this.lineItemTypes.PRODUCT},contextWithInheritance(){return{...Cicada.Context.api,inheritance:!0}},productCriteria(){const e=new t(1,25);return e.addAssociation("options.group"),e.addAssociation("tax"),e.addFilter(t.multi("OR",[t.equals("childCount",0),t.equals("childCount",null)])),e.addFilter(t.equals("visibilities.salesChannelId",this.salesChannelId)),e.addFilter(t.equals("active",!0)),e}},methods:{onItemChanged(e){const s=new t(1,1);s.addAssociation("tax"),this.productRepository.get(e,this.contextWithInheritance,s).then(i=>{this.item.identifier=i.id,this.item.label=i.name,this.item.priceDefinition.price=this.taxStatus==="gross"?i.price[0].gross:i.price[0].net,this.item.priceDefinition.type=this.lineItemPriceTypes.QUANTITY,this.item.price.taxRules[0].taxRate=i.tax.taxRate,this.item.price.unitPrice="...",this.item.price.totalPrice="...",this.item.price.quantity=1,this.item.unitPrice="...",this.item.totalPrice="...",this.item.precision=2,this.item.priceDefinition.taxRules[0].taxRate=i.tax.taxRate})}}};export{c as default};
//# sourceMappingURL=index-BG83J-dz.js.map
