const l=`{% block sw_flow_generate_document_modal %} <sw-modal class="sw-flow-generate-document-modal" :title="$tc('sw-flow.modals.document.titleCreateDocument')" :closable="false" @modal-close="onClose" > {% block sw_flow_generate_document_modal_document_type_multiple %} <sw-multi-select v-model:value="documentTypesSelected" name="sw-field--documentTypesSelected" required class="sw-flow-generate-document-modal__type-multi-select" label-property="translated.name" value-property="technicalName" :options="documentTypes" :label="$tc('sw-flow.modals.document.labelDocumentType')" :placeholder="$tc('sw-flow.modals.document.placeholderDocumentType')" :error="fieldError" /> {% endblock %} {% block sw_flow_generate_document_modal_footer %} <template #modal-footer> {% block sw_flow_generate_document_modal_footer_cancel_button %} <sw-button class="sw-flow-generate-document-modal__cancel-button" size="small" @click="onClose" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_flow_generate_document_modal_footer_save_button %} <sw-button class="sw-flow-generate-document-modal__save-button" variant="primary" size="small" @click="onAddAction" > {{ sequence.id ? $tc('sw-flow.modals.buttonSaveAction') : $tc('sw-flow.modals.buttonAddAction') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %}`,{Component:d,Store:a}=Shopware,{Criteria:s}=Shopware.Data,{mapState:r}=d.getComponentHelper(),{ShopwareError:m}=Shopware.Classes,u={template:l,inject:["repositoryFactory"],emits:["modal-close","process-finish"],props:{sequence:{type:Object,required:!0}},data(){return{documentTypesSelected:[],fieldError:null}},computed:{documentTypeRepository(){return this.repositoryFactory.create("document_type")},documentTypeCriteria(){const e=new s(1,100);return e.addSorting(s.sort("name","ASC")),e},...r(()=>a.get("swFlow"),["documentTypes"])},watch:{documentTypesSelected(e){e.length>0&&this.fieldError&&(this.fieldError=null)}},created(){this.createdComponent()},methods:{createdComponent(){var e,o,t,n;(o=(e=this.sequence)==null?void 0:e.config)!=null&&o.documentType?this.documentTypesSelected=[this.sequence.config]:this.documentTypesSelected=((n=(t=this.sequence)==null?void 0:t.config)==null?void 0:n.documentTypes)||[],this.documentTypesSelected=this.documentTypesSelected.map(c=>c.documentType),this.documentTypes.length||this.documentTypeRepository.search(this.documentTypeCriteria).then(c=>{Shopware.Store.get("swFlow").documentTypes=c})},onClose(){this.$emit("modal-close")},onAddAction(){if(!this.documentTypesSelected.length){this.fieldError=new m({code:"c1051bb4-d103-4f74-8988-acbcafc7fdc3"});return}let e={...this.sequence};const o=this.documentTypesSelected.map(t=>({documentType:t,documentRangerType:`document_${t}`}));e={...e,config:{documentTypes:o}},this.$emit("process-finish",e)}}};export{u as default};
