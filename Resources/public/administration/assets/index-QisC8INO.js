const e='{# v-on="$listeners" needed becaues vue/compat removes them from $attrs #} {# New mt-external-link component #} <mt-external-link v-if="useMeteorComponent" v-bind="$attrs" > <template v-for="(index, name) in getSlots()" #[name]="data" > <slot :name="name" v-bind="data" > </slot> </template> <slot></slot> </mt-external-link> {# v-on="$listeners" needed becaues vue/compat removes them from $attrs #} {# Deprecated component #} <sw-external-link-deprecated v-else v-bind="$attrs" v-on="listeners" > <template v-for="(index, name) in getSlots()" #[name]="data" > <slot :name="name" v-bind="data" > </slot> </template> <slot></slot> </sw-external-link-deprecated>',{Component:t}=Cicada;t.register("sw-external-link",{template:e,compatConfig:Cicada.compatConfig,computed:{useMeteorComponent(){return Cicada.Feature.isActive("v6.7.0.0")?!0:(Cicada.Utils.debug.warn("sw-external-link",'The old usage of "sw-external-link" is deprecated and will be removed in v6.7.0.0. Please use "mt-external-link" instead.'),!1)},listeners(){return this.isCompatEnabled("INSTANCE_LISTENERS")?this.$listeners:{}}},methods:{getSlots(){return this.isCompatEnabled("INSTANCE_SCOPED_SLOTS")?{...this.$slots,...this.$scopedSlots}:this.$slots}}});
//# sourceMappingURL=index-QisC8INO.js.map
