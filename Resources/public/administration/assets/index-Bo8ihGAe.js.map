{"version":3,"file":"index-Bo8ihGAe.js","sources":["../../../app/administration/src/app/component/form/select/entity/sw-entity-multi-id-select/sw-entity-multi-id-select.html.twig","../../../app/administration/src/app/component/form/select/entity/sw-entity-multi-id-select/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_entity_multi_id_select %}\n<sw-entity-multi-select\n    :entity-collection=\"collection\"\n    :context=\"context\"\n    :criteria=\"criteria\"\n    :disabled=\"disabled\"\n    v-bind=\"$attrs\"\n    v-on=\"getListeners\"\n    @update:entity-collection=\"updateIds\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_entity_multi_id_select_label_property %}\n    <template #selection-label-property=\"{ item, index, labelProperty, valueProperty }\">\n        <slot\n            name=\"selection-label-property\"\n            v-bind=\"{ item, index, labelProperty, valueProperty }\"\n        ></slot>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_entity_multi_id_select_results_list_before %}\n    <template #before-item-list>\n        <slot name=\"before-item-list\"></slot>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_entity_multi_id_select_results_list_result_label %}\n    <template #result-label-property=\"{ item, index, labelProperty, valueProperty, searchTerm, getKey, highlightSearchTerm }\">\n        <slot\n            name=\"result-label-property\"\n            v-bind=\"{ item, index, labelProperty, valueProperty, searchTerm, getKey, highlightSearchTerm }\"\n        ></slot>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_entity_multi_id_select_results_list_result_description %}\n    <template #result-description-property=\"{ item, searchTerm, highlightSearchTerm }\">\n        <slot\n            name=\"result-description-property\"\n            v-bind=\"{ item, searchTerm, highlightSearchTerm }\"\n        ></slot>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_entity_multi_id_select_results_list_after %}\n    <template #after-item-list>\n        <slot name=\"after-item-list\"></slot>\n    </template>\n    {% endblock %}\n\n    <template #label>\n        <slot name=\"label\"></slot>\n    </template>\n\n    <template #hint>\n        <slot name=\"hint\"></slot>\n    </template>\n</sw-entity-multi-select>\n{% endblock %}\n","import template from './sw-entity-multi-id-select.html.twig';\n\nconst { Component, Context, Mixin } = Cicada;\nconst { EntityCollection, Criteria } = Cicada.Data;\n\n/**\n * @private\n */\nComponent.register('sw-entity-multi-id-select', {\n    template,\n\n    inheritAttrs: false,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['feature'],\n\n    emits: ['update:value'],\n\n    mixins: [\n        Mixin.getByName('remove-api-error'),\n    ],\n\n    props: {\n        value: {\n            type: Array,\n            required: false,\n            default() {\n                return [];\n            },\n        },\n\n        repository: {\n            type: Object,\n            required: true,\n        },\n\n        criteria: {\n            type: Object,\n            required: false,\n            default() {\n                return new Criteria(1, 25);\n            },\n        },\n\n        context: {\n            type: Object,\n            required: false,\n            default() {\n                return Context.api;\n            },\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            collection: null,\n        };\n    },\n\n    computed: {\n        getListeners() {\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                const listeners = {};\n\n                Object.keys(this.$listeners).forEach((listener) => {\n                    if (listener !== 'change') {\n                        listeners[listener] = this.$listeners[listener];\n                    }\n                });\n\n                return listeners;\n            }\n\n            return {};\n        },\n    },\n\n    watch: {\n        value() {\n            if (this.collection === null) {\n                this.createdComponent();\n                return;\n            }\n\n            if (this.collection.getIds() === this.value) {\n                return;\n            }\n\n            this.createdComponent();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            const collection = new EntityCollection(this.repository.route, this.repository.entityName, this.context);\n\n            if (this.collection === null) {\n                this.collection = collection;\n            }\n\n            if (this.value.length <= 0) {\n                this.collection = collection;\n                return Promise.resolve(this.collection);\n            }\n\n            const criteria = Criteria.fromCriteria(this.criteria);\n            criteria.setIds(this.value);\n            criteria.setTerm('');\n            criteria.queries = [];\n\n            return this.repository.search(criteria, { ...this.context, inheritance: true }).then((entities) => {\n                this.collection = entities;\n\n                if (!this.collection.length && this.value.length) {\n                    this.updateIds(this.collection);\n                }\n\n                return this.collection;\n            });\n        },\n\n        updateIds(collection) {\n            this.collection = collection;\n\n            this.$emit('update:value', collection.getIds());\n        },\n    },\n});\n"],"names":["template","Component","Context","Mixin","EntityCollection","Criteria","listeners","listener","collection","criteria","entities"],"mappings":"AAAA,MAAeA,EAAA,sjDCET,CAAE,UAAAC,EAAW,QAAAC,EAAS,MAAAC,CAAK,EAAK,OAChC,CAAE,iBAAAC,EAAkB,SAAAC,GAAa,OAAO,KAK9CJ,EAAU,SAAS,4BAA6B,CAC5C,SAAAD,EAEA,aAAc,GAEd,aAAc,OAAO,aAErB,OAAQ,CAAC,SAAS,EAElB,MAAO,CAAC,cAAc,EAEtB,OAAQ,CACJG,EAAM,UAAU,kBAAkB,CACrC,EAED,MAAO,CACH,MAAO,CACH,KAAM,MACN,SAAU,GACV,SAAU,CACN,MAAO,EACV,CACJ,EAED,WAAY,CACR,KAAM,OACN,SAAU,EACb,EAED,SAAU,CACN,KAAM,OACN,SAAU,GACV,SAAU,CACN,OAAO,IAAIE,EAAS,EAAG,EAAE,CAC5B,CACJ,EAED,QAAS,CACL,KAAM,OACN,SAAU,GACV,SAAU,CACN,OAAOH,EAAQ,GAClB,CACJ,EAED,SAAU,CACN,KAAM,QACN,SAAU,GACV,QAAS,EACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,WAAY,IACxB,CACK,EAED,SAAU,CACN,cAAe,CACX,GAAI,KAAK,gBAAgB,oBAAoB,EAAG,CAC5C,MAAMI,EAAY,CAAA,EAElB,cAAO,KAAK,KAAK,UAAU,EAAE,QAASC,GAAa,CAC3CA,IAAa,WACbD,EAAUC,CAAQ,EAAI,KAAK,WAAWA,CAAQ,EAEtE,CAAiB,EAEMD,CACV,CAED,MAAO,EACV,CACJ,EAED,MAAO,CACH,OAAQ,CACJ,GAAI,KAAK,aAAe,KAAM,CAC1B,KAAK,iBAAgB,EACrB,MACH,CAEG,KAAK,WAAW,OAAM,IAAO,KAAK,OAItC,KAAK,iBAAgB,CACxB,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,MAAME,EAAa,IAAIJ,EAAiB,KAAK,WAAW,MAAO,KAAK,WAAW,WAAY,KAAK,OAAO,EAMvG,GAJI,KAAK,aAAe,OACpB,KAAK,WAAaI,GAGlB,KAAK,MAAM,QAAU,EACrB,YAAK,WAAaA,EACX,QAAQ,QAAQ,KAAK,UAAU,EAG1C,MAAMC,EAAWJ,EAAS,aAAa,KAAK,QAAQ,EACpD,OAAAI,EAAS,OAAO,KAAK,KAAK,EAC1BA,EAAS,QAAQ,EAAE,EACnBA,EAAS,QAAU,GAEZ,KAAK,WAAW,OAAOA,EAAU,CAAE,GAAG,KAAK,QAAS,YAAa,EAAI,CAAE,EAAE,KAAMC,IAClF,KAAK,WAAaA,EAEd,CAAC,KAAK,WAAW,QAAU,KAAK,MAAM,QACtC,KAAK,UAAU,KAAK,UAAU,EAG3B,KAAK,WACf,CACJ,EAED,UAAUF,EAAY,CAClB,KAAK,WAAaA,EAElB,KAAK,MAAM,eAAgBA,EAAW,OAAQ,CAAA,CACjD,CACJ,CACL,CAAC"}