{"version":3,"file":"index-CyRbRalB.js","sources":["../../../app/administration/src/module/sw-settings-custom-field/component/sw-custom-field-type-entity/sw-custom-field-type-entity.html.twig","../../../app/administration/src/module/sw-settings-custom-field/component/sw-custom-field-type-entity/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_custom_field_type_base_content %}\n\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_custom_field_type_select_options %}{% endblock %}\n\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_custom_field_type_select_add_option %}{% endblock %}\n\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_custom_field_type_select_multi %}{% endblock %}\n\n{% parent() %}\n\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_custom_field_type_entity_type %}\n<sw-single-select\n    v-model:value=\"currentCustomField.config.entity\"\n    :disabled=\"!currentCustomField._isNew || undefined\"\n    :help-text=\"$tc('sw-settings-custom-field.customField.detail.helpTextEntitySelect')\"\n    :label=\"$tc('sw-settings-custom-field.customField.detail.labelEntityTypeSelect')\"\n    :options=\"sortedEntityTypes\"\n    show-clearable-button\n    @update:value=\"onChangeEntityType\"\n/>\n{% endblock %}\n\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_custom_field_type_entity_multi %}{% endblock %}\n\n{% endblock %}\n","/**\n * @package services-settings\n */\nimport template from './sw-custom-field-type-entity.html.twig';\n\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    mounted() {\n        this.customEntityRepository.search(new Criteria(), Cicada.Context.api).then((result) => {\n            this.customEntities = result;\n        });\n    },\n\n    data() {\n        return {\n            customEntities: [],\n        };\n    },\n\n    computed: {\n        entityTypes() {\n            const entityTypes = [\n                {\n                    label: this.$tc('sw-settings-custom-field.customField.entity.product'),\n                    value: 'product',\n                },\n                {\n                    label: this.$tc('sw-settings-custom-field.customField.entity.category'),\n                    value: 'category',\n                },\n                {\n                    label: this.$tc('sw-settings-custom-field.customField.entity.shippingMethod'),\n                    value: 'shipping_method',\n                },\n                {\n                    label: this.$tc('sw-settings-custom-field.customField.entity.paymentMethod'),\n                    value: 'payment_method',\n                },\n                {\n                    label: this.$tc('sw-settings-custom-field.customField.entity.country'),\n                    value: 'country',\n                },\n                {\n                    label: this.$tc('sw-settings-custom-field.customField.entity.customer'),\n                    value: 'customer',\n                    config: {\n                        labelProperty: [\n                            'firstName',\n                            'lastName',\n                        ],\n                    },\n                },\n                {\n                    label: this.$tc('sw-settings-custom-field.customField.entity.salesChannel'),\n                    value: 'sales_channel',\n                },\n                {\n                    label: this.$tc('sw-settings-custom-field.customField.entity.manufacturer'),\n                    value: 'product_manufacturer',\n                },\n                {\n                    label: this.$tc('sw-settings-custom-field.customField.entity.dynamicProductGroup'),\n                    value: 'product_stream',\n                },\n                {\n                    label: this.$tc('sw-settings-custom-field.customField.entity.shoppingExperienceLayout'),\n                    value: 'cms_page',\n                },\n            ];\n\n            this.customFieldsAwareCustomEntities.forEach((customEntity) => {\n                entityTypes.push({\n                    label: this.$tc(`${customEntity.name}.label`),\n                    value: customEntity.name,\n                    config: {\n                        labelProperty: customEntity.labelProperty,\n                    },\n                });\n            });\n\n            return entityTypes;\n        },\n\n        customFieldsAwareCustomEntities() {\n            return this.customEntities.filter((customEntity) => customEntity.customFieldsAware);\n        },\n\n        customEntityRepository() {\n            return this.repositoryFactory.create('custom_entity');\n        },\n\n        sortedEntityTypes() {\n            // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n            return this.entityTypes.sort((a, b) => {\n                return a.label.localeCompare(b.label);\n            });\n        },\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.currentCustomField.config.hasOwnProperty('options')) {\n                if (this.isCompatEnabled('INSTANCE_DELETE')) {\n                    this.$delete(this.currentCustomField.config, 'options');\n                } else {\n                    delete this.currentCustomField.config.options;\n                }\n            }\n\n            const componentName = this.currentCustomField.config.componentName;\n            if (\n                !componentName ||\n                ![\n                    'sw-entity-single-select',\n                    'sw-entity-multi-id-select',\n                ].includes(componentName)\n            ) {\n                this.currentCustomField.config.componentName = 'sw-entity-single-select';\n            }\n\n            this.multiSelectSwitchDisabled = !this.currentCustomField._isNew;\n            this.multiSelectSwitch = componentName === 'sw-entity-multi-id-select';\n        },\n\n        onChangeEntityType(entity) {\n            const entityType = this.entityTypes.find((type) => type.value === entity);\n\n            if (this.isCompatEnabled('INSTANCE_DELETE')) {\n                this.$delete(this.currentCustomField.config, 'labelProperty');\n            } else {\n                delete this.currentCustomField.config.labelProperty;\n            }\n\n            // pass the label property into the custom field's config to allow different / multiple labelProperties\n            if (entityType.hasOwnProperty('config') && entityType.config.hasOwnProperty('labelProperty')) {\n                this.currentCustomField.config.labelProperty = entityType.config.labelProperty;\n            }\n        },\n\n        onChangeMultiSelectSwitch(state) {\n            if (state) {\n                this.currentCustomField.config.componentName = 'sw-entity-multi-id-select';\n                return;\n            }\n\n            this.currentCustomField.config.componentName = 'sw-entity-single-select';\n        },\n    },\n};\n"],"names":["template","Criteria","index","result","entityTypes","customEntity","a","b","componentName","entity","entityType","type","state"],"mappings":"AAAA,MAAeA,EAAA,wvBCKT,CAAE,SAAAC,CAAQ,EAAK,OAAO,KAGbC,EAAA,CACX,SAAAF,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,mBACH,EAED,SAAU,CACN,KAAK,uBAAuB,OAAO,IAAIC,EAAY,OAAO,QAAQ,GAAG,EAAE,KAAME,GAAW,CACpF,KAAK,eAAiBA,CAClC,CAAS,CACJ,EAED,MAAO,CACH,MAAO,CACH,eAAgB,CAAE,CAC9B,CACK,EAED,SAAU,CACN,aAAc,CACV,MAAMC,EAAc,CAChB,CACI,MAAO,KAAK,IAAI,qDAAqD,EACrE,MAAO,SACV,EACD,CACI,MAAO,KAAK,IAAI,sDAAsD,EACtE,MAAO,UACV,EACD,CACI,MAAO,KAAK,IAAI,4DAA4D,EAC5E,MAAO,iBACV,EACD,CACI,MAAO,KAAK,IAAI,2DAA2D,EAC3E,MAAO,gBACV,EACD,CACI,MAAO,KAAK,IAAI,qDAAqD,EACrE,MAAO,SACV,EACD,CACI,MAAO,KAAK,IAAI,sDAAsD,EACtE,MAAO,WACP,OAAQ,CACJ,cAAe,CACX,YACA,UACH,CACJ,CACJ,EACD,CACI,MAAO,KAAK,IAAI,0DAA0D,EAC1E,MAAO,eACV,EACD,CACI,MAAO,KAAK,IAAI,0DAA0D,EAC1E,MAAO,sBACV,EACD,CACI,MAAO,KAAK,IAAI,iEAAiE,EACjF,MAAO,gBACV,EACD,CACI,MAAO,KAAK,IAAI,sEAAsE,EACtF,MAAO,UACV,CACjB,EAEY,YAAK,gCAAgC,QAASC,GAAiB,CAC3DD,EAAY,KAAK,CACb,MAAO,KAAK,IAAI,GAAGC,EAAa,IAAI,QAAQ,EAC5C,MAAOA,EAAa,KACpB,OAAQ,CACJ,cAAeA,EAAa,aAC/B,CACrB,CAAiB,CACjB,CAAa,EAEMD,CACV,EAED,iCAAkC,CAC9B,OAAO,KAAK,eAAe,OAAQC,GAAiBA,EAAa,iBAAiB,CACrF,EAED,wBAAyB,CACrB,OAAO,KAAK,kBAAkB,OAAO,eAAe,CACvD,EAED,mBAAoB,CAEhB,OAAO,KAAK,YAAY,KAAK,CAACC,EAAGC,IACtBD,EAAE,MAAM,cAAcC,EAAE,KAAK,CACvC,CACJ,CACJ,EAED,QAAS,CACL,kBAAmB,CACX,KAAK,mBAAmB,OAAO,eAAe,SAAS,IACnD,KAAK,gBAAgB,iBAAiB,EACtC,KAAK,QAAQ,KAAK,mBAAmB,OAAQ,SAAS,EAEtD,OAAO,KAAK,mBAAmB,OAAO,SAI9C,MAAMC,EAAgB,KAAK,mBAAmB,OAAO,eAEjD,CAACA,GACD,CAAC,CACG,0BACA,2BACpB,EAAkB,SAASA,CAAa,KAExB,KAAK,mBAAmB,OAAO,cAAgB,2BAGnD,KAAK,0BAA4B,CAAC,KAAK,mBAAmB,OAC1D,KAAK,kBAAoBA,IAAkB,2BAC9C,EAED,mBAAmBC,EAAQ,CACvB,MAAMC,EAAa,KAAK,YAAY,KAAMC,GAASA,EAAK,QAAUF,CAAM,EAEpE,KAAK,gBAAgB,iBAAiB,EACtC,KAAK,QAAQ,KAAK,mBAAmB,OAAQ,eAAe,EAE5D,OAAO,KAAK,mBAAmB,OAAO,cAItCC,EAAW,eAAe,QAAQ,GAAKA,EAAW,OAAO,eAAe,eAAe,IACvF,KAAK,mBAAmB,OAAO,cAAgBA,EAAW,OAAO,cAExE,EAED,0BAA0BE,EAAO,CAC7B,GAAIA,EAAO,CACP,KAAK,mBAAmB,OAAO,cAAgB,4BAC/C,MACH,CAED,KAAK,mBAAmB,OAAO,cAAgB,yBAClD,CACJ,CACL"}