{"version":3,"file":"index-CXO6OgnW.js","sources":["../../../app/administration/node_modules/lodash/_baseForOwn.js","../../../app/administration/node_modules/lodash/_createBaseEach.js","../../../app/administration/node_modules/lodash/_baseEach.js","../../../app/administration/node_modules/lodash/_baseMap.js","../../../app/administration/node_modules/lodash/_baseSortBy.js","../../../app/administration/node_modules/lodash/_compareAscending.js","../../../app/administration/node_modules/lodash/_compareMultiple.js","../../../app/administration/node_modules/lodash/_baseOrderBy.js","../../../app/administration/node_modules/lodash/orderBy.js","../../../app/administration/node_modules/lodash/sortBy.js","../../../app/administration/src/module/sw-flow/component/sw-flow-sequence-action/sw-flow-sequence-action.html.twig","../../../app/administration/src/module/sw-flow/component/sw-flow-sequence-action/index.js"],"sourcesContent":["var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_flow_sequence_action %}\n<div\n    class=\"sw-flow-sequence-action\"\n    :class=\"actionClasses\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_sequence_action_card %}\n    <div class=\"sw-flow-sequence-action__card\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_flow_sequence_action_header %}\n        <div class=\"sw-flow-sequence-action__header\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_flow_sequence_action_title %}\n            <div class=\"sw-flow-sequence-action__title-description\">\n                <h3 class=\"sw-flow-sequence-action__title\">\n                    {{ $tc('sw-flow.detail.sequence.actionTitle') }}\n                </h3>\n\n                <p class=\"sw-flow-sequence-action__description\">\n                    {{ $tc('sw-flow.detail.sequence.actionDescription') }}\n                </p>\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_flow_sequence_action_context_menu %}\n            <sw-context-button\n                class=\"sw-flow-sequence-action__context-button\"\n                :class=\"actionClasses\"\n                :disabled=\"disabled\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_flow_sequence_action_remove_action_container %}\n                <sw-context-menu-item\n                    variant=\"danger\"\n                    class=\"sw-flow-sequence-action__delete-action-container\"\n                    @click=\"removeActionContainer\"\n                >\n                    {{ $tc('sw-flow.detail.sequence.contextButton.deleteActionContainer') }}\n                </sw-context-menu-item>\n                {% endblock %}\n            </sw-context-button>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_flow_sequence_action_content %}\n        <div class=\"sw-flow-sequence-action__content\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_flow_sequence_action_actions %}\n            <div class=\"sw-flow-sequence-action__actions\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_flow_sequence_action_actions_empty %}\n                <div\n                    v-if=\"sequenceData.length === 1 && !sequence.actionName\"\n                    class=\"sw-flow-sequence-action__actions-empty\"\n                >\n                    <sw-icon\n                        size=\"12px\"\n                        name=\"regular-minus-xs\"\n                    />\n                    <span class=\"sw-flow-sequence-action__no-action\">\n                        {{ $tc('sw-flow.detail.sequence.noActions') }}\n                    </span>\n                </div>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_flow_sequence_action_actions_list %}\n                <ul\n                    v-else\n                    class=\"sw-flow-sequence-action__action-list\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_flow_sequence_action_actions_transition_group %}\n                    <transition-group\n                        name=\"list\"\n                        tag=\"div\"\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_flow_sequence_action_actions_item %}\n                        <li\n                            v-for=\"(item, key) in sequenceData\"\n                            :key=\"item.id\"\n                            v-tooltip=\"{\n                                message: $tc('sw-flow.actions.tooltipActionDisabled'),\n                                disabled: !item.disabled\n                            }\"\n                            class=\"sw-flow-sequence-action__action-item\"\n                            :class=\"{'sw-flow-sequence-action__disabled': item.disabled}\"\n                            role=\"button\"\n                            tabindex=\"0\"\n                            @click=\"(event) => onEditAction(item, event.target, key)\"\n                            @keydown.enter=\"(event) => onEditAction(item, event.target, key)\"\n                        >\n                            <sw-flow-sequence-action-error\n                                v-if=\"!isValidAction(item.actionName)\"\n                                :sequence=\"item\"\n                            >\n                                <template #content>\n                                    <div class=\"sw-flow-sequence-action__error-action\">\n                                        <div class=\"sw-flow-sequence-action__error-action-title\">\n                                            <sw-icon\n                                                name=\"regular-question-circle-s\"\n                                                size=\"14px\"\n                                                class=\"sw-icon-action\"\n                                            />\n\n                                            {{ $tc('sw-flow.actions.unknownLabel') }}\n                                        </div>\n\n                                        <p>\n                                            {{ $tc('sw-flow.actions.warningText') }}\n                                        </p>\n                                    </div>\n                                </template>\n                            </sw-flow-sequence-action-error>\n\n                            <div v-else>\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_flow_sequence_action_actions_item_header %}\n                                <div class=\"sw-flow-sequence-action__action-header\">\n                                    <div class=\"sw-flow-sequence-action__action-icon\">\n                                        <sw-icon\n                                            v-if=\"!item.iconRaw\"\n                                            :name=\"`${item.icon}`\"\n                                            size=\"12px\"\n                                            class=\"sw-icon-action\"\n                                        />\n\n                                        <img\n                                            v-else\n                                            class=\"sw-flow-sequence-action__icon-raw sw-icon\"\n                                            :src=\"`data:image/png;base64, ${item.iconRaw}`\"\n                                            alt=\"\"\n                                        >\n                                    </div>\n\n                                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                    {% block sw_flow_sequence_action_actions_item_name %}\n                                    <div class=\"sw-flow-sequence-action__action-name\">\n                                        <h3>{{ item.label }}</h3>\n                                    </div>\n                                    {% endblock %}\n\n                                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                    {% block sw_flow_sequence_action_actions_item_context_button %}\n                                    <sw-context-button\n                                        ref=\"contextButton\"\n                                        class=\"sw-flow-sequence-action__context-button\"\n                                        :disabled=\"disabled || item.disabled\"\n                                    >\n                                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                        {% block sw_flow_sequence_action_actions_item_button_edit %}\n                                        <sw-context-menu-item\n                                            v-if=\"isNotStopFlow(item)\"\n                                            class=\"sw-flow-sequence-action__edit-action\"\n                                            @click=\"(event) => onEditAction(item, event.target, key)\"\n                                        >\n                                            {{ $tc('sw-flow.actions.contextButton.editAction') }}\n                                        </sw-context-menu-item>\n                                        {% endblock %}\n\n                                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                        {% block sw_flow_sequence_action_actions_item_button_delete %}\n                                        <sw-context-menu-item\n                                            variant=\"danger\"\n                                            class=\"sw-flow-sequence-action__delete-action\"\n                                            @click=\"removeAction(item.id)\"\n                                        >\n                                            {{ $tc('sw-flow.actions.contextButton.deleteAction') }}\n                                        </sw-context-menu-item>\n                                        {% endblock %}\n\n                                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                        {% block sw_flow_sequence_action_actions_item_button_move_up %}\n                                        <sw-context-menu-item\n                                            v-if=\"showMoveOption(item, 'up')\"\n                                            class=\"sw-flow-sequence-action__move-up\"\n                                            @click=\"moveAction(item, 'up', key)\"\n                                        >\n                                            {{ $tc('sw-flow.actions.contextButton.moveUpAction') }}\n                                        </sw-context-menu-item>\n                                        {% endblock %}\n\n                                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                        {% block sw_flow_sequence_action_actions_item_button_move_down %}\n                                        <sw-context-menu-item\n                                            v-if=\"showMoveOption(item, 'down')\"\n                                            class=\"sw-flow-sequence-action__move-down\"\n                                            @click=\"moveAction(item, 'down', key)\"\n                                        >\n                                            {{ $tc('sw-flow.actions.contextButton.moveDownAction') }}\n                                        </sw-context-menu-item>\n                                        {% endblock %}\n                                    </sw-context-button>\n                                    {% endblock %}\n                                </div>\n                                {% endblock %}\n                            </div>\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_flow_sequence_action_actions_item_description %}\n                            <div\n                                class=\"sw-flow-sequence-action__action-description\"\n                                v-html=\"getActionDescriptions(item)\"\n                            >\n                            </div>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_flow_sequence_action_item_custom %}\n                            {% endblock %}\n\n                        </li>\n                        {% endblock %}\n                    </transition-group>\n                    {% endblock %}\n                </ul>\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_flow_sequence_action_add_select %}\n            <div\n                v-if=\"showAddAction && !disabled\"\n                class=\"sw-flow-sequence-action__select\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_flow_sequence_action_list %}\n                <sw-grouped-single-select\n                    class=\"sw-flow-sequence-action__selection-action\"\n                    size=\"small\"\n                    value=\"\"\n                    :placeholder=\"$tc('sw-flow.actions.placeholderSelectAction')\"\n                    :options=\"actionOptions\"\n                    :groups=\"groups\"\n                    :popover-classes=\"['sw-flow-sequence-action__popover']\"\n                    :error=\"fieldError\"\n                    :disabled=\"isUnknownTrigger\"\n                    @update:value=\"openDynamicModal\"\n                >\n                    <template #result-item=\"{ item, index, labelProperty, highlightSearchTerm, isSelected, setValue, getKey }\">\n                        <sw-select-result\n                            v-tooltip=\"{\n                                message: $tc('sw-flow.actions.tooltipActionDisabled'),\n                                disabled: !item.disabled\n                            }\"\n                            :selected=\"isSelected(item)\"\n                            v-bind=\"{ item, index }\"\n                            :class=\"[stopFlowStyle(item.value), {'sw-flow-sequence-action__disabled': item.disabled}]\"\n                            @item-select=\"setValue\"\n                        >\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_flow_sequence_action_select_results_list_result_label %}\n                            <sw-icon\n                                v-if=\"!item.iconRaw\"\n                                :name=\"`${item.icon}`\"\n                                size=\"12px\"\n                                class=\"sw-icon-action\"\n                            />\n\n                            <img\n                                v-else\n                                class=\"sw-flow-sequence-action__icon-raw\"\n                                :src=\"`data:image/png;base64, ${item.iconRaw}`\"\n                                alt=\"\"\n                            >\n\n                            <sw-highlight-text\n                                v-if=\"highlightSearchTerm\"\n                                :text=\"getKey(item, labelProperty)\"\n                            />\n\n                            <template v-else>\n                                {{ getKey(item, labelProperty) }}\n                            </template>\n                            {% endblock %}\n                        </sw-select-result>\n                    </template>\n                </sw-grouped-single-select>\n                {% endblock %}\n            </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <div\n        v-if=\"errorArrow\"\n        class=\"sw-flow-sequence-action__true-arrow\"\n    >\n        <div class=\"sw-flow-sequence-action__true-line\"></div>\n        <div class=\"sw-flow-sequence-action__oval\"></div>\n        <sw-icon\n            name=\"regular-chevron-right-s\"\n            small\n        />\n\n    </div>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_sequence_action_modal %}\n    <sw-flow-sequence-modal\n        :sequence=\"currentSequence\"\n        :action=\"selectedAction\"\n        :modal-name=\"modalName\"\n        @process-finish=\"onSaveActionSuccess\"\n        @modal-close=\"onCloseModal\"\n    />\n    {% endblock %}\n</div>\n{% endblock %}\n","import orderBy from 'lodash/orderBy';\nimport sortBy from 'lodash/sortBy';\nimport template from './sw-flow-sequence-action.html.twig';\nimport './sw-flow-sequence-action.scss';\n\nconst { Component, State, Mixin } = Cicada;\nconst utils = Cicada.Utils;\nconst { cloneDeep } = utils.object;\nconst { CicadaError } = Cicada.Classes;\nconst { mapState, mapGetters } = Component.getComponentHelper();\nconst { snakeCase } = utils.string;\n\n/**\n * @private\n * @package services-settings\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'flowBuilderService',\n        'feature',\n    ],\n\n    mixins: [\n        Mixin.getByName('sw-inline-snippet'),\n    ],\n\n    props: {\n        sequence: {\n            type: Object,\n            required: true,\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        isUnknownTrigger: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            fieldError: null,\n            selectedAction: '',\n            currentSequence: {},\n            appFlowActions: [],\n            isAppAction: false,\n        };\n    },\n\n    computed: {\n        sequenceRepository() {\n            return this.repositoryFactory.create('flow_sequence');\n        },\n\n        customFieldSetRepository() {\n            return this.repositoryFactory.create('custom_field_set');\n        },\n\n        actionOptions() {\n            const actions = this.availableActions.map((action) => {\n                return this.getActionTitle(action);\n            });\n\n            return this.sortActionOptions(actions);\n        },\n\n        groups() {\n            const groups = this.actionGroups.map((group) => {\n                return {\n                    id: group,\n                    label: this.$tc(`sw-flow.actions.group.${group}`),\n                };\n            });\n\n            if (this.appActions?.length) {\n                const action = this.appActions[0];\n                const appGroup = this.actionGroups.find((group) => group === action?.app?.name);\n                if (!appGroup) {\n                    groups.unshift({\n                        id: `${action?.app?.name[0].toLowerCase()}${action?.app?.name.slice(1)}`,\n                        label: action?.app?.label,\n                    });\n                }\n            }\n\n            return sortBy(groups, ['label']);\n        },\n\n        sequenceData() {\n            if (this.sequence.id) {\n                return [\n                    {\n                        ...this.sequence,\n                        ...this.getActionTitle(this.sequence.actionName),\n                    },\n                ];\n            }\n\n            return this.sortByPosition(\n                Object.values(this.sequence).map((item) => {\n                    return {\n                        ...item,\n                        ...this.getActionTitle(item.actionName),\n                    };\n                }),\n            );\n        },\n\n        showAddAction() {\n            return !(\n                this.sequence.actionName === this.stopFlowActionName ||\n                this.sequenceData.some((sequence) => sequence.actionName === this.stopFlowActionName)\n            );\n        },\n\n        stopFlowActionName() {\n            return this.flowBuilderService.getActionName('STOP_FLOW');\n        },\n\n        actionClasses() {\n            return {\n                'is--stop-flow': !this.showAddAction,\n                'has--arrow': this.errorArrow,\n            };\n        },\n\n        errorArrow() {\n            return !this.isValidAction(this.sequence) && this.sequence.actionName && this.sequence.trueBlock;\n        },\n\n        modalName() {\n            if (this.getSelectedAppAction(this.selectedAction)) {\n                return 'sw-flow-app-action-modal';\n            }\n\n            return this.flowBuilderService.getActionModalName(this.selectedAction);\n        },\n\n        currentLocale() {\n            return Cicada.State.get('session').currentLocale;\n        },\n\n        ...mapState('swFlowState', [\n            'invalidSequences',\n            'stateMachineState',\n            'documentTypes',\n            'mailTemplates',\n            'customerGroups',\n            'customFieldSets',\n            'customFields',\n            'triggerEvent',\n            'triggerActions',\n        ]),\n        ...mapGetters('swFlowState', [\n            'availableActions',\n            'actionGroups',\n            'sequences',\n            'appActions',\n            'getSelectedAppAction',\n        ]),\n    },\n\n    watch: {\n        sequence: {\n            handler() {\n                this.setFieldError();\n            },\n        },\n    },\n\n    methods: {\n        openDynamicModal(value) {\n            const appAction = this.getSelectedAppAction(value);\n            if (appAction) {\n                this.isAppAction = true;\n                this.currentSequence.propsAppFlowAction = appAction;\n            }\n\n            if (value === this.stopFlowActionName) {\n                this.addAction({\n                    name: this.stopFlowActionName,\n                    config: null,\n                });\n                return;\n            }\n            this.selectedAction = value;\n        },\n\n        onSaveActionSuccess(sequence) {\n            const { config, id } = sequence;\n            let entity = config?.entity;\n            let actionName = this.selectedAction;\n\n            const actionType = this.flowBuilderService.mapActionType(this.selectedAction);\n            if (actionType && entity) {\n                entity = snakeCase(entity).replace('_', '.');\n                actionName = actionType.replace('entity', entity);\n            }\n\n            if (!id) {\n                this.addAction({\n                    name: actionName,\n                    config: config,\n                });\n            } else {\n                this.editAction({\n                    name: actionName,\n                    config: config,\n                });\n            }\n\n            this.onCloseModal();\n        },\n\n        onCloseModal() {\n            this.currentSequence = {};\n            this.selectedAction = '';\n            this.isAppAction = false;\n            if (this.isCompatEnabled('INSTANCE_DELETE')) {\n                this.$delete(this.sequence, 'propsAppFlowAction');\n            } else {\n                delete this.sequence.propsAppFlowAction;\n            }\n        },\n\n        addAction(action) {\n            if (!action.name) {\n                return;\n            }\n\n            const appAction = this.getSelectedAppAction(action.name);\n\n            if (!this.sequence.actionName && this.sequence.id) {\n                const data = {\n                    id: this.sequence.id,\n                    actionName: action.name,\n                    config: action.config,\n                };\n\n                if (appAction) {\n                    data.appFlowActionId = appAction.id;\n                }\n\n                State.commit('swFlowState/updateSequence', data);\n            } else {\n                const lastSequence = this.sequenceData[this.sequenceData.length - 1];\n\n                let sequence = this.sequenceRepository.create();\n                const newSequence = {\n                    ...sequence,\n                    parentId: lastSequence.parentId,\n                    trueCase: lastSequence.trueCase,\n                    displayGroup: lastSequence.displayGroup,\n                    ruleId: null,\n                    actionName: action.name,\n                    position: lastSequence.position + 1,\n                    config: action.config,\n                    id: utils.createId(),\n                };\n\n                if (appAction) {\n                    newSequence.appFlowActionId = appAction.id;\n                }\n\n                sequence = Object.assign(sequence, newSequence);\n                State.commit('swFlowState/addSequence', sequence);\n            }\n\n            this.removeFieldError();\n        },\n\n        editAction(action) {\n            if (!action.name) {\n                return;\n            }\n\n            State.commit('swFlowState/updateSequence', {\n                id: this.currentSequence.id,\n                actionName: action.name,\n                config: action.config,\n            });\n        },\n\n        removeAction(id) {\n            const action = this.sequences.find((sequence) => sequence.id === id);\n            if (action?.id) {\n                const sequencesInGroup = this.sequences.filter(\n                    (item) => item.parentId === action.parentId && item.trueCase === action.trueCase && item.id !== id,\n                );\n\n                sequencesInGroup.forEach((item, index) => {\n                    State.commit('swFlowState/updateSequence', {\n                        id: item.id,\n                        position: index + 1,\n                    });\n                });\n            }\n\n            if (this.isAppDisabled(this.getSelectedAppAction(this.sequence[id]?.actionName))) return;\n\n            State.commit('swFlowState/removeSequences', [id]);\n        },\n\n        actionsWithoutStopFlow() {\n            // When action list only has 1 item, this.sequence has object type\n            if (this.sequence.id) {\n                return [\n                    {\n                        ...this.sequence,\n                    },\n                ];\n            }\n\n            const sequences = Object.values(this.sequence);\n            return this.sortByPosition(sequences.filter((sequence) => sequence.actionName !== this.stopFlowActionName));\n        },\n\n        showMoveOption(action, type) {\n            const actions = this.actionsWithoutStopFlow();\n            if (actions.length <= 1) return false;\n            if (type === 'up' && actions[0].position === action.position) return false;\n            if (type === 'down' && actions[actions.length - 1].position === action.position) return false;\n\n            return action.actionName !== this.stopFlowActionName;\n        },\n\n        moveAction(action, type, key) {\n            if (this.isAppDisabled(this.getSelectedAppAction(action.actionName))) return;\n\n            const actions = this.actionsWithoutStopFlow();\n            const currentIndex = actions.findIndex((item) => item.position === action.position);\n            const moveAction = type === 'up' ? actions[currentIndex - 1] : actions[currentIndex + 1];\n            const moveActionClone = cloneDeep(moveAction);\n\n            State.commit('swFlowState/updateSequence', {\n                id: moveAction.id,\n                position: action.position,\n            });\n            State.commit('swFlowState/updateSequence', {\n                id: action.id,\n                position: moveActionClone.position,\n            });\n\n            const index = type === 'up' ? key - 1 : key + 1;\n            const contextButtons = this.$refs.contextButton;\n            [\n                contextButtons[key],\n                contextButtons[index],\n            ] = [\n                contextButtons[index],\n                contextButtons[key],\n            ];\n        },\n\n        onEditAction(sequence, target, key) {\n            if (sequence.actionName && sequence.actionName === this.stopFlowActionName) {\n                return;\n            }\n\n            if (!this.hasAvailableAction(sequence.actionName)) {\n                return;\n            }\n\n            if (!sequence?.actionName || !target) {\n                return;\n            }\n\n            if (this.$refs.contextButton[key] && this.$refs.contextButton[key].$el.contains(target)) {\n                return;\n            }\n\n            if (this.isAppDisabled(this.getSelectedAppAction(sequence.actionName))) return;\n\n            sequence.propsAppFlowAction = this.getSelectedAppAction(sequence.actionName);\n            this.currentSequence = sequence;\n            this.selectedAction = sequence.actionName;\n        },\n\n        removeActionContainer() {\n            const removeSequences = this.sequence.id ? [this.sequence.id] : Object.keys(this.sequence);\n\n            State.commit('swFlowState/removeSequences', removeSequences);\n        },\n\n        getActionTitle(actionName) {\n            if (!actionName) {\n                return null;\n            }\n\n            const appAction = this.getSelectedAppAction(actionName);\n            if (appAction) {\n                return {\n                    label: appAction.label || appAction.translated?.label,\n                    icon: appAction.swIcon,\n                    iconRaw: appAction.icon,\n                    value: appAction.name,\n                    disabled: !appAction.app?.active,\n                    group: `${appAction.app?.name[0].toLowerCase()}${appAction.app?.name.slice(1)}`,\n                };\n            }\n\n            const actionTitle = this.flowBuilderService.getActionTitle(actionName);\n            return {\n                ...actionTitle,\n                label: this.$tc(actionTitle.label),\n                group: this.flowBuilderService.getActionGroupMapping(actionName),\n            };\n        },\n\n        sortByPosition(sequences) {\n            return sequences.sort((prev, current) => {\n                return prev.position - current.position;\n            });\n        },\n\n        stopFlowStyle(value) {\n            return {\n                'is--stop-flow': value === this.stopFlowActionName,\n            };\n        },\n\n        getActionDescriptions(sequence) {\n            if (!sequence.actionName) return '';\n\n            const data = {\n                appActions: this.appActions,\n                customerGroups: this.customerGroups,\n                customFieldSets: this.customFieldSets,\n                customFields: this.customFields,\n                stateMachineState: this.stateMachineState,\n                documentTypes: this.documentTypes,\n                mailTemplates: this.mailTemplates,\n            };\n\n            return this.flowBuilderService.getActionDescriptions(data, sequence, this);\n        },\n\n        setFieldError() {\n            if (!this.invalidSequences?.includes(this.sequence.id)) {\n                this.fieldError = null;\n                return;\n            }\n\n            this.fieldError = new CicadaError({\n                code: 'c1051bb4-d103-4f74-8988-acbcafc7fdc3',\n            });\n        },\n\n        removeFieldError() {\n            if (!this.fieldError) {\n                return;\n            }\n\n            this.fieldError = null;\n            const invalidSequences = this.invalidSequences?.filter((id) => this.sequence.id !== id);\n            State.commit('swFlowState/setInvalidSequences', invalidSequences);\n        },\n\n        isNotStopFlow(item) {\n            return item.actionName !== this.stopFlowActionName;\n        },\n\n        capitalize(msg) {\n            return `${msg.slice(0, 1).toUpperCase()}${msg.slice(1)}`;\n        },\n\n        isAppDisabled(appAction) {\n            if (!appAction) return false;\n            return !appAction.app.active;\n        },\n\n        getStopFlowIndex(actions) {\n            const indexes = actions\n                .map((item, index) => {\n                    if (item.group === this.flowBuilderService.getGroup('GENERAL')) {\n                        return index;\n                    }\n\n                    return false;\n                })\n                .filter((item) => item > 0);\n\n            return indexes.pop() || actions.length;\n        },\n\n        sortActionOptions(actions) {\n            const stopAction = actions.pop();\n            actions = orderBy(actions, [\n                'group',\n                'label',\n            ]);\n\n            actions.forEach((action) => {\n                if (action.group && action.group !== this.flowBuilderService.getGroup('GENERAL')) return;\n\n                action.group = action.group || this.flowBuilderService.getGroup('GENERAL');\n\n                // eslint-disable-next-line max-len\n                actions.push(\n                    actions.splice(\n                        actions.findIndex((el) => el.group === this.flowBuilderService.getGroup('GENERAL')),\n                        1,\n                    )[0],\n                );\n            });\n\n            actions = sortBy(\n                actions,\n                [\n                    'group',\n                    'label',\n                ],\n                [\n                    'esc',\n                    'esc',\n                ],\n            );\n            const stopFlowIndex = this.getStopFlowIndex(actions) + 1;\n            actions.splice(stopFlowIndex, 0, stopAction);\n\n            return actions;\n        },\n\n        hasAvailableAction(actionName) {\n            return this.availableActions.includes(actionName);\n        },\n\n        isValidAction(actionName) {\n            return actionName && this.hasAvailableAction(actionName);\n        },\n    },\n};\n"],"names":["baseFor","require$$0","keys","require$$1","baseForOwn","object","iteratee","_baseForOwn","isArrayLike","createBaseEach","eachFunc","fromRight","collection","length","index","iterable","_createBaseEach","baseEach","_baseEach","baseMap","result","value","key","_baseMap","baseSortBy","array","comparer","_baseSortBy","isSymbol","compareAscending","other","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","_compareAscending","compareMultiple","orders","objCriteria","othCriteria","ordersLength","order","_compareMultiple","arrayMap","baseGet","baseIteratee","require$$2","require$$3","require$$4","baseUnary","require$$5","require$$6","identity","require$$7","isArray","require$$8","baseOrderBy","iteratees","criteria","_baseOrderBy","orderBy","guard","orderBy_1","baseFlatten","baseRest","isIterateeCall","sortBy","sortBy_1","template","Component","State","Mixin","utils","cloneDeep","CicadaError","mapState","mapGetters","snakeCase","actions","action","groups","group","_a","_b","_c","_d","item","sequence","appAction","config","id","entity","actionName","actionType","data","lastSequence","newSequence","sequences","type","currentIndex","moveAction","moveActionClone","contextButtons","target","removeSequences","actionTitle","prev","current","invalidSequences","msg","stopAction","el","stopFlowIndex"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}