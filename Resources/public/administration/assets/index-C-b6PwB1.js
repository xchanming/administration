const o=`<sw-modal v-if="display" class="sw-app-wrong-app-url-modal" variant="large" :title="$tc('sw-app.component.sw-app-wrong-app-url-modal.title')" @modal-close="closeModal" > <template #default> <div class="sw-app-wrong-app-url-modal__content-description"> <img class="sw-app-wrong-app-url-modal__content-image" :src="assetFilter('administration/static/img/empty-states/extensions-empty-state.svg')" alt="" > <h3>{{ $tc('sw-app.component.sw-app-wrong-app-url-modal.explanationHeader') }}</h3> <div> {{ $tc('sw-app.component.sw-app-wrong-app-url-modal.explanation') }} </div> <br> <div> {{ $tc('sw-app.component.sw-app-wrong-app-url-modal.textGetSupport') }} </div> <sw-button class="sw-app-wrong-app-url-modal__content-link-button" variant="ghost" :link="$tc('sw-app.component.sw-app-wrong-app-url-modal.linkToDocsArticle')" > {{ $tc('sw-app.component.sw-app-wrong-app-url-modal.labelLearnMoreButton') }} </sw-button> <div class="sw-app-wrong-app-url_modal__content-description-technical-details"> {{ $tc('sw-app.component.sw-app-wrong-app-url-modal.textDetails') }} </div> </div> </template> </sw-modal>`,{mapState:p}=Cicada.Component.getComponentHelper(),{Component:e}=Cicada,t="sw-app-wrong-app-url-modal-shown";e.register("sw-app-wrong-app-url-modal",{template:o,compatConfig:Cicada.compatConfig,emits:["modal-close"],mixins:[Cicada.Mixin.getByName("notification")],data(){return{wasModalAlreadyShown:!!localStorage.getItem(t),notification:{title:this.$tc("sw-app.component.sw-app-wrong-app-url-modal.title"),message:`${this.$tc("sw-app.component.sw-app-wrong-app-url-modal.explanation")}<br>
                     ${this.$tc("sw-app.component.sw-app-wrong-app-url-modal.textGetSupport")}`,actions:[{label:this.$tc("sw-app.component.sw-app-wrong-app-url-modal.labelLearnMoreButton"),route:this.$tc("sw-app.component.sw-app-wrong-app-url-modal.linkToDocsArticle")}],uuid:t}}},computed:{...p("context",{isAppUrlReachable:a=>a.app.config.settings.appUrlReachable,hasAppsThatRequireAppUrl:a=>a.app.config.settings.appsRequireAppUrl}),display(){return!this.isAppUrlReachable&&this.hasAppsThatRequireAppUrl&&!this.wasModalAlreadyShown},assetFilter(){return Cicada.Filter.getByName("asset")}},created(){!this.display&&!this.isAppUrlReachable&&this.createAlertNotification(),this.isAppUrlReachable&&(localStorage.removeItem(t),this.removeAlertNotification())},methods:{closeModal(){localStorage.setItem(t,"true"),this.wasModalAlreadyShown=!0,this.createAlertNotification(),this.$emit("modal-close")},createAlertNotification(){this.createSystemNotificationInfo(this.notification)},removeAlertNotification(){Cicada.State.commit("notification/removeNotification",this.notification)}}});
//# sourceMappingURL=index-C-b6PwB1.js.map
