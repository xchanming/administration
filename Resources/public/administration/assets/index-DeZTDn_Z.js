const d=`{% block sw_custom_field_set_renderer %} <div class="sw-custom-field-set-renderer"> <template v-if="visibleCustomFieldSets.length > 0"> {% block sw_custom_field_set_renderer_card %} <sw-tabs v-if="variant === 'tabs'" ref="tabComponent" class="sw-custom-field-set-renderer__card-tabs" variant="minimal" :default-item="visibleCustomFieldSets[0].id" :position-identifier="'sw-custom-field-set-renderer'" @new-item-active="(tab) => loadCustomFieldSet(tab.name)" > {% block sw_custom_field_set_renderer_card_tabs %} <template #default="{ active }"> <template v-for="set in visibleCustomFieldSets" :key="\`sw-tab--\${set.id}\`" > <sw-tabs-item variant="minimal" :name="set.id" :class="'sw-tab--name-' + set.name" :active-tab="active" > {{ getTabLabel(set) }} </sw-tabs-item> </template> </template> {% endblock %} {% block sw_custom_field_set_renderer_card_tabs_content %} <template #content="{ active }" > <template v-for="set in visibleCustomFieldSets" :key="set.id" > <div v-show="active === set.id" :class="'sw-custom-field-set-renderer-tab-content__' + set.name" > {% block sw_custom_field_set_renderer_card_form_renderer %} <sw-skeleton v-if="!set.customFields" style="width:100%" /> <template v-else> <template v-for="customField in set.customFields" :key="customField.name" > <sw-inherit-wrapper v-if="entity && customField.config" v-model:value="customFields[customField.name]" v-bind="getInheritWrapperBind(customField)" :class="'sw-form-field-renderer-field__' + customField.name" :has-parent="hasParent" :required="customField.config.validation === 'required'" :inherited-value="getInheritedCustomField(customField.name)" > <template #content="props"> <sw-form-field-renderer v-bind="getBind(customField, props)" :key="props.isInherited" :class="'sw-form-field-renderer-input-field__' + customField.name" :disabled="disabled || props.isInherited" :value="props.currentValue" @update:value="props.updateCurrentValue" /> </template> </sw-inherit-wrapper> </template> </template> {% endblock %} </div> </template> </template> {% endblock %} </sw-tabs> {% endblock %} {% block sw_custom_field_set_renderer_media %} <template v-else-if="variant === 'media-collapse'"> <template v-for="set in visibleCustomFieldSets" :key="\`sw-media-collapse--\${set.id}\`" > <sw-media-collapse v-if="set.customFields && set.customFields.length > 0" :expand-on-loading="false" :title="getInlineSnippet(set.config.label) || set.name" > <template #content> <template v-for="customField in set.customFields" :key="customField.name" > {% block sw_custom_field_set_renderer_media_form_renderer %} <sw-form-field-renderer v-bind="customField" v-model:value="customFields[customField.name]" :disabled="disabled" :required="customField.config.validation === 'required'" /> {% endblock %} </template> {% block sw_custom_field_set_renderer_media_button_save %} <sw-button-process :is-loading="isLoading" :process-success="isSaveSuccessful" :disabled="isLoading || disabled" variant="primary" size="small" @update:process-success="$emit('process-finish')" @click="$emit('save')" > {{ $tc('global.default.save') }} </sw-button-process> {% endblock %} </template> </sw-media-collapse> </template> </template> {% endblock %} </template> </div> {% endblock %}`,{Component:c,Mixin:o}=Shopware,{Criteria:l}=Shopware.Data;c.register("sw-custom-field-set-renderer",{template:d,inject:["feature","repositoryFactory"],provide(){return{getEntity:this.entity,getParentEntity:this.parentEntity,getCustomFieldSet:this.set,getCustomFieldSetVariant:this.variant}},emits:["process-finish","save","change-active-selection"],mixins:[o.getByName("sw-inline-snippet"),o.getByName("placeholder")],props:{sets:{type:Array,required:!0},entity:{type:Object,required:!0},parentEntity:{type:Object,required:!1,default:null},variant:{type:String,required:!1,default:"tabs",validValues:["tabs","media-collapse"],validator(e){return e.length?["tabs","media-collapse"].includes(e):!0}},disabled:{type:Boolean,default:!1,required:!1},isLoading:{type:Boolean,default:!1,required:!1},isSaveSuccessful:{type:Boolean,default:!1,required:!1},showCustomFieldSetSelection:{type:Boolean,default:!1,require:!1}},data(){return{customFields:{},loadingFields:[],tabWaitMaxAttempts:10,tabWaitsAttempts:0,refreshVisibleSets:!1}},computed:{hasParent(){return this.parentEntity?!!this.parentEntity.id:!1},visibleCustomFieldSets(){return this.sortSets(this.sets)},customFieldSetRepository(){return this.repositoryFactory.create("custom_field_set")},customFieldSetCriteria(){const e=new l(1,null);return e.addFilter(l.equals("relations.entityName",this.entity.getEntityName())),e.addFilter(l.equals("global",0)),e.addSorting(l.sort("config.customFieldPosition","ASC",!0)),e},globalCustomFieldSets(){return this.sets.filter(e=>e.global)},componentsWithMapInheritanceSupport(){return["sw-text-field","sw-textarea-field","sw-select-field","sw-checkbox-field","sw-switch-field","sw-number-field","sw-datepicker","sw-email-field","sw-url-field","sw-password-field","sw-radio-field","sw-colorpicker","sw-compact-colorpicker","sw-price-field","sw-tagged-field","sw-field"]}},watch:{"entity.customFieldSetSelectionActive":{handler(e){this.onChangeCustomFieldSetSelectionActive(e)},deep:!0},"entity.customFieldsSets":{handler(){this.onChangeCustomFieldSets()}},entity:{handler(){this.initializeCustomFields()},deep:!0},customFields:{handler(e){this.entity.customFields=e},deep:!0}},created(){this.createdComponent()},methods:{createdComponent(){this.initializeCustomFields(),this.onChangeCustomFieldSets()},initializeCustomFields(){this.entity.customFields&&(this.customFields=this.entity.customFields)},getInheritedCustomField(e){var n,r,a;const i=((a=(r=(n=this.parentEntity)==null?void 0:n.translated)==null?void 0:r.customFields)==null?void 0:a[e])??null;if(i)return i;switch(this.getCustomFieldInformation(e).type){case"select":return[];case"bool":return!1;case"html":case"datetime":case"text":return"";case"float":case"int":return 0;default:return null}},getCustomFieldInformation(e){let i;return this.sets.some(t=>t.customFields.some(s=>{const n=s.name===e;return n&&(i=s),n})),i},getInheritValue(e){var t,s,n;const i=((s=(t=this.parentEntity)==null?void 0:t.translated)==null?void 0:s[e])??null;return i||(((n=this.parentEntity)==null?void 0:n[e])??null)},getParentCustomFieldSetSelectionSwitchState(){const e=this.parentEntity;return e&&e.hasOwnProperty("customFieldSets")?e.customFieldSets.length>0:null},supportsMapInheritance(e){const i=e.config.componentName;return e.config.customFieldType==="date"?!1:this.componentsWithMapInheritanceSupport.includes(i)},getBind(e,i){const t=Shopware.Utils.object.cloneDeep(e);if(t.type==="bool"&&(t.config.bordered=!0),this.supportsMapInheritance(t))return t.mapInheritance=i,t;if(t.config.customFieldType==="entity"&&t.config.entity==="product"){const s=new l(1,25);s.addAssociation("options.group"),t.config.criteria=s,t.config.displayVariants=!0}return delete t.config.label,delete t.config.helpText,t},getInheritWrapperBind(e){return this.supportsMapInheritance(e)?{}:{helpText:this.getInlineSnippet(e.config.helpText)||"",label:this.getInlineSnippet(e.config.label)||" "}},customFieldSetCriteriaById(){const e=new l(1,1);return e.getAssociation("customFields").addSorting(l.naturalSorting("config.customFieldPosition")),e},loadCustomFieldSet(e){if(this.loadingFields.includes(e))return;const i=this.sets.get?this.sets.get(e):this.sets.find(t=>t.id===e);i.customFields&&i.customFields.length>0||(this.loadingFields.push(e),this.customFieldSetRepository.get(e,Shopware.Context.api,this.customFieldSetCriteriaById()).then(t=>{this.sets.forEach((s,n)=>{s.id===t.id&&(this.sets[n]=t)}),this.loadingFields=this.loadingFields.filter(s=>s.id!==e)}).catch(t=>{console.error(t),this.loadingFields=this.loadingFields.filter(s=>s.id!==e)}))},resetTabs(){this.visibleCustomFieldSets.length>0&&this.$refs.tabComponent&&(this.$refs.tabComponent.mountedComponent(),this.$refs.tabComponent.setActiveItem({name:this.visibleCustomFieldSets[0].id}))},waitForTabComponent(){return this.$refs.tabComponent||this.tabWaitsAttempts>this.tabWaitMaxAttempts?this.resetTabs():this.$nextTick(()=>{this.tabWaitsAttempts+=1,this.waitForTabComponent()})},getTabLabel(e){return e.config&&this.getInlineSnippet(e.config.label)?this.getInlineSnippet(e.config.label):e.name},onChangeCustomFieldSets(e,i){!this.$refs.tabComponent&&(this.visibleCustomFieldSets.length>0||e)?this.waitForTabComponent():this.resetTabs(),typeof i=="function"&&i(e)},onChangeCustomFieldSetSelectionActive(e){if(this.onChangeCustomFieldSets(),!e){if(!this.entity.customFieldSets){this.initializeCustomFields();return}this.entity.customFieldSets=this.entity.customFieldSets.filter(()=>!1)}},sortSets(e){return e.sort((i,t)=>i.position-t.position)},onUpdateActiveSelection(e){this.$emit("change-active-selection",e)}}});
