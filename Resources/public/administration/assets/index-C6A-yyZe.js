const s=`{% block sw_sidebar_media_item %} <sw-sidebar-item ref="sidebarItem" class="sw-sidebar-media-item" icon="regular-image" :title="$tc('global.sw-sidebar-media-item.title')" :disabled="disabled" > {% block sw_sidebar_media_item_content %} <div class="sw-sidebar-media-item__content"> {% block sw_sidebar_media_item_search_field %} <sw-simple-search-field v-model:value="term" @search-term-change="onSearchTermChange" /> {% endblock %} {% block sw_sidebar_media_item_folder_navigation %} <sw-media-breadcrumbs v-if="!term.length" v-model:current-folder-id="mediaFolderId" small /> {% endblock %} {% block sw_sidebar_media_item_media_item_list %} {% block sw_sidebar_media_item_media_item_list_folder_item %} <sw-media-folder-item v-for="folder in subFolders" v-if="!term.length" :key="folder.id" :item="folder" :show-selection-indicator="false" :show-context-menu-button="true" :selected="false" :is-list="true" @media-item-click="onNavigateToFolder(folder.id)" @media-folder-delete="handleFolderGridItemDelete" /> {% endblock %} {% block sw_sidebar_media_item_media_item_list_media_item %} <sw-media-media-item v-for="mediaItem in mediaItems" :key="mediaItem.id" v-draggable="{ dragGroup: 'media', data: { mediaItem } }" :item="mediaItem" :show-selection-indicator="false" :show-context-menu-button="true" :selected="false" :is-list="true" @media-item-delete="handleMediaGridItemDelete" > {% block sw_sidebar_media_item_context_items %} <slot name="context-menu-items" :media-item="mediaItem" ></slot> {% endblock %} </sw-media-media-item> {% endblock %} {% block sw_sidebar_media_item_load_more_button %} <sw-button v-if="showMore" size="small" block class="sw-sidebar-media-item__load-more-button" @click="onLoadMore" > {{ $tc('global.sw-sidebar-media-item.labelLoadMore') }} </sw-button> {% endblock %} {% endblock %} {% block sw_sidebar_media_item_loader %} <sw-loader v-if="isLoading" /> {% endblock %} </div> {% endblock %} </sw-sidebar-item> {% endblock %}`,{Context:a}=Shopware,{Criteria:t}=Shopware.Data,d={template:s,inject:["repositoryFactory"],props:{initialFolderId:{type:String,required:!1,default:null},isParentLoading:{type:Boolean,required:!1,default:!1},disabled:{type:Boolean,required:!1,default:!1}},data(){return{isLoading:!0,mediaFolderId:this.initialFolderId,mediaItems:[],subFolders:[],page:1,limit:25,total:0,term:""}},computed:{mediaRepository(){return this.repositoryFactory.create("media")},mediaFolderRepository(){return this.repositoryFactory.create("media_folder")},showMore(){return this.itemsLoaded<this.total},itemsLoaded(){return this.mediaItems.length}},watch:{initialFolderId(){this.mediaFolderId=this.initialFolderId},mediaFolderId(){this.initializeContent()},isParentLoading(){this.getList()}},created(){this.createdComponent()},methods:{createdComponent(){this.initializeContent()},onSearchTermChange(e){this.term=e,this.page=1,this.getList()},initializeContent(){this.disabled||(this.page=1,this.term="",this.mediaItems=[],this.getSubFolders(),this.getList())},async getSubFolders(){const e=new t(1,50);e.addFilter(t.equals("parentId",this.mediaFolderId));const i=await this.mediaFolderRepository.search(e,a.api);return this.subFolders=i,i},handleFolderGridItemDelete(){this.getSubFolders()},handleMediaGridItemDelete(){const e=this.page;this.page=1,this.getList().then(()=>{for(;this.page<e;)this.page+=1,this.extendList()})},onLoadMore(){this.page+=1,this.extendList()},async extendList(){const e=this.getListingCriteria(),i=await this.mediaRepository.search(e,a.api);return this.mediaItems=this.mediaItems.concat(i),this.mediaItems},async getList(){if(this.isParentLoading===!0)return null;this.isLoading=!0;const e=this.getListingCriteria();return this.mediaItems=await this.mediaRepository.search(e,a.api),this.total=this.mediaItems.total,this.isLoading=!1,this.mediaItems},getListingCriteria(){const e=new t(this.page,this.limit);return this.term.length||e.addFilter(t.equals("mediaFolderId",this.mediaFolderId)),this.term&&(e.term=this.term),e.addSorting(t.sort("uploadedAt","DESC")),e},openContent(){this.$refs.sidebarItem.openContent()},onNavigateToFolder(e){this.mediaFolderId=e}}};export{d as default};
