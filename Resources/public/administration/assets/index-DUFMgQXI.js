import{C as l}from"./index-COhH-xOb.js";import"./administration-BlrHhDOI.js";import"./main.vite-GBE0T_D3.js";import"./channel-DxwX5hMG.js";import"./user-config.class-C-zJul6z.js";const m=`{% block sw_cms_page_form %} <div v-responsive="{ 'is--compact': el => el.width <= 1620, timeout: 100 }" class="sw-cms-page-form" > {% block sw_cms_page_form_content %} <template v-for="section in page.sections" :key="section.id" > {% block sw_cms_page_form_section %} <div class="sw-cms-page-form__section" > <div class="sw-cms-page-form__section-actions"> {% block sw_cms_page_form_section_name_wrapper %} <div class="sw-cms-page-form__section-action sw-cms-page-form__section-name"> {% block sw_cms_page_form_section_name_icon %} <sw-icon name="regular-layout" size="20" class="sw-cms-page-form__section-action-icon sw-cms-page-form__section-name-icon" /> {% endblock %} {% block sw_cms_page_form__section_name %} <span class="sw-cms-page-form__section-action-label sw-cms-page-form__section-name-label"> {{ getSectionName(section) }} </span> {% endblock %} <div class="sw-cms-page-form__device-actions"> <sw-icon :name="getDeviceActive('mobile', section)" /> <sw-icon :name="getDeviceActive('tablet', section)" /> <sw-icon :name="getDeviceActive('desktop', section)" /> </div> </div> {% endblock %} </div> {% block sw_cms_page_form_section_empty_state_block %} <sw-card v-if="section.blocks.length === 0" position-identifier="sw-cms-page-form-empty" class="sw-cms-page-form__block-card is--empty" > {% block sw_cms_page_form_section_empty_state_block_text %} <p class="sw-cms-page-form__empty-state-text"> {{ $tc('sw-cms.section.sectionEmptyState') }} </p> {% endblock %} </sw-card> {% endblock %} <template v-for="(block, index) in section.blocks" v-else :key="block.id" > {% block sw_cms_page_form_section_type_label_wrapper %} <div v-if="displaySectionType(block)" class="sw-cms-page-form__section-type" > {% block sw_cms_page_form_section_type_label %} <div class="sw-cms-page-form__section-type-label"> {% block sw_cms_page_form_section_type_label_icon %} <sw-icon v-if="block.sectionPosition !== 'main'" size="20" name="regular-align-left-xs" class="sw-cms-page-form__section-type-icon" /> <sw-icon v-else size="20" name="regular-align-right-xs" class="sw-cms-page-form__section-type-icon" /> {% endblock %} {% block sw_cms_page_form_section_type %} <span class="sw-cms-page-form__section-type-name"> {{ getSectionPosition(block) }} </span> {% endblock %} </div> {% endblock %} <hr class="sw-cms-page-form__section-divider"> </div> {% endblock %} {% block sw_cms_page_form_card %} <sw-card position-identifier="sw-cms-page-form-block" class="sw-cms-page-form__block-card" :title="$tc(getBlockTitle(block))" > <template #header-right> <div class="sw-cms-page-form__block-device-actions"> <sw-icon :name="getDeviceActive('mobile', section, block)" /> <sw-icon :name="getDeviceActive('tablet', section, block)" /> <sw-icon :name="getDeviceActive('desktop', section, block)" /> </div> </template> {% block sw_cms_page_form_card_content %} <div v-for="(element, blockIndex) in block.slots" :key="blockIndex" class="sw-cms-page-form__element-config" > <template v-if="displayNotification(section, block)"> <sw-alert variant="info"> {{ $tc('sw-cms.blocks.blockDisableState') }} </sw-alert> </template> {% block sw_cms_page_form_element_config %} <component :is="cmsElements[element.type].configComponent" :element="element" :element-data="cmsElements[element.type]" @element-update="elementUpdate" /> {% endblock %} </div> {% endblock %} </sw-card> {% endblock %} </template> </div> {% endblock %} </template> {% endblock %} </div> {% endblock %}`,g=Cicada.Component.wrapComponentConfig({template:m,compatConfig:Cicada.compatConfig,inject:["cmsService"],props:{page:{type:Object,required:!0},elementUpdate:{type:Function,required:!1,default:()=>{}}},computed:{cmsBlocks(){return this.cmsService.getCmsBlockRegistry()},cmsElements(){return this.cmsService.getCmsElementRegistry()},slotPositions(){return l.SLOT_POSITIONS}},created(){this.createdComponent()},methods:{createdComponent(){this.page.sections.forEach(e=>{e.blocks.forEach(s=>{s.slots.sort((t,o)=>{const c=this.slotPositions[t.slot]??this.slotPositions.default,n=this.slotPositions[o.slot]??this.slotPositions.default;return c-n}),s.visibility||(s.visibility={mobile:!0,tablet:!0,desktop:!0})}),e.visibility||(e.visibility={mobile:!0,tablet:!0,desktop:!0})})},getBlockTitle(e){return typeof e.name=="string"&&e.name.length!==0?e.name:this.cmsBlocks[e.type]?this.cmsBlocks[e.type].label:""},displaySectionType(e){const s=this.page.sections.find(i=>i.id===e.sectionId);if(!s)return!1;const t=s.blocks;return t.filter(i=>i.sectionPosition!==e.sectionPosition).length===0?!1:t.filter(i=>i.sectionPosition===e.sectionPosition).reduce((i,a)=>a.position<i.position?a:i,e).id===e.id},getSectionName(e){return e.name?e.name:e.type==="sidebar"?this.$tc("sw-cms.section.isSidebar"):this.$tc("sw-cms.section.isDefault")},getSectionPosition(e){return e.sectionPosition==="main"?this.$tc("sw-cms.section.positionRight"):this.$tc("sw-cms.section.positionLeft")},getDeviceActive(e,s,t=null){const o=s.visibility,c=t==null?void 0:t.visibility;return(c?o[e]&&c[e]:o[e])?`regular-${e}`:`regular-${e}-slash`},displayNotification(e,s){const t=e.visibility,o=s==null?void 0:s.visibility,c=!(Object.values(t).indexOf(!0)>-1),n=!(Object.values(o).indexOf(!0)>-1);return c||n}}});export{g as default};
//# sourceMappingURL=index-DUFMgQXI.js.map
