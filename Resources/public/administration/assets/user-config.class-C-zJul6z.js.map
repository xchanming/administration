{"version":3,"file":"user-config.class-C-zJul6z.js","sources":["../../../app/administration/src/core/service/support/user-config.class.ts"],"sourcesContent":["/**\n * @package admin\n */\nimport type { Entity } from '@cicada-ag/meteor-admin-sdk/es/_internals/data/Entity';\n\nconst { Context, Data, Service, State } = Cicada;\nconst { Criteria } = Data;\n\nenum USER_CONFIG_PERMISSIONS {\n    READ = 'user_config:read',\n    CREATE = 'user_config:create',\n    UPDATE = 'user_config:update',\n}\n\nabstract class UserConfigClass {\n    private userConfigRepository = Service('repositoryFactory').create('user_config');\n\n    private currentUserId = this.getCurrentUserId();\n\n    protected userConfig = this.createUserConfigEntity(this.getConfigurationKey());\n\n    private aclService = Service('acl');\n\n    constructor() {\n        void this.readUserConfig();\n    }\n\n    /**\n     * Copy user configuration into the service state.\n     */\n    protected abstract readUserConfig(): Promise<void>;\n\n    /**\n     * Copy the service state into the user configuration.\n     */\n    protected abstract setUserConfig(): void;\n\n    /**\n     * Returns the configuration key that is managed.\n     */\n    protected abstract getConfigurationKey(): string;\n\n    public refresh(): void {\n        this.userConfig = this.createUserConfigEntity(this.getConfigurationKey());\n        void this.readUserConfig();\n    }\n\n    protected async getUserConfig(): Promise<Entity<'user_config'>> {\n        if (!this.aclService.can(USER_CONFIG_PERMISSIONS.READ)) {\n            return this.userConfig;\n        }\n\n        const response = await this.userConfigRepository.search(this.getCriteria(this.getConfigurationKey()), Context.api);\n\n        const userConfig = response.first() || this.userConfig;\n\n        return this.handleEmptyUserConfig(userConfig);\n    }\n\n    protected async saveUserConfig(): Promise<void> {\n        if (!this.aclService.can(USER_CONFIG_PERMISSIONS.CREATE) || !this.aclService.can(USER_CONFIG_PERMISSIONS.UPDATE)) {\n            return;\n        }\n\n        this.setUserConfig();\n\n        await this.userConfigRepository.save(this.userConfig, Context.api);\n        await this.readUserConfig();\n    }\n\n    private createUserConfigEntity(configKey: string): Entity<'user_config'> {\n        const entity = this.userConfigRepository.create(Context.api);\n\n        if (!entity) {\n            throw new Error('Could not create user config entity');\n        }\n\n        Object.assign(entity, {\n            userId: this.currentUserId,\n            key: configKey,\n            value: [],\n        });\n\n        return entity;\n    }\n\n    private handleEmptyUserConfig(userConfig: Entity<'user_config'>): Entity<'user_config'> {\n        if (!Array.isArray(userConfig?.value)) {\n            userConfig.value = [];\n        }\n\n        return userConfig;\n    }\n\n    private getCriteria(configKey: string): InstanceType<typeof Criteria> {\n        const criteria = new Criteria(1, 25);\n\n        criteria.addFilter(Criteria.equals('key', configKey));\n        criteria.addFilter(Criteria.equals('userId', this.currentUserId));\n\n        return criteria;\n    }\n\n    private getCurrentUserId(): string {\n        return State.get('session').currentUser.id;\n    }\n}\n\n/**\n * @private\n */\nexport { UserConfigClass as default };\n"],"names":["Context","Data","Service","State","Criteria","UserConfigClass","userConfig","configKey","entity","criteria"],"mappings":"AAKA,KAAM,CAAE,QAAAA,EAAS,KAAAC,EAAM,QAAAC,EAAS,MAAAC,GAAU,OACpC,CAAE,SAAAC,CAAa,EAAAH,EAQrB,MAAeI,CAAgB,CAS3B,aAAc,CARd,KAAQ,qBAAuBH,EAAQ,mBAAmB,EAAE,OAAO,aAAa,EAExE,KAAA,cAAgB,KAAK,mBAE7B,KAAU,WAAa,KAAK,uBAAuB,KAAK,qBAAqB,EAErE,KAAA,WAAaA,EAAQ,KAAK,EAGzB,KAAK,gBACd,CAiBO,SAAgB,CACnB,KAAK,WAAa,KAAK,uBAAuB,KAAK,qBAAqB,EACnE,KAAK,gBACd,CAEA,MAAgB,eAAgD,CAC5D,GAAI,CAAC,KAAK,WAAW,IAAI,oBACrB,OAAO,KAAK,WAKhB,MAAMI,GAFW,MAAM,KAAK,qBAAqB,OAAO,KAAK,YAAY,KAAK,oBAAqB,CAAA,EAAGN,EAAQ,GAAG,GAErF,MAAM,GAAK,KAAK,WAErC,OAAA,KAAK,sBAAsBM,CAAU,CAChD,CAEA,MAAgB,gBAAgC,CACxC,CAAC,KAAK,WAAW,IAAI,oBAAA,GAAmC,CAAC,KAAK,WAAW,IAAI,wBAIjF,KAAK,cAAc,EAEnB,MAAM,KAAK,qBAAqB,KAAK,KAAK,WAAYN,EAAQ,GAAG,EACjE,MAAM,KAAK,iBACf,CAEQ,uBAAuBO,EAA0C,CACrE,MAAMC,EAAS,KAAK,qBAAqB,OAAOR,EAAQ,GAAG,EAE3D,GAAI,CAACQ,EACK,MAAA,IAAI,MAAM,qCAAqC,EAGzD,cAAO,OAAOA,EAAQ,CAClB,OAAQ,KAAK,cACb,IAAKD,EACL,MAAO,CAAC,CAAA,CACX,EAEMC,CACX,CAEQ,sBAAsBF,EAA0D,CACpF,OAAK,MAAM,QAAQA,GAAA,YAAAA,EAAY,KAAK,IAChCA,EAAW,MAAQ,IAGhBA,CACX,CAEQ,YAAYC,EAAkD,CAClE,MAAME,EAAW,IAAIL,EAAS,EAAG,EAAE,EAEnC,OAAAK,EAAS,UAAUL,EAAS,OAAO,MAAOG,CAAS,CAAC,EACpDE,EAAS,UAAUL,EAAS,OAAO,SAAU,KAAK,aAAa,CAAC,EAEzDK,CACX,CAEQ,kBAA2B,CAC/B,OAAON,EAAM,IAAI,SAAS,EAAE,YAAY,EAC5C,CACJ"}