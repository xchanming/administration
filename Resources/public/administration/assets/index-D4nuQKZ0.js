const __vite__fileDeps=["assets/index-B4Wra5lE.js","assets/index-DAcfF5RE.css","assets/index-B4ovYNUD.js","assets/index-dxzTazBe.css","assets/index-CsZ8KSFS.js","assets/index-B_P89Gqp.css","assets/index-D4vdoPwr.js","assets/administration-DCOj2uiN.js","assets/administration-DZ0QGn6e.css","assets/api.service-C76VAMec.js","assets/channel-oRk5-XZJ.js","assets/index-CvWmV638.css","assets/index-BK6t9fVt.js","assets/sw-extension-permissions-details-modal.html-Bo4FCniC.js","assets/index-DzPBrKoR.css","assets/index-LVmtmfP_.js","assets/index-0JhLXL3z.css","assets/index-oveikqpQ.js","assets/index-DnYvTDSJ.css","assets/index-B7Ie67B9.js","assets/index-kRAtUTgv.js","assets/index-Cj9Quosj.css","assets/index-Dh89FMcz.js","assets/index-DSCojFEj.css","assets/index-DTCkB3oQ.js","assets/index-sin1a3_Y.css","assets/index-C_lBcGOy.js","assets/index-C65voQBH.css","assets/index-LMWMeZ06.js","assets/index-Dn8Qtbw5.css","assets/index-k8CKLrjX.js","assets/index-mXivTn-x.css","assets/index-Asfmih8e.js","assets/index-B6QFlVuJ.css","assets/index-Dr_8EA-Q.js","assets/index-Dd1ztf1D.css","assets/index-CRSX6utP.js","assets/index-B4evt-x1.css","assets/index-BHyeiF3B.js","assets/index-fqGJKqmT.css","assets/index-D53aic_i.js","assets/index-DsrQD8kW.css","assets/index-DK1GgGSF.js","assets/index-BsPf-E0R.css","assets/index-CGbRX9gQ.js","assets/index-Be10YeXA.css","assets/index-fNbylzcy.js","assets/index-DqvjCzuS.css","assets/index-dDc-Po2X.js","assets/index-0S-ZFpEv.css","assets/index-kQzFSMQ7.js","assets/index-h90bmMPa.css","assets/index-w1-69Fa2.js","assets/index-CPXHQbTN.css","assets/index-C4J6ryqt.js","assets/index-Re7ie8bQ.css","assets/index-C4WrJ_zl.js","assets/index-B71pDaWo.css"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{d as g,_ as s}from"./administration-DCOj2uiN.js";import{A as l}from"./api.service-C76VAMec.js";const _={namespaced:!0,state(){return{search:{page:1,limit:12,rating:null,sorting:null,term:null,filter:{}},extensionListing:[],categoriesLanguageId:null,myExtensions:{loading:!0,data:[]},userInfo:null,cicadaId:null,loginStatus:!1,licensedExtensions:{loading:!1,data:[]},totalPlugins:0,plugins:null}},mutations:{setSearchValue(i,{key:e,value:t}){i.search.page=1,i.search[e]=t},setExtensionListing(i,e){i.extensionListing=e},loadMyExtensions(i){i.myExtensions.loading=!0},setLoading(i,e=!0){i.myExtensions.loading=e},myExtensions(i,e){i.myExtensions.data=e,i.myExtensions.loading=!1},categoriesLanguageId(i,e){i.categoriesLanguageId=e},setUserInfo(i,e){i.userInfo=e},pluginErrorsMapped(){}}};function x(i){i.State.registerModule("cicadaExtensions",_);let e=i.State.get("session").languageId;i.State._store.subscribe(async({type:t},n)=>{if(i.Service("acl").can("system.plugin_maintain")&&t==="setAdminLocale"&&n.session.languageId!==""&&e!==n.session.languageId){if(e===""){e=n.session.languageId;return}e=n.session.languageId,await i.Service("cicadaExtensionService").updateExtensionData().then()}})}Cicada.Mixin.register("sw-extension-error",g({mixins:[Cicada.Mixin.getByName("notification")],methods:{showExtensionErrors(i){Cicada.Service("extensionErrorService").handleErrorResponse(i,this).forEach(e=>{this.createNotificationError(e)})}}}));class h extends l{constructor(e,t){super(e,t,"extension","application/json"),this.name="extensionStoreActionService"}downloadExtension(e){return this.httpClient.post(`_action/${this.getApiBasePath()}/download/${e}`,{},{headers:this.storeHeaders(Cicada.Context.api),version:3})}installExtension(e,t){return this.httpClient.post(`_action/${this.getApiBasePath()}/install/${t}/${e}`,{},{headers:this.storeHeaders(),version:3})}updateExtension(e,t,n=!1){return this.httpClient.post(`_action/${this.getApiBasePath()}/update/${t}/${e}`,{allowNewPermissions:n},{headers:this.storeHeaders(),version:3})}activateExtension(e,t){return this.httpClient.put(`_action/${this.getApiBasePath()}/activate/${t}/${e}`,{},{headers:this.storeHeaders(),version:3})}deactivateExtension(e,t){return this.httpClient.put(`_action/${this.getApiBasePath()}/deactivate/${t}/${e}`,{},{headers:this.storeHeaders(),version:3})}uninstallExtension(e,t,n){return this.httpClient.post(`_action/${this.getApiBasePath()}/uninstall/${t}/${e}`,{keepUserData:!n},{headers:this.storeHeaders(),version:3})}removeExtension(e,t,n){return this.httpClient.post(`_action/${this.getApiBasePath()}/remove/${t}/${e}`,{keepUserData:!n},{headers:this.storeHeaders(),version:3})}cancelLicense(e){return this.httpClient.delete(`/license/cancel/${e}`,{headers:this.storeHeaders(),version:3})}rateExtension({authorName:e,extensionId:t,headline:n,rating:o,text:r,tocAccepted:c,version:m}){return this.httpClient.post(`/license/rate/${t}`,{authorName:e,headline:n,rating:o,text:r,tocAccepted:c,version:m},{headers:this.storeHeaders(),version:3})}async getMyExtensions(){const e=this.getBasicHeaders(),{data:t}=await this.httpClient.get(`/_action/${this.getApiBasePath()}/installed`,{headers:e,version:3});return t}async upload(e){const t={"Content-Type":"application/zip"},n=this.getBasicHeaders(t),o=await this.httpClient.post(`/_action/${this.getApiBasePath()}/upload`,e,{headers:n});return l.handleResponse(o)}async refresh(){const e=this.getBasicHeaders(),t=await this.httpClient.post(`/_action/${this.getApiBasePath()}/refresh`,{},{params:{},headers:e});return l.handleResponse(t)}storeHeaders(e=null){const t=super.getBasicHeaders();return e!=null&&e.languageId&&(t["sw-language-id"]=e.languageId),t}}class E{constructor(e,t,n,o){this.appModulesService=e,this.extensionStoreActionService=t,this.discountCampaignService=n,this.storeApiService=o,this.EXTENSION_VARIANT_TYPES=Object.freeze({RENT:"rent",BUY:"buy",FREE:"free"}),this.EXTENSION_TYPES=Object.freeze({APP:"app",PLUGIN:"plugin"})}async installAndActivateExtension(e,t){await this.extensionStoreActionService.installExtension(e,t),await this.extensionStoreActionService.activateExtension(e,t),await this.updateExtensionData()}async installExtension(e,t){await this.extensionStoreActionService.installExtension(e,t),await this.updateExtensionData()}async updateExtension(e,t,n=!1){await this.extensionStoreActionService.updateExtension(e,t,n),await this.updateExtensionData()}async uninstallExtension(e,t,n){await this.extensionStoreActionService.uninstallExtension(e,t,n),await this.updateExtensionData()}async removeExtension(e,t,n){await this.extensionStoreActionService.removeExtension(e,t,n),await this.updateExtensionData()}async cancelLicense(e){await this.extensionStoreActionService.cancelLicense(e)}async activateExtension(e,t){await this.extensionStoreActionService.activateExtension(e,t),await this.updateModules()}async deactivateExtension(e,t){await this.extensionStoreActionService.deactivateExtension(e,t),await this.updateModules()}async updateExtensionData(){Cicada.State.commit("cicadaExtensions/loadMyExtensions");try{await this.extensionStoreActionService.refresh();const e=await this.extensionStoreActionService.getMyExtensions();Cicada.State.commit("cicadaExtensions/myExtensions",e),await this.updateModules()}finally{Cicada.State.commit("cicadaExtensions/setLoading",!1)}}async checkLogin(){try{const{userInfo:e}=await this.storeApiService.checkLogin();Cicada.State.commit("cicadaExtensions/setUserInfo",e)}catch{Cicada.State.commit("cicadaExtensions/setUserInfo",null)}}orderVariantsByRecommendation(e){const t=e.filter(o=>this.isVariantDiscounted(o)),n=e.filter(o=>!this.isVariantDiscounted(o));return[...this.orderByType(t),...this.orderByType(n)]}isVariantDiscounted(e){return!e||!e.discountCampaign||typeof e.discountCampaign.discountedPrice!="number"||e.discountCampaign.discountedPrice===e.netPrice?!1:this.discountCampaignService.isDiscountCampaignActive(e.discountCampaign)}getPriceFromVariant(e){return this.isVariantDiscounted(e)?e.discountCampaign.discountedPrice:e.netPrice}mapVariantToRecommendation(e){switch(e.type){case this.EXTENSION_VARIANT_TYPES.FREE:return 0;case this.EXTENSION_VARIANT_TYPES.RENT:return 1;case this.EXTENSION_VARIANT_TYPES.BUY:return 2;default:return 3}}async getOpenLink(e){if(e.isTheme)return this.getLinkToTheme(e);if(e.type===this.EXTENSION_TYPES.APP)return this.getLinkToApp(e);if(!e.active)return null;const t=Cicada.State.get("extensionEntryRoutes").routes;return t[e.name]!==void 0?{name:t[e.name].route,label:t[e.name].label??null}:null}async updateModules(){const e=await this.appModulesService.fetchAppModules();Cicada.State.commit("cicadaApps/setApps",e)}async getLinkToTheme(e){const{Criteria:t}=Cicada.Data,n=Cicada.Service("repositoryFactory").create("theme"),o=new t(1,1);o.addFilter(t.equals("technicalName",e.name));const{data:r}=await n.searchIds(o);return r.length===0?null:{name:"sw.theme.manager.detail",params:{id:r[0]}}}getLinkToApp(e){const t=this.getAppFromStore(e.name);return t&&this.appHasMainModule(t)?this.createLinkToModule(t.name):null}getAppFromStore(e){return Cicada.State.get("cicadaApps").apps.find(t=>t.name===e)}appHasMainModule(e){var t;return!!((t=e.mainModule)!=null&&t.source)}createLinkToModule(e){return{name:"sw.extension.module",params:{appName:e}}}orderByType(e){const t=e.map((n,o)=>({value:this.mapVariantToRecommendation(n),index:o}));return t.sort((n,o)=>n.value-o.value),t.map(n=>e[n.index])}}class w{static get name(){return"extensionErrorService"}constructor(e,t){this.errorCodes=e,this.fallbackError=t}handleErrorResponse(e,t){var o,r;const n=((r=(o=e==null?void 0:e.response)==null?void 0:o.data)==null?void 0:r.errors)??[];return Array.isArray(n)?n.map(c=>this.handleError(c,t)):[]}handleError(e,t){var n;return this._translateRawNotification({...this._getNotification(e,t),parameters:((n=e==null?void 0:e.meta)==null?void 0:n.parameters)||{}},t)}_getNotification(e){return this.errorCodes[e.code]?this.errorCodes[e.code]:{title:e.title||this.fallbackError.title,message:e.detail||this.fallbackError.detail}}_translateRawNotification(e,t){return{title:t.$t(e.title,e.parameters),message:t.$t(e.message,e.parameters),autoClose:e.autoClose!==!1,actions:e.actions??[]}}}const{Application:u}=Cicada;u.addServiceProvider("extensionStoreActionService",()=>new h(Cicada.Application.getContainer("init").httpClient,Cicada.Service("loginService")));u.addServiceProvider("cicadaExtensionService",()=>new E(Cicada.Service("appModulesService"),Cicada.Service("extensionStoreActionService"),Cicada.Service("cicadaDiscountCampaignService"),Cicada.Service("storeService")));u.addServiceProvider("extensionErrorService",()=>{const i=Cicada.Application.getApplicationRoot();return new w({FRAMEWORK__APP_LICENSE_COULD_NOT_BE_VERIFIED:{title:"sw-extension.errors.appLicenseCouldNotBeVerified.title",message:"sw-extension.errors.appLicenseCouldNotBeVerified.message",autoClose:!1,actions:[{label:i.$tc("sw-extension.errors.appLicenseCouldNotBeVerified.actionSetLicenseDomain"),method:()=>{i.$router.push({name:"sw.settings.store.index"})}},{label:i.$tc("sw-extension.errors.appLicenseCouldNotBeVerified.actionLogin"),method:()=>{i.$router.push({name:"sw.extension.my-extensions.account"})}}]},FRAMEWORK__APP_NOT_COMPATIBLE:{title:"global.default.error",message:"sw-extension.errors.appIsNotCompatible"}},{title:"global.default.error",message:"global.notification.unspecifiedSaveErrorMessage"})});const v=`<div v-if="isLoading"> <sw-skeleton /> <sw-skeleton /> </div> <sw-meteor-card v-else class="sw-extension-my-extensions-account" > <div class="sw-extension-my-extensions-account__wrapper"> <div class="sw-extension-my-extensions-account__wrapper-illustration"> <img :src="assetFilter('/administration/static/img/plugin-manager--login.png')" :alt="$tc('sw-extension.my-extensions.account.headline')" > </div> <div class="sw-extension-my-extensions-account__wrapper-content"> <template v-if="isLoggedIn"> <h3>{{ $tc('sw-extension.my-extensions.account.headline') }}</h3> <p>{{ $tc('sw-extension.my-extensions.account.isLoggedIn') }}</p> <div class="sw-extension-my-extensions-account__wrapper-content-login-status"> <sw-avatar size="36px" color="#E3F3FF" placeholder /> <span class="sw-extension-my-extensions-account__wrapper-content-login-status-id">{{ userInfo.email }}</span> <sw-button class="sw-extension-my-extensions-account__logout-button" variant="primary" size="small" @click="logout" > {{ $tc('sw-extension.my-extensions.account.logout') }} </sw-button> </div> </template> <template v-else> <h3>{{ $tc('sw-extension.my-extensions.account.headline') }}</h3> <div class="sw-extension-my-extensions-account__wrapper-content-login-message"> <p>{{ $tc('sw-extension.my-extensions.account.loginMessage') }}</p> </div> <div> <p>{{ $tc('sw-extension.my-extensions.account.register') }}</p> <a class="new-account-link" :href="$tc('sw-extension.my-extensions.account.registerUrl')" target="_blank" rel="noopener" > {{ $tc('sw-extension.my-extensions.account.registerNow') }} </a> </div> <div class="sw-extension-my-extensions-account__wrapper-content-login-form"> <sw-text-field v-model:value="form.cicadaId" class="sw-extension-my-extensions-account__cicada-id-field" required :label="$tc('sw-extension.my-extensions.account.mailLabel')" :placeholder="$tc('sw-extension.my-extensions.account.mailPlaceholder')" /> <sw-password-field v-model:value="form.password" class="sw-extension-my-extensions-account__password-field" :label="$tc('sw-extension.my-extensions.account.passwordLabel')" :placeholder="$tc('sw-extension.my-extensions.account.passwordPlaceholder')" @keyup.enter="login" /> </div> <div class="sw-extension-my-extensions-account__wrapper-content-login-footer"> <a :href="$tc('sw-extension.my-extensions.account.recoveryUrl')" target="_blank" rel="noopener" > {{ $tc('sw-extension.my-extensions.account.passwordForgot') }} </a> <sw-button class="sw-extension-my-extensions-account__login-button" variant="primary" size="small" @click="login" > {{ $tc('sw-extension.my-extensions.account.login') }} </sw-button> </div> </template> </div> </div> </sw-meteor-card>`;class a{constructor(e,t){this.title=e,this.message=t}}const d={FRAMEWORK__PLUGIN_NO_PLUGIN_FOUND_IN_ZIP:new a("global.default.error","sw-extension.errors.messageUploadFailureNoPluginFoundInZipFile"),FRAMEWORK__PLUGIN_NOT_A_ZIP_FILE:new a("global.default.error","sw-extension.errors.messageUploadFailureNotAZipFile"),FRAMEWORK__PLUGIN_EXTRACTION_FAILED:new a("global.default.error","sw-extension.errors.messageUploadFailureUnzipFailed"),FRAMEWORK__STORE_INVALID_CREDENTIALS:new a("global.default.error","sw-extension.errors.messageLoginDataInvalid"),FRAMEWORK__STORE_LICENSE_DOMAIN_IS_MISSING:new a("global.default.error","sw-extension.errors.messageStoreLicenseDomainMissing"),FRAMEWORK__STORE_NOT_AVAILABLE:new a("global.default.error","sw-extension.errors.messageStoreNotAvailable"),FRAMEWORK__PLUGIN_BASE_CLASS_NOT_FOUND:new a("global.default.error","sw-extension.errors.messagePluginBaseClassNotFound"),FRAMEWORK__PLUGIN_REQUIREMENT_MISMATCH:new a("global.default.error","sw-extension.errors.messagePluginRequirementMismatch")};function C(i){return i.code==="FRAMEWORK__STORE_ERROR"?y(i):typeof d[i.code]<"u"?{title:d[i.code].title,message:d[i.code].message,details:i.detail}:{title:"global.default.error",message:"sw-extension.errors.messageGenericFailure",details:i.detail}}function y({title:i,detail:e,meta:t}){return t&&typeof t.documentationLink=="string"?{title:i,message:e,details:null,parameters:{documentationLink:t.documentationLink}}:{title:i,message:e,details:null}}function f(i){return i.map(C)}const S={mapErrors:f},{State:p,Mixin:A,Filter:I}=Cicada,L=Cicada.Component.wrapComponentConfig({template:v,compatConfig:Cicada.compatConfig,inject:["systemConfigApiService","cicadaExtensionService","storeService"],mixins:[A.getByName("notification")],data(){return{isLoading:!0,unsubscribeStore:null,form:{password:"",cicadaId:""}}},computed:{userInfo(){return p.get("cicadaExtensions").userInfo},isLoggedIn(){return p.get("cicadaExtensions").userInfo!==null},assetFilter(){return I.getByName("asset")}},created(){this.createdComponent().then(()=>{this.unsubscribeStore=p.subscribe(this.showErrorNotification)}).catch(()=>{})},beforeUnmount(){this.unsubscribeStore!==null&&this.unsubscribeStore()},methods:{async createdComponent(){try{this.isLoading=!0,await this.cicadaExtensionService.checkLogin()}finally{this.isLoading=!1}},async logout(){try{await this.storeService.logout(),this.$emit("logout-success")}catch(i){this.commitErrors(i)}finally{await this.cicadaExtensionService.checkLogin()}},async login(){this.isLoading=!0;try{await this.storeService.login(this.form.cicadaId,this.form.password),this.$emit("login-success"),this.createNotificationSuccess({message:this.$tc("sw-extension.my-extensions.account.loginNotificationMessage")})}catch(i){this.commitErrors(i)}finally{await this.cicadaExtensionService.checkLogin(),this.isLoading=!1}},showErrorNotification({type:i,payload:e}){i==="cicadaExtensions/pluginErrorsMapped"&&e.forEach(t=>{if(t.parameters){this.showApiNotification(t);return}this.createNotificationError({message:this.$tc(t.message)})})},showApiNotification(i){const e=this.$tc("sw-extension.errors.messageToTheCicadaDocumentation",0,i.parameters);this.createNotificationError({title:i.title,message:`${i.message} ${e}`,autoClose:!1})},commitErrors(i){if(i.response){const e=S.mapErrors(i.response.data.errors);Cicada.State.commit("cicadaExtensions/pluginErrorsMapped",e)}throw i}}}),P=Object.freeze(Object.defineProperty({__proto__:null,default:L},Symbol.toStringTag,{value:"Module"}));Cicada.Service("privileges").addPrivilegeMappingEntry({category:"additional_permissions",parent:null,key:"system",roles:{extension_store:{privileges:[],dependencies:["system.plugin_maintain"]}}});x(Cicada);Cicada.Component.register("sw-extension-config",()=>s(()=>import("./index-B4Wra5lE.js"),__vite__mapDeps([0,1])));Cicada.Component.register("sw-extension-my-extensions-listing",()=>s(()=>import("./index-B4ovYNUD.js"),__vite__mapDeps([2,3])));Cicada.Component.register("sw-extension-my-extensions-account",()=>s(()=>Promise.resolve().then(()=>P),void 0));Cicada.Component.register("sw-extension-my-extensions-index",()=>s(()=>import("./index-X2Nw0PAq.js"),[]));Cicada.Component.register("sw-extension-store-landing-page",()=>s(()=>import("./index-CsZ8KSFS.js"),__vite__mapDeps([4,5])));Cicada.Component.register("sw-extension-my-extensions-recommendation",()=>s(()=>import("./index-_GWzh-87.js"),[]));Cicada.Component.register("sw-extension-file-upload",()=>s(()=>import("./index-D4vdoPwr.js"),__vite__mapDeps([6,7,8,9,10,11])));Cicada.Component.register("sw-extension-permissions-details-modal",()=>s(()=>import("./index-BK6t9fVt.js"),__vite__mapDeps([12,13,14])));Cicada.Component.register("sw-extension-card-base",()=>s(()=>import("./index-LVmtmfP_.js"),__vite__mapDeps([15,16])));Cicada.Component.extend("sw-extension-card-bought","sw-extension-card-base",()=>s(()=>import("./index-oveikqpQ.js"),__vite__mapDeps([17,7,8,9,10,18])));Cicada.Component.extend("sw-self-maintained-extension-card","sw-extension-card-base",()=>s(()=>import("./index-B7Ie67B9.js"),__vite__mapDeps([19,13])));Cicada.Component.register("sw-extension-my-extensions-listing-controls",()=>s(()=>import("./index-kRAtUTgv.js"),__vite__mapDeps([20,21])));Cicada.Component.register("sw-extension-permissions-modal",()=>s(()=>import("./index-Dh89FMcz.js"),__vite__mapDeps([22,23])));Cicada.Component.register("sw-extension-domains-modal",()=>s(()=>import("./index-DTCkB3oQ.js"),__vite__mapDeps([24,25])));Cicada.Component.register("sw-extension-privacy-policy-extensions-modal",()=>s(()=>import("./index-C_lBcGOy.js"),__vite__mapDeps([26,27])));Cicada.Component.register("sw-extension-deactivation-modal",()=>s(()=>import("./index-LMWMeZ06.js"),__vite__mapDeps([28,29])));Cicada.Component.register("sw-extension-removal-modal",()=>s(()=>import("./index-k8CKLrjX.js"),__vite__mapDeps([30,31])));Cicada.Component.register("sw-extension-uninstall-modal",()=>s(()=>import("./index-Asfmih8e.js"),__vite__mapDeps([32,33])));Cicada.Component.register("sw-extension-rating-stars",()=>s(()=>import("./index-Dr_8EA-Q.js"),__vite__mapDeps([34,35])));Cicada.Component.register("sw-extension-ratings-card",()=>s(()=>import("./index-CRSX6utP.js"),__vite__mapDeps([36,37])));Cicada.Component.register("sw-extension-ratings-summary",()=>s(()=>import("./index-BHyeiF3B.js"),__vite__mapDeps([38,39])));Cicada.Component.register("sw-extension-review",()=>s(()=>import("./index-D53aic_i.js"),__vite__mapDeps([40,41])));Cicada.Component.register("sw-extension-review-creation",()=>s(()=>import("./index-DK1GgGSF.js"),__vite__mapDeps([42,43])));Cicada.Component.register("sw-extension-review-creation-inputs",()=>s(()=>import("./index-CGbRX9gQ.js"),__vite__mapDeps([44,45])));Cicada.Component.register("sw-extension-review-reply",()=>s(()=>import("./index-fNbylzcy.js"),__vite__mapDeps([46,47])));Cicada.Component.extend("sw-extension-select-rating","sw-text-field-deprecated",()=>s(()=>import("./index-BEpK7OOW.js"),[]));Cicada.Component.extend("sw-extension-rating-modal","sw-extension-review-creation",()=>s(()=>import("./index-dDc-Po2X.js"),__vite__mapDeps([48,49])));Cicada.Component.register("sw-extension-adding-failed",()=>s(()=>import("./index-kQzFSMQ7.js"),__vite__mapDeps([50,51])));Cicada.Component.register("sw-extension-adding-success",()=>s(()=>import("./index-w1-69Fa2.js"),__vite__mapDeps([52,53])));Cicada.Component.register("sw-extension-app-module-error-page",()=>s(()=>import("./index-C4J6ryqt.js"),__vite__mapDeps([54,55])));Cicada.Component.register("sw-extension-app-module-page",()=>s(()=>import("./index-C4WrJ_zl.js"),__vite__mapDeps([56,57])));Cicada.Module.register("sw-extension",{type:"core",title:"sw-extension-store.title",description:"sw-extension-store.descriptionTextModule",color:"#189EFF",icon:"regular-plug",version:"1.0.0",targetVersion:"1.0.0",entity:"extension",display:!Cicada.Context.app.disableExtensions,searchMatcher:(i,e,t)=>{var o;return e.toLowerCase().match(i)?[{icon:t.icon,color:t.color,label:e,entity:t.entity,route:t.routes.store,privilege:(o=t.routes.index)==null?void 0:o.meta.privilege}]:!1},routes:{"my-extensions":{path:"my-extensions",component:"sw-extension-my-extensions-index",redirect:{name:"sw.extension.my-extensions.listing"},meta:{privilege:"system.plugin_maintain"},children:{listing:{path:"listing",component:"sw-extension-my-extensions-listing",redirect:{name:"sw.extension.my-extensions.listing.app"},meta:{privilege:"system.plugin_maintain"},children:{app:{path:"app",component:"sw-extension-my-extensions-listing",propsData:{isTheme:!1},meta:{privilege:"system.plugin_maintain"}},theme:{path:"theme",component:"sw-extension-my-extensions-listing",propsData:{isTheme:!0},meta:{privilege:"system.plugin_maintain"}}}},recommendation:{path:"recommendation",component:"sw-extension-my-extensions-recommendation",meta:{privilege:"system.plugin_maintain"}},account:{path:"account",component:"sw-extension-my-extensions-account",meta:{privilege:"system.plugin_maintain"}}}},config:{component:"sw-extension-config",path:"config/:namespace",meta:{parentPath:"sw.extension.my-extensions",privilege:"system.plugin_maintain"},props:{default(i){return{namespace:i.params.namespace}}}},store:{path:"store",component:"sw-extension-store-landing-page",redirect:{name:"sw.extension.store.landing-page"}},"store.landing-page":{path:"store/landing-page",component:"sw-extension-store-landing-page"},module:{path:"module/:appName/:moduleName?",component:"sw-extension-app-module-page",props:{default(i){const{appName:e,moduleName:t}=i.params;return{appName:e,moduleName:t}}}}},navigation:[{id:"sw-extension",label:"sw-extension.mainMenu.mainMenuItemExtensionStore",color:"#189EFF",icon:"regular-plug",position:70},{id:"sw-extension-store",parent:"sw-extension",label:"sw-extension.mainMenu.store",path:"sw.extension.store",privilege:"system.extension_store",position:10},{id:"sw-extension-my-extensions",parent:"sw-extension",label:"sw-extension.mainMenu.purchased",path:"sw.extension.my-extensions",privilege:"system.plugin_maintain",position:10}]});const N=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));export{S as e,N as i};
//# sourceMappingURL=index-D4nuQKZ0.js.map
