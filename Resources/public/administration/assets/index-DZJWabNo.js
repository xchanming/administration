const n=`{% block sw_error_summary %} <sw-alert v-if="errorCount > 0" class="sw-error-summary" variant="error" :title="$tc('sw-error-summary.title', errorCount)" :show-icon="true" > <li v-for="(entry, index) in errorEntries" :key="index" > <span class="sw-error-summary__quantity">{{ entry.count }}x</span> "{{ entry.message }}" </li> </sw-alert> {% endblock %}`,{Component:a}=Shopware,{hasOwnProperty:u}=Shopware.Utils.object;a.register("sw-error-summary",{template:n,computed:{errors(){const o=Shopware.Store.get("error").getAllApiErrors()||[],s=r=>r.reduce((e,t)=>t===null||typeof t!="object"?e:t.hasOwnProperty("selfLink")&&t.hasOwnProperty("_code")&&t.hasOwnProperty("_detail")?(e.push(t),e):(e.push(...s(Object.values(t))),e),[]);return s(o).map(r=>{let e=r._detail;return this.$te(`global.error-codes.${r._code}`)&&(e=this.$tc(`global.error-codes.${r._code}`)),{message:e}}).reduce((r,e)=>(u(r,e.message)?r[e.message]+=1:r[e.message]=1,r),{})},errorEntries(){return Object.entries(this.errors).map(([o,s])=>({message:o,count:s}))},errorCount(){return Object.values(this.errors).reduce((o,s)=>o+s,0)}}});
