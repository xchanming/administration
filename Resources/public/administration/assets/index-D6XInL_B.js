const n=`{% block sw_seo_url_template_card %} <sw-card class="sw-seo-url-template-card" position-identifier="sw-seo-url-template-card" :title="$tc('sw-seo-url-template-card.general.titleCard')" :is-loading="isLoading" > <template #toolbar> <sw-sales-channel-switch :label="$tc('sw-seo-url-template-card.general.labelSalesChannelSelect')" @change-sales-channel-id="onSalesChannelChanged" /> </template> {% block sw_seo_url_template_card_info_box %} <sw-alert :title="$tc('sw-seo-url-template-card.general.headlineInfoMessageBoxEmptyProperties')" > <span>{{ $tc('sw-seo-url-template-card.general.textInfoMessageBoxEmptyProperties') }}</span> </sw-alert> {% endblock %} {% block sw_seo_url_template_card_entries %} <template v-if="!isLoading && !salesChannelIsHeadless"> <div v-for="(seoUrlTemplate, index) in getTemplatesForSalesChannel(salesChannelId)" :key="index" class="sw-seo-url-template-card__seo-url" > <sw-container columns="3fr 1fr" gap="5px" > {% block sw_seo_url_template_card_entries_input_wrapper %} <sw-inherit-wrapper v-model:value="seoUrlTemplate.template" :has-parent="seoUrlTemplate.salesChannelId !== null" :inherited-value="getPlaceholder(seoUrlTemplate)" @update:value="onInput(seoUrlTemplate)" > <template #content="props"> {% block sw_seo_url_template_card_entries_input %} <sw-text-field :map-inheritance="props" :value="props.currentValue" :disabled="props.isInherited" :error="seoUrlTemplatesTemplateError[index]" :name="\`sw-field--seo-url-template-\${seoUrlTemplate.entity}\`" :label="getLabel(seoUrlTemplate)" :placeholder="getPlaceholder(seoUrlTemplate)" @update:value="props.updateCurrentValue" > <template #suffix> {% block sw_seo_url_template_card_entries_input_suffix %} <sw-loader v-if="previewLoadingStates[seoUrlTemplate.id]" size="16px" /> <sw-icon v-else-if="errorMessages[seoUrlTemplate.id]" v-tooltip="$tc('sw-seo-url-template-card.general.tooltipInvalidTemplate')" name="regular-times" /> <sw-icon v-else-if="noEntityError.includes(seoUrlTemplate.id)" v-tooltip="$tc('sw-seo-url-template-card.general.textUrlNoEntitiesForPreview', { entity: $tc(\`global.entities.\${seoUrlTemplate.entityName}\`, 0) }, 0)" name="regular-exclamation-triangle" /> <sw-icon v-else-if="!props.currentValue" v-tooltip="$tc('sw-seo-url-template-card.general.textUrlPreviewEmptyTemplate', { entity: $tc(\`global.entities.\${seoUrlTemplate.entityName}\`, 0) }, 1)" name="regular-exclamation-triangle" /> <sw-icon v-else v-tooltip="$tc('sw-seo-url-template-card.general.tooltipValidTemplate')" name="regular-checkmark" /> {% endblock %} </template> </sw-text-field> {% endblock %} </template> </sw-inherit-wrapper> {% endblock %} {% block sw_seo_url_template_card_entries_variables %} <sw-single-select v-if="getVariableOptions(seoUrlTemplate.id) && !noEntityError.includes(seoUrlTemplate.id)" :value="selectedProperty" value-property="name" label-property="name" show-clearable-button :options="getVariableOptions(seoUrlTemplate.id)" :placeholder="$tc('sw-seo-url-template-card.general.placeholderSelectVariables')" :label="$tc('sw-seo-url-template-card.general.labelPossibleValues')" @update:value="(propertyName) => onSelectInput(propertyName, seoUrlTemplate)" /> {% endblock %} </sw-container> {% block sw_seo_url_template_card_entries_preview %} <div v-if="seoUrlTemplate.template" class="sw-seo-url-template-card__preview" > {% block sw_seo_url_template_card_entries_preview_label %} <span class="sw-seo-url-template-card__preview-label"> {{ $tc('sw-seo-url-template-card.general.preview') }} </span> {% endblock %} {% block sw_seo_url_template_card_entries_preview_item %} <div class="sw-seo-url-template-card__preview-item"> <span v-if="previews[seoUrlTemplate.id] && previews[seoUrlTemplate.id].length > 0"> {{ previews[seoUrlTemplate.id][0].seoPathInfo }} </span> <span v-else> {{ $tc('sw-seo-url-template-card.general.textUrlPreviewNotPossible') }} </span> <span v-if="noEntityError.includes(seoUrlTemplate.id)"> {{ $tc('sw-seo-url-template-card.general.textUrlNoEntitiesForPreview', { entity: $tc(\`global.entities.\${seoUrlTemplate.entityName}\`, 0) }, 0) }} </span> </div> {% endblock %} </div> {% endblock %} </div> </template> <div v-if="salesChannelIsHeadless && !isLoading"> {{ $tc('sw-seo-url.textSeoUrlsDisallowedForHeadless') }} </div> {% endblock %} </sw-card> {% endblock %}`,{Mixin:p}=Shopware,{mapCollectionPropertyErrors:c}=Shopware.Component.getComponentHelper(),o=Shopware.Data.EntityCollection,a=Shopware.Data.Criteria,d=Shopware.Utils,m={template:n,inject:["seoUrlTemplateService","repositoryFactory"],mixins:[p.getByName("notification")],data(){return{defaultSeoUrlTemplates:null,seoUrlTemplates:null,seoUrlPreviewCriteria:{},isLoading:!0,debouncedPreviews:{},previewLoadingStates:{},errorMessages:{},previews:{},noEntityError:[],variableStores:{},seoUrlTemplateRepository:{},salesChannelId:null,salesChannels:[],selectedProperty:null}},computed:{...c("seoUrlTemplates",["template"]),salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},salesChannelIsHeadless(){const e=this.salesChannels.find(t=>t.id===this.salesChannelId);return e?e.typeId==="f183ee5650cf4bdb8a774337575067a6":!1}},created(){this.createdComponent()},methods:{createdComponent(){this.seoUrlTemplateRepository=this.repositoryFactory.create("seo_url_template"),this.seoUrlTemplates=new o(this.seoUrlTemplateRepository.route,this.seoUrlTemplateRepository.schema.entity,Shopware.Context.api,new a(1,25)),this.defaultSeoUrlTemplates=new o(this.seoUrlTemplateRepository.route,this.seoUrlTemplateRepository.schema.entity,Shopware.Context.api,new a(1,25)),this.seoUrlPreviewCriteria["frontend.navigation.page"]=new a(1,25).addFilter(a.not("and",[a.equals("path",null)])),this.fetchSalesChannels(),this.fetchSeoUrlTemplates()},fetchSeoUrlTemplates(e=null){const t=new a(1,25);e||(e=null),t.addFilter(a.equals("salesChannelId",e)),this.isLoading=!0,this.seoUrlTemplateRepository.search(t).then(r=>{r.forEach(s=>{this.seoUrlTemplates.has(s.id)||this.seoUrlTemplates.add(s)}),e?this.createSeoUrlTemplatesFromDefaultRoutes(e):r.forEach(s=>{this.defaultSeoUrlTemplates.has(s)||this.defaultSeoUrlTemplates.add(s)}),this.isLoading=!1,this.seoUrlTemplates.forEach(s=>{this.fetchSeoUrlPreview(s),this.variableStores.hasOwnProperty(s.id)||this.seoUrlTemplateService.getContext(s).then(l=>{this.createVariableOptions(s.id,l)})})})},createSeoUrlTemplatesFromDefaultRoutes(e){this.defaultSeoUrlTemplates.forEach(t=>{if(!this.seoUrlTemplates.some(s=>s.routeName===t.routeName&&s.salesChannelId===e)){const s=this.seoUrlTemplateRepository.create();s.routeName=t.routeName,s.salesChannelId=e,s.entityName=t.entityName,s.template=null,this.seoUrlTemplates.add(s)}})},createVariableOptions(e,t){const r=[];Object.entries(t).forEach(([s,l])=>{r.push({name:`${s}`}),l instanceof Object&&Object.keys(l).forEach(i=>{r.push({name:`${s}.${i}`})})}),this.variableStores.id=r},getVariableOptions(e){return this.variableStores.hasOwnProperty(e)?this.variableStores[e]:!1},getLabel(e){const t=e.routeName.replace(/\./g,"-");return this.$tc(`sw-seo-url-template-card.routeNames.${t}`)?this.$tc(`sw-seo-url-template-card.routeNames.${t}`):e.routeName},getPlaceholder(e){return e.salesChannelId?Object.values(this.defaultSeoUrlTemplates).find(r=>r.routeName===e.routeName).template:null},onClickSave(){if(Object.keys(this.errorMessages).some(t=>this.errorMessages[t]!==null)){this.createSaveErrorNotification();return}this.seoUrlTemplates.forEach(t=>{t.template===null&&this.seoUrlTemplates.remove(t.id)}),this.seoUrlTemplateRepository.sync(this.seoUrlTemplates).then(()=>{this.seoUrlTemplates=new o(this.seoUrlTemplateRepository.route,this.seoUrlTemplateRepository.schema.entity,Shopware.Context.api,new a(1,25)),this.fetchSeoUrlTemplates(this.salesChannelId),this.createSaveSuccessNotification()}).catch(()=>{this.createSaveErrorNotification()})},createSaveErrorNotification(){const e=this.$tc("global.default.error"),t=this.$tc("sw-seo-url-template-card.general.messageSaveError");this.createNotificationError({title:e,message:t})},createSaveSuccessNotification(){const e=this.$tc("global.default.success"),t=this.$tc("sw-seo-url-template-card.general.messageSaveSuccess");this.createNotificationSuccess({title:e,message:t})},onSelectInput(e,t){if(e===null)return;const r=t.template?`${t.template}/`:"";t.template=`${r}{{ ${e} }}`,this.fetchSeoUrlPreview(t)},onInput(e){this.debouncedPreviewSeoUrlTemplate(e)},debouncedPreviewSeoUrlTemplate(e){this.debouncedPreviews[e.id]?this.setErrorMessagesForEntity(e):this.debouncedPreviews[e.id]=d.debounce(()=>{e.template&&e.template!==""?this.fetchSeoUrlPreview(e):this.setErrorMessagesForEntity(e)},400),this.debouncedPreviews[e.id]()},setErrorMessagesForEntity(e,t=null){this.errorMessages[e.id]=t},fetchSeoUrlPreview(e){this.previewLoadingStates[e.id]=!0;const t=this.seoUrlPreviewCriteria[e.routeName]?this.seoUrlPreviewCriteria[e.routeName]:new a(1,25);e.criteria=t.parse(),this.seoUrlTemplateService.preview(e).then(r=>{this.noEntityError=this.noEntityError.filter(s=>s!==e.id),this.previews[e.id]=r,r===null?this.noEntityError.push(e.id):this.setErrorMessagesForEntity(e),this.previewLoadingStates[e.id]=!1}).catch(r=>{this.setErrorMessagesForEntity(e,r.response.data.errors[0].detail),this.previews[e.id]=[],this.previewLoadingStates[e.id]=!1})},fetchSalesChannels(){this.salesChannelRepository.search(new a(1,25)).then(e=>{this.salesChannels=e})},onSalesChannelChanged(e){this.salesChannelId=e,this.fetchSeoUrlTemplates(e)},getTemplatesForSalesChannel(e){return this.seoUrlTemplates.filter(t=>t.salesChannelId===e)}}};export{m as default};
