const s=Shopware.Classes.ApiService;class h extends s{constructor(e,t,a="update"){super(e,t,a),this.name="updateService"}checkForUpdates(){const e=this.getBasicHeaders();return this.httpClient.get(`/_action/${this.getApiBasePath()}/check`,{headers:e}).then(t=>s.handleResponse(t))}checkRequirements(){const e=this.getBasicHeaders();return this.httpClient.get(`/_action/${this.getApiBasePath()}/check-requirements`,{headers:e}).then(t=>s.handleResponse(t))}extensionCompatibility(){const e=this.getBasicHeaders(),t=this.getBasicParams();return this.httpClient.get(`/_action/${this.getApiBasePath()}/extension-compatibility`,{params:t,headers:e}).then(a=>s.handleResponse(a))}downloadRecovery(){const e=this.getBasicHeaders();return this.httpClient.get(`/_action/${this.getApiBasePath()}/download-recovery`,{headers:e}).then(t=>s.handleResponse(t))}deactivatePlugins(e,t=""){const a=this.getBasicHeaders(),i=`/_action/${this.getApiBasePath()}`,n=`offset=${e}&deactivationFilter=${t}`;return this.httpClient.get(`${i}/deactivate-plugins?${n}`,{headers:a}).then(r=>s.handleResponse(r))}getBasicParams(e={}){return{...{language:localStorage.getItem("sw-admin-locale")},...e}}}export{h as default};
