const t=`{% block sw_first_run_wizard_mailer_local %} <div class="sw-first-run-wizard-mailer-local"> <sw-loader v-if="isLoading" /> <h2>{{ $tc('sw-first-run-wizard.mailerLocal.headline') }}</h2> <div class="sw-settings-mailer-local"> <sw-radio-field v-model:value="mailerSettings['core.mailerSettings.sendMailOptions']" :options="emailSendmailOptions" /> </div> </div> {% endblock %}`,e={template:t,inject:["systemConfigApiService"],emits:["buttons-update","frw-set-title","frw-redirect"],data(){return{isLoading:!1,mailerSettings:{"core.mailerSettings.emailAgent":null,"core.mailerSettings.sendMailOptions":null}}},computed:{emailSendmailOptions(){return[{value:"-bs",name:this.$tc("sw-settings-mailer.sendmail.sync")},{value:"-t -i",name:this.$tc("sw-settings-mailer.sendmail.async")}]},nextAction(){return Shopware.Store.get("context").app.config.settings.disableExtensionManagement?"sw.first.run.wizard.index.shopware.account":"sw.first.run.wizard.index.paypal.info"},buttonConfig(){return[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",variant:null,action:"sw.first.run.wizard.index.mailer.selection",disabled:!1},{key:"configure-later",label:this.$tc("sw-first-run-wizard.general.buttonConfigureLater"),position:"right",variant:null,action:this.nextAction,disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.saveMailerSettings.bind(this),disabled:!this.requiredFieldsFilled}]},requiredFieldsFilled(){return!!this.mailerSettings["core.mailerSettings.emailAgent"]&&!!this.mailerSettings["core.mailerSettings.sendMailOptions"]}},watch:{mailerSettings:{deep:!0,handler(){this.updateButtons()}}},created(){this.createdComponent()},methods:{async createdComponent(){this.updateButtons(),this.setTitle(),await this.loadMailerSettings()},updateButtons(){this.$emit("buttons-update",this.buttonConfig)},setTitle(){this.$emit("frw-set-title",this.$tc("sw-first-run-wizard.mailerLocal.headline"))},async loadMailerSettings(){this.isLoading=!0,this.mailerSettings=await this.systemConfigApiService.getValues("core.mailerSettings"),this.mailerSettings["core.mailerSettings.emailAgent"]="local";const i=this.mailerSettings["core.mailerSettings.sendMailOptions"];(i===void 0||i==="")&&(this.mailerSettings["core.mailerSettings.sendMailOptions"]="-t -i"),this.isLoading=!1},saveMailerSettings(){return this.isLoading=!0,this.systemConfigApiService.saveValues(this.mailerSettings).then(()=>{this.$emit("frw-redirect",this.nextAction),this.isLoading=!1}).catch(()=>{this.isLoading=!1})}}};export{e as default};
