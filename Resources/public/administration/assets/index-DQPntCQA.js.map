{"version":3,"file":"index-DQPntCQA.js","sources":["../../../app/administration/src/module/sw-import-export/component/profile-wizard/sw-import-export-new-profile-wizard-csv-page/sw-import-export-new-profile-wizard-csv-page.html.twig","../../../app/administration/src/module/sw-import-export/component/profile-wizard/sw-import-export-new-profile-wizard-csv-page/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_import_export_new_profile_wizard_csv_page %}\n<div class=\"sw-import-export-new-profile-wizard-csv-page\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_import_export_new_profile_wizard_csv_page_text %}\n    <p class=\"sw-import-export-new-profile-wizard-csv-page__text\">\n        {{ $tc('sw-import-export.profile.csvUploadText') }}\n    </p>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_import_export_new_profile_wizard_csv_page_csv_upload %}\n    <sw-file-input\n        v-model:value=\"csvFile\"\n        :allowed-mime-types=\"['text/csv']\"\n        class=\"sw-import-export-new-profile-wizard-csv-page__file-upload\"\n        @update:value=\"onFileChange\"\n    >\n        <template #caption-label>\n            {{ $tc('sw-import-export.importer.labelUploadCaption') }}\n        </template>\n    </sw-file-input>\n    {% endblock %}\n</div>\n{% endblock %}\n","/**\n * @package services-settings\n */\nimport template from './sw-import-export-new-profile-wizard-csv-page.html.twig';\nimport './sw-import-export-new-profile-wizard-csv-page.scss';\n\nconst { Mixin } = Cicada;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'importExport',\n    ],\n\n    emits: [\n        'next-disable',\n        'next-allow',\n    ],\n\n    mixins: [Mixin.getByName('notification')],\n\n    props: {\n        profile: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            csvFile: null,\n        };\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.$emit('next-disable');\n        },\n\n        onFileChange() {\n            if (this.csvFile === null) {\n                this.profile.mapping = [];\n                this.$emit('next-disable');\n                return Promise.resolve();\n            }\n\n            return this.importExport\n                .getMappingFromTemplate(\n                    this.csvFile,\n                    this.profile.sourceEntity,\n                    this.profile.delimiter,\n                    this.profile.enclosure,\n                )\n                .then((mapping) => {\n                    const transformedMapping = this.transformMapping(mapping);\n\n                    if (this.isCompatEnabled('INSTANCE_SET')) {\n                        this.$set(this.profile, 'mapping', transformedMapping);\n                    } else {\n                        this.profile.mapping = transformedMapping;\n                    }\n                    this.$emit('next-allow');\n\n                    if (transformedMapping.length === 1) {\n                        this.createNotificationWarning({\n                            message: this.$tc('sw-import-export.profile.messageCsvTemplateUploadWarning'),\n                            duration: 10000,\n                        });\n                    }\n                })\n                .catch((error) => {\n                    this.profile.mapping = [];\n                    this.$emit('next-disable');\n                    let message = this.$tc('sw-import-export.profile.messageCsvTemplateUploadError');\n\n                    const errorCode = error.response?.data?.errors?.[0]?.code;\n                    if (errorCode === 'CONTENT__IMPORT_EXPORT_FILE_EMPTY') {\n                        message = this.$tc('sw-import-export.profile.messageCsvTemplateUploadEmptyError');\n                    }\n\n                    this.createNotificationError({\n                        message,\n                    });\n                });\n        },\n\n        /**\n         * Iterates over every mapping and only returns the key and mappedKey of that mapping.\n         * We do this to not populate the database with unnecessary data.\n         * @param mapping\n         * @returns {Array}\n         */\n        transformMapping(mapping) {\n            return mapping.map((currentMapping) => {\n                return {\n                    key: currentMapping.key,\n                    mappedKey: currentMapping.mappedKey,\n                };\n            });\n        },\n    },\n};\n"],"names":["template","Mixin","index","mapping","transformedMapping","error","_a","_b","_c","_d","message","currentMapping"],"mappings":"AAAA,MAAeA,EAAA,gsBCMT,CAAE,MAAAC,CAAO,EAAG,OAGHC,EAAA,CACX,SAAAF,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,oBACA,cACH,EAED,MAAO,CACH,eACA,YACH,EAED,OAAQ,CAACC,EAAM,UAAU,cAAc,CAAC,EAExC,MAAO,CACH,QAAS,CACL,KAAM,OACN,SAAU,EACb,CACJ,EAED,MAAO,CACH,MAAO,CACH,QAAS,IACrB,CACK,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,MAAM,cAAc,CAC5B,EAED,cAAe,CACX,OAAI,KAAK,UAAY,MACjB,KAAK,QAAQ,QAAU,GACvB,KAAK,MAAM,cAAc,EAClB,QAAQ,WAGZ,KAAK,aACP,uBACG,KAAK,QACL,KAAK,QAAQ,aACb,KAAK,QAAQ,UACb,KAAK,QAAQ,SAChB,EACA,KAAME,GAAY,CACf,MAAMC,EAAqB,KAAK,iBAAiBD,CAAO,EAEpD,KAAK,gBAAgB,cAAc,EACnC,KAAK,KAAK,KAAK,QAAS,UAAWC,CAAkB,EAErD,KAAK,QAAQ,QAAUA,EAE3B,KAAK,MAAM,YAAY,EAEnBA,EAAmB,SAAW,GAC9B,KAAK,0BAA0B,CAC3B,QAAS,KAAK,IAAI,0DAA0D,EAC5E,SAAU,GACtC,CAAyB,CAEzB,CAAiB,EACA,MAAOC,GAAU,CD/ElC,IAAAC,EAAAC,EAAAC,EAAAC,ECgFoB,KAAK,QAAQ,QAAU,GACvB,KAAK,MAAM,cAAc,EACzB,IAAIC,EAAU,KAAK,IAAI,wDAAwD,IAE7DD,GAAAD,GAAAD,GAAAD,EAAAD,EAAM,WAAN,YAAAC,EAAgB,OAAhB,YAAAC,EAAsB,SAAtB,YAAAC,EAA+B,KAA/B,YAAAC,EAAmC,QACnC,sCACdC,EAAU,KAAK,IAAI,6DAA6D,GAGpF,KAAK,wBAAwB,CACzB,QAAAA,CACxB,CAAqB,CACrB,CAAiB,CACR,EAQD,iBAAiBP,EAAS,CACtB,OAAOA,EAAQ,IAAKQ,IACT,CACH,IAAKA,EAAe,IACpB,UAAWA,EAAe,SAC9C,EACa,CACJ,CACJ,CACL"}