import{S as l}from"./sanitizer.helper-WLpaaNbZ.js";const a=`{% block sw_snippet_field_edit_modal %} <sw-modal class="sw-snippet-field-edit-modal" :title="modalTitle" :is-loading="isLoading" @modal-close="closeModal" > {% block sw_snippet_field_edit_modal_body %} {% block sw_snippet_field_edit_modal_name_field %} <sw-text-field :value="translationKey" disabled :label="$tc('global.sw-snippet-field-edit-modal.labelName')" /> {% endblock %} {% block sw_snippet_field_edit_modal_snippet_fields %} <template v-if="textField"> <sw-text-field v-for="(snippet, index) in editableSnippets" :key="snippet.setId" v-model:value="snippet.value" v-tooltip.bottom="getNoPermissionsTooltip('snippet.editor')" class="sw-snippet-field-edit-modal__translation-field" :class="\`sw-snippet-field-edit-modal__translation-field--\${index}\`" :disabled="!acl.can('snippet.editor')" :label="$tc('sw-settings-snippet.detail.labelContent', { name: snippetSets.get(snippet.setId).name }, 0)" :placeholder="snippet.origin || $tc('sw-settings-snippet.general.placeholderValue')" /> </template> <template v-else-if="textArea"> <sw-textarea-field v-for="(snippet, index) in editableSnippets" :key="snippet.setId" v-model:value="snippet.value" v-tooltip.bottom="getNoPermissionsTooltip('snippet.editor')" class="sw-snippet-field-edit-modal__translation-field" :class="\`sw-snippet-field-edit-modal__translation-field--\${index}\`" :disabled="!acl.can('snippet.editor')" :label="$tc('sw-settings-snippet.detail.labelContent', { name: snippetSets.get(snippet.setId).name }, 0)" :placeholder="snippet.origin || $tc('sw-settings-snippet.general.placeholderValue')" /> </template> {% endblock %} {% endblock %} <template #modal-footer> {% block sw_snippet_field_edit_modal_footer %} {% block sw_snippet_field_edit_modal_close_button %} <sw-button size="small" @click="closeModal" > {{ $tc('global.sw-modal.labelClose') }} </sw-button> {% endblock %} {% block sw_snippet_field_edit_modal_footer_button %} <sw-button v-tooltip="getNoPermissionsTooltip('snippet.editor')" class="sw-snippet-field-edit-modal__save-action" size="small" variant="primary" :disabled="!acl.can('snippet.editor')" @click="onSave" > {{ $tc('global.default.save') }} </sw-button> {% endblock %} {% endblock %} </template> </sw-modal> {% endblock %}`,{Component:o}=Shopware;o.register("sw-snippet-field-edit-modal",{template:a,inject:["acl","repositoryFactory"],emits:["modal-close","save"],props:{snippets:{type:Array,required:!0},snippetSets:{type:Array,required:!0},translationKey:{type:String,required:!0},fieldType:{type:String,required:!0,validValues:["text","textarea"],validator(i){return["text","textarea"].includes(i)}}},data(){return{isLoading:!1,editableSnippets:[]}},computed:{modalTitle(){return`${this.$tc("global.sw-snippet-field-edit-modal.title")}: ${this.translationKey}`},currentAuthor(){return`user/${Shopware.Store.get("session").currentUser.username}`},snippetRepository(){return this.repositoryFactory.create("snippet")},textField(){return this.fieldType==="text"},textArea(){return this.fieldType==="textarea"}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0,this.snippetSets.forEach(i=>{const e=this.snippets.find(s=>s.setId===i.id),t=this.snippetRepository.create(Shopware.Context.api);e?(t.author=e.author,t.id=e.id,t.value=e.value,t.origin=e.origin,t.translationKey=e.translationKey,t.setId=e.setId,e.id&&(t._isNew=!1)):(t.author=this.currentAuthor,t.id=null,t.value=null,t.origin=null,t.translationKey=this.translationKey,t.setId=i.id),this.editableSnippets.push(t)}),this.isLoading=!1},closeModal(){this.$emit("modal-close")},getNoPermissionsTooltip(i){return{showDelay:300,appearance:"dark",showOnDisabledElements:!0,disabled:this.acl.can(i),message:this.$tc("sw-privileges.tooltip.warning")}},onSave(){const i=[];this.isLoading=!0,this.editableSnippets.forEach(e=>{e.value=l.sanitize(e.value),e.author=this.currentAuthor,(!e.hasOwnProperty("value")||e.value==="")&&(e.value=e.origin),e.origin!==e.value?i.push(this.snippetRepository.save(e,Shopware.Context.api)):e.hasOwnProperty("id")&&e.id!==null&&i.push(this.snippetRepository.delete(e.id,Shopware.Context.api))}),Promise.all(i).then(()=>{this.isLoading=!1,this.$emit("save")})}}});
