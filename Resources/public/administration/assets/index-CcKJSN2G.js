const i=`{% block sw_condition_base %} <div class="sw-condition"> {% block sw_condition_base_content %} <div class="sw-condition__container" :class="conditionClasses" > {% block sw_condition_base_field_condition %} <sw-condition-type-select v-bind="{ condition, availableTypes, hasError, availableGroups }" :disabled="disabled || undefined" /> {% endblock %} <div class="sw-condition__value-content"> {% block sw_condition_value_before_content %} {% endblock %} {% block sw_condition_value_content %} <sw-text-field class="sw-condition__placeholder" size="medium" :placeholder="$tc('global.sw-condition.condition.placeholder-warning')" :disabled="disabled || undefined" /> {% endblock %} </div> {% block sw_condition_base_field_actions %} <sw-context-button class="sw-condition__context-button" :disabled="disabled || undefined" > {% block sw_condition_base_field_create_before_action %} <sw-context-menu-item class="sw-condition__create-before-action" :disabled="disabled || undefined" @click="onCreateBefore" > {{ $tc('global.sw-condition.condition.createBefore') }} </sw-context-menu-item> {% endblock %} {% block sw_condition_base_field_create_after_action %} <sw-context-menu-item class="sw-condition__create-after-action" :disabled="disabled || undefined" @click="onCreateAfter" > {{ $tc('global.sw-condition.condition.createAfter') }} </sw-context-menu-item> {% endblock %} {% block sw_condition_base_field_delete_action %} <sw-context-menu-item :disabled="disabled || undefined" variant="danger" @click="onDeleteCondition" > {{ $tc('global.default.delete') }} </sw-context-menu-item> {% endblock %} </sw-context-button> {% endblock %} </div> {% endblock %} {% block sw_condition_base_error %} <sw-field-error :error="currentError" /> {% endblock %} </div> {% endblock %}`,{Component:t}=Cicada,{mapPropertyErrors:o}=t.getComponentHelper();t.register("sw-condition-base",{template:i,compatConfig:Cicada.compatConfig,inheritAttrs:!1,inject:["conditionDataProviderService","availableTypes","childAssociationField","availableGroups"],emits:["create-before","create-after","condition-delete"],props:{condition:{type:Object,required:!1,default:null},disabled:{type:Boolean,required:!1,default:!1}},computed:{conditionClasses(){return{"has--error":this.hasError,"is--disabled":this.hasNoComponent||this.disabled}},...o("condition",["type"]),currentError(){return this.conditionTypeError},hasError(){return this.currentError!==null},valueErrorPath(){return`${this.condition.getEntityName()}.${this.condition.id}.value`},value(){return this.condition.value},hasNoComponent(){return this.conditionDataProviderService.getComponentByCondition(this.condition)==="sw-condition-not-found"},operator(){var e;return((e=this.condition.value)==null?void 0:e.operator)??null},isEmpty(){return this.operator===this.conditionDataProviderService.getOperatorSet("empty")[0].identifier}},watch:{value(){this.hasError&&this.$store.commit("error/removeApiError",{expression:this.valueErrorPath}),this.isEmpty&&this.inputKey&&(this.isCompatEnabled("INSTANCE_DELETE")?this.$delete(this.condition.value,this.inputKey):delete this.condition.value[this.inputKey])}},methods:{onCreateBefore(){this.$emit("create-before")},onCreateAfter(){this.$emit("create-after")},onDeleteCondition(){this.$emit("condition-delete")},ensureValueExist(){(typeof this.condition.value>"u"||this.condition.value===null)&&(this.condition.value={})}}});
//# sourceMappingURL=index-CcKJSN2G.js.map
