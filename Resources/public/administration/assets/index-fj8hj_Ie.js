const o='{% block sw_condition_value_content %} <div class="sw-condition-shipping-zip-code sw-condition__condition-value"> {% block sw_condition_shipping_zip_code_field_numeric %} <sw-single-select v-model:value="isNumeric" name="sw-field--isNumeric" :disabled="disabled || undefined" class="sw-condition-zipcode-type-select" size="medium" :options="numericOptions" required @update:value="onChangeNumeric" /> {% endblock %} {% block sw_condition_shipping_zip_code_field_operator %} <sw-condition-operator-select v-bind="{ operators, condition }" :disabled="disabled || undefined" /> {% endblock %} {% block sw_condition_shipping_zip_code_field_zip_codes %} <sw-tagged-field v-if="!isNumeric && !isEmpty" v-model:value="zipCodes" name="sw-field--zipCodes" size="medium" :placeholder="taggedFieldPlaceholder" :disabled="disabled || undefined" /> <sw-number-field v-if="isNumeric && !isEmpty" v-model:value="zipCodes" name="sw-field--zipCodes" size="medium" :disabled="disabled || undefined" :min="0" :digits="20" /> {% endblock %} </div> {% endblock %}',{Component:i}=Cicada,{mapPropertyErrors:t}=i.getComponentHelper();i.extend("sw-condition-shipping-zip-code","sw-condition-base",{template:o,data(){return{inputKey:"zipCodes",isNumeric:!1}},computed:{operators(){return this.isNumeric?this.conditionDataProviderService.getOperatorSet("zipCode"):this.conditionDataProviderService.addEmptyOperatorToOperatorSet(this.conditionDataProviderService.getOperatorSet("multiStore"))},zipCodes:{get(){return this.ensureValueExist(),this.condition.value.zipCodes?this.isNumeric?Number(this.condition.value.zipCodes[0]):this.condition.value.zipCodes:this.isNumeric?null:[]},set(e){this.ensureValueExist(),Array.isArray(e)||(e=[e.toString()]),this.condition.value={...this.condition.value,zipCodes:e}}},taggedFieldPlaceholder(){return`${this.$tc("global.sw-tagged-field.text-default-placeholder")} ${this.$tc("global.sw-condition.condition.zipCodeWildcardPlaceholder")}`},...t("condition",["value.operator","value.zipCodes"]),currentError(){return this.conditionValueOperatorError||this.conditionValueZipCodesError},numericOptions(){return[{value:!1,label:this.$tc("sw-property.detail.alphanumericSortingType")},{value:!0,label:this.$tc("sw-property.detail.numericSortingType")}]}},created(){this.createdComponent()},methods:{createdComponent(){this.ensureValueExist(),this.condition.value.operator!==void 0&&(this.isNumeric=!["=","!=","empty"].includes(this.condition.value.operator))},onChangeNumeric(e){this.ensureValueExist(),e===null&&(this.isNumeric=!1),this.condition.value.operator=void 0}}});
//# sourceMappingURL=index-fj8hj_Ie.js.map
