{"version":3,"file":"index-DVdwwX1W.js","sources":["../../../app/administration/src/module/sw-import-export/component/sw-import-export-edit-profile-modal-identifiers/sw-import-export-edit-profile-modal-identifiers.html.twig","../../../app/administration/src/module/sw-import-export/component/sw-import-export-edit-profile-modal-identifiers/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_import_export_edit_profile_modal_identifiers %}\n<div class=\"sw-import-export-edit-profile-modal-identifiers\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_import_export_edit_profile_modal_identifiers_grid %}\n    <sw-data-grid\n        v-if=\"identifiers && identifiers.length\"\n        :data-source=\"identifiers\"\n        :compact-mode=\"false\"\n        :show-selection=\"false\"\n        :show-actions=\"false\"\n        :columns=\"identifierColumns\"\n        plain-appearance\n        class=\"sw-import-export-edit-profile-modal-identifiers__grid\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_import_export_edit_profile_modal_identifiers_grid_entity_name_column %}\n        <template #column-identifierName=\"{ item }\">\n            {{ item.propertyNames.join(', ') }}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_import_export_edit_profile_modal_identifiers_grid_mapped_column %}\n        <template #column-mapped=\"{ item }\">\n            <sw-single-select\n                v-if=\"item.relation !== 'many_to_many'\"\n                required\n                :value=\"item.selected\"\n                :options=\"item.options\"\n                :disabled=\"profile.systemDefault\"\n                :show-clearable-button=\"item.selected !== 'id'\"\n                @update:value=\"onChangeIdentifier($event, item.entityName)\"\n            />\n            <sw-import-export-entity-path-select\n                v-else\n                :value=\"item.selected\"\n                :languages=\"languages\"\n                :currencies=\"currencies\"\n                :entity-type=\"item.entityName\"\n                :disabled=\"profile.systemDefault\"\n                :custom-field-sets=\"customFieldSets\"\n                @update:value=\"onChangeIdentifier($event, item.entityName)\"\n            >\n                <template #before-item-list>\n                    <span></span>\n                </template>\n            </sw-import-export-entity-path-select>\n        </template>\n        {% endblock %}\n    </sw-data-grid>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_import_export_edit_profile_modal_identifiers_empty_state %}\n    <sw-empty-state\n        v-else\n        class=\"sw-import-export-edit-profile-modal-identifiers__empty-state\"\n        :title=\"$tc('sw-import-export.profile.mappingEmptyState')\"\n        :absolute=\"false\"\n    />\n    {% endblock %}\n</div>\n{% endblock %}\n","/**\n * @package services-settings\n */\nimport template from './sw-import-export-edit-profile-modal-identifiers.html.twig';\nimport './sw-import-export-edit-profile-modal-identifiers.scss';\n\nconst Criteria = Cicada.Data.Criteria;\n\n/**\n * @private\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'importExportUpdateByMapping',\n    ],\n\n    props: {\n        profile: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            currencies: [],\n            languages: [],\n            customFieldSets: [],\n        };\n    },\n\n    computed: {\n        languageRepository() {\n            return this.repositoryFactory.create('language');\n        },\n\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n\n        customFieldSetRepository() {\n            return this.repositoryFactory.create('custom_field_set');\n        },\n\n        languageCriteria() {\n            const criteria = new Criteria(1, 500);\n            criteria.addAssociation('locale');\n\n            return criteria;\n        },\n\n        currencyCriteria() {\n            return new Criteria(1, 500);\n        },\n\n        customFieldSetCriteria() {\n            const criteria = new Criteria(1, 500);\n            criteria.addAssociation('relations');\n            criteria.addAssociation('customFields');\n\n            return criteria;\n        },\n\n        identifierColumns() {\n            return [\n                {\n                    property: 'identifierName',\n                    label: 'sw-import-export.profile.identifiers.identifierNameLabel',\n                    allowResize: false,\n                    primary: true,\n                },\n                {\n                    property: 'mapped',\n                    label: 'sw-import-export.profile.identifiers.mappedKeyLabel',\n                    allowResize: false,\n                    width: '100%',\n                },\n            ];\n        },\n\n        identifiers() {\n            const identifiers = {};\n\n            if (!this.profile.mapping) {\n                return [];\n            }\n\n            this.profile.mapping.forEach((mapping) => {\n                const { entity, path, relation, name } = this.importExportUpdateByMapping.getEntity(\n                    this.profile.sourceEntity,\n                    mapping.key,\n                );\n\n                if (!entity || relation === 'one_to_many') {\n                    return;\n                }\n\n                identifiers[entity] = identifiers[entity] ?? {\n                    entityName: entity,\n                    options: [],\n                    selected: this.importExportUpdateByMapping.getSelected(entity, this.profile.updateBy),\n                    relation,\n                    propertyNames: [],\n                };\n\n                const value = path !== '' ? mapping.key.replace(new RegExp(`^(${path}\\.)`), '') : mapping.key;\n\n                identifiers[entity].options.push({ label: value, value });\n\n                if (!identifiers[entity].propertyNames.includes(name)) {\n                    identifiers[entity].propertyNames.push(name);\n                }\n            });\n\n            return Object.values(identifiers);\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.languageRepository.search(this.languageCriteria).then((languages) => {\n                this.languages = languages;\n                this.languages.push({ locale: { code: 'DEFAULT' } });\n            });\n\n            this.currencyRepository.search(this.currencyCriteria).then((currencies) => {\n                this.currencies = currencies;\n                this.currencies.push({ isoCode: 'DEFAULT' });\n            });\n\n            this.customFieldSetRepository.search(this.customFieldSetCriteria).then((customFieldSets) => {\n                this.customFieldSets = customFieldSets;\n            });\n        },\n\n        onChangeIdentifier(mappedKey, entityName) {\n            this.importExportUpdateByMapping.updateMapping(this.profile, mappedKey, entityName);\n        },\n    },\n};\n"],"names":["template","Criteria","index","criteria","identifiers","mapping","entity","path","relation","name","value","languages","currencies","customFieldSets","mappedKey","entityName"],"mappings":"AAAA,MAAeA,EAAA,gsDCMTC,EAAW,OAAO,KAAK,SAKdC,EAAA,CACX,SAAAF,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,oBACA,6BACH,EAED,MAAO,CACH,QAAS,CACL,KAAM,OACN,SAAU,GACV,QAAS,IACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,WAAY,CAAE,EACd,UAAW,CAAE,EACb,gBAAiB,CAAE,CAC/B,CACK,EAED,SAAU,CACN,oBAAqB,CACjB,OAAO,KAAK,kBAAkB,OAAO,UAAU,CAClD,EAED,oBAAqB,CACjB,OAAO,KAAK,kBAAkB,OAAO,UAAU,CAClD,EAED,0BAA2B,CACvB,OAAO,KAAK,kBAAkB,OAAO,kBAAkB,CAC1D,EAED,kBAAmB,CACf,MAAMG,EAAW,IAAIF,EAAS,EAAG,GAAG,EACpC,OAAAE,EAAS,eAAe,QAAQ,EAEzBA,CACV,EAED,kBAAmB,CACf,OAAO,IAAIF,EAAS,EAAG,GAAG,CAC7B,EAED,wBAAyB,CACrB,MAAME,EAAW,IAAIF,EAAS,EAAG,GAAG,EACpC,OAAAE,EAAS,eAAe,WAAW,EACnCA,EAAS,eAAe,cAAc,EAE/BA,CACV,EAED,mBAAoB,CAChB,MAAO,CACH,CACI,SAAU,iBACV,MAAO,2DACP,YAAa,GACb,QAAS,EACZ,EACD,CACI,SAAU,SACV,MAAO,sDACP,YAAa,GACb,MAAO,MACV,CACjB,CACS,EAED,aAAc,CACV,MAAMC,EAAc,CAAA,EAEpB,OAAK,KAAK,QAAQ,SAIlB,KAAK,QAAQ,QAAQ,QAASC,GAAY,CACtC,KAAM,CAAE,OAAAC,EAAQ,KAAAC,EAAM,SAAAC,EAAU,KAAAC,GAAS,KAAK,4BAA4B,UACtE,KAAK,QAAQ,aACbJ,EAAQ,GAC5B,EAEgB,GAAI,CAACC,GAAUE,IAAa,cACxB,OAGJJ,EAAYE,CAAM,EAAIF,EAAYE,CAAM,GAAK,CACzC,WAAYA,EACZ,QAAS,CAAE,EACX,SAAU,KAAK,4BAA4B,YAAYA,EAAQ,KAAK,QAAQ,QAAQ,EACpF,SAAAE,EACA,cAAe,CAAE,CACrC,EAEgB,MAAME,EAAQH,IAAS,GAAKF,EAAQ,IAAI,QAAQ,IAAI,OAAO,KAAKE,CAAI,IAAK,EAAG,EAAE,EAAIF,EAAQ,IAE1FD,EAAYE,CAAM,EAAE,QAAQ,KAAK,CAAE,MAAOI,EAAO,MAAAA,CAAK,CAAE,EAEnDN,EAAYE,CAAM,EAAE,cAAc,SAASG,CAAI,GAChDL,EAAYE,CAAM,EAAE,cAAc,KAAKG,CAAI,CAE/D,CAAa,EAEM,OAAO,OAAOL,CAAW,GA9BrB,EA+Bd,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,mBAAmB,OAAO,KAAK,gBAAgB,EAAE,KAAMO,GAAc,CACtE,KAAK,UAAYA,EACjB,KAAK,UAAU,KAAK,CAAE,OAAQ,CAAE,KAAM,SAAW,CAAA,CAAE,CACnE,CAAa,EAED,KAAK,mBAAmB,OAAO,KAAK,gBAAgB,EAAE,KAAMC,GAAe,CACvE,KAAK,WAAaA,EAClB,KAAK,WAAW,KAAK,CAAE,QAAS,SAAW,CAAA,CAC3D,CAAa,EAED,KAAK,yBAAyB,OAAO,KAAK,sBAAsB,EAAE,KAAMC,GAAoB,CACxF,KAAK,gBAAkBA,CACvC,CAAa,CACJ,EAED,mBAAmBC,EAAWC,EAAY,CACtC,KAAK,4BAA4B,cAAc,KAAK,QAASD,EAAWC,CAAU,CACrF,CACJ,CACL"}