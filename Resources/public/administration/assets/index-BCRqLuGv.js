import{C as i}from"./channel-oRk5-XZJ.js";import"./administration-DCOj2uiN.js";const n=`{% block sw_cms_element_product_description_reviews_config %} <div class="sw-cms-el-config-product-description-reviews-rating"> {% block sw_cms_element_product_description_reviews_config_tabs %} <sw-tabs position-identifier="sw-cms-element-product-description-reviews" class="sw-cms-el-config-product-description-reviews__tabs" default-item="content" > <template #default="{ active }"> {% block sw_cms_element_product_description_reviews_config_tab_content %} <sw-tabs-item name="content" :title="$tc('sw-cms.elements.general.config.tab.content')" :active-tab="active" > {{ $tc('sw-cms.elements.general.config.tab.content') }} </sw-tabs-item> {% endblock %} {% block sw_cms_element_product_description_reviews_config_tab_options %} <sw-tabs-item name="options" :title="$tc('sw-cms.elements.general.config.tab.options')" :active-tab="active" > {{ $tc('sw-cms.elements.general.config.tab.options') }} </sw-tabs-item> {% endblock %} </template> <template #content="{ active }"> {% block sw_cms_element_product_description_reviews_config_content %} <sw-container v-if="active === 'content'" class="sw-cms-el-config-product-description-reviews-config__tab-content" :columns="'minmax(300px, 1fr)'" > {% block sw_cms_element_product_description_reviews_warning %} <sw-alert v-if="isProductPage" class="sw-cms-el-config-buy-box__warning" variant="info" > {{ $tc('sw-cms.elements.productDescriptionReviews.infoText.descriptionAndReviewsElement') }} </sw-alert> {% endblock %} {% block sw_cms_element_product_description_reviews_config_product_select %} <sw-entity-single-select v-if="!isProductPage" ref="cmsProductSelection" v-model:value="element.config.product.value" entity="product" :label="$tc('sw-cms.elements.productBox.config.label.selection')" :placeholder="$tc('sw-cms.elements.productBox.config.placeholder.selection')" :criteria="productCriteria" :context="productSelectContext" show-clearable-button @update:value="onProductChange" > {% block sw_entity_single_select_variant_selected_item %} <template #selection-label-property="{ item }"> <sw-product-variant-info :variations="item.variation" > {{ item.translated.name || item.name }} </sw-product-variant-info> </template> {% endblock %} {% block sw_entity_single_select_variant_result_item %} <template #result-item="{ item, index }"> <sw-select-result v-bind="{ item, index }" > {% block sw_entity_single_select_base_results_list_result_label %} <span class="sw-select-result__result-item-text"> <sw-product-variant-info :variations="item.variation"> {{ item.translated.name || item.name }} </sw-product-variant-info> </span> {% endblock %} </sw-select-result> </template> {% endblock %} </sw-entity-single-select> {% endblock %} </sw-container> {% endblock %} {% block sw_cms_el_product_description_rating_config_options %} <sw-container v-if="active === 'options'" class="sw-cms-el-config-text__tab-options" > {% block sw_cms_el_product_description_rating_config_options_alignment %} <sw-select-field v-model:value="element.config.alignment.value" :label="$tc('sw-cms.elements.general.config.label.alignment')" :placeholder="$tc('sw-cms.elements.general.config.label.alignment')" > <option value="flex-start"> {{ $tc('sw-cms.elements.general.config.label.verticalAlignTop') }} </option> <option value="center"> {{ $tc('sw-cms.elements.general.config.label.verticalAlignCenter') }} </option> <option value="flex-end"> {{ $tc('sw-cms.elements.general.config.label.verticalAlignBottom') }} </option> </sw-select-field> {% endblock %} </sw-container> {% endblock %} </template> </sw-tabs> {% endblock %} </div> {% endblock %}`,{Mixin:s}=Cicada,l={template:n,compatConfig:Cicada.compatConfig,inject:["repositoryFactory"],emits:["element-update"],mixins:[s.getByName("cms-element")],computed:{productRepository(){return this.repositoryFactory.create("product")},productSelectContext(){return{...Cicada.Context.api,inheritance:!0}},productCriteria(){const e=new i(1,25);return e.addAssociation("options.group"),e},selectedProductCriteria(){const e=new i(1,25);return e.addAssociation("properties"),e},isProductPage(){var e,t;return((t=(e=this.cmsPageState)==null?void 0:e.currentPage)==null?void 0:t.type)==="product_detail"}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("product-description-reviews")},onProductChange(e){e?this.productRepository.get(e,this.productSelectContext,this.selectedProductCriteria).then(t=>{this.element.config.product.value=e,this.isCompatEnabled("INSTANCE_SET")?(this.$set(this.element.data,"productId",e),this.$set(this.element.data,"product",t)):(this.element.data.productId=e,this.element.data.product=t)}):(this.element.config.product.value=null,this.isCompatEnabled("INSTANCE_SET")?(this.$set(this.element.data,"productId",null),this.$set(this.element.data,"product",null)):(this.element.data.productId=null,this.element.data.product=null)),this.$emit("element-update",this.element)}}};export{l as default};
//# sourceMappingURL=index-BCRqLuGv.js.map
