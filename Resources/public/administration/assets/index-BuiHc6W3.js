const m=`{% block sw_custom_field_list %} <sw-card class="sw-custom-field-list" position-identifier="sw-custom-field-list" > {% block sw_custom_field_list_toolbar %} <div class="sw-custom-field-list__toolbar"> <sw-container columns="1fr 32px minmax(100px, 200px)" gap="0 10px" > {% block sw_custom_field_list_toolbar_searchfield %} <sw-simple-search-field v-model:value="term" size="small" variant="form" :delay="500" @search-term-change="onSearchTermChange" /> {% endblock %} {% block sw_custom_field_list_toolbar_delete %} <sw-button v-tooltip.bottom="{ message: $tc('sw-privileges.tooltip.warning'), disabled: acl.can('custom_field.editor'), showOnDisabledElements: true }" :disabled="deleteButtonDisabled || !acl.can('custom_field.editor') || undefined" square size="small" class="sw-custom-field-list__delete-button" @click="onDeleteCustomFields" > <sw-icon name="regular-trash" small /> </sw-button> {% endblock %} {% block sw_custom_field_list_toolbar_add %} <sw-button v-tooltip.bottom="{ message: $tc('sw-privileges.tooltip.warning'), disabled: acl.can('custom_field.editor'), showOnDisabledElements: true }" :disabled="set.isLoading || !acl.can('custom_field.editor') || undefined" size="small" class="sw-custom-field-list__add-button" @click="onAddCustomField(set)" > {{ $tc('sw-settings-custom-field.set.detail.addCustomField') }} </sw-button> {% endblock %} </sw-container> </div> {% endblock %} {% block sw_custom_field_list_grid %} <sw-grid v-if="(customFields && customFields.length > 0) || term" ref="grid" class="sw-custom-field-list__grid" :items="customFields" :is-fullpage="false" table :selectable="acl.can('custom_field.editor')" @inline-edit-finish="onInlineEditFinish" @inline-edit-cancel="onInlineEditCancel" @sw-grid-select-item="selectionChanged" @sw-grid-select-all="selectionChanged" > <template #columns="{ item }" > {% block sw_custom_field_list_grid_column_label %} <sw-grid-column data-index="label" truncate flex="minmax(150px, 1fr)" :label="$tc('sw-settings-custom-field.customField.list.labelCustomFieldLabel')" > <span class="sw-custom-field-list__custom-field-label" role="textbox" tabindex="0" @click="onCustomFieldEdit(item)" @keydown.enter="onCustomFieldEdit(item)" > {{ getInlineSnippet(item.config.label) || item.name }} </span> <template #inline-edit> <sw-text-field :value="getInlineSnippet(item.config.label) || item.name" disabled /> </template> </sw-grid-column> {% endblock %} {% block sw_custom_field_list_grid_column_type %} <sw-grid-column data-index="type" truncate flex="minmax(150px, 200px)" :label="$tc('sw-settings-custom-field.customField.list.labelCustomFieldType')" > {{ $tc(\`sw-settings-custom-field.types.\${item.config.customFieldType || item.type}\`) }} <template #inline-edit> <sw-text-field :value="$tc(\`sw-settings-custom-field.types.\${item.config.customFieldType || item.type}\`)" disabled /> </template> </sw-grid-column> {% endblock %} {% block sw_custom_field_list_grid_column_custom_field_position %} <sw-grid-column data-index="position" flex="minmax(50px, 100px)" :editable="acl.can('custom_field.editor')" :label="$tc('sw-settings-custom-field.customField.list.labelCustomFieldPosition')" > {{ item.config.customFieldPosition }} {% block sw_custom_field_list_grid_column_custom_field_position_edit %} <template #inline-edit> <sw-number-field v-model:value="item.config.customFieldPosition" number-type="int" /> </template> {% endblock %} </sw-grid-column> {% endblock %} {% block sw_custom_field_list_grid_column_actions %} <sw-grid-column flex="minmax(100px, 100px)" align="center" > <sw-context-button> {% block sw_custom_field_list_grid_column_actions_edit %} <sw-context-menu-item class="sw-custom-field-list__edit-action" :disabled="item.isDeleted || !acl.can('custom_field.editor') || undefined" @click="onCustomFieldEdit(item)" > {{ $tc('sw-settings-custom-field.customField.list.contextMenuCustomFieldView') }} </sw-context-menu-item> {% endblock %} {% block sw_custom_field_list_grid_column_actions_reset_delete %} <sw-context-menu-item v-if="item.isDeleted" variant="success" :disabled="!acl.can('custom_field.editor') || undefined" > {{ $tc('sw-settings-custom-field.customField.list.contextMenuCustomFieldResetDelete') }} </sw-context-menu-item> {% endblock %} {% block sw_custom_field_list_grid_column_actions_delete %} <sw-context-menu-item v-else variant="danger" class="sw-custom-field-list__delete-action" :disabled="!acl.can('custom_field.editor')" @click="onCustomFieldDelete(item)" > {{ $tc('sw-settings-custom-field.customField.list.contextMenuCustomFieldDelete') }} </sw-context-menu-item> {% endblock %} </sw-context-button> </sw-grid-column> {% endblock %} </template> {% block sw_custom_field_list_grid_pagination %} <template #pagination> <sw-pagination :limit="limit" :page="page" :auto-hide="false" :total="customFields.total" :steps="[limit]" @page-change="onPageChange" /> </template> {% endblock %} </sw-grid> {% endblock %} {% block sw_custom_field_list_empty_state %} <sw-empty-state v-else-if="!set.isLoading" :absolute="false" :title="$tc('sw-settings-custom-field.set.detail.messageCustomFieldsEmpty')" /> {% endblock %} {% block sw_custom_field_list_custom_field_detail %} <sw-custom-field-detail v-if="currentCustomField" :set="set" :current-custom-field="currentCustomField" @custom-field-edit-save="onSaveCustomField" @custom-field-edit-cancel="onCancelCustomField" /> {% endblock %} {% block sw_custom_field_list_custom_field_delete %} <sw-modal v-if="deleteCustomField" :title="$tc('sw-settings-custom-field.customField.list.titleDeleteAction', deleteCustomField.length)" variant="small" @modal-close="onCancelDeleteCustomField" > {% block sw_custom_field_list_custom_field_delete_text %} <p class="sw-custom-field-delete__description"> {{ $tc('sw-settings-custom-field.customField.list.textDeleteActionConfirmation', deleteCustomField.length, { count: deleteCustomField.length }) }} </p> {% endblock %} {% block sw_custom_field_list_custom_field_delete_actions %} <template #modal-footer> {% block sw_custom_field_list_custom_field_delete_action_cancel %} <sw-button size="small" @click="onCancelDeleteCustomField" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_custom_field_list_custom_field_delete_action_confirm %} <sw-button variant="danger" size="small" @click="onDeleteCustomField" > {{ $tc('global.default.delete') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} {% block sw_custom_field_list_loader %} <sw-loader v-if="isLoading" /> {% endblock %} </sw-card> {% endblock %}`,{Criteria:s}=Shopware.Data,{Mixin:a}=Shopware,l=Shopware.Utils.types,u={template:m,inject:["repositoryFactory","acl"],provide(){return{SwCustomFieldListIsCustomFieldNameUnique:this.isCustomFieldNameUnique}},emits:["loading-changed"],mixins:[a.getByName("sw-inline-snippet"),a.getByName("notification")],props:{set:{type:Object,required:!0}},data(){return{term:"",isLoading:!1,currentCustomField:null,deleteButtonDisabled:!0,disableRouteParams:!0,deleteCustomField:null,customFields:null,page:1,total:0,limit:10}},computed:{customFieldRepository(){return this.repositoryFactory.create(this.set.customFields.entity,this.set.customFields.source)},globalCustomFieldRepository(){return this.repositoryFactory.create("custom_field")}},watch:{isLoading(e){this.$emit("loading-changed",e)}},created(){this.createdComponent()},methods:{onSearchTermChange(){this.loadCustomFields()},createdComponent(){this.loadCustomFields()},loadCustomFields(){this.isLoading=!0;const e=new s(this.page,this.limit);return e.addFilter(s.equals("customFieldSetId",this.set.id)),e.addSorting(s.sort("config.customFieldPosition","ASC",!0)),this.term&&e.setTerm(this.term),this.customFieldRepository.search(e).then(t=>(this.customFields=t,this.total=t.total,t)).finally(()=>{this.isLoading=!1})},selectionChanged(e){this.deleteButtonDisabled=Object.keys(e).length<=0},onCustomFieldDelete(e){this.deleteCustomField=e},onDeleteCustomFields(){this.deleteCustomField=Array.from(Object.values(this.$refs.grid.getSelection()))},onAddCustomField(){const e=this.customFieldRepository.create();e.storeApiAware=!0,this.onCustomFieldEdit(e)},onCancelCustomField(){this.customFieldRepository.discard(this.currentCustomField),this.currentCustomField=null},onInlineEditFinish(e){this.onSaveCustomField(e)},onSaveCustomField(e=this.currentCustomField){return this.removeEmptyProperties(e.config),this.customFieldRepository.save(e).catch(t=>{var o,d,n,c;const i=((c=(n=(d=(o=t==null?void 0:t.response)==null?void 0:o.data)==null?void 0:d.errors)==null?void 0:n[0])==null?void 0:c.detail)??"Error";this.createNotificationError({message:i})}).finally(()=>{this.currentCustomField=null,this.$nextTick(()=>{this.loadCustomFields()})})},onInlineEditCancel(e){this.customFieldRepository.discard(e)},onCustomFieldEdit(e){this.currentCustomField=e},removeEmptyProperties(e){Object.keys(e).forEach(t=>{["number","boolean"].includes(typeof e[t])||((l.isObject(e[t])||l.isArray(e[t]))&&this.removeEmptyProperties(e[t]),(l.isEmpty(e[t])||e[t]===void 0)&&e[t!==null]&&delete e[t])})},isCustomFieldNameUnique(e){const t=new s(1,25);return t.addFilter(s.equals("name",e.name)),this.globalCustomFieldRepository.search(t).then(i=>i.length===0)},onPageChange(e){this.page=e.page,this.loadCustomFields()},onCancelDeleteCustomField(){this.deleteCustomField=null},onDeleteCustomField(){const e=[];return Array.isArray(this.deleteCustomField)?this.deleteCustomField.forEach(i=>e.push(i.id)):e.push(this.deleteCustomField.id),this.globalCustomFieldRepository.syncDeleted(e,Shopware.Context.api).then(()=>{this.deleteButtonDisabled=!0,this.deleteCustomField=null,this.$nextTick(()=>{this.loadCustomFields()})})}}};export{u as default};
