const l=`{% block sw_block_field %} <sw-block-field class="sw-field--select" :class="swFieldSelectClasses" v-bind="{ ...$attrs, ...inheritanceAttrs }" :name="formFieldName" > <template #sw-field-input="{ identification, helpText, error, disabled, size, setFocusClass, removeFocusClass }"> <select :id="identification" :name="identification" :class="{ 'is--placeholder': currentValue === null }" :disabled="disabled" :value="currentValue" @change="onChange" @focus="setFocusClass" @blur="removeFocusClass" > <option v-if="placeholder" class="sw-field--select__placeholder-option" :value="''" > {{ placeholder }} </option> <slot> <template v-if="options && options.length"> <option v-for="option in options" :key="option.id" :value="option.id" :disabled="disabled || option.disabled" > {{ getOptionName(option.name) }} </option> </template> </slot> </select> <sw-loader v-if="!$slots.default && !hasOptions" class="sw-field--select__loader" size="20px" /> <div class="sw-field--select__options"> <sw-icon name="regular-chevron-down-xs" small decorative /> </div> </template> <template #label> <slot name="label"></slot> </template> <template #hint> <slot name="hint"></slot> </template> </sw-block-field> {% endblock %}`,{Component:s,Mixin:t}=Shopware;s.register("sw-select-field-deprecated",{template:l,inheritAttrs:!1,inject:["feature"],emits:["update:value"],mixins:[t.getByName("sw-form-field"),t.getByName("remove-api-error")],props:{value:{type:String,required:!1,default:null},placeholder:{type:String,required:!1,default:null},options:{type:Array,required:!1,default:null},aside:{type:Boolean,required:!1,default:!1}},data(){return{currentValue:this.value}},computed:{locale(){return this.$root.$i18n.locale},fallbackLocale(){return this.$root.$i18n.fallbackLocale},swFieldSelectClasses(){return{"sw-field--select-aside":this.aside&&this.$attrs.label}},hasOptions(){return this.options&&this.options.length}},watch:{value(){this.currentValue=this.value}},methods:{getOptionName(e){return e?e[this.locale]?e[this.locale]:e[this.fallbackLocale]?e[this.fallbackLocale]:e:""},onChange(e){this.currentValue=e.target.value,e.target.value===""&&(this.currentValue=null),this.$emit("update:value",this.currentValue)}}});
