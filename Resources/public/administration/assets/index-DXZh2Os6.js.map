{"version":3,"file":"index-DXZh2Os6.js","sources":["../../../app/administration/src/module/sw-settings-currency/page/sw-settings-currency-detail/sw-settings-currency-detail.html.twig","../../../app/administration/src/module/sw-settings-currency/page/sw-settings-currency-detail/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_currency_detail %}\n<sw-page class=\"sw-settings-currency-detail\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_currency_detail_header %}\n    <template #smart-bar-header>\n        <h2>{{ placeholder(currency, 'name', $tc('sw-settings-currency.detail.textHeadline')) }}</h2>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_currency_detail_actions %}\n    <template #smart-bar-actions>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_currency_detail_actions_abort %}\n        <sw-button\n            v-tooltip.bottom=\"tooltipCancel\"\n            :disabled=\"isLoading\"\n            @click=\"onCancel\"\n        >\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_currency_detail_actions_save %}\n        <sw-button-process\n            v-model:processSuccess=\"isSaveSuccessful\"\n            v-tooltip.bottom=\"tooltipSave\"\n            class=\"sw-settings-currency-detail__save-action\"\n            :is-loading=\"isLoading\"\n            :disabled=\"isLoading || !acl.can('currencies.editor') || undefined\"\n            variant=\"primary\"\n            @update:process-success=\"saveFinish\"\n            @click.prevent=\"onSave\"\n        >\n            {{ $tc('sw-settings-currency.detail.buttonSave') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_currency_detail_language_switch %}\n    <template #language-switch>\n        <sw-language-switch\n            :disabled=\"currencyId == null\"\n            :save-changes-function=\"saveOnLanguageChange\"\n            :abort-change-function=\"abortOnLanguageChange\"\n            @on-change=\"onChangeLanguage\"\n        />\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_currency_detail_content %}\n    <template #content>\n        <sw-card-view>\n\n            <template v-if=\"isLoading\">\n                <sw-skeleton />\n                <sw-skeleton />\n            </template>\n\n            <template v-else>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_currency_detail_content_language_info %}\n                <sw-language-info\n                    :entity-description=\"placeholder(currency, 'name', $tc('sw-settings-currency.detail.textHeadline'))\"\n                />\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_currency_detail_content_card %}\n                <sw-card\n                    position-identifier=\"sw-settings-currency-detail-content\"\n                    :is-loading=\"isLoading\"\n                    :title=\"$tc('sw-settings-currency.detail.titleCard')\"\n                >\n                    <sw-container\n                        columns=\"repeat(auto-fit, minmax(250px, 1fr))\"\n                        gap=\"0px 30px\"\n                    >\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_currency_detail_content_field_name %}\n                        <sw-text-field\n                            v-model:value=\"currency.name\"\n                            name=\"sw-field--currency-name\"\n                            required\n                            :disabled=\"!acl.can('currencies.editor')\"\n                            :label=\"$tc('sw-settings-currency.detail.labelName')\"\n                            :placeholder=\"placeholder(currency, 'name', $tc('sw-settings-currency.detail.placeholderName'))\"\n                            :error=\"currencyNameError\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_currency_detail_content_field_iso_code %}\n                        <sw-text-field\n                            v-model:value=\"currency.isoCode\"\n                            name=\"sw-field--currency-isoCode\"\n                            required\n                            :disabled=\"!acl.can('currencies.editor')\"\n                            :label=\"$tc('sw-settings-currency.detail.labelIsoCode')\"\n                            :placeholder=\"placeholder(currency, 'isoCode', $tc('sw-settings-currency.detail.placeholderIsoCode'))\"\n                            :error=\"currencyIsoCodeError\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_currency_detail_content_field_short_name %}\n                        <sw-text-field\n                            v-model:value=\"currency.shortName\"\n                            name=\"sw-field--currency-shortName\"\n                            required\n                            :disabled=\"!acl.can('currencies.editor')\"\n                            :label=\"$tc('sw-settings-currency.detail.labelShortName')\"\n                            :placeholder=\"placeholder(currency, 'shortName', $tc('sw-settings-currency.detail.placeholderShortName'))\"\n                            :error=\"currencyShortNameError\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_currency_detail_content_field_symbol %}\n                        <sw-text-field\n                            v-model:value=\"currency.symbol\"\n                            name=\"sw-field--currency-symbol\"\n                            required\n                            :disabled=\"!acl.can('currencies.editor')\"\n                            :label=\"$tc('sw-settings-currency.detail.labelSymbol')\"\n                            :placeholder=\"$tc('sw-settings-currency.detail.placeholderSymbol')\"\n                            :error=\"currencySymbolError\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_currency_detail_content_field_factor %}\n                        <sw-number-field\n                            v-model:value=\"currency.factor\"\n                            name=\"sw-field--currency-factor\"\n                            required\n                            :digits=\"14\"\n                            :label=\"$tc('sw-settings-currency.detail.labelFactor')\"\n                            :placeholder=\"$tc('sw-settings-currency.detail.placeholderFactor')\"\n                            :error=\"currencyFactorError\"\n                            :disabled=\"currency.isSystemDefault || !acl.can('currencies.editor')\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_currency_detail_content_field_tax_free_from %}\n                        <sw-number-field\n                            v-model:value=\"currency.taxFreeFrom\"\n                            name=\"sw-field--currency-taxFreeFrom\"\n                            :min=\"0\"\n                            :label=\"$tc('sw-settings-currency.detail.taxFreeFrom')\"\n                            :help-text=\"$tc('sw-settings-currency.detail.taxFreeFromHelpText', 0 , { currencyName: `${currency.name}` })\"\n                            :disabled=\"!currency.factor\"\n                        >\n                            <template #suffix>\n                                {{ currency.symbol }}\n                            </template>\n                        </sw-number-field>\n                        {% endblock %}\n\n                    </sw-container>\n                </sw-card>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_currency_detail_content_card_price_rounding %}\n                <sw-card\n                    position-identifier=\"sw-settings-currency-detail-price-rounding\"\n                    :is-loading=\"isLoading\"\n                    :title=\"$tc('sw-settings-currency.detail.titleRoundingCard')\"\n                >\n                    <sw-settings-price-rounding\n                        :item-rounding=\"currency.itemRounding\"\n                        :total-rounding=\"currency.totalRounding\"\n                    />\n                </sw-card>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_currency_detail_content_card_country_price_rounding %}\n                <sw-card\n                    position-identifier=\"sw-settings-currency-detail-country-price-rounding\"\n                    :title=\"$tc('sw-settings-currency.detail.titleCountryRoundingCard')\"\n                    :is-loading=\"currencyCountryLoading\"\n                >\n                    <template\n                        v-if=\"currency.id && !currency.isNew()\"\n                        #toolbar\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_currency_detail_content_card_country_price_rounding_toolbar %}\n                        <div class=\"sw-settings-currency-detail__currency-country-toolbar\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_currency_detail_content_card_country_price_rounding_toolbar_filter %}\n                            <sw-card-filter\n                                :placeholder=\"$tc('sw-settings-currency.detail.searchbarPlaceholder')\"\n                                @sw-card-filter-term-change=\"onChangeCountrySearch\"\n                            />\n                            {% endblock %}\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_currency_detail_content_card_country_price_rounding_toolbar_button %}\n                            <sw-button\n                                variant=\"ghost\"\n                                class=\"sw-settings-currency-detail__currency-country-toolbar-button\"\n                                size=\"small\"\n                                @click=\"onAddCountry\"\n                            >\n                                {{ $tc('sw-settings-currency.detail.buttonAddCountry') }}\n                            </sw-button>\n                            {% endblock %}\n                        </div>\n                        {% endblock %}\n                    </template>\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_settings_currency_detail_content_card_country_price_rounding_listing %}\n                    <sw-entity-listing\n                        v-if=\"currencyCountryRoundings && currencyCountryRoundings.length > 0\"\n                        class=\"sw-settings-currency-detail__currency-country-list\"\n                        :full-page=\"false\"\n                        :show-selection=\"false\"\n                        :items=\"currencyCountryRoundings\"\n                        :columns=\"currencyCountryColumns\"\n                        identifier=\"sw-settings-currency-detail-currency-country-list\"\n                        :repository=\"currencyCountryRoundingRepository\"\n                        @item-deleted=\"loadCurrencyCountryRoundings\"\n                        @items-delete-finish=\"loadCurrencyCountryRoundings\"\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_currency_detail_content_card_country_price_rounding_listing_country_column %}\n                        <template #column-country=\"{ item }\">\n                            <a\n                                href=\"#\"\n                                @click=\"onClickEdit(item)\"\n                            >\n                                {{ item.country.name }}\n                            </a>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_currency_detail_content_card_country_price_rounding_listing_item_interval_column %}\n                        <template #column-itemRounding.interval=\"{ item }\">\n                            <template v-if=\"item.itemRounding.interval === 0.01\">\n                                {{ $tc('sw-settings-currency.price-rounding.labelIntervalNone') }}\n                            </template>\n                            <template v-if=\"item.itemRounding.interval !== 0.01\">\n                                {{ item.itemRounding.interval }}\n                            </template>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_currency_detail_content_card_country_price_rounding_listing_total_interval_column %}\n                        <template #column-totalRounding.interval=\"{ item }\">\n                            <template v-if=\"item.totalRounding.interval === 0.01\">\n                                {{ $tc('sw-settings-currency.price-rounding.labelIntervalNone') }}\n                            </template>\n                            <template v-if=\"item.totalRounding.interval !== 0.01\">\n                                {{ item.totalRounding.interval }}\n                            </template>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_currency_detail_content_card_country_price_rounding_listing_item_net_column %}\n                        <template #column-itemRounding.roundForNet=\"{ item }\">\n                            <sw-data-grid-column-boolean v-model:value=\"item.itemRounding.roundForNet\" />\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_currency_detail_content_card_country_price_rounding_listing_total_net_column %}\n                        <template #column-totalRounding.roundForNet=\"{ item }\">\n                            <sw-data-grid-column-boolean v-model:value=\"item.totalRounding.roundForNet\" />\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_currency_detail_content_card_country_price_rounding_listing_more_actions %}\n                        <template #more-actions=\"{ item }\">\n                            <sw-context-menu-item @click=\"onClickEdit(item)\">\n                                {{ $tc('global.default.edit') }}\n                            </sw-context-menu-item>\n                        </template>\n                        {% endblock %}\n\n                    </sw-entity-listing>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_settings_currency_detail_content_card_country_price_rounding_empty %}\n                    <sw-empty-state\n                        v-else\n                        class=\"sw-settings-currency-detail__currency-country-empty-state\"\n                        title=\"\"\n                        :absolute=\"false\"\n                        :subline=\"emptyStateText\"\n                    />\n                    {% endblock %}\n                </sw-card>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_currency_detail_content_card_country_price_rounding_modal %}\n                <sw-settings-currency-country-modal\n                    v-if=\"currentCurrencyCountry\"\n                    :currency-country-rounding=\"currentCurrencyCountry\"\n                    @save=\"onSaveCurrencyCountry\"\n                    @edit-cancel=\"onCancelEditCountry\"\n                />\n                {% endblock %}\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_currency_detail_custom_field_sets %}\n                <sw-card\n                    v-if=\"showCustomFields\"\n                    position-identifier=\"sw-settings-currency-detail-custom-field-sets\"\n                    :title=\"$tc('sw-settings-custom-field.general.mainMenuItemGeneral')\"\n                    :is-loading=\"isLoading\"\n                >\n                    <sw-custom-field-set-renderer\n                        :entity=\"currency\"\n                        :disabled=\"!acl.can('currencies.editor')\"\n                        :sets=\"customFieldSets\"\n                    />\n                </sw-card>\n                {% endblock %}\n            </template>\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n","/**\n * @package buyers-experience\n */\nimport template from './sw-settings-currency-detail.html.twig';\nimport './sw-settings-currency-detail.scss';\n\nconst { cloneDeep } = Cicada.Utils.object;\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\nconst { mapPropertyErrors } = Cicada.Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'feature',\n        'customFieldDataProviderService',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('placeholder'),\n    ],\n\n    props: {\n        currencyId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    shortcuts: {\n        'SYSTEMKEY+S': {\n            active() {\n                return this.acl.can('currencies.editor');\n            },\n            method: 'onSave',\n        },\n        ESCAPE: 'onCancel',\n    },\n\n    data() {\n        return {\n            currency: {},\n            isLoading: false,\n            currencyCountryLoading: false,\n            isSaveSuccessful: false,\n            currentCurrencyCountry: null,\n            currencyCountryRoundings: null,\n            searchTerm: '',\n            customFieldSets: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        identifier() {\n            return this.placeholder(this.currency, 'name');\n        },\n\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n\n        currencyCountryRoundingRepository() {\n            if (this.currency.countryRoundings) {\n                return this.repositoryFactory.create(\n                    this.currency.countryRoundings.entity,\n                    this.currency.countryRoundings.source,\n                );\n            }\n            return null;\n        },\n\n        tooltipSave() {\n            if (!this.acl.can('currencies.editor')) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.acl.can('currencies.editor'),\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        tooltipCancel() {\n            return {\n                message: 'ESC',\n                appearance: 'light',\n            };\n        },\n\n        ...mapPropertyErrors('currency', [\n            'name',\n            'isoCode',\n            'shortName',\n            'symbol',\n            'isDefault',\n            'decimalPrecision',\n            'factor',\n        ]),\n\n        currencyCountryColumns() {\n            return [\n                {\n                    property: 'country',\n                    label: 'sw-settings-currency.detail.currencyCountry.countryColumn',\n                    sortable: true,\n                },\n                {\n                    property: 'itemRounding.decimals',\n                    label: 'sw-settings-currency.detail.currencyCountry.itemDecimalsColumn',\n                    sortable: false,\n                },\n                {\n                    property: 'itemRounding.interval',\n                    label: 'sw-settings-currency.detail.currencyCountry.itemIntervalColumn',\n                    sortable: false,\n                },\n                {\n                    property: 'itemRounding.roundForNet',\n                    label: 'sw-settings-currency.detail.currencyCountry.itemNetRoundingColumn',\n                    sortable: false,\n                    visible: false,\n                },\n                {\n                    property: 'totalRounding.decimals',\n                    label: 'sw-settings-currency.detail.currencyCountry.totalDecimalsColumn',\n                    sortable: false,\n                },\n                {\n                    property: 'totalRounding.interval',\n                    label: 'sw-settings-currency.detail.currencyCountry.totalIntervalColumn',\n                    sortable: false,\n                },\n                {\n                    property: 'totalRounding.roundForNet',\n                    label: 'sw-settings-currency.detail.currencyCountry.totalNetRoundingColumn',\n                    sortable: false,\n                    visible: false,\n                },\n            ];\n        },\n\n        currencyCountryRoundingCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addAssociation('country');\n            if (this.searchTerm) {\n                criteria.setTerm(this.searchTerm);\n            } else {\n                criteria.setTerm('');\n            }\n\n            criteria.addSorting(Criteria.sort('country.name'));\n\n            return criteria;\n        },\n\n        emptyStateText() {\n            if (this.currency.id && this.currency.isNew()) {\n                return this.$tc('sw-settings-currency.detail.emptyCountryRoundingsNewCurrency');\n            }\n\n            return this.$tc('sw-settings-currency.detail.emptyCountryRoundings');\n        },\n\n        showCustomFields() {\n            return this.customFieldSets && this.customFieldSets.length > 0;\n        },\n    },\n\n    watch: {\n        currencyId() {\n            if (!this.currencyId) {\n                this.createdComponent();\n            }\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.currencyId) {\n                return Promise.all([\n                    this.loadEntityData(),\n                    this.loadCustomFieldSets(),\n                ]);\n            }\n\n            Cicada.State.commit('context/resetLanguageToDefault');\n            this.isLoading = true;\n            this.currency = this.currencyRepository.create();\n            // defaults for rounding\n            this.currency.itemRounding = {\n                decimals: 2,\n                interval: 0.01,\n                roundForNet: true,\n            };\n            this.currency.totalRounding = {\n                decimals: 2,\n                interval: 0.01,\n                roundForNet: true,\n            };\n\n            this.isLoading = false;\n            return Promise.resolve();\n        },\n\n        loadEntityData() {\n            this.isLoading = true;\n            return this.currencyRepository\n                .get(this.currencyId)\n                .then((currency) => {\n                    this.currency = currency;\n                    return this.loadCurrencyCountryRoundings().then((currencyCountryRoundings) => {\n                        return [\n                            currency,\n                            currencyCountryRoundings,\n                        ];\n                    });\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        loadCurrencyCountryRoundings() {\n            this.currencyCountryLoading = true;\n            return this.currencyCountryRoundingRepository\n                .search(this.currencyCountryRoundingCriteria)\n                .then((res) => {\n                    this.currencyCountryRoundings = res;\n                    return res;\n                })\n                .finally(() => {\n                    this.currencyCountryLoading = false;\n                });\n        },\n\n        loadCustomFieldSets() {\n            this.customFieldDataProviderService.getCustomFieldSets('currency').then((sets) => {\n                this.customFieldSets = sets;\n            });\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onSave() {\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            return this.currencyRepository\n                .save(this.currency)\n                .then(() => {\n                    this.isSaveSuccessful = true;\n                    if (!this.currencyId) {\n                        this.$router.push({\n                            name: 'sw.settings.currency.detail',\n                            params: { id: this.currency.id },\n                        });\n                    }\n\n                    this.currencyRepository.get(this.currency.id).then((updatedCurrency) => {\n                        this.currency = updatedCurrency;\n                        this.isLoading = false;\n                    });\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-currency.detail.notificationErrorMessage'),\n                    });\n                    this.isLoading = false;\n                });\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'sw.settings.currency.index' });\n        },\n\n        abortOnLanguageChange() {\n            return this.currencyRepository.hasChanges(this.currency);\n        },\n\n        saveOnLanguageChange() {\n            return this.onSave();\n        },\n\n        onChangeLanguage() {\n            this.loadEntityData();\n        },\n\n        onChangeCountrySearch(value) {\n            this.searchTerm = value;\n            this.loadCurrencyCountryRoundings();\n        },\n\n        onAddCountry() {\n            this.currentCurrencyCountry = this.currencyCountryRoundingRepository.create();\n            this.currentCurrencyCountry.itemRounding = cloneDeep(this.currency.itemRounding);\n            this.currentCurrencyCountry.totalRounding = cloneDeep(this.currency.totalRounding);\n            this.currentCurrencyCountry.currencyId = this.currency.id;\n        },\n\n        onCancelEditCountry() {\n            this.currentCurrencyCountry = null;\n        },\n\n        onClickEdit(item) {\n            this.currentCurrencyCountry = item;\n        },\n\n        onSaveCurrencyCountry() {\n            this.currencyCountryLoading = true;\n            this.currencyCountryRoundingRepository\n                .save(this.currentCurrencyCountry)\n                .then(() => {\n                    this.createNotificationSuccess({\n                        title: this.$tc('global.default.success'),\n                        message: this.$tc('sw-settings-currency.detail.notificationCountrySuccessMessage'),\n                    });\n                    this.onCancelEditCountry();\n                    this.loadCurrencyCountryRoundings();\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        title: this.$tc('global.default.error'),\n                        message: this.$tc('sw-settings-currency.detail.notificationCountryErrorMessage'),\n                    });\n                })\n                .finally(() => {\n                    this.currencyCountryLoading = false;\n                });\n        },\n    },\n};\n"],"names":["template","cloneDeep","Mixin","Criteria","mapPropertyErrors","index","criteria","currency","currencyCountryRoundings","res","sets","updatedCurrency","value","item"],"mappings":"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"}