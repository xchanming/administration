{"version":3,"file":"snippet-set.api.service-DG2xUDqG.js","sources":["../../../app/administration/src/core/service/api/snippet-set.api.service.js"],"sourcesContent":["const ApiService = Cicada.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"snippet-set\"\n * @class\n * @extends ApiService\n * @package services-settings\n */\nclass SnippetSetApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'snippet-set') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'snippetSetService';\n    }\n\n    /**\n     * @returns {Promise<T>}\n     */\n    getCustomList(page = 1, limit = 25, filters = {}, sort = {}) {\n        const headers = this.getBasicHeaders();\n\n        const defaultSort = {\n            sortBy: 'id',\n            sortDirection: 'ASC',\n        };\n\n        sort = { ...defaultSort, ...sort };\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}`, { page, limit, filters, sort }, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Call the API to get all available BaseFiles\n     *\n     * @returns {Promise<T>}\n     */\n    getBaseFiles() {\n        const params = {};\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/baseFile`, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getAuthors() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(`/_action/${this.getApiBasePath()}/author`, { headers }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default SnippetSetApiService;\n"],"names":["ApiService","SnippetSetApiService","httpClient","loginService","apiEndpoint","page","limit","filters","sort","headers","response","params"],"mappings":"AAAA,MAAMA,EAAa,OAAO,QAAQ,WAQlC,MAAMC,UAA6BD,CAAW,CAC1C,YAAYE,EAAYC,EAAcC,EAAc,cAAe,CAC/D,MAAMF,EAAYC,EAAcC,CAAW,EAC3C,KAAK,KAAO,mBACf,CAKD,cAAcC,EAAO,EAAGC,EAAQ,GAAIC,EAAU,CAAA,EAAIC,EAAO,GAAI,CACzD,MAAMC,EAAU,KAAK,kBAOrB,OAAAD,EAAO,CAAE,GALW,CAChB,OAAQ,KACR,cAAe,KAC3B,EAEiC,GAAGA,CAAI,EAEzB,KAAK,WACP,KAAK,YAAY,KAAK,eAAgB,CAAA,GAAI,CAAE,KAAAH,EAAM,MAAAC,EAAO,QAAAC,EAAS,KAAAC,CAAI,EAAI,CAAE,QAAAC,CAAO,CAAE,EACrF,KAAMC,GACIV,EAAW,eAAeU,CAAQ,CAC5C,CACR,CAOD,cAAe,CACX,MAAMC,EAAS,CAAA,EACTF,EAAU,KAAK,kBAErB,OAAO,KAAK,WACP,IAAI,YAAY,KAAK,eAAgB,CAAA,YAAa,CAC/C,OAAAE,EACA,QAAAF,CAChB,CAAa,EACA,KAAMC,GACIV,EAAW,eAAeU,CAAQ,CAC5C,CACR,CAED,YAAa,CACT,MAAMD,EAAU,KAAK,kBAErB,OAAO,KAAK,WAAW,IAAI,YAAY,KAAK,eAAgB,CAAA,UAAW,CAAE,QAAAA,CAAO,CAAE,EAAE,KAAMC,GAC/EV,EAAW,eAAeU,CAAQ,CAC5C,CACJ,CACL"}