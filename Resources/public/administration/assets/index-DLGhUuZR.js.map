{"version":3,"file":"index-DLGhUuZR.js","sources":["../../../app/administration/src/app/component/tree/sw-tree-item/sw-tree-item.html.twig","../../../app/administration/src/app/component/tree/sw-tree-item/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_tree_item %}\n<div\n    class=\"sw-tree-item\"\n    :class=\"styling\"\n    role=\"treeitem\"\n    :aria-label=\"getName(item)\"\n    :tabindex=\"active ? 0 : -1\"\n    :aria-current=\"active ? 'page' : undefined\"\n    :aria-expanded=\"isOpened ? 'true' : 'false'\"\n    :data-item-id=\"item.id\"\n    :aria-owns=\"item.id\"\n    :aria-selected=\"checked\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_tree_item_element %}\n    <div\n        v-droppable=\"{ dragGroup: 'sw-tree-item', data: item }\"\n        v-draggable=\"dragConf\"\n        class=\"sw-tree-item__element\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_tree_item_element_leaf_icon %}\n        <div\n            v-if=\"item.childCount <= 0\"\n            class=\"sw-tree-item__leaf\"\n        ></div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_tree_item_element_toggle %}\n        <div\n            v-else\n            class=\"sw-tree-item__toggle\"\n            role=\"button\"\n            tabindex=\"0\"\n            :aria-label=\"$t('sw-tree-item.toggleTreeItem', { name: getName(item) })\"\n            :aria-expanded=\"opened ? 'true' : 'false'\"\n            @click=\"openTreeItem(); getTreeItemChildren(item)\"\n            @keydown.enter=\"openTreeItem(); getTreeItemChildren(item)\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_tree_item_element_toggle_icon %}\n            <sw-icon :name=\"opened ? 'regular-chevron-down-xxs' : 'regular-chevron-right-xxs'\" />\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_tree_item_element_selection %}\n        <div class=\"sw-tree-item__selection\">\n            <sw-checkbox-field\n                v-if=\"displayCheckbox\"\n                :disabled=\"currentEditElement === item.data.id\"\n                :ghost-value=\"checkedGhost\"\n                :value=\"checked\"\n                :aria-label=\"$t('sw-tree-item.toggleItem', { name: getName(item) })\"\n                @update:value=\"toggleItemCheck($event, item)\"\n            />\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_tree_item_element_grip %}\n        <slot name=\"grip\">\n            <div\n                v-if=\"item.childCount > 0\"\n                class=\"sw-tree-item__icon\"\n            >\n                <sw-icon\n                    v-if=\"opened\"\n                    name=\"regular-folder-open\"\n                    small\n                />\n                <sw-icon\n                    v-else\n                    name=\"regular-folder\"\n                    small\n                />\n            </div>\n            <div\n                v-else\n                class=\"sw-tree-item__icon\"\n            >\n                <sw-icon name=\"regular-circle-xxs\" />\n            </div>\n        </slot>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_tree_item_element_content %}\n        <div\n            ref=\"item\"\n            v-tooltip=\"{\n                message: item.disabledToolTipText,\n                disabled: !item.disabledToolTipText,\n            }\"\n            class=\"sw-tree-item__content\"\n        >\n            <slot\n                name=\"content\"\n                v-bind=\"{ item, openTreeItem, getName }\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_tree_items_item_content_edit %}\n                <template v-if=\"currentEditElement === item.data.id\">\n                    <sw-confirm-field\n                        v-model=\"item.data.name\"\n                        class=\"sw-tree-detail__edit-tree-item\"\n                        :prevent-empty-submit=\"true\"\n                        :placeholder=\"$tc(`${translationContext}.general.buttonCreate`)\"\n                        @input=\"onFinishNameingElement\"\n                        @blur=\"onBlurTreeItemInput(item)\"\n                        @submit-cancel=\"onCancelSubmit(item)\"\n                    />\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_tree_items_item_content_default %}\n                <template v-else>\n                    <a\n                        v-if=\"onChangeRoute\"\n                        class=\"tree-link\"\n                        :href=\"showItemUrl(item)\"\n                        @click.prevent=\"onChangeRoute(item)\"\n                    >\n                        <span class=\"sw-tree-item__label\">{{ getName(item) }}</span>\n                    </a>\n                    <span\n                        v-else\n                        class=\"sw-tree-item__label\"\n                    >{{ getName(item) }}</span>\n                </template>\n                {% endblock %}\n            </slot>\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_tree_item_element_actions %}\n        <div class=\"sw-tree-item__actions\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_tree_items_active_state %}\n            <sw-icon\n                v-if=\"shouldShowActiveState\"\n                size=\"6\"\n                :color=\"getActiveIconColor(item)\"\n                name=\"solid-circle-xxxs\"\n            />\n            {% endblock %}\n\n            <slot\n                name=\"actions\"\n                :item=\"item\"\n                :open-tree-item=\"openTreeItem\"\n                :add-element=\"addElement\"\n                :add-sub-element=\"addSubElement\"\n                :on-duplicate=\"onDuplicate\"\n                :on-change-route=\"onChangeRoute\"\n                :delete-element=\"deleteElement\"\n                :tool-tip=\"toolTip\"\n                :is-disabled=\"isDisabled\"\n            >\n                <sw-context-button\n                    v-tooltip=\"toolTip\"\n                    class=\"sw-tree-item__context_button\"\n                    :disabled=\"isDisabled || undefined\"\n                >\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_tree_items_actions_without_position %}\n                    <sw-context-menu-item\n                        v-if=\"allowCreateWithoutPosition\"\n                        class=\"sw-tree-item__without-position-action\"\n                        @click=\"addElement(item)\"\n                    >\n                        {{ $tc(`${translationContext}.general.actions.withoutPosition`) }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_tree_items_actions_before %}\n                    <sw-context-menu-item\n                        v-if=\"!allowCreateWithoutPosition\"\n                        :disabled=\"!allowNewCategories || undefined\"\n                        class=\"sw-tree-item__before-action\"\n                        @click=\"addElement(item, 'before')\"\n                    >\n                        {{ $tc(`${translationContext}.general.actions.createBefore`) }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_tree_items_actions_after %}\n                    <sw-context-menu-item\n                        v-if=\"!allowCreateWithoutPosition\"\n                        :disabled=\"!allowNewCategories || undefined\"\n                        class=\"sw-tree-item__after-action\"\n                        @click=\"addElement(item, 'after')\"\n                    >\n                        {{ $tc(`${translationContext}.general.actions.createAfter`) }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_tree_items_actions_sub %}\n                    <sw-context-menu-item\n                        v-if=\"!allowCreateWithoutPosition\"\n                        :disabled=\"!allowNewCategories || undefined\"\n                        class=\"sw-tree-item__sub-action\"\n                        @click=\"addSubElement(item); openTreeItem(true)\"\n                    >\n                        {{ $tc(`${translationContext}.general.actions.createSub`) }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_tree_items_actions_duplicate %}\n                    <sw-context-menu-item\n                        v-if=\"allowDuplicate\"\n                        class=\"sw-context-menu__duplicate-action\"\n                        @click=\"onDuplicate(item)\"\n                    >\n                        {{ $tc(`global.default.duplicate`) }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_tree_items_actions_group %}\n                    <div class=\"sw-context-menu__group\">\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_tree_items_actions_edit %}\n                        <sw-context-menu-item @click=\"onChangeRoute(item)\">\n                            {{ $tc('global.default.edit') }}\n                        </sw-context-menu-item>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_tree_items_actions_delete %}\n                        <sw-context-menu-item\n                            class=\"sw-context-menu__group-button-delete\"\n                            :disabled=\"!allowDeleteCategories || undefined\"\n                            variant=\"danger\"\n                            @click=\"deleteElement(item)\"\n                        >\n                            {{ $tc('global.default.delete') }}\n                        </sw-context-menu-item>\n                        {% endblock %}\n                    </div>\n                    {% endblock %}\n                </sw-context-button>\n            </slot>\n        </div>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    {# ToDO: Repeat statt duplicated Content #}\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_tree_item_children_transition %}\n    <transition name=\"fade\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_tree_item_children_content %}\n        <div\n            v-if=\"isOpened && item.children.length > 0\"\n            :id=\"item.id\"\n            class=\"sw-tree-item__children\"\n            role=\"group\"\n            :aria-label=\"$tc(`sw-tree-item.childrenLabel`, { name: getName(item) })\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_tree_item_children_items %}\n            <sw-tree-item\n                v-for=\"child in item.children\"\n                :key=\"child.id\"\n                :item=\"child\"\n                :dragged-item=\"draggedItem\"\n                :new-element-id=\"newElementId\"\n                :translation-context=\"translationContext\"\n                :on-change-route=\"onChangeRoute\"\n                :active-parent-ids=\"activeParentIds\"\n                :active-item-ids=\"activeItemIds\"\n                :mark-inactive=\"markInactive\"\n                :sortable=\"sortable\"\n                :should-focus=\"shouldFocus\"\n                :active-focus-id=\"activeFocusId\"\n                :display-checkbox=\"displayCheckbox\"\n                :disable-context-menu=\"disableContextMenu\"\n                :get-is-highlighted=\"getIsHighlighted\"\n                @check-item=\"emitCheckedItem\"\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_tree_item_children_items_slots %}\n                <template #content=\"{ item, openTreeItem, getName: innerGetName }\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_tree_item_children_items_slot_content %}\n                    <sw-vnode-renderer\n                        v-if=\"contentSlot\"\n                        :node=\"renderContentSlotNode({ item, openTreeItem, getName })\"\n                    />\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_tree_item_children_items_slot_content_default_block %}\n                    <template v-else>\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_tree_item_children_items_slot_content_edit %}\n                        <template v-if=\"currentEditElement === item.data.id\">\n                            <sw-confirm-field\n                                v-model=\"item.data.name\"\n                                class=\"sw-tree-detail__edit-tree-item\"\n                                :prevent-empty-submit=\"true\"\n                                :placeholder=\"$tc(`${translationContext}.general.buttonCreate`)\"\n                                @input=\"onFinishNameingElement\"\n                                @blur=\"onBlurTreeItemInput(item)\"\n                                @submit-cancel=\"onCancelSubmit(item)\"\n                            />\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_tree_item_children_items_slot_content_default %}\n                        <template v-else>\n                            <a\n                                v-if=\"onChangeRoute\"\n                                class=\"tree-link\"\n                                :href=\"showItemUrl(item)\"\n                                @click.prevent=\"onChangeRoute(item)\"\n                            >\n                                <span class=\"sw-tree-item__label\">{{ getName(item) }}</span>\n                            </a>\n                            <span\n                                v-else\n                                class=\"sw-tree-item__label\"\n                            >{{ getName(item) }}</span>\n                        </template>\n                        {% endblock %}\n                    </template>\n                    {% endblock %}\n                    {% endblock %}\n                </template>\n\n                <template #actions=\"{ item, openTreeItem }\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_tree_item_children_items_slot_actions %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_tree_items_transition_active_state %}\n                    <sw-icon\n                        v-if=\"shouldShowActiveState\"\n                        size=\"6\"\n                        :color=\"getActiveIconColor(item)\"\n                        name=\"solid-circle-xxxs\"\n                    />\n                    {% endblock %}\n\n                    <sw-vnode-renderer\n                        v-if=\"actionsSlot\"\n                        :node=\"renderActionsSlotNode({ item, openTreeItem })\"\n                    />\n                    <template v-else>\n                        <sw-context-button\n                            v-tooltip=\"toolTip\"\n                            :disabled=\"isDisabled\"\n                        >\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_tree_items_transition_actions_without_position %}\n                            <sw-context-menu-item\n                                v-if=\"allowCreateWithoutPosition\"\n                                class=\"sw-tree-item__without-position-action\"\n                                @click=\"addElement(item)\"\n                            >\n                                {{ $tc(`${translationContext}.general.actions.withoutPosition`) }}\n                            </sw-context-menu-item>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_tree_items_transition_actions_before %}\n                            <sw-context-menu-item\n                                v-if=\"!allowCreateWithoutPosition\"\n                                :disabled=\"!allowNewCategories || undefined\"\n                                class=\"sw-tree-item__before-action\"\n                                @click=\"addElement(item, 'before')\"\n                            >\n                                {{ $tc(`${translationContext}.general.actions.createBefore`) }}\n                            </sw-context-menu-item>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_tree_items_transition_actions_after %}\n                            <sw-context-menu-item\n                                v-if=\"!allowCreateWithoutPosition\"\n                                :disabled=\"!allowNewCategories\"\n                                class=\"sw-tree-item__after-action\"\n                                @click=\"addElement(item, 'after')\"\n                            >\n                                {{ $tc(`${translationContext}.general.actions.createAfter`) }}\n                            </sw-context-menu-item>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_tree_items_transition_actions_sub %}\n                            <sw-context-menu-item\n                                v-if=\"!allowCreateWithoutPosition\"\n                                :disabled=\"!allowNewCategories\"\n                                class=\"sw-tree-item__sub-action\"\n                                @click=\"addSubElement(item); openTreeItem(true)\"\n                            >\n                                {{ $tc(`${translationContext}.general.actions.createSub`) }}\n                            </sw-context-menu-item>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_tree_items_transition_actions_duplicate %}\n                            <sw-context-menu-item\n                                v-if=\"allowDuplicate\"\n                                class=\"sw-context-menu__duplicate-action\"\n                                @click=\"onDuplicate(item)\"\n                            >\n                                {{ $tc(`global.default.duplicate`) }}\n                            </sw-context-menu-item>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_tree_items_transition_actions_group %}\n                            <div class=\"sw-context-menu__group\">\n\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_tree_items_transition_actions_edit %}\n                                <sw-context-menu-item @click=\"onChangeRoute(item)\">\n                                    {{ $tc('global.default.edit') }}\n                                </sw-context-menu-item>\n                                {% endblock %}\n\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_tree_items_transition_actions_delete %}\n                                <sw-context-menu-item\n                                    class=\"sw-context-menu__group-button-delete\"\n                                    :disabled=\"!allowDeleteCategories || undefined\"\n                                    variant=\"danger\"\n                                    @click=\"deleteElement(item)\"\n                                >\n                                    {{ $tc('global.default.delete') }}\n                                </sw-context-menu-item>\n                                {% endblock %}\n                            </div>\n                            {% endblock %}\n                        </sw-context-button>\n                    </template>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n            </sw-tree-item>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <div\n            v-else-if=\"isLoading\"\n            class=\"sw-tree-item__children\"\n        >\n            <sw-skeleton variant=\"tree-item\" />\n            <sw-skeleton variant=\"tree-item\" />\n            <sw-skeleton variant=\"tree-item\" />\n            <sw-skeleton variant=\"tree-item\" />\n            <sw-skeleton variant=\"tree-item\" />\n        </div>\n    </transition>\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-tree-item.html.twig';\nimport './sw-tree-item.scss';\n\nconst { Component } = Cicada;\n\n/**\n * @package admin\n *\n * @private\n */\nComponent.register('sw-tree-item', {\n    template,\n\n    inject: {\n        feature: {\n            from: 'feature',\n            default: null,\n        },\n        getItems: {\n            from: 'getItems',\n            default: null,\n        },\n        treeStartDrag: {\n            from: 'startDrag',\n            default: null,\n        },\n        treeEndDrag: {\n            from: 'endDrag',\n            default: null,\n        },\n        treeMoveDrag: {\n            from: 'moveDrag',\n            default: null,\n        },\n        treeAddSubElement: {\n            from: 'addSubElement',\n            default: null,\n        },\n        treeAddElement: {\n            from: 'addElement',\n            default: null,\n        },\n        treeDuplicateElement: {\n            from: 'duplicateElement',\n            default: null,\n        },\n        treeOnFinishNameingElement: {\n            from: 'onFinishNameingElement',\n            default: null,\n        },\n        treeOnDeleteElements: {\n            from: 'onDeleteElements',\n            default: null,\n        },\n        treeAbortCreateElement: {\n            from: 'abortCreateElement',\n            default: null,\n        },\n    },\n\n    compatConfig: Cicada.compatConfig,\n\n    emits: ['check-item'],\n\n    props: {\n        item: {\n            type: Object,\n            required: true,\n            default: () => {\n                return {};\n            },\n        },\n\n        draggedItem: {\n            type: Object,\n            required: false,\n            default: () => {\n                return null;\n            },\n        },\n\n        newElementId: {\n            type: String,\n            required: false,\n            default: () => {\n                return null;\n            },\n        },\n\n        translationContext: {\n            type: String,\n            default: () => {\n                return 'sw-tree';\n            },\n        },\n\n        onChangeRoute: {\n            type: Function,\n            default: () => {\n                return null;\n            },\n        },\n\n        disableContextMenu: {\n            type: Boolean,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: () => {\n                return false;\n            },\n        },\n\n        contextMenuTooltipText: {\n            type: String,\n            required: false,\n            default: () => {\n                return null;\n            },\n        },\n\n        activeParentIds: {\n            type: Array,\n            required: false,\n            default: () => {\n                return null;\n            },\n        },\n\n        activeItemIds: {\n            type: Array,\n            required: false,\n            default: () => {\n                return null;\n            },\n        },\n\n        sortable: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: () => {\n                return true;\n            },\n        },\n\n        markInactive: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        shouldFocus: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        shouldShowActiveState: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        activeFocusId: {\n            type: String,\n            required: false,\n            default: () => {\n                return '';\n            },\n        },\n\n        displayCheckbox: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: () => {\n                return true;\n            },\n        },\n\n        allowNewCategories: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: () => {\n                return true;\n            },\n        },\n\n        allowDeleteCategories: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: () => {\n                return true;\n            },\n        },\n\n        allowCreateWithoutPosition: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: () => {\n                return false;\n            },\n        },\n\n        allowDuplicate: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: () => {\n                return false;\n            },\n        },\n\n        getItemUrl: {\n            type: Function,\n            required: false,\n            default: () => {\n                return null;\n            },\n        },\n\n        getIsHighlighted: {\n            type: Function,\n            required: false,\n            default: () => {\n                return false;\n            },\n        },\n    },\n\n    data() {\n        return {\n            opened: this.item.initialOpened,\n            active: this.item.active,\n            selected: false,\n            isLeaf: false,\n            isLoading: false,\n            dragEl: null,\n            dragStartX: 0,\n            dragStartY: 0,\n            mouseStartX: 0,\n            mouseStartY: 0,\n            rootParent: null,\n            checkedGhost: false,\n            currentEditElement: null,\n        };\n    },\n\n    computed: {\n        checked: {\n            get() {\n                return this.item.checked;\n            },\n            set(isChecked) {\n                // eslint-disable-next-line vue/no-mutating-props\n                this.item.checked = isChecked;\n            },\n        },\n\n        activeElementId() {\n            return this.$route.params[this.item.activeElementId] || null;\n        },\n\n        isOpened() {\n            if (this.item.initialOpened) {\n                this.openTreeItem(true);\n                this.getTreeItemChildren(this.item);\n                // eslint-disable-next-line vue/no-side-effects-in-computed-properties,vue/no-mutating-props\n                this.item.initialOpened = false;\n            }\n            return this.opened;\n        },\n\n        isDragging() {\n            if (this.draggedItem === null) {\n                return false;\n            }\n            return this.draggedItem.data.id === this.item.data.id;\n        },\n\n        styling() {\n            return {\n                'is--dragging': this.isDragging,\n                'is--active': this.active,\n                'is--opened': this.isOpened,\n                'is--no-children': this.item.childCount <= 0,\n                'is--marked-inactive': this.markInactive && !this.item.data.active,\n                'is--focus': this.shouldFocus && this.activeFocusId === this.item.id,\n                'is--no-checkbox': !this.displayCheckbox,\n                'is--highlighted': this.isHighlighted,\n                'is--disabled': this.item.disabled,\n            };\n        },\n\n        dragConf() {\n            return {\n                delay: 300,\n                validDragCls: null,\n                dragGroup: 'sw-tree-item',\n                data: this.item,\n                onDragStart: this.dragStart,\n                onDragEnter: this.onMouseEnter,\n                onDrop: this.dragEnd,\n                preventEvent: true,\n                disabled: !this.sortable,\n            };\n        },\n\n        parentScope() {\n            if (this.isCompatEnabled('INSTANCE_CHILDREN')) {\n                let parentNode = this.$parent;\n\n                // eslint-disable-next-line\n                while (parentNode.$options._componentTag !== 'sw-tree') {\n                    if (parentNode.$parent) {\n                        parentNode = parentNode.$parent;\n                    }\n\n                    break;\n                }\n\n                return parentNode;\n            }\n\n            return {\n                addSubElement: this.treeAddSubElement,\n                addElement: this.treeAddElement,\n                duplicateElement: this.treeDuplicateElement,\n                onFinishNameingElement: this.treeOnFinishNameingElement,\n                onDeleteElements: this.treeOnDeleteElements,\n                abortCreateElement: this.treeAbortCreateElement,\n            };\n        },\n\n        toolTip() {\n            if (this.contextMenuTooltipText !== null) {\n                return {\n                    showDelay: 300,\n                    message: this.contextMenuTooltipText,\n                    disabled: !this.disableContextMenu,\n                };\n            }\n\n            return {\n                showDelay: 300,\n                message: this.$tc(`${this.translationContext}.general.actions.actionsDisabledInLanguage`),\n                disabled: !this.disableContextMenu,\n            };\n        },\n\n        isDisabled() {\n            return this.currentEditElement !== null || this.disableContextMenu;\n        },\n\n        isHighlighted() {\n            return this.getIsHighlighted(this.item);\n        },\n\n        contentSlot() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_SCOPED_SLOTS')) {\n                return this.$scopedSlots.content;\n            }\n\n            return this.$slots.content;\n        },\n\n        actionsSlot() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_SCOPED_SLOTS')) {\n                return this.$scopedSlots.actions;\n            }\n\n            return this.$slots.actions;\n        },\n    },\n\n    watch: {\n        activeElementId(newId) {\n            this.active = newId === this.item.id;\n        },\n\n        newElementId(newId) {\n            this.currentEditElement = newId;\n        },\n\n        activeParentIds: {\n            handler() {\n                if (this.activeParentIds) {\n                    this.checkedGhost = this.activeParentIds.indexOf(this.item.id) >= 0;\n                }\n            },\n            immediate: true,\n            deep: true,\n        },\n\n        activeItemIds: {\n            handler() {\n                if (this.activeItemIds) {\n                    this.checked = this.activeItemIds.indexOf(this.item.id) >= 0;\n                }\n            },\n            immediate: true,\n            deep: true,\n        },\n    },\n\n    updated() {\n        this.updatedComponent();\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    beforeUnmount() {\n        this.beforeUnmountComponent();\n    },\n\n    methods: {\n        updatedComponent() {\n            if (this.item.children.length > 0 || this.item.childCount <= 0) {\n                this.isLoading = false;\n            }\n        },\n\n        mountedComponent() {\n            this.$el.addEventListener('keydown', this.handleKeyDown);\n\n            if (this.item.active) {\n                if (this.$el.querySelector('.sw-tree-item.is--active input')) {\n                    this.$el.querySelector('.sw-tree-item.is--active input').focus();\n                }\n            }\n\n            if (this.newElementId) {\n                this.currentEditElement = this.newElementId;\n                this.editElementName();\n            }\n\n            this.updatedComponent();\n        },\n\n        beforeUnmountComponent() {\n            this.$el.removeEventListener('keydown', this.handleKeyDown);\n        },\n\n        handleKeyDown(event) {\n            // Check if the event is fired inside the tree item\n            if (event.target !== this.$el) {\n                return;\n            }\n\n            switch (event.key) {\n                case 'ArrowRight': {\n                    // When the tree item is already open, do nothing\n                    if (this.opened) {\n                        break;\n                    }\n\n                    // Open the tree item\n                    this.openTreeItem();\n                    this.getTreeItemChildren(this.item);\n\n                    event.stopPropagation();\n                    event.preventDefault();\n\n                    break;\n                }\n\n                case 'ArrowLeft': {\n                    // Check if the tree is open\n                    if (!this.opened) {\n                        break;\n                    }\n\n                    // Close the tree item\n                    this.openTreeItem(false);\n\n                    event.stopPropagation();\n                    event.preventDefault();\n\n                    break;\n                }\n\n                default: {\n                    break;\n                }\n            }\n        },\n\n        openTreeItem(open = !this.opened) {\n            if (this.isDragging) {\n                return;\n            }\n            this.opened = open;\n        },\n\n        getTreeItemChildren(treeItem) {\n            if (this.isDragging || this.isLoading) {\n                return;\n            }\n\n            if (treeItem.children.length <= 0) {\n                this.isLoading = true;\n\n                this.getItems(treeItem.data.id, treeItem.data.schema);\n            }\n        },\n\n        dragStart(config, element, dragElement) {\n            if (this.isDragging || this.isLoading) {\n                return;\n            }\n\n            this.dragEl = dragElement;\n\n            if (this.isCompatEnabled('INSTANCE_CHILDREN')) {\n                this.$parent.$parent.startDrag(this);\n            } else {\n                this.treeStartDrag(this);\n            }\n        },\n\n        dragEnd() {\n            if (this.isCompatEnabled('INSTANCE_CHILDREN')) {\n                this.$parent.$parent.endDrag();\n            } else {\n                this.treeEndDrag();\n            }\n        },\n\n        onMouseEnter(dragData, dropData) {\n            if (!dropData) {\n                return;\n            }\n\n            if (this.isCompatEnabled('INSTANCE_CHILDREN')) {\n                this.$parent.$parent.moveDrag(dragData, dropData);\n            } else {\n                this.treeMoveDrag(dragData, dropData);\n            }\n        },\n\n        startDrag(draggedComponent) {\n            if (this.isCompatEnabled('INSTANCE_CHILDREN')) {\n                return this.$parent.$parent.startDrag(draggedComponent);\n            }\n\n            return this.treeStartDrag(draggedComponent);\n        },\n\n        endDrag() {\n            if (this.isCompatEnabled('INSTANCE_CHILDREN')) {\n                this.$parent.$parent.endDrag();\n            } else {\n                this.treeEndDrag();\n            }\n        },\n\n        moveDrag(draggedComponent, droppedComponent) {\n            if (this.isCompatEnabled('INSTANCE_CHILDREN')) {\n                return this.$parent.$parent.moveDrag(draggedComponent, droppedComponent);\n            }\n            return this.treeMoveDrag(draggedComponent, droppedComponent);\n        },\n\n        // Bubbles this method to the root tree from any item depth\n        emitCheckedItem(item) {\n            this.$emit('check-item', item);\n        },\n\n        // Checks the item\n        toggleItemCheck(event, item) {\n            if (this.checkedGhost && !item.checked) {\n                this.checked = true;\n                // eslint-disable-next-line vue/no-mutating-props\n                this.item.checked = true;\n            } else {\n                this.checked = event;\n                // eslint-disable-next-line vue/no-mutating-props\n                this.item.checked = event;\n            }\n\n            this.$emit('check-item', item);\n        },\n\n        addSubElement(item) {\n            this.parentScope.addSubElement(item);\n        },\n\n        addElement(item, pos) {\n            this.parentScope.addElement(item, pos);\n        },\n\n        duplicateElement(contextItem) {\n            this.parentScope.duplicateElement(contextItem);\n        },\n\n        onDuplicate(item) {\n            this.duplicateElement(item);\n            this.openTreeItem(true);\n        },\n\n        editElementName() {\n            this.$nextTick(() => {\n                const elementNameField = this.$el.querySelector('.sw-tree-detail__edit-tree-item input');\n                if (elementNameField) {\n                    elementNameField.focus();\n                }\n            });\n        },\n\n        onFinishNameingElement(draft, event) {\n            this.$nextTick(() => {\n                this.parentScope.onFinishNameingElement(draft, event);\n            });\n        },\n\n        onBlurTreeItemInput(item) {\n            this.abortCreateElement(item);\n        },\n\n        onCancelSubmit(item) {\n            this.abortCreateElement(item);\n        },\n\n        abortCreateElement(item) {\n            this.parentScope.abortCreateElement(item);\n        },\n\n        deleteElement(item) {\n            this.parentScope.onDeleteElements(item);\n        },\n\n        getName(item) {\n            if (item.data.translated) {\n                return item.data.name || item.data.translated.name;\n            }\n\n            return item.data.name;\n        },\n\n        getActiveIconColor(item) {\n            if (item.data?.active) {\n                return item.data.active === true ? '#37d046' : '#d1d9e0';\n            }\n\n            return '#d1d9e0';\n        },\n\n        showItemUrl(item) {\n            if (this.getItemUrl) {\n                return this.getItemUrl(item);\n            }\n\n            return false;\n        },\n\n        renderContentSlotNode({ item, openTreeItem, getName }) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_SCOPED_SLOTS')) {\n                return this.$scopedSlots.content({\n                    item,\n                    openTreeItem,\n                    getName,\n                });\n            }\n\n            return this.$slots.content({ item, openTreeItem, getName });\n        },\n\n        renderActionsSlotNode({ item, openTreeItem }) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_SCOPED_SLOTS')) {\n                return this.$scopedSlots.actions({ item, openTreeItem });\n            }\n\n            return this.$slots.actions({ item, openTreeItem });\n        },\n    },\n});\n"],"names":["template","Component","isChecked","parentNode","newId","event","open","treeItem","config","element","dragElement","dragData","dropData","draggedComponent","droppedComponent","item","pos","contextItem","elementNameField","draft","_a","openTreeItem","getName"],"mappings":"AAAA,MAAeA,EAAA,y2UCGT,CAAE,UAAAC,CAAW,EAAG,OAOtBA,EAAU,SAAS,eAAgB,CAC/B,SAAAD,EAEA,OAAQ,CACJ,QAAS,CACL,KAAM,UACN,QAAS,IACZ,EACD,SAAU,CACN,KAAM,WACN,QAAS,IACZ,EACD,cAAe,CACX,KAAM,YACN,QAAS,IACZ,EACD,YAAa,CACT,KAAM,UACN,QAAS,IACZ,EACD,aAAc,CACV,KAAM,WACN,QAAS,IACZ,EACD,kBAAmB,CACf,KAAM,gBACN,QAAS,IACZ,EACD,eAAgB,CACZ,KAAM,aACN,QAAS,IACZ,EACD,qBAAsB,CAClB,KAAM,mBACN,QAAS,IACZ,EACD,2BAA4B,CACxB,KAAM,yBACN,QAAS,IACZ,EACD,qBAAsB,CAClB,KAAM,mBACN,QAAS,IACZ,EACD,uBAAwB,CACpB,KAAM,qBACN,QAAS,IACZ,CACJ,EAED,aAAc,OAAO,aAErB,MAAO,CAAC,YAAY,EAEpB,MAAO,CACH,KAAM,CACF,KAAM,OACN,SAAU,GACV,QAAS,KACE,GAEd,EAED,YAAa,CACT,KAAM,OACN,SAAU,GACV,QAAS,IACE,IAEd,EAED,aAAc,CACV,KAAM,OACN,SAAU,GACV,QAAS,IACE,IAEd,EAED,mBAAoB,CAChB,KAAM,OACN,QAAS,IACE,SAEd,EAED,cAAe,CACX,KAAM,SACN,QAAS,IACE,IAEd,EAED,mBAAoB,CAChB,KAAM,QAEN,QAAS,IACE,EAEd,EAED,uBAAwB,CACpB,KAAM,OACN,SAAU,GACV,QAAS,IACE,IAEd,EAED,gBAAiB,CACb,KAAM,MACN,SAAU,GACV,QAAS,IACE,IAEd,EAED,cAAe,CACX,KAAM,MACN,SAAU,GACV,QAAS,IACE,IAEd,EAED,SAAU,CACN,KAAM,QACN,SAAU,GAEV,QAAS,IACE,EAEd,EAED,aAAc,CACV,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EAED,YAAa,CACT,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EAED,sBAAuB,CACnB,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EAED,cAAe,CACX,KAAM,OACN,SAAU,GACV,QAAS,IACE,EAEd,EAED,gBAAiB,CACb,KAAM,QACN,SAAU,GAEV,QAAS,IACE,EAEd,EAED,mBAAoB,CAChB,KAAM,QACN,SAAU,GAEV,QAAS,IACE,EAEd,EAED,sBAAuB,CACnB,KAAM,QACN,SAAU,GAEV,QAAS,IACE,EAEd,EAED,2BAA4B,CACxB,KAAM,QACN,SAAU,GAEV,QAAS,IACE,EAEd,EAED,eAAgB,CACZ,KAAM,QACN,SAAU,GAEV,QAAS,IACE,EAEd,EAED,WAAY,CACR,KAAM,SACN,SAAU,GACV,QAAS,IACE,IAEd,EAED,iBAAkB,CACd,KAAM,SACN,SAAU,GACV,QAAS,IACE,EAEd,CACJ,EAED,MAAO,CACH,MAAO,CACH,OAAQ,KAAK,KAAK,cAClB,OAAQ,KAAK,KAAK,OAClB,SAAU,GACV,OAAQ,GACR,UAAW,GACX,OAAQ,KACR,WAAY,EACZ,WAAY,EACZ,YAAa,EACb,YAAa,EACb,WAAY,KACZ,aAAc,GACd,mBAAoB,IAChC,CACK,EAED,SAAU,CACN,QAAS,CACL,KAAM,CACF,OAAO,KAAK,KAAK,OACpB,EACD,IAAIE,EAAW,CAEX,KAAK,KAAK,QAAUA,CACvB,CACJ,EAED,iBAAkB,CACd,OAAO,KAAK,OAAO,OAAO,KAAK,KAAK,eAAe,GAAK,IAC3D,EAED,UAAW,CACP,OAAI,KAAK,KAAK,gBACV,KAAK,aAAa,EAAI,EACtB,KAAK,oBAAoB,KAAK,IAAI,EAElC,KAAK,KAAK,cAAgB,IAEvB,KAAK,MACf,EAED,YAAa,CACT,OAAI,KAAK,cAAgB,KACd,GAEJ,KAAK,YAAY,KAAK,KAAO,KAAK,KAAK,KAAK,EACtD,EAED,SAAU,CACN,MAAO,CACH,eAAgB,KAAK,WACrB,aAAc,KAAK,OACnB,aAAc,KAAK,SACnB,kBAAmB,KAAK,KAAK,YAAc,EAC3C,sBAAuB,KAAK,cAAgB,CAAC,KAAK,KAAK,KAAK,OAC5D,YAAa,KAAK,aAAe,KAAK,gBAAkB,KAAK,KAAK,GAClE,kBAAmB,CAAC,KAAK,gBACzB,kBAAmB,KAAK,cACxB,eAAgB,KAAK,KAAK,QAC1C,CACS,EAED,UAAW,CACP,MAAO,CACH,MAAO,IACP,aAAc,KACd,UAAW,eACX,KAAM,KAAK,KACX,YAAa,KAAK,UAClB,YAAa,KAAK,aAClB,OAAQ,KAAK,QACb,aAAc,GACd,SAAU,CAAC,KAAK,QAChC,CACS,EAED,aAAc,CACV,GAAI,KAAK,gBAAgB,mBAAmB,EAAG,CAC3C,IAAIC,EAAa,KAAK,QAGtB,KAAOA,EAAW,SAAS,gBAAkB,WAAW,CAChDA,EAAW,UACXA,EAAaA,EAAW,SAG5B,KACH,CAED,OAAOA,CACV,CAED,MAAO,CACH,cAAe,KAAK,kBACpB,WAAY,KAAK,eACjB,iBAAkB,KAAK,qBACvB,uBAAwB,KAAK,2BAC7B,iBAAkB,KAAK,qBACvB,mBAAoB,KAAK,sBACzC,CACS,EAED,SAAU,CACN,OAAI,KAAK,yBAA2B,KACzB,CACH,UAAW,IACX,QAAS,KAAK,uBACd,SAAU,CAAC,KAAK,kBACpC,EAGmB,CACH,UAAW,IACX,QAAS,KAAK,IAAI,GAAG,KAAK,kBAAkB,4CAA4C,EACxF,SAAU,CAAC,KAAK,kBAChC,CACS,EAED,YAAa,CACT,OAAO,KAAK,qBAAuB,MAAQ,KAAK,kBACnD,EAED,eAAgB,CACZ,OAAO,KAAK,iBAAiB,KAAK,IAAI,CACzC,EAED,aAAc,CAEV,OAAI,KAAK,gBAAgB,uBAAuB,EACrC,KAAK,aAAa,QAGtB,KAAK,OAAO,OACtB,EAED,aAAc,CAEV,OAAI,KAAK,gBAAgB,uBAAuB,EACrC,KAAK,aAAa,QAGtB,KAAK,OAAO,OACtB,CACJ,EAED,MAAO,CACH,gBAAgBC,EAAO,CACnB,KAAK,OAASA,IAAU,KAAK,KAAK,EACrC,EAED,aAAaA,EAAO,CAChB,KAAK,mBAAqBA,CAC7B,EAED,gBAAiB,CACb,SAAU,CACF,KAAK,kBACL,KAAK,aAAe,KAAK,gBAAgB,QAAQ,KAAK,KAAK,EAAE,GAAK,EAEzE,EACD,UAAW,GACX,KAAM,EACT,EAED,cAAe,CACX,SAAU,CACF,KAAK,gBACL,KAAK,QAAU,KAAK,cAAc,QAAQ,KAAK,KAAK,EAAE,GAAK,EAElE,EACD,UAAW,GACX,KAAM,EACT,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,eAAgB,CACZ,KAAK,uBAAsB,CAC9B,EAED,QAAS,CACL,kBAAmB,EACX,KAAK,KAAK,SAAS,OAAS,GAAK,KAAK,KAAK,YAAc,KACzD,KAAK,UAAY,GAExB,EAED,kBAAmB,CACf,KAAK,IAAI,iBAAiB,UAAW,KAAK,aAAa,EAEnD,KAAK,KAAK,QACN,KAAK,IAAI,cAAc,gCAAgC,GACvD,KAAK,IAAI,cAAc,gCAAgC,EAAE,MAAK,EAIlE,KAAK,eACL,KAAK,mBAAqB,KAAK,aAC/B,KAAK,gBAAe,GAGxB,KAAK,iBAAgB,CACxB,EAED,wBAAyB,CACrB,KAAK,IAAI,oBAAoB,UAAW,KAAK,aAAa,CAC7D,EAED,cAAcC,EAAO,CAEjB,GAAIA,EAAM,SAAW,KAAK,IAI1B,OAAQA,EAAM,IAAG,CACb,IAAK,aAAc,CAEf,GAAI,KAAK,OACL,MAIJ,KAAK,aAAY,EACjB,KAAK,oBAAoB,KAAK,IAAI,EAElCA,EAAM,gBAAe,EACrBA,EAAM,eAAc,EAEpB,KACH,CAED,IAAK,YAAa,CAEd,GAAI,CAAC,KAAK,OACN,MAIJ,KAAK,aAAa,EAAK,EAEvBA,EAAM,gBAAe,EACrBA,EAAM,eAAc,EAEpB,KACH,CAKJ,CACJ,EAED,aAAaC,EAAO,CAAC,KAAK,OAAQ,CAC1B,KAAK,aAGT,KAAK,OAASA,EACjB,EAED,oBAAoBC,EAAU,CACtB,KAAK,YAAc,KAAK,WAIxBA,EAAS,SAAS,QAAU,IAC5B,KAAK,UAAY,GAEjB,KAAK,SAASA,EAAS,KAAK,GAAIA,EAAS,KAAK,MAAM,EAE3D,EAED,UAAUC,EAAQC,EAASC,EAAa,CAChC,KAAK,YAAc,KAAK,YAI5B,KAAK,OAASA,EAEV,KAAK,gBAAgB,mBAAmB,EACxC,KAAK,QAAQ,QAAQ,UAAU,IAAI,EAEnC,KAAK,cAAc,IAAI,EAE9B,EAED,SAAU,CACF,KAAK,gBAAgB,mBAAmB,EACxC,KAAK,QAAQ,QAAQ,UAErB,KAAK,YAAW,CAEvB,EAED,aAAaC,EAAUC,EAAU,CACxBA,IAID,KAAK,gBAAgB,mBAAmB,EACxC,KAAK,QAAQ,QAAQ,SAASD,EAAUC,CAAQ,EAEhD,KAAK,aAAaD,EAAUC,CAAQ,EAE3C,EAED,UAAUC,EAAkB,CACxB,OAAI,KAAK,gBAAgB,mBAAmB,EACjC,KAAK,QAAQ,QAAQ,UAAUA,CAAgB,EAGnD,KAAK,cAAcA,CAAgB,CAC7C,EAED,SAAU,CACF,KAAK,gBAAgB,mBAAmB,EACxC,KAAK,QAAQ,QAAQ,UAErB,KAAK,YAAW,CAEvB,EAED,SAASA,EAAkBC,EAAkB,CACzC,OAAI,KAAK,gBAAgB,mBAAmB,EACjC,KAAK,QAAQ,QAAQ,SAASD,EAAkBC,CAAgB,EAEpE,KAAK,aAAaD,EAAkBC,CAAgB,CAC9D,EAGD,gBAAgBC,EAAM,CAClB,KAAK,MAAM,aAAcA,CAAI,CAChC,EAGD,gBAAgBV,EAAOU,EAAM,CACrB,KAAK,cAAgB,CAACA,EAAK,SAC3B,KAAK,QAAU,GAEf,KAAK,KAAK,QAAU,KAEpB,KAAK,QAAUV,EAEf,KAAK,KAAK,QAAUA,GAGxB,KAAK,MAAM,aAAcU,CAAI,CAChC,EAED,cAAcA,EAAM,CAChB,KAAK,YAAY,cAAcA,CAAI,CACtC,EAED,WAAWA,EAAMC,EAAK,CAClB,KAAK,YAAY,WAAWD,EAAMC,CAAG,CACxC,EAED,iBAAiBC,EAAa,CAC1B,KAAK,YAAY,iBAAiBA,CAAW,CAChD,EAED,YAAYF,EAAM,CACd,KAAK,iBAAiBA,CAAI,EAC1B,KAAK,aAAa,EAAI,CACzB,EAED,iBAAkB,CACd,KAAK,UAAU,IAAM,CACjB,MAAMG,EAAmB,KAAK,IAAI,cAAc,uCAAuC,EACnFA,GACAA,EAAiB,MAAK,CAE1C,CAAa,CACJ,EAED,uBAAuBC,EAAOd,EAAO,CACjC,KAAK,UAAU,IAAM,CACjB,KAAK,YAAY,uBAAuBc,EAAOd,CAAK,CACpE,CAAa,CACJ,EAED,oBAAoBU,EAAM,CACtB,KAAK,mBAAmBA,CAAI,CAC/B,EAED,eAAeA,EAAM,CACjB,KAAK,mBAAmBA,CAAI,CAC/B,EAED,mBAAmBA,EAAM,CACrB,KAAK,YAAY,mBAAmBA,CAAI,CAC3C,EAED,cAAcA,EAAM,CAChB,KAAK,YAAY,iBAAiBA,CAAI,CACzC,EAED,QAAQA,EAAM,CACV,OAAIA,EAAK,KAAK,WACHA,EAAK,KAAK,MAAQA,EAAK,KAAK,WAAW,KAG3CA,EAAK,KAAK,IACpB,EAED,mBAAmBA,EAAM,CDroBjC,IAAAK,ECsoBY,OAAIA,EAAAL,EAAK,OAAL,MAAAK,EAAW,QACJL,EAAK,KAAK,SAAW,GAAO,UAGhC,SACV,EAED,YAAYA,EAAM,CACd,OAAI,KAAK,WACE,KAAK,WAAWA,CAAI,EAGxB,EACV,EAED,sBAAsB,CAAE,KAAAA,EAAM,aAAAM,EAAc,QAAAC,CAAO,EAAI,CAEnD,OAAI,KAAK,gBAAgB,uBAAuB,EACrC,KAAK,aAAa,QAAQ,CAC7B,KAAAP,EACA,aAAAM,EACA,QAAAC,CACpB,CAAiB,EAGE,KAAK,OAAO,QAAQ,CAAE,KAAAP,EAAM,aAAAM,EAAc,QAAAC,CAAO,CAAE,CAC7D,EAED,sBAAsB,CAAE,KAAAP,EAAM,aAAAM,GAAgB,CAE1C,OAAI,KAAK,gBAAgB,uBAAuB,EACrC,KAAK,aAAa,QAAQ,CAAE,KAAAN,EAAM,aAAAM,CAAY,CAAE,EAGpD,KAAK,OAAO,QAAQ,CAAE,KAAAN,EAAM,aAAAM,CAAY,CAAE,CACpD,CACJ,CACL,CAAC"}