const a=`{% block sw_flow_set_order_state_modal %} <sw-modal class="sw-flow-set-order-state-modal" :title="$tc('sw-flow.modals.status.titleSetStatus')" :closable="false" @modal-close="onClose" > {% block sw_flow_set_order_state_modal_content %} {% block sw_flow_set_order_state_modal_payment_status %} <sw-select-field v-model:value="config.order_transaction" name="sw-field--config-order_transaction" class="sw-flow-set-order-state-modal__payment-status" :options="paymentOptions" :label="$tc('sw-flow.modals.status.labelPaymentStatus')" :placeholder="$tc('sw-flow.modals.status.placeholderPaymentStatus')" /> {% endblock %} {% block sw_flow_set_order_state_modal_delivery_status %} <sw-select-field v-model:value="config.order_delivery" name="sw-field--config-order_delivery" class="sw-flow-set-order-state-modal__delivery-status" :options="deliveryOptions" :label="$tc('sw-flow.modals.status.labelDeliveryStatus')" :placeholder="$tc('sw-flow.modals.status.placeholderDeliveryStatus')" /> {% endblock %} {% block sw_flow_set_order_state_modal_order_status %} <sw-select-field v-model:value="config.order" name="sw-field--config-order" class="sw-flow-set-order-state-modal__order-status" :options="orderOptions" :label="$tc('sw-flow.modals.status.labelOrderStatus')" :placeholder="$tc('sw-flow.modals.status.placeholderOrderStatus')" /> {% endblock %} {% block sw_flow_set_order_state_modal_force_transition %} <sw-checkbox-field v-model:value="config.force_transition" name="sw-field--config-force_transition" class="sw-flow-set-order-state-modal__force-transition" :label="$tc('sw-flow.modals.status.forceTransition')" :help-text="$tc('sw-flow.modals.status.forceTransitionHelpText')" /> {% endblock %} {% endblock %} {% block sw_flow_set_order_state_modal_footer %} <template #modal-footer> {% block sw_flow_set_order_state_modal_footer_cancel_button %} <sw-button class="sw-flow-set-order-state-modal__cancel-button" size="small" @click="onClose" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_flow_set_order_state_modal_footer_save_button %} <sw-button class="sw-flow-set-order-state-modal__save-button" variant="primary" size="small" @click="onAddAction" > {{ sequence.id ? $tc('sw-flow.modals.buttonSaveAction') : $tc('sw-flow.modals.buttonAddAction') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %}`,{Component:r,Mixin:l,Store:i}=Shopware,{Criteria:o}=Shopware.Data,{mapState:n}=r.getComponentHelper(),d={template:a,inject:["repositoryFactory"],emits:["modal-close","process-finish"],mixins:[l.getByName("notification")],props:{sequence:{type:Object,required:!0}},data(){return{paymentOptions:[],deliveryOptions:[],orderOptions:[],config:{order:"",order_delivery:"",order_transaction:"",force_transition:!1}}},computed:{stateMachineStateRepository(){return this.repositoryFactory.create("state_machine_state")},stateMachineStateCriteria(){const t=new o(1,null);return t.addSorting({field:"name",order:"ASC"}),t.addAssociation("stateMachine"),t.addFilter(o.equalsAny("state_machine_state.stateMachine.technicalName",["order.state","order_transaction.state","order_delivery.state"])),t},...n(()=>i.get("swFlow"),["stateMachineState"])},created(){this.createdComponent()},methods:{createdComponent(){var t,e;this.config=(t=this.sequence)!=null&&t.config?{...(e=this.sequence)==null?void 0:e.config}:this.config,this.stateMachineState.length?this.generateOptions(this.stateMachineState):this.getAllStates()},getAllStates(){return this.stateMachineStateRepository.search(this.stateMachineStateCriteria).then(t=>{this.generateOptions(t),Shopware.Store.get("swFlow").stateMachineState=t})},generateOptions(t){this.paymentOptions=this.buildTransitionOptions("order_transaction.state",t),this.deliveryOptions=this.buildTransitionOptions("order_delivery.state",t),this.orderOptions=this.buildTransitionOptions("order.state",t)},buildTransitionOptions(t,e){return e.filter(s=>s.stateMachine.technicalName===t).map(s=>({id:s.technicalName,name:s.translated.name}))},onClose(){this.$emit("modal-close")},onAddAction(){if(!this.config.order&&!this.config.order_delivery&&!this.config.order_transaction){this.createNotificationError({message:this.$tc("sw-flow.modals.status.messageNoStatusError")});return}const t={...this.sequence,config:this.config};this.$emit("process-finish",t)}}};export{d as default};
