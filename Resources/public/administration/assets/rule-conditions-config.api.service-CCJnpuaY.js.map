{"version":3,"file":"rule-conditions-config.api.service-CCJnpuaY.js","sources":["../../../app/administration/src/core/service/api/rule-conditions-config.api.service.js"],"sourcesContent":["import ApiService from '../api.service';\n\n/**\n * @private\n * @package services-settings\n */\nexport default class RuleConditionsConfigApiService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'ruleConditionsConfigApiService';\n    }\n\n    load() {\n        if (Cicada.State.getters['ruleConditionsConfig/getConfig']() !== null) {\n            return Promise.resolve();\n        }\n\n        return this.httpClient\n            .get('_info/rule-config', {\n                headers: this.getBasicHeaders(),\n            })\n            .then((response) => {\n                Cicada.State.commit('ruleConditionsConfig/setConfig', ApiService.handleResponse(response));\n            });\n    }\n}\n"],"names":["RuleConditionsConfigApiService","ApiService","httpClient","loginService","response"],"mappings":"iHAMe,MAAMA,UAAuCC,CAAW,CACnE,YAAYC,EAAYC,EAAc,CAClC,MAAMD,EAAYC,EAAc,KAAM,kBAAkB,EACxD,KAAK,KAAO,gCACf,CAED,MAAO,CACH,OAAI,OAAO,MAAM,QAAQ,gCAAgC,EAAC,IAAO,KACtD,QAAQ,UAGZ,KAAK,WACP,IAAI,oBAAqB,CACtB,QAAS,KAAK,gBAAiB,CAC/C,CAAa,EACA,KAAMC,GAAa,CAChB,OAAO,MAAM,OAAO,iCAAkCH,EAAW,eAAeG,CAAQ,CAAC,CACzG,CAAa,CACR,CACL"}