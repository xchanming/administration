import{e as a}from"./channel-DxwX5hMG.js";import"./administration-BlrHhDOI.js";const l=`{% block sw_settings_rule_add_assignment_modal %} <sw-modal class="sw-settings-rule-add-assignment-modal" :title="$tc(entityContext.label)" :variant="modalSize" @modal-close="onCloseAddModal" > {% block sw_settings_rule_add_assignment_modal_category_tree %} <sw-settings-rule-category-tree v-if="entityContext.entityName === 'category'" :rule="rule" :association="entityContext.addContext.association" :categories-collection="entities" :hide-headline="true" :hide-search="true" placeholder="Add categories" @on-selection="onSelect" /> {% endblock %} {% block sw_settings_rule_add_assignment_modal_listing %} <sw-settings-rule-add-assignment-listing v-else class="sw-settings-rule-detail-assignments__entity-listing" :entity-context="entityContext" :rule-id="rule.id" @select-item="onSelect" /> {% endblock %} {% block sw_settings_rule_add_assignment_modal_footer %} <template #modal-footer> {% block sw_settings_rule_add_assignment_modal_cancel %} <sw-button class="sw-settings-rule-add-assignment-modal__cancel-button" size="small" @click="onCloseAddModal" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_settings_rule_add_assignment_modal_confirm %} <sw-button class="sw-settings-rule-add-assignment-modal__confirm-button" size="small" variant="primary" @click="onAdd" > {{ $tc('global.default.add') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %}`,{Context:s}=Cicada,{Criteria:d}=Cicada.Data,m={template:l,compatConfig:Cicada.compatConfig,inject:["repositoryFactory"],emits:["close-add-modal","entities-saved"],props:{rule:{type:Object,required:!0},entityContext:{type:Object,required:!0}},data(){return{repository:null,entities:null,isLoading:!0,selection:{},criteriaLimit:10,currentLanguageId:Cicada.Context.api.languageId}},computed:{modalSize(){return this.entityContext.entityName==="category"?"default":"large"}},created(){this.createdComponent()},methods:{createdComponent(){this.entityContext.entityName==="category"?this.entities=new a("/category","category",s.api):(this.repository=this.entityContext.repository,this.loadEntities())},loadEntities(){const t=this.entityContext.api?this.entityContext.api():s.api,e=new d(1,this.criteriaLimit);this.repository.search(e,t).then(i=>{this.entities=i,this.isLoading=!1})},onCloseAddModal(){this.$emit("close-add-modal")},onAdd(){if(this.entityContext.addContext.type==="one-to-many"){this.updateEntities();return}this.insertEntities()},updateEntities(){const t=this.entityContext.api?this.entityContext.api():s.api,e=this.repositoryFactory.create(this.entityContext.addContext.entity);return Object.values(this.selection).forEach(i=>{i[this.entityContext.addContext.column]=this.rule.id}),e.sync(Object.values(this.selection),t).then(()=>this.$emit("entities-saved"))},insertEntities(){const t=this.entityContext.api?this.entityContext.api():s.api,e=this.repositoryFactory.create(this.entityContext.addContext.entity),i=[];return Object.values(this.selection).forEach(o=>{const n=e.create(t);n.ruleId=this.rule.id,n[this.entityContext.addContext.column]=o.id,i.push(n)}),e.sync(i,t).then(()=>this.$emit("entities-saved"))},onSelect(t){this.selection=t}}};export{m as default};
//# sourceMappingURL=index-Ll6-4sv4.js.map
