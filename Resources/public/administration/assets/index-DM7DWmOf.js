const s='{% block sw_custom_field_translated_labels %} <div class="sw-custom-field-translated-labels"> {% block sw_custom_field_translated_labels_single %} <template v-if="localeCount == 1"> <div v-for="locale in locales" :key="locale" class="sw-custom-field-translated-labels__single" > <sw-text-field v-for="(label, name) in propertyNames" :key="getInlineSnippet(name)" v-model:value="config[name][locale]" :disabled="disabled" :label="getLabel(label, locale)" @update:value="onInput($event, name, locale)" /> </div> </template> {% endblock %} {% block sw_custom_field_translated_labels_translated %} <sw-tabs v-else variant="minimal" position-identifier="sw-custom-field-translated-labels" class="sw-custom-field-translated-labels__tabs" :default-item="fallbackLocale" > {% block sw_custom_field_translated_labels_translated_tabs %} <template #default="{ active }"> <sw-tabs-item v-for="locale in locales" :key="locale" class="sw-custom-field-translated-labels__translated-labels-field" variant="minimal" :name="locale" :active-tab="active" > {{ $tc(`locale.${locale}`) }} </sw-tabs-item> </template> {% endblock %} {% block sw_custom_field_translated_labels_translated_content %} <template #content="{ active }" > <template v-for="locale in locales" :key="locale" > <div v-if="active === locale"> {% block sw_custom_field_translated_labels_translated_content_field %} <sw-text-field v-for="(label, name) in propertyNames" :key="getInlineSnippet(name)" v-model:value="config[name][locale]" class="sw-custom-field-translated-labels__translated-content-field" :disabled="disabled" :label="getLabel(label, locale)" @update:value="onInput($event, name, locale)" /> {% endblock %} </div> </template> </template> {% endblock %} </sw-tabs> {% endblock %} </div> {% endblock %}',{Mixin:i}=Shopware,n={template:s,inject:["acl"],mixins:[i.getByName("sw-inline-snippet")],props:{locales:{type:Array,required:!0,default:[]},config:{type:Object,required:!0},propertyNames:{type:Object,required:!0},disabled:{type:Boolean,required:!1,default:!1}},computed:{fallbackLocale(){return this.$root.$i18n.fallbackLocale},localeCount(){return this.locales.length}},watch:{locales(){this.initializeConfiguration()}},created(){this.createdComponent()},methods:{createdComponent(){this.initializeConfiguration()},initializeConfiguration(){Object.keys(this.propertyNames).forEach(e=>{this.config.hasOwnProperty(e)||(this.config[e]={[this.fallbackLocale]:null})})},getLabel(e,l){const a=this.getInlineSnippet(e),t=this.$tc(`locale.${l.value??l}`);return`${a} (${t})`},onInput(e,l,a){e===""&&(this.config[l][a]=null)}}};export{n as default};
