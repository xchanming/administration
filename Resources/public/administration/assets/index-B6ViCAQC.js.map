{"version":3,"file":"index-B6ViCAQC.js","sources":["../../../app/administration/src/app/asyncComponent/media/sw-media-upload-v2/sw-media-upload-v2.html.twig","../../../app/administration/src/app/asyncComponent/media/sw-media-upload-v2/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_media_upload_v2 %}\n<div class=\"sw-media-upload-v2\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_upload_v2_compact %}\n    <div\n        v-if=\"variant == 'compact'\"\n        class=\"sw-media-upload-v2__content\"\n    >\n        <sw-button-group\n            split-button\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_upload_v2_compact_button_file_upload %}\n            <sw-button\n                class=\"sw-media-upload-v2__button-compact-upload\"\n                :disabled=\"disabled\"\n                variant=\"primary\"\n                @click=\"onClickUpload\"\n            >\n                {{ buttonFileUploadLabel }}\n            </sw-button>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_upload_v2_compact_button_context_menu %}\n            <sw-context-button\n                v-if=\"uploadUrlFeatureEnabled\"\n                :disabled=\"disabled\"\n                class=\"sw-media-upload-v2__button-open-context-menu\"\n            >\n                <template #button>\n                    <sw-button\n                        :disabled=\"disabled\"\n                        square\n                        variant=\"primary\"\n                        class=\"sw-media-upload-v2__button-context-menu\"\n                    >\n                        <sw-icon name=\"regular-chevron-down-xs\" />\n                    </sw-button>\n                </template>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_upload_v2_compact_button_context_menu_actions %}\n                <sw-context-menu-item\n                    class=\"sw-media-upload-v2__button-url-upload\"\n                    @click=\"useUrlUpload\"\n                >\n                    {{ $tc('global.sw-media-upload-v2.buttonUrlUpload') }}\n                </sw-context-menu-item>\n                {% endblock %}\n            </sw-context-button>\n            {% endblock %}\n        </sw-button-group>\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_upload_v2_compact_url_form %}\n        <sw-media-url-form\n            v-if=\"isUrlUpload\"\n            variant=\"modal\"\n            @modal-close=\"useFileUpload\"\n            @media-url-form-submit=\"onUrlUpload\"\n        />\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_upload_v2_regular %}\n    <div\n        v-if=\"variant == 'regular' || variant == 'small'\"\n        class=\"sw-media-upload-v2__content\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_upload_v2_regular_header %}\n        <div class=\"sw-media-upload-v2__header\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_upload_v2_regular_header_label %}\n            <!-- eslint-disable-next-line vuejs-accessibility/label-has-for -->\n            <label\n                v-if=\"label\"\n                class=\"sw-media-upload-v2__label\"\n                :class=\"swFieldLabelClasses\"\n            >\n                {{ label }}\n            </label>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_upload_v2_regular_header_helptext %}\n            <sw-help-text\n                v-if=\"helpText\"\n                class=\"sw-media-upload-v2__help-text\"\n                :text=\"helpText\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_upload_v2_regular_header_switch %}\n            <sw-context-button\n                v-if=\"!source && uploadUrlFeatureEnabled\"\n                class=\"sw-media-upload-v2__switch-mode\"\n                :disabled=\"disabled\"\n                aria-label=\"global.sw-media-upload-v2.switchMode\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_upload_v2_regular_header_switch_file_upload %}\n                <sw-context-menu-item\n                    v-if=\"!isFileUpload\"\n                    :disabled=\"disabled\"\n                    class=\"sw-media-upload-v2__button-file-upload\"\n                    @click=\"useFileUpload\"\n                >\n                    {{ buttonFileUploadLabel }}\n                </sw-context-menu-item>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_upload_v2_regular_header_switch_url_upload %}\n                <sw-context-menu-item\n                    v-if=\"!isUrlUpload\"\n                    class=\"sw-media-upload-v2__button-url-upload\"\n                    @click=\"useUrlUpload\"\n                >\n                    {{ $t('global.sw-media-upload-v2.buttonUrlUpload') }}\n                </sw-context-menu-item>\n                {% endblock %}\n            </sw-context-button>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_upload_v2_regular_drop_zone %}\n        <div\n            ref=\"dropzone\"\n            v-droppable=\"{ dragGroup: 'media', onDrop: onDropMedia, validDropCls: 'is--active' }\"\n            class=\"sw-media-upload-v2__dropzone\"\n            :class=\"isDragActiveClass\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_upload_v2_preview %}\n            <template v-if=\"variant === 'regular'\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_upload_v2_regular_preview_file %}\n                <sw-media-preview-v2\n                    v-if=\"showPreview && (source || preview)\"\n                    class=\"sw-media-upload-v2__preview\"\n                    :source=\"source || preview\"\n                />\n                {% endblock %}\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_upload_v2_regular_preview_fallback %}\n                <div\n                    v-else\n                    class=\"sw-media-upload-v2__preview is--fallback\"\n                >\n                    <sw-icon\n                        class=\"sw-media-upload-v2__fallback-icon\"\n                        name=\"regular-image\"\n                    />\n                </div>\n                {% endblock %}\n            </template>\n\n            <template v-if=\"!showPreview && variant === 'regular'\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_upload_v2_regular_caption %}\n                <div class=\"sw-media-upload-v2__upload-caption\">\n                    <sw-icon name=\"regular-cloud-upload\" />\n                    {{ $tc('global.sw-media-upload-v2.caption') }}\n                </div>\n                {% endblock %}\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_upload_v2_actions %}\n            <div\n                class=\"sw-media-upload-v2__actions\"\n                :class=\"{ 'has--source': source, 'is--small': variant === 'small' }\"\n            >\n\n                <div\n                    v-if=\"source\"\n                    class=\"sw-media-upload-v2__file-info\"\n                >\n                    <div class=\"sw-media-upload-v2__file-headline\">\n                        {{ mediaNameFilter(source, source.name) }}\n                    </div>\n                    <sw-icon\n                        v-if=\"!disabled\"\n                        class=\"sw-media-upload-v2__remove-icon\"\n                        name=\"regular-times-xs\"\n                        @click=\"onRemoveMediaItem\"\n                    />\n                </div>\n\n                <template v-else>\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_media_upload_v2_regular_actions_url %}\n                    <sw-media-url-form\n                        v-if=\"isUrlUpload\"\n                        class=\"sw-media-upload-v2__url-form\"\n                        variant=\"inline\"\n                        @media-url-form-submit=\"onUrlUpload\"\n                    />\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_media_upload_v2_regular_actions_add %}\n                    <template v-if=\"isFileUpload\">\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_media_upload_v2_regular_media_sidebar_button %}\n                        <sw-button\n                            v-if=\"hasOpenMediaButtonListener\"\n                            class=\"sw-media-upload-v2__button open-media-sidebar\"\n                            :class=\"{ 'is--small': variant === 'small'}\"\n                            variant=\"primary\"\n                            size=\"small\"\n                            :square=\"variant === 'small'\"\n                            :disabled=\"disabled\"\n                            @click=\"onClickOpenMediaSidebar\"\n                        >\n                            <sw-icon\n                                v-if=\"variant === 'small'\"\n                                name=\"regular-plus\"\n                                size=\"16px\"\n                            />\n                            <template v-else>\n                                {{ $tc('global.sw-media-upload-v2.buttonOpenMedia') }}\n                            </template>\n                        </sw-button>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_media_upload_v2_regular_upload_button %}\n                        <sw-button\n                            class=\"sw-media-upload-v2__button upload\"\n                            :class=\"{ 'is--small': variant === 'small'}\"\n                            variant=\"ghost\"\n                            size=\"small\"\n                            :disabled=\"disabled\"\n                            @click=\"onClickUpload\"\n                        >\n                            {{ buttonFileUploadLabel }}\n                        </sw-button>\n                        {% endblock %}\n                    </template>\n                    {% endblock %}\n                </template>\n\n            </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_upload_v2_file_input %}\n    <form\n        ref=\"fileForm\"\n        class=\"sw-media-upload-v2__form\"\n    >\n        <!-- eslint-disable-next-line vuejs-accessibility/form-control-has-label -->\n        <input\n            id=\"files\"\n            ref=\"fileInput\"\n            class=\"sw-media-upload-v2__file-input\"\n            type=\"file\"\n            :accept=\"extensionAccept ? '*/*' : fileAccept\"\n            :multiple=\"multiSelect\"\n            @change=\"onFileInputChange\"\n        >\n    </form>\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-media-upload-v2.html.twig';\nimport './sw-media-upload-v2.scss';\n\nconst { Mixin, Context } = Cicada;\nconst { fileReader } = Cicada.Utils;\nconst { fileSize } = Cicada.Utils.format;\nconst INPUT_TYPE_FILE_UPLOAD = 'file-upload';\nconst INPUT_TYPE_URL_UPLOAD = 'url-upload';\n\n/**\n * @status ready\n * @description The <u>sw-media-upload-v2</u> component is used wherever an upload is needed. It supports drag & drop-,\n * file- and url-upload and comes in various forms.\n * @package content\n * @example-type code-only\n * @component-example\n * <sw-media-upload-v2\n *     upload-tag=\"my-upload-tag\"\n *     variant=\"regular\"\n *     :allow-multi-select=\"false\"\n *     label=\"My image-upload\"\n * ></sw-media-upload-v2>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'mediaService',\n        'configService',\n        'feature',\n        'fileValidationService',\n    ],\n\n    emits: [\n        'media-drop',\n        'media-upload-sidebar-open',\n        'media-upload-remove-image',\n        'media-upload-add-file',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        source: {\n            type: [\n                Object,\n                String,\n                File,\n            ],\n            required: false,\n            default: null,\n        },\n\n        variant: {\n            type: String,\n            required: false,\n            validValues: [\n                'compact',\n                'regular',\n                'small',\n            ],\n            validator(value) {\n                return [\n                    'compact',\n                    'regular',\n                    'small',\n                ].includes(value);\n            },\n            default: 'regular',\n        },\n\n        uploadTag: {\n            type: String,\n            required: true,\n        },\n\n        allowMultiSelect: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        addFilesOnMultiselect: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        // eslint-disable-next-line vue/require-default-prop\n        label: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        buttonLabel: {\n            type: String,\n            required: false,\n            default: '',\n        },\n\n        defaultFolder: {\n            type: String,\n            required: false,\n            validator(value) {\n                return value.length > 0;\n            },\n            default: null,\n        },\n\n        targetFolderId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        helpText: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        sourceContext: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n\n        fileAccept: {\n            type: String,\n            required: false,\n            default: '*/*',\n        },\n\n        extensionAccept: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        maxFileSize: {\n            type: Number,\n            required: false,\n            default: null,\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        privateFilesystem: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        useFileData: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        required: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        onMediaUploadSidebarOpen: {\n            type: Function,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            multiSelect: this.allowMultiSelect,\n            inputType: INPUT_TYPE_FILE_UPLOAD,\n            preview: null,\n            isDragActive: false,\n            defaultFolderId: null,\n            isUploadUrlFeatureEnabled: false,\n            isLoading: false,\n        };\n    },\n\n    computed: {\n        defaultFolderRepository() {\n            return this.repositoryFactory.create('media_default_folder');\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media', '', {\n                keepApiErrors: true,\n            });\n        },\n\n        showPreview() {\n            return !this.multiSelect;\n        },\n\n        hasOpenMediaButtonListener() {\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return Object.keys(this.$listeners).includes('mediaUploadSidebarOpen');\n            }\n            return !!this.onMediaUploadSidebarOpen;\n        },\n\n        isDragActiveClass() {\n            return {\n                'is--active': this.isDragActive,\n                'is--multi': this.variant === 'regular' && !!this.multiSelect,\n                'is--small': this.variant === 'small',\n            };\n        },\n\n        mediaFolderId() {\n            return this.defaultFolderId || this.targetFolderId;\n        },\n\n        isUrlUpload() {\n            return this.inputType === INPUT_TYPE_URL_UPLOAD;\n        },\n\n        isFileUpload() {\n            return this.inputType === INPUT_TYPE_FILE_UPLOAD;\n        },\n\n        uploadUrlFeatureEnabled() {\n            return this.isUploadUrlFeatureEnabled;\n        },\n\n        swFieldLabelClasses() {\n            return {\n                'is--required': this.required,\n            };\n        },\n\n        buttonFileUploadLabel() {\n            if (this.buttonLabel === '') {\n                return this.$tc('global.sw-media-upload-v2.buttonFileUpload');\n            }\n\n            return this.buttonLabel;\n        },\n\n        mediaNameFilter() {\n            return Cicada.Filter.getByName('mediaName');\n        },\n    },\n\n    watch: {\n        async defaultFolder() {\n            this.defaultFolderId = await this.getDefaultFolderId();\n        },\n\n        disabled(newValue) {\n            if (newValue) {\n                this.isDragActive = false;\n            }\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    beforeUnmount() {\n        this.beforeDestroyComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            this.mediaService.addListener(this.uploadTag, this.handleMediaServiceUploadEvent);\n            if (this.mediaFolderId) {\n                return;\n            }\n\n            if (this.defaultFolder) {\n                this.isLoading = true;\n                this.defaultFolderId = await this.getDefaultFolderId();\n                this.isLoading = false;\n            }\n\n            this.configService.getConfig().then((result) => {\n                this.isUploadUrlFeatureEnabled = result.settings.enableUrlFeature;\n            });\n        },\n\n        mountedComponent() {\n            if (this.$refs.dropzone) {\n                [\n                    'dragover',\n                    'drop',\n                ].forEach((event) => {\n                    window.addEventListener(event, this.stopEventPropagation, false);\n                });\n                this.$refs.dropzone.addEventListener('drop', this.onDrop);\n\n                window.addEventListener('dragenter', this.onDragEnter);\n                window.addEventListener('dragleave', this.onDragLeave);\n            }\n        },\n\n        beforeDestroyComponent() {\n            this.mediaService.removeByTag(this.uploadTag);\n            this.mediaService.removeListener(this.uploadTag, this.handleMediaServiceUploadEvent);\n\n            [\n                'dragover',\n                'drop',\n            ].forEach((event) => {\n                window.addEventListener(event, this.stopEventPropagation, false);\n            });\n\n            window.removeEventListener('dragenter', this.onDragEnter);\n            window.removeEventListener('dragleave', this.onDragLeave);\n        },\n\n        /*\n         * Drop Handler\n         */\n        onDrop(event) {\n            if (this.disabled) {\n                return;\n            }\n\n            const newMediaFiles = Array.from(event.dataTransfer.files);\n            this.isDragActive = false;\n\n            if (newMediaFiles.length === 0) {\n                return;\n            }\n\n            this.handleFileCheck(newMediaFiles);\n        },\n\n        onDropMedia(dragData) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.$emit('media-drop', dragData.mediaItem);\n        },\n\n        onDragEnter() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.isDragActive = true;\n        },\n\n        onDragLeave(event) {\n            if (event.screenX === 0 && event.screenY === 0) {\n                this.isDragActive = false;\n                return;\n            }\n\n            const target = event.target;\n\n            if (target.closest('.sw-media-upload-v2__dropzone')) {\n                return;\n            }\n\n            this.isDragActive = false;\n        },\n\n        stopEventPropagation(event) {\n            event.preventDefault();\n            event.stopPropagation();\n        },\n\n        /*\n         * Click handler\n         */\n        onClickUpload() {\n            this.$refs.fileInput.click();\n        },\n\n        useUrlUpload() {\n            this.inputType = INPUT_TYPE_URL_UPLOAD;\n        },\n\n        useFileUpload() {\n            this.inputType = INPUT_TYPE_FILE_UPLOAD;\n        },\n\n        onClickOpenMediaSidebar() {\n            this.$emit('media-upload-sidebar-open');\n        },\n\n        onRemoveMediaItem() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.preview = null;\n            this.$emit('media-upload-remove-image');\n        },\n\n        /*\n         * entry points\n         */\n        async onUrlUpload({ url, fileExtension }) {\n            if (!this.multiSelect) {\n                this.mediaService.removeByTag(this.uploadTag);\n                this.preview = url;\n            }\n\n            let fileInfo;\n\n            try {\n                fileInfo = fileReader.getNameAndExtensionFromUrl(url);\n            } catch (error) {\n                this.createNotificationError({\n                    title: this.$tc('global.default.error'),\n                    message: this.$tc('global.sw-media-upload-v2.notification.invalidUrl.message'),\n                });\n\n                return;\n            }\n\n            if (fileExtension) {\n                fileInfo.extension = fileExtension;\n            }\n\n            const targetEntity = this.getMediaEntityForUpload();\n\n            await this.mediaRepository.save(targetEntity, Context.api);\n            this.mediaService.addUpload(this.uploadTag, {\n                src: url,\n                targetId: targetEntity.id,\n                isPrivate: targetEntity.private,\n                ...fileInfo,\n            });\n\n            this.useFileUpload();\n        },\n\n        onFileInputChange() {\n            const newMediaFiles = Array.from(this.$refs.fileInput.files);\n\n            if (!newMediaFiles.length) {\n                return;\n            }\n\n            this.handleFileCheck(newMediaFiles);\n\n            this.$refs.fileForm.reset();\n        },\n\n        /*\n         * Helper functions\n         */\n        async handleUpload(newMediaFiles) {\n            if (!this.multiSelect) {\n                this.mediaService.removeByTag(this.uploadTag);\n                newMediaFiles = [newMediaFiles.pop()];\n                this.preview = newMediaFiles[0];\n            } else {\n                if (!this.preview) {\n                    this.preview = [];\n                }\n\n                if (this.addFilesOnMultiselect) {\n                    this.preview = [\n                        ...this.preview,\n                        ...newMediaFiles,\n                    ];\n                } else {\n                    this.preview = newMediaFiles;\n                }\n            }\n\n            const syncEntities = [];\n\n            const uploadData = newMediaFiles.map((fileHandle) => {\n                const { fileName, extension } = fileReader.getNameAndExtensionFromFile(fileHandle);\n                const targetEntity = this.getMediaEntityForUpload();\n                syncEntities.push(targetEntity);\n\n                return {\n                    src: fileHandle,\n                    targetId: targetEntity.id,\n                    fileName,\n                    extension,\n                    isPrivate: targetEntity.private,\n                };\n            });\n\n            await this.mediaRepository.saveAll(syncEntities, Context.api);\n            await this.mediaService.addUploads(this.uploadTag, uploadData);\n        },\n\n        getMediaEntityForUpload() {\n            const mediaItem = this.mediaRepository.create();\n            mediaItem.mediaFolderId = this.mediaFolderId;\n            mediaItem.private = this.privateFilesystem;\n\n            return mediaItem;\n        },\n\n        async getDefaultFolderId() {\n            return this.mediaService.getDefaultFolderId(this.defaultFolder);\n        },\n\n        handleMediaServiceUploadEvent({ action }) {\n            if (action === 'media-upload-fail') {\n                this.onRemoveMediaItem();\n            }\n        },\n\n        checkFileSize(file) {\n            if (this.maxFileSize === null || file.size <= this.maxFileSize || file.fileSize <= this.maxFileSize) {\n                return true;\n            }\n\n            this.createNotificationError({\n                message: this.$tc('global.sw-media-upload-v2.notification.invalidFileSize.message', 0, {\n                    name: file.name || file.fileName,\n                    limit: fileSize(this.maxFileSize),\n                }),\n            });\n            return false;\n        },\n\n        checkFileType(file) {\n            // Set file type and file name if file is a media entity item\n            if (!file?.type && file.id) {\n                file.type = file.mimeType;\n            }\n\n            if (!file?.name && file.id) {\n                file.name = file.fileName;\n            }\n\n            const isValidFile = () => {\n                if (this.extensionAccept) {\n                    return this.fileValidationService.checkByExtension(file, this.extensionAccept);\n                }\n\n                if (this.fileAccept) {\n                    return this.fileValidationService.checkByType(file, this.fileAccept);\n                }\n\n                return false;\n            };\n\n            if (isValidFile()) {\n                return true;\n            }\n\n            this.createNotificationError({\n                message: this.$tc('global.sw-media-upload-v2.notification.invalidFileType.message', 0, {\n                    name: file.name,\n                    supportedTypes: this.extensionAccept || this.fileAccept,\n                }),\n            });\n\n            return false;\n        },\n\n        handleFileCheck(files) {\n            const checkedFiles = files.filter((file) => {\n                return this.checkFileSize(file) && this.checkFileType(file);\n            });\n\n            if (this.useFileData) {\n                this.preview = !this.multiSelect ? checkedFiles[0] : null;\n                this.$emit('media-upload-add-file', checkedFiles);\n            } else {\n                this.handleUpload(checkedFiles);\n            }\n        },\n    },\n};\n"],"names":["template","Mixin","Context","fileReader","fileSize","INPUT_TYPE_FILE_UPLOAD","INPUT_TYPE_URL_UPLOAD","index","value","newValue","result","event","newMediaFiles","dragData","url","fileExtension","fileInfo","targetEntity","syncEntities","uploadData","fileHandle","fileName","extension","mediaItem","action","file","files","checkedFiles"],"mappings":"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"}