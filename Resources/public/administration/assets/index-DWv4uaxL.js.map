{"version":3,"file":"index-DWv4uaxL.js","sources":["../../../app/administration/src/module/sw-media/component/sidebar/sw-media-quickinfo/sw-media-quickinfo.html.twig","../../../app/administration/src/module/sw-media/component/sidebar/sw-media-quickinfo/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_media_quickinfo %}\n<div class=\"sw-media-quickinfo\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_quickinfo_broken_file %}\n    <sw-alert\n        v-if=\"!item.hasFile\"\n        class=\"sw-media-quickinfo__alert-file-missing\"\n        variant=\"warning\"\n        :title=\"$tc('sw-media.sidebar.infoMissingFile.titleMissingFile')\"\n    >\n        {{ $tc('sw-media.sidebar.infoMissingFile.descriptionMissingFile') }}\n    </sw-alert>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_quickinfo_quickactions %}\n    <sw-media-collapse\n        v-if=\"editable\"\n        :title=\"$tc('sw-media.sidebar.sections.actions')\"\n        :expand-on-loading=\"true\"\n    >\n\n        <template #content>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_quickinfo_quickactions_content %}\n            <ul class=\"sw-media-sidebar__quickactions-list\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_quickinfo_quickactions_replace %}\n                <li\n                    v-if=\"!item.private\"\n                    v-tooltip=\"{\n                        message: $tc('sw-privileges.tooltip.warning'),\n                        disabled: acl.can('media.editor'),\n                        showOnDisabledElements: true\n                    }\"\n                    class=\"quickaction--replace\"\n                    :class=\"quickActionClasses(!acl.can('media.editor'))\"\n                    role=\"button\"\n                    tabindex=\"0\"\n                    @click=\"openModalReplace\"\n                    @keydown.enter=\"openModalReplace\"\n                >\n                    <sw-icon\n                        small\n                        name=\"regular-files\"\n                        class=\"sw-media-sidebar__quickactions-icon\"\n                    />\n                    {{ $tc('sw-media.sidebar.actions.replace') }}\n                </li>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_quickinfo_quickactions_download %}\n                <li\n                    v-if=\"item.hasFile\"\n                    class=\"sw-media-sidebar__quickaction quickaction--download\"\n                >\n                    <sw-external-link\n                        :href=\"item.url\"\n                        download\n                    >\n\n                        <sw-icon\n                            small\n                            name=\"regular-cloud-download\"\n                            class=\"sw-media-sidebar__quickactions-icon\"\n                        />\n                        {{ $tc('sw-media.sidebar.actions.download') }}\n                    </sw-external-link>\n                </li>\n                {% endblock %}\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_quickinfo_quickactions_move %}\n                <li\n                    v-tooltip=\"{\n                        message: $tc('sw-privileges.tooltip.warning'),\n                        disabled: acl.can('media.editor'),\n                        showOnDisabledElements: true\n                    }\"\n                    class=\"quickaction--move\"\n                    :class=\"quickActionClasses(!acl.can('media.editor'))\"\n                    role=\"button\"\n                    tabindex=\"0\"\n                    @click=\"openModalMove\"\n                    @keydown.enter=\"openModalMove\"\n                >\n\n                    <sw-icon\n                        small\n                        name=\"regular-file-export\"\n                        class=\"sw-media-sidebar__quickactions-icon\"\n                    />\n                    {{ $tc('sw-media.sidebar.actions.move') }}\n                </li>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_quickinfo_quickactions_copy_link %}\n                <li\n                    v-if=\"item.hasFile\"\n                    class=\"sw-media-sidebar__quickaction quickaction--copy-link\"\n                    role=\"button\"\n                    tabindex=\"0\"\n                    @click=\"copyLinkToClipboard\"\n                    @keydown.enter=\"copyLinkToClipboard\"\n                >\n\n                    <sw-icon\n                        small\n                        name=\"regular-link\"\n                        class=\"sw-media-sidebar__quickactions-icon\"\n                    />\n                    {{ $tc('sw-media.sidebar.actions.copyLink') }}\n                </li>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_quickinfo_quickactions_delete %}\n                <li\n                    v-if=\"!item.private\"\n                    v-tooltip=\"{\n                        message: $tc('sw-privileges.tooltip.warning'),\n                        disabled: acl.can('media.deleter'),\n                        showOnDisabledElements: true\n                    }\"\n                    class=\"quickaction--delete\"\n                    :class=\"quickActionClasses(!acl.can('media.deleter'))\"\n                    role=\"button\"\n                    tabindex=\"0\"\n                    @click=\"openModalDelete\"\n                    @keydown.enter=\"openModalDelete\"\n                >\n                    <sw-icon\n                        small\n                        name=\"regular-trash\"\n                        class=\"sw-media-sidebar__quickactions-icon is--danger\"\n                    />\n                    {{ $tc('sw-media.sidebar.actions.delete') }}\n                </li>\n                {% endblock %}\n            </ul>\n            {% endblock %}\n        </template>\n    </sw-media-collapse>\n    {% endblock %}\n\n    {# @experimental stableVersion:v6.7.0 feature:SPATIAL_BASES #}\n    {% block sw_media_quickinfo_spatial_configuration %}\n    <sw-media-collapse\n        v-if=\"isSpatial\"\n        :title=\"$tc('sw-media.sidebar.sections.configuration')\"\n        :expand-on-loading=\"true\"\n    >\n        <template #content>\n            <sw-inherit-wrapper\n                v-model:value=\"arReady\"\n                :inherited-value=\"defaultArReady\"\n                @update:value=\"toggleAR\"\n            >\n                <template #content=\"props\">\n                    <sw-switch-field\n                        :map-inheritance=\"props\"\n                        :help-text=\"buildAugmentedRealityTooltip('sw-media.sidebar.actions.arHelpText')\"\n                        :label=\"$tc('sw-media.sidebar.actions.ar')\"\n                        :disabled=\"props.isInherited || !editable\"\n                        :value=\"props.currentValue\"\n                        class=\"sw-media-sidebar__quickactions-switch ar-ready-toggle\"\n                        @update:value=\"props.updateCurrentValue\"\n                    />\n                </template>\n            </sw-inherit-wrapper>\n        </template>\n    </sw-media-collapse>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_quickinfo_preview %}\n    <sw-media-collapse\n        v-if=\"item.hasFile\"\n        :expand-on-loading=\"true\"\n        :title=\"$tc('sw-media.sidebar.sections.preview')\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_quickinfo_preview_content %}\n        <template #content>\n            <div>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_quickinfo_preview_item %}\n                <sw-media-preview-v2\n                    class=\"sw-media-quickinfo__media-preview\"\n                    :source=\"item.id\"\n                    :show-controls=\"true\"\n                    :use-thumbnails=\"false\"\n                />\n                {% endblock %}\n            </div>\n        </template>\n        {% endblock %}\n    </sw-media-collapse>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_quickinfo_metadata %}\n    <sw-media-collapse\n        v-if=\"item.hasFile\"\n        :expand-on-loading=\"true\"\n        :title=\"$tc('sw-media.sidebar.sections.metadata')\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_quickinfo_metadata_content %}\n        <template #content>\n            <dl class=\"sw-media-sidebar__metadata-list\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_quickinfo_metadata_content_base %}\n                <sw-media-quickinfo-metadata-item\n                    class=\"sw-media-quickinfo-metadata-name\"\n                    :class=\"fileNameClasses\"\n                    :label-name=\"$tc('sw-media.sidebar.metadata.name')\"\n                    :truncated=\"false\"\n                >\n\n                    <sw-confirm-field\n                        v-if=\"editable\"\n                        ref=\"inlineEditFieldName\"\n                        class=\"sw-media-quickinfo-metadata-name\"\n                        :disabled=\"!acl.can('media.editor')\"\n                        compact\n                        :value=\"item.fileName\"\n                        :error=\"fileNameError\"\n                        @input=\"onChangeFileName\"\n                        @remove-error=\"onRemoveFileNameError\"\n                    /><template v-else>\n                        {{ item.fileName }}\n                    </template>\n                </sw-media-quickinfo-metadata-item>\n\n                <sw-media-quickinfo-metadata-item\n                    class=\"sw-media-quickinfo-metadata-file-type\"\n                    :label-name=\"$tc('sw-media.sidebar.metadata.fileType')\"\n                >\n                    {{ item.fileExtension.toUpperCase() }}\n                </sw-media-quickinfo-metadata-item>\n\n                <sw-media-quickinfo-metadata-item\n                    class=\"sw-media-quickinfo-metadata-alt-field\"\n                    :label-name=\"$tc('sw-media.sidebar.metadata.altText')\"\n                    :truncated=\"false\"\n                >\n\n                    <sw-confirm-field\n                        v-if=\"editable\"\n                        ref=\"inlineEditFieldAlt\"\n                        :disabled=\"!acl.can('media.editor')\"\n                        compact\n                        :placeholder=\"placeholder(item, 'alt', $tc('sw-media.sidebar.metadata.altText'))\"\n                        :value=\"item.alt\"\n                        @input=\"onSubmitAltText\"\n                    /><template v-else>\n                        {{ placeholder(item, 'alt') }}\n                    </template>\n                </sw-media-quickinfo-metadata-item>\n\n                <sw-media-quickinfo-metadata-item\n                    class=\"sw-media-quickinfo-metadata-alt-field\"\n                    :label-name=\"$tc('sw-media.sidebar.metadata.title')\"\n                    :truncated=\"false\"\n                >\n\n                    <sw-confirm-field\n                        v-if=\"editable\"\n                        ref=\"inlineEditFieldTitle\"\n                        :disabled=\"!acl.can('media.editor')\"\n                        compact\n                        :value=\"item.title\"\n                        :placeholder=\"placeholder(item, 'title', $tc('sw-media.sidebar.metadata.title'))\"\n                        @input=\"onSubmitTitle\"\n                    /><template v-else>\n                        {{ placeholder(item, 'title') }}\n                    </template>\n                </sw-media-quickinfo-metadata-item>\n\n                <sw-media-quickinfo-metadata-item\n                    class=\"sw-media-quickinfo-metadata-mimeType\"\n                    :label-name=\"$tc('sw-media.sidebar.metadata.mimeType')\"\n                >\n                    {{ item.mimeType }}\n                </sw-media-quickinfo-metadata-item>\n\n                <sw-media-quickinfo-metadata-item\n                    class=\"sw-media-quickinfo-metadata-size\"\n                    :label-name=\"$tc('sw-media.sidebar.metadata.fileSize')\"\n                >\n                    {{ fileSize }}\n                </sw-media-quickinfo-metadata-item>\n\n                <sw-media-quickinfo-metadata-item\n                    class=\"sw-media-quickinfo-metadata-createdAt\"\n                    :label-name=\"$tc('sw-media.sidebar.metadata.createdAt')\"\n                >\n                    {{ createdAt }}\n                </sw-media-quickinfo-metadata-item>\n                {% endblock %}\n\n                <template v-if=\"item.metaData\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_media_quickinfo_metadata_specific_meta_data %}\n                    <template v-if=\"item.mediaType.name === 'IMAGE'\">\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_media_quickinfo_metadata_content_image %}\n                        <sw-media-quickinfo-metadata-item\n                            v-if=\"item.metaData.width\"\n                            class=\"sw-media-quickinfo-metadata-width\"\n                            :label-name=\"$tc('sw-media.sidebar.metadata.width')\"\n                        >\n                            {{ item.metaData.width }}px\n                        </sw-media-quickinfo-metadata-item>\n\n                        <sw-media-quickinfo-metadata-item\n                            v-if=\"item.metaData.height\"\n                            class=\"sw-media-quickinfo-metadata-height\"\n                            :label-name=\"$tc('sw-media.sidebar.metadata.height')\"\n                        >\n                            {{ item.metaData.height }}px\n                        </sw-media-quickinfo-metadata-item>\n                        {% endblock %}\n                    </template>\n                    {% endblock %}\n                </template>\n            </dl>\n        </template>\n        {% endblock %}\n    </sw-media-collapse>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_quickinfo_tags %}\n    <sw-media-tag\n        :disabled=\"!acl.can('media.editor')\"\n        :media=\"item\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_quickinfo_usage %}\n    <sw-media-collapse\n        v-if=\"editable && item.hasFile\"\n        :expand-on-loading=\"true\"\n        :title=\"$tc('sw-media.sidebar.sections.usage')\"\n    >\n\n        <template #content>\n            <sw-media-quickinfo-usage :item=\"item\" />\n        </template>\n    </sw-media-collapse>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_quickinfo_modal_replace %}\n    <sw-media-modal-replace\n        v-if=\"showModalReplace\"\n        :item-to-replace=\"item\"\n        @media-replace-modal-item-replaced=\"emitRefreshMediaLibrary\"\n        @media-replace-modal-close=\"closeModalReplace\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_quickinfo_modal_delete %}\n    <sw-media-modal-delete\n        v-if=\"showModalDelete\"\n        :items-to-delete=\"[item]\"\n        @media-delete-modal-close=\"closeModalDelete\"\n        @media-delete-modal-items-delete=\"deleteSelectedItems\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_quickinfo_move_modal %}\n    <sw-media-modal-move\n        v-if=\"showModalMove\"\n        :items-to-move=\"[item]\"\n        @media-move-modal-close=\"closeModalMove\"\n        @media-move-modal-items-move=\"onFolderMoved\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_quickinfo_custom_field_sets %}\n    <sw-custom-field-set-renderer\n        :key=\"item.id\"\n        :disabled=\"!acl.can('media.editor')\"\n        :entity=\"item\"\n        variant=\"media-collapse\"\n        :sets=\"customFieldSets\"\n        :is-loading=\"isLoading\"\n        :is-save-successful=\"isSaveSuccessful\"\n        @save=\"onSaveCustomFields(item)\"\n        @process-finish=\"saveFinish\"\n    />\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-media-quickinfo.html.twig';\nimport './sw-media-quickinfo.scss';\n\nconst { Mixin, Context, Utils } = Cicada;\nconst { dom, format } = Utils;\n\n/**\n * @package discovery\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'mediaService',\n        'repositoryFactory',\n        'acl',\n        'customFieldDataProviderService',\n        'systemConfigApiService',\n    ],\n\n    emits: [\n        'media-item-rename-success',\n        'media-item-replaced',\n        'update:item',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('media-sidebar-modal-mixin'),\n        Mixin.getByName('placeholder'),\n    ],\n\n    props: {\n        item: {\n            required: true,\n            type: Object,\n            validator(value) {\n                return value.getEntityName() === 'media';\n            },\n        },\n\n        editable: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            customFieldSets: [],\n            isLoading: false,\n            isSaveSuccessful: false,\n            showModalReplace: false,\n            fileNameError: null,\n            arReady: false,\n            defaultArReady: false,\n        };\n    },\n\n    computed: {\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        isMediaObject() {\n            return this.item.type === 'media';\n        },\n\n        fileSize() {\n            return format.fileSize(this.item.fileSize);\n        },\n\n        createdAt() {\n            const date = this.item.uploadedAt || this.item.createdAt;\n            return format.date(date);\n        },\n\n        fileNameClasses() {\n            return {\n                'has--error': this.fileNameError,\n            };\n        },\n\n        /**\n         * @experimental stableVersion:v6.7.0 feature:SPATIAL_BASES\n         */\n        isSpatial() {\n            // we need to check the media url since media.fileExtension is set directly after upload\n            return this.item?.fileExtension === 'glb' || !!this.item?.url?.endsWith('.glb');\n        },\n    },\n\n    watch: {\n        'item.id': {\n            handler() {\n                this.fetchSpatialItemConfig();\n                this.fileNameError = null;\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.loadCustomFieldSets();\n            this.fetchSpatialItemConfig();\n        },\n\n        /**\n         * @experimental stableVersion:v6.7.0 feature:SPATIAL_BASES\n         */\n        fetchSpatialItemConfig() {\n            this.systemConfigApiService.getValues('core.media').then((values) => {\n                this.defaultArReady = values['core.media.defaultEnableAugmentedReality'];\n            });\n\n            this.mediaRepository.get(this.item.id, Cicada.Context.api).then((entity) => {\n                this.arReady = entity?.config?.spatial?.arReady;\n            });\n        },\n\n        /**\n         * @experimental stableVersion:v6.7.0 feature:SPATIAL_BASES\n         */\n        buildAugmentedRealityTooltip(snippet) {\n            const route = { name: 'sw.settings.media.index' };\n            const routeData = this.$router.resolve(route);\n\n            const data = {\n                settingsLink: routeData.href,\n            };\n\n            return this.$tc(snippet, 0, data);\n        },\n\n        loadCustomFieldSets() {\n            return this.customFieldDataProviderService.getCustomFieldSets('media').then((sets) => {\n                this.customFieldSets = sets;\n            });\n        },\n\n        async onSaveCustomFields(item) {\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            await this.mediaRepository.save(item, Context.api);\n\n            this.isSaveSuccessful = true;\n            this.isLoading = false;\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        async copyLinkToClipboard() {\n            if (this.item) {\n                try {\n                    await dom.copyStringToClipboard(this.item.url);\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-media.general.notification.urlCopied.message'),\n                    });\n                } catch (err) {\n                    this.createNotificationError({\n                        title: this.$tc('global.default.error'),\n                        message: this.$tc('global.sw-field.notification.notificationCopyFailureMessage'),\n                    });\n                }\n            }\n        },\n\n        async onSubmitTitle(value) {\n            this.item.title = value;\n\n            try {\n                await this.mediaRepository.save(this.item, Context.api);\n            } catch {\n                this.$refs.inlineEditFieldTitle.cancelSubmit();\n            }\n        },\n\n        async onSubmitAltText(value) {\n            this.item.alt = value;\n\n            try {\n                await this.mediaRepository.save(this.item, Context.api);\n            } catch {\n                this.$refs.inlineEditFieldAlt.cancelSubmit();\n            }\n        },\n\n        async onChangeFileName(value) {\n            const { item } = this;\n            item.isLoading = true;\n            this.fileNameError = null;\n\n            try {\n                await this.mediaService.renameMedia(item.id, value).catch((error) => {\n                    const fileNameErrorCodes = [\n                        'CONTENT__MEDIA_EMPTY_FILE',\n                        'CONTENT__MEDIA_ILLEGAL_FILE_NAME',\n                    ];\n\n                    error.response.data.errors.forEach((e) => {\n                        if (this.fileNameError || !fileNameErrorCodes.includes(e.code)) {\n                            return;\n                        }\n\n                        this.fileNameError = e;\n                    });\n\n                    return Promise.reject(error);\n                });\n                item.fileName = value;\n\n                this.createNotificationSuccess({\n                    message: this.$tc('global.sw-media-media-item.notification.renamingSuccess.message'),\n                });\n                this.$emit('media-item-rename-success', item);\n            } catch (exception) {\n                const errors = exception.response.data.errors;\n\n                errors.forEach((error) => {\n                    this.handleErrorMessage(error);\n                });\n            } finally {\n                item.isLoading = false;\n            }\n        },\n\n        handleErrorMessage(error) {\n            switch (error.code) {\n                case 'CONTENT__MEDIA_FILE_NAME_IS_TOO_LONG':\n                    this.createNotificationError({\n                        message: this.$tc('global.sw-media-media-item.notification.fileNameTooLong.message', 0, {\n                            length: error.meta.parameters.maxLength,\n                        }),\n                    });\n                    break;\n                default:\n                    this.createNotificationError({\n                        message: this.$tc('global.sw-media-media-item.notification.renamingError.message'),\n                    });\n            }\n        },\n\n        openModalReplace() {\n            if (!this.acl.can('media.editor')) {\n                return;\n            }\n\n            this.showModalReplace = true;\n        },\n\n        closeModalReplace() {\n            this.showModalReplace = false;\n        },\n\n        emitRefreshMediaLibrary() {\n            this.closeModalReplace();\n\n            this.$nextTick(() => {\n                this.$emit('media-item-replaced');\n            });\n        },\n\n        quickActionClasses(disabled) {\n            return [\n                'sw-media-sidebar__quickaction',\n                {\n                    'sw-media-sidebar__quickaction--disabled': disabled,\n                },\n            ];\n        },\n\n        onRemoveFileNameError() {\n            this.fileNameError = null;\n        },\n\n        /**\n         * @experimental stableVersion:v6.7.0 feature:SPATIAL_BASES\n         */\n        toggleAR(newValue) {\n            const newSpatialConfig = {\n                spatial: {\n                    arReady: newValue,\n                    updatedAt: Date.now(),\n                },\n            };\n            const newItemConfig = {\n                config: {\n                    ...this.item.config,\n                    ...newSpatialConfig,\n                },\n            };\n\n            this.$emit('update:item', { ...this.item, ...newItemConfig });\n        },\n    },\n};\n"],"names":["template","Mixin","Context","Utils","dom","format","index","value","date","_a","_b","_c","values","entity","snippet","route","data","sets","item","error","fileNameErrorCodes","e","exception","disabled","newValue","newSpatialConfig","newItemConfig"],"mappings":"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"}