{"version":3,"file":"index-Cn9ZEpfP.js","sources":["../../../app/administration/src/module/sw-users-permissions/components/sw-users-permissions-user-listing/sw-users-permissions-user-listing.html.twig","../../../app/administration/src/module/sw-users-permissions/components/sw-users-permissions-user-listing/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_user_list %}\n<sw-card\n    class=\"sw-users-permissions-user-listing sw-settings-user-list\"\n    position-identifier=\"sw-users-permissions-user-listing\"\n    :title=\"$tc('sw-users-permissions.users.general.cardLabel')\"\n>\n\n    <div class=\"sw-users-permissions-user-listing__toolbar\">\n        <sw-container\n            columns=\"1fr minmax(100px, 200px)\"\n            gap=\"0 10px\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_user_list_smart_bar_actions %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_user_list_search_bar %}\n            <sw-simple-search-field\n                v-model:value=\"term\"\n                size=\"small\"\n                variant=\"form\"\n                @search-term-change=\"onSearch\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_user_list_actions_create_user %}\n            <sw-button\n                :router-link=\"{ name: 'sw.users.permissions.user.create' }\"\n                variant=\"ghost\"\n                size=\"small\"\n                :disabled=\"!acl.can('users_and_permissions.creator') || undefined\"\n                class=\"sw-users-permissions-user-listing__add-user-button\"\n            >\n                {{ $tc('sw-users-permissions.users.general.labelCreateNewUser') }}\n            </sw-button>\n            {% endblock %}\n            {% endblock %}\n        </sw-container>\n    </div>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_user_list_content %}\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_user_list_content_grid %}\n    <sw-data-grid\n        :data-source=\"user\"\n        :columns=\"userColumns\"\n        identifier=\"user-grid\"\n        :show-settings=\"true\"\n        :show-selection=\"false\"\n        :is-loading=\"isLoading\"\n        @column-sort=\"onSortColumn\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_user_list_content_grid_actions %}\n        <template #actions=\"{ item }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_user_list_actions_edit %}\n            <sw-context-menu-item\n                class=\"sw-settings-user-list__user-view-action\"\n                :disabled=\"!acl.can('users_and_permissions.editor') || undefined\"\n                :router-link=\"{ name: 'sw.users.permissions.user.detail', params: { id: item.id } }\"\n            >\n                {{ $tc('sw-users-permissions.users.user-grid.contextMenuEdit') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_user_list_actions_delete %}\n            <sw-context-menu-item\n                class=\"sw-settings-user-list__user-delete-action\"\n                variant=\"danger\"\n                :disabled=\"!acl.can('users_and_permissions.deleter') || undefined\"\n                @click=\"onDelete(item)\"\n            >\n                {{ $tc('sw-users-permissions.users.user-grid.contextMenuDelete') }}\n            </sw-context-menu-item>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_user_list_column_username_preview %}\n        <template #preview-username=\"{ item, compact }\">\n            <sw-avatar\n                :size=\"compact ? '32px' : '48px'\"\n                :name=\"item.name\"\n                variant=\"square\"\n                :source-context=\"item\"\n            />\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_user_list_column_username %}\n        <template #column-username=\"{ item }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_user_list_column_username_content %}\n            <router-link\n                class=\"sw-settings-user-list__columns\"\n                :to=\"{ name: 'sw.users.permissions.user.detail', params: { id: item.id } }\"\n            >\n                {{ item.username }}\n            </router-link>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_user_list_column_username_acl_roles %}\n        <template #column-aclRoles=\"{ item, compact }\">\n            <template v-if=\"item.aclRoles && item.aclRoles.length > 0\">\n                <span\n                    v-for=\"(role, index) in item.aclRoles\"\n                    :key=\"index\"\n                >\n                    {{ role.name }}<template v-if=\"index + 1 < item.aclRoles.length\">,&nbsp;</template>\n                </span>\n            </template>\n            <span v-else-if=\"item.admin\">\n                {{ $tc('sw-users-permissions.users.user-detail.labelAdministrator') }}\n            </span>\n            <span v-else></span>\n        </template>\n        {% endblock %}\n\n        <template #pagination>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_user_list_grid_pagination %}\n            <sw-pagination\n                :page=\"page\"\n                :limit=\"limit\"\n                :total=\"total\"\n                :auto-hide=\"true\"\n                @page-change=\"onPageChange\"\n            />\n            {% endblock %}\n        </template>\n\n        <template #action-modals=\"{ item }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_user_list_delete_modal %}\n            <sw-modal\n                v-if=\"getItemToDelete(item)\"\n                :title=\"$tc('global.default.warning')\"\n                variant=\"small\"\n                @modal-close=\"onCloseDeleteModal\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_user_list_delete_modal_confirm_delete_text %}\n                <p class=\"sw-settings-user-list__confirm-delete-text\">\n                    {{ $tc('sw-users-permissions.users.user-grid.textModalDelete', 0, { name: salutation(item) }) }}\n                </p>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_user_list_delete_modal_input__confirm_password %}\n                <sw-password-field\n                    v-model:value=\"confirmPassword\"\n                    class=\"sw-settings-user-detail__confirm-password\"\n                    required\n                    name=\"sw-field--confirm-password\"\n                    :password-toggle-able=\"true\"\n                    :label=\"$tc('sw-users-permissions.users.user-detail.passwordConfirmation.labelConfirmPassword')\"\n                    :placeholder=\"$tc('sw-users-permissions.users.user-detail.passwordConfirmation.placeholderConfirmPassword')\"\n                    autocomplete=\"off\"\n                    @keypress.enter=\"onConfirmDelete(item)\"\n                />\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_user_list_delete_modal_footer %}\n                <template #modal-footer>\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_settings_user_list_delete_modal_cancel %}\n                    <sw-button\n                        size=\"small\"\n                        @click=\"onCloseDeleteModal\"\n                    >\n                        {{ $tc('global.default.cancel') }}\n                    </sw-button>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_settings_user_list_delete_modal_confirm %}\n                    <sw-button\n                        :disabled=\"!confirmPassword || undefined\"\n                        :is-loading=\"isConfirmingPassword\"\n                        variant=\"danger\"\n                        size=\"small\"\n                        @click=\"onConfirmDelete(item)\"\n                    >\n                        {{ $tc('sw-users-permissions.users.user-grid.labelButtonDelete') }}\n                    </sw-button>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n            </sw-modal>\n            {% endblock %}\n        </template>\n    </sw-data-grid>\n    {% endblock %}\n    {% endblock %}\n</sw-card>\n{% endblock %}\n","/**\n * @package services-settings\n */\nimport template from './sw-users-permissions-user-listing.html.twig';\nimport './sw-users-permissions-user-listing.scss';\n\nconst { Data, Mixin, State } = Cicada;\nconst { Criteria } = Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'userService',\n        'loginService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    emits: ['get-list'],\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n        Mixin.getByName('salutation'),\n    ],\n\n    data() {\n        return {\n            user: [],\n            isLoading: false,\n            itemToDelete: null,\n            disableRouteParams: true,\n            confirmPassword: '',\n            sortBy: 'username',\n            isConfirmingPassword: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        userRepository() {\n            return this.repositoryFactory.create('user');\n        },\n\n        currentUser: {\n            get() {\n                return State.get('session').currentUser;\n            },\n        },\n\n        userCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            if (this.term) {\n                criteria.setTerm(this.term);\n            }\n\n            if (this.sortBy) {\n                criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection || 'ASC'));\n            }\n\n            criteria.addAssociation('aclRoles');\n            criteria.addAssociation('avatarMedia');\n\n            return criteria;\n        },\n\n        userColumns() {\n            return [\n                {\n                    property: 'username',\n                    label: this.$tc('sw-users-permissions.users.user-grid.labelUsername'),\n                },\n                {\n                    property: 'name',\n                    label: this.$tc('sw-users-permissions.users.user-grid.labelName'),\n                },\n                {\n                    property: 'phone',\n                    label: this.$tc('sw-users-permissions.users.user-grid.labelPhone'),\n                },\n                {\n                    property: 'aclRoles',\n                    sortable: false,\n                    label: this.$tc('sw-users-permissions.users.user-grid.labelRoles'),\n                },\n                {\n                    property: 'email',\n                    label: this.$tc('sw-users-permissions.users.user-grid.labelEmail'),\n                },\n            ];\n        },\n    },\n\n    methods: {\n        getItemToDelete(item) {\n            if (!this.itemToDelete) {\n                return false;\n            }\n            return this.itemToDelete.id === item.id;\n        },\n\n        onSearch(value) {\n            this.term = value;\n\n            this.getList();\n        },\n\n        getList() {\n            this.isLoading = true;\n            this.user = [];\n\n            this.$emit('get-list');\n\n            return this.userRepository\n                .search(this.userCriteria)\n                .then((users) => {\n                    this.total = users.total;\n                    this.user = users;\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        onDelete(user) {\n            this.itemToDelete = user;\n        },\n\n        async onConfirmDelete(user) {\n            const username = `${user.name}`;\n            const titleDeleteSuccess = this.$tc('global.default.success');\n            const messageDeleteSuccess = this.$tc(\n                'sw-users-permissions.users.user-grid.notification.deleteSuccess.message',\n                0,\n                { name: username },\n            );\n            const titleDeleteError = this.$tc('global.default.error');\n            const messageDeleteError = this.$tc('sw-users-permissions.users.user-grid.notification.deleteError.message', 0, {\n                name: username,\n            });\n            if (user.id === this.currentUser.id) {\n                this.createNotificationError({\n                    title: this.$tc('global.default.error'),\n                    message: this.$tc('sw-users-permissions.users.user-grid.notification.deleteUserLoggedInError.message'),\n                });\n                return;\n            }\n\n            let verifiedToken;\n            try {\n                this.isConfirmingPassword = true;\n                verifiedToken = await this.loginService.verifyUserToken(this.confirmPassword);\n            } catch (e) {\n                this.createNotificationError({\n                    title: this.$tc(\n                        'sw-users-permissions.users.user-detail.passwordConfirmation.notificationPasswordErrorTitle',\n                    ),\n                    message: this.$tc(\n                        'sw-users-permissions.users.user-detail.passwordConfirmation.notificationPasswordErrorMessage',\n                    ),\n                });\n            } finally {\n                this.confirmPassword = '';\n                this.isConfirmingPassword = false;\n            }\n\n            if (!verifiedToken) {\n                return;\n            }\n\n            this.confirmPasswordModal = false;\n            const context = { ...Cicada.Context.api };\n            context.authToken.access = verifiedToken;\n\n            this.userRepository\n                .delete(user.id, context)\n                .then(() => {\n                    this.createNotificationSuccess({\n                        title: titleDeleteSuccess,\n                        message: messageDeleteSuccess,\n                    });\n                    this.getList();\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        title: titleDeleteError,\n                        message: messageDeleteError,\n                    });\n                });\n            this.onCloseDeleteModal();\n        },\n\n        onCloseDeleteModal() {\n            this.itemToDelete = null;\n        },\n    },\n};\n"],"names":["template","Data","Mixin","State","Criteria","index","criteria","item","value","users","user","username","titleDeleteSuccess","messageDeleteSuccess","titleDeleteError","messageDeleteError","verifiedToken","context"],"mappings":"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"}