const i=`{% block sw_settings_shipping_tax_cost %} <sw-card class="sw-settings-shipping-tax-cost" position-identifier="sw-settings-shipping-tax-cost" :title="$tc('sw-settings-shipping.detail.tax.fieldName')" > {% block sw_settings_shipping_detail_shipping_cost_tax_select %} <sw-single-select v-model:value="taxType" class="sw-settings-shipping__tax-type-selection" show-clearable-button :disabled="disabled" :label="$tc('sw-settings-shipping.detail.tax.labelTaxType')" :placeholder="$tc('sw-settings-shipping.detail.tax.placeholderTaxType')" :help-text="$tc('sw-settings-shipping.detail.tax.helpText')" :options="shippingCostTaxOptions" :error="shippingMethodTaxTypeError" /> {% endblock %} {% block sw_settings_shipping_detail_shipping_cost_tax_rate_select %} <sw-entity-single-select v-if="shippingMethod.taxType === 'fixed'" ref="taxIdSelection" v-model:value="shippingMethod.taxId" class="sw-settings-shipping__tax-rate" validation="required" required show-clearable-button entity="tax" :criteria="taxCriteria" :highlight-search-term="false" :disabled="disabled" :label="$tc('sw-settings-shipping.detail.tax.labelTaxRate')" :placeholder="$tc('sw-settings-shipping.detail.tax.placeholderTaxRate')" :label-callback="getTaxLabel" :error="shippingMethodTaxIdError" /> {% endblock %} </sw-card> {% endblock %}`,{Criteria:e}=Cicada.Data,{Mixin:s}=Cicada,{mapPropertyErrors:a,mapState:p,mapGetters:n}=Cicada.Component.getComponentHelper(),l={template:i,compatConfig:Cicada.compatConfig,mixins:[s.getByName("placeholder")],props:{disabled:{type:Boolean,required:!1,default:!1}},data(){return{isLoading:!1}},computed:{...p("swShippingDetail",["shippingMethod","currencies"]),...n("swShippingDetail",["defaultCurrency","usedRules","unrestrictedPriceMatrixExists","newPriceMatrixExists"]),...a("shippingMethod",["taxType","taxId"]),shippingCostTaxOptions(){return[{label:this.$tc("sw-settings-shipping.shippingCostOptions.auto"),value:"auto"},{label:this.$tc("sw-settings-shipping.shippingCostOptions.highest"),value:"highest"},{label:this.$tc("sw-settings-shipping.shippingCostOptions.fixed"),value:"fixed"}]},taxCriteria(){const t=new e(1,25);return t.addSorting(e.sort("position")),t},taxType:{get(){return this.shippingMethod.taxType||"auto"},set(t){this.shippingMethod.taxType=t}}},watch:{"shippingMethod.taxType"(t){t!=="fixed"&&(this.shippingMethod.taxId="")}},methods:{getTaxLabel(t){return t?this.$te(`global.tax-rates.${t.name}`)?this.$tc(`global.tax-rates.${t.name}`):t.name:""}}};export{l as default};
//# sourceMappingURL=index-C0lXtSdD.js.map
