{"version":3,"file":"index-CdQkP2In.js","sources":["../../../app/administration/src/app/component/form/select/entity/sw-entity-many-to-many-select/sw-entity-many-to-many-select.html.twig","../../../app/administration/src/app/component/form/select/entity/sw-entity-many-to-many-select/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_entity_many_to_many_select %}\n<sw-select-base\n    ref=\"selectBase\"\n    class=\"sw-entity-many-to-many-select\"\n    :is-loading=\"isLoading\"\n    v-bind=\"$attrs\"\n    @select-expanded=\"onSelectExpanded\"\n    @select-collapsed=\"onSelectCollapsed\"\n    v-on=\"listeners\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_entity_many_to_many_select_base %}\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_entity_many_to_many_select_base_selection %}\n    <template #sw-select-selection=\"{ identification, error, disabled, size, expand, collapse }\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_entity_many_to_many_select_base_selection_slot %}\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_entity_many_to_many_select_advanced_selection_modal %}\n        <component\n            :is=\"advancedSelectionComponent\"\n            v-if=\"isAdvancedSelectionActive && isAdvancedSelectionModalVisible\"\n            :initial-search-term=\"searchTerm\"\n            :initial-selection=\"entityCollection\"\n            v-bind=\"advancedSelectionParameters\"\n            @modal-close=\"closeAdvancedSelectionModal\"\n            @selection-submit=\"onAdvancedSelectionSubmit\"\n        />\n        {% endblock %}\n\n        <sw-select-selection-list\n            ref=\"selectionList\"\n            :selections=\"visibleValues\"\n            :invisible-count=\"invisibleValueCount\"\n            value-property=\"id\"\n            v-bind=\"{ size, labelProperty, placeholder, searchTerm, disabled }\"\n            @total-count-click=\"paginateDisplayList\"\n            @item-remove=\"remove\"\n            @search-term-change=\"onSearchTermChange\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_entity_many_to_many_select_base_selection_list %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_entity_many_to_many_select_base_selection_list_label %}\n            <template #label-property=\"{ item, index, labelProperty, valueProperty }\">\n                <slot\n                    name=\"selection-label-property\"\n                    v-bind=\"{ item, index, labelProperty, valueProperty, getKey}\"\n                >\n                    {{ getKey(item,labelProperty) || getKey(item, `translated.${labelProperty}`) }}\n                </slot>\n            </template>\n            {% endblock %}\n            {% endblock %}\n        </sw-select-selection-list>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_entity_many_to_many_select_base_results %}\n    <template #results-list>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_entity_many_to_many_select_base_results_slot %}\n        <sw-select-result-list\n            ref=\"swSelectResultList\"\n            :options=\"resultCollection\"\n            :is-loading=\"isLoading\"\n            :empty-message=\"$tc('global.sw-entity-many-to-many-select.messageNoResults', 0, { term: searchTerm })\"\n            :focus-el=\"$refs.selectionList.getFocusEl()\"\n            @paginate=\"paginateResult\"\n            @item-select=\"addItem\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_entity_many_to_many_select_base_results_list %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_entity_many_to_many_select_base_results_list_before %}\n            <template #before-item-list>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_entity_many_to_many_select_base_results_list_before_advanced_selection %}\n                <!-- eslint-disable-next-line vuejs-accessibility/click-events-have-key-events, vuejs-accessibility/no-static-element-interactions -->\n                <div\n                    v-if=\"isAdvancedSelectionActive\"\n                    class=\"sw-many-to-many-select-filtering__advanced-selection sw-select-result\"\n                    @click=\"openAdvancedSelectionModal\"\n                >\n                    {{ $tc('global.sw-entity-advanced-selection-modal.link') }}\n                </div>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_entity_single_select_base_results_list_before_slot %}\n                <slot name=\"before-item-list\"></slot>\n                {% endblock %}\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_entity_many_to_many_select_base_results_list_result %}\n            <template #result-item=\"{ item, index }\">\n                <slot\n                    name=\"result-item\"\n                    v-bind=\"{ item, index, labelProperty, valueProperty: 'id', searchTerm, highlightSearchTerm, isSelected, addItem, getKey }\"\n                >\n                    <sw-select-result\n                        :selected=\"isSelected(item)\"\n                        v-bind=\"{ item, index }\"\n                        @item-select=\"addItem\"\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_entity_many_to_many_select_base_results_list_result_label %}\n                        <slot\n                            name=\"result-label-property\"\n                            v-bind=\"{ item, index, labelProperty, valueProperty: 'id', searchTerm, highlightSearchTerm, getKey }\"\n                        >\n                            <sw-highlight-text\n                                v-if=\"highlightSearchTerm\"\n                                :text=\"getKey(item,labelProperty) || getKey(item, `translated.${labelProperty}`)\"\n                                :search-term=\"searchTerm\"\n                            />\n                            <template v-else>\n                                {{ getKey(item,labelProperty) || getKey(item, `translated.${labelProperty}`) }}\n                            </template>\n                        </slot>\n                        {% endblock %}\n                    </sw-select-result>\n                </slot>\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_entity_many_to_many_select_base_results_list_after %}\n            <template #after-item-list>\n                <slot name=\"after-item-list\"></slot>\n            </template>\n            {% endblock %}\n            {% endblock %}\n        </sw-select-result-list>\n        {% endblock %}\n    </template>\n    {% endblock %}\n    {% endblock %}\n\n    <template #label>\n        <slot name=\"label\"></slot>\n    </template>\n\n    <template #hint>\n        <slot name=\"hint\"></slot>\n    </template>\n</sw-select-base>\n{% endblock %}\n","import template from './sw-entity-many-to-many-select.html.twig';\n\nconst { Component } = Cicada;\nconst { debounce, get } = Cicada.Utils;\nconst { deepCopyObject } = Cicada.Utils.object;\nconst { Criteria, EntityCollection } = Cicada.Data;\n\n/**\n * @private\n */\nComponent.register('sw-entity-many-to-many-select', {\n    template,\n\n    inheritAttrs: false,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'feature',\n    ],\n\n    emits: [\n        'search',\n        'update:entityCollection',\n        'item-add',\n        'item-remove',\n        'search-term-change',\n    ],\n\n    props: {\n        labelProperty: {\n            type: String,\n            required: false,\n            default: 'name',\n        },\n        resultLimit: {\n            type: Number,\n            required: false,\n            default: 25,\n        },\n        valueLimit: {\n            type: Number,\n            required: false,\n            default: 5,\n        },\n        // Should be used when creating new entities.\n        // Prevents delete or create requests.\n        localMode: {\n            type: Boolean,\n            default: false,\n        },\n        criteria: {\n            type: Object,\n            required: false,\n            default(props) {\n                return new Criteria(1, props.resultLimit);\n            },\n        },\n        highlightSearchTerm: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n        placeholder: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        entityCollection: {\n            type: Array,\n            required: true,\n        },\n        context: {\n            type: Object,\n            required: false,\n            default() {\n                return Cicada.Context.api;\n            },\n        },\n        advancedSelectionComponent: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        advancedSelectionParameters: {\n            type: Object,\n            required: false,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    data() {\n        return {\n            searchTerm: '',\n            searchCriteria: null,\n            isLoading: false,\n            resultCollection: null,\n            displayItemsResultCollection: null,\n            totalAssigned: 0,\n            displayItemLimit: this.valueLimit,\n            isAdvancedSelectionModalVisible: false,\n        };\n    },\n\n    computed: {\n        repository() {\n            return this.repositoryFactory.create(this.entityCollection.entity, this.entityCollection.source);\n        },\n\n        searchRepository() {\n            return this.repositoryFactory.create(this.entityCollection.entity);\n        },\n\n        // Used to create the new entityCollection when emitting input,\n        // because we dont want to change this.entityCollection directly\n        selectedIds: {\n            get() {\n                return this.entityCollection.getIds();\n            },\n            set(newIds) {\n                this.emitChanges(newIds);\n            },\n        },\n\n        visibleValues() {\n            if (!this.entityCollection || this.entityCollection.length <= 0) {\n                return [];\n            }\n\n            return this.entityCollection.slice(0, this.displayItemLimit);\n        },\n\n        invisibleValueCount() {\n            if (!this.entityCollection) {\n                return 0;\n            }\n\n            if (this.displayItemLimit > this.entityCollection.length) {\n                return Math.max(0, this.totalAssigned - this.entityCollection.length);\n            }\n\n            return Math.max(0, this.totalAssigned - this.displayItemLimit);\n        },\n\n        isAdvancedSelectionActive() {\n            return this.advancedSelectionComponent && Component.getComponentRegistry().has(this.advancedSelectionComponent);\n        },\n\n        listeners() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return this.$listeners;\n            }\n\n            return {};\n        },\n    },\n\n    watch: {\n        entityCollection(newVal) {\n            // reload data if association was reset but component was not destroyed\n            if (newVal.length <= 0 && this.totalAssigned > 0) {\n                this.initData();\n            }\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.initData();\n        },\n\n        initData() {\n            this.entityCollection.criteria.setLimit(this.valueLimit);\n            this.searchCriteria = new Criteria(1, this.resultLimit);\n\n            this.displayAssigned(this.entityCollection);\n\n            if (this.localMode) {\n                return Promise.resolve();\n            }\n\n            return this.fetchDisplayItems();\n        },\n\n        isSelected(item) {\n            return this.selectedIds.includes(item.id);\n        },\n\n        fetchDisplayItems() {\n            this.isLoading = true;\n            return this.repository.search(this.entityCollection.criteria, this.entityCollection.context).then((result) => {\n                this.displayAssigned(result);\n                this.isLoading = false;\n                return result;\n            });\n        },\n\n        displayAssigned(collection) {\n            if (collection.total) {\n                this.totalAssigned = collection.total;\n            } else {\n                this.totalAssigned = collection.length;\n            }\n\n            collection.forEach((item) => {\n                if (!this.entityCollection.has(item.id)) {\n                    // eslint-disable-next-line vue/no-mutating-props\n                    this.entityCollection.push(item);\n                }\n            });\n        },\n\n        displaySearch(result) {\n            if (!this.resultCollection) {\n                this.resultCollection = result;\n            } else {\n                result.forEach((item) => {\n                    // Prevent duplicate entries\n                    if (!this.resultCollection.has(item.id)) {\n                        this.resultCollection.push(item);\n                    }\n                });\n            }\n        },\n\n        sendSearchRequest() {\n            this.isLoading = true;\n\n            if (this.criteria) {\n                this.searchCriteria.filters = this.criteria.filters;\n                this.searchCriteria.associations = this.criteria.associations;\n                this.searchCriteria.sortings = this.criteria.sortings;\n            }\n\n            return this.searchRepository.search(this.searchCriteria, Cicada.Context.api).then((searchResult) => {\n                if (searchResult.length <= 0) {\n                    this.isLoading = false;\n                    return searchResult;\n                }\n\n                if (this.localMode) {\n                    this.displaySearch(searchResult);\n                    this.isLoading = false;\n                    return Promise.resolve(searchResult);\n                }\n\n                return this.findAssignedEntities(searchResult.getIds(), searchResult);\n            });\n        },\n\n        findAssignedEntities(ids, searchResult) {\n            const criteria = new Criteria(1, 25);\n            criteria.setIds(ids);\n\n            return this.repository.searchIds(criteria, this.entityCollection.context).then((assigned) => {\n                assigned.data.forEach((id) => {\n                    if (!this.entityCollection.has(id)) {\n                        this.entityCollection.add(searchResult.get(id));\n                    }\n                });\n\n                this.displaySearch(searchResult);\n                this.isLoading = false;\n\n                return searchResult;\n            });\n        },\n\n        search() {\n            if (this.searchCriteria.term === this.searchTerm) {\n                return Promise.resolve();\n            }\n\n            this.resetSearchCriteria();\n            this.resultCollection = null;\n\n            const searchPromise = this.sendSearchRequest();\n            searchPromise.then(() => {\n                this.resetActiveItem();\n            });\n\n            this.$emit('search', searchPromise);\n\n            return searchPromise;\n        },\n\n        paginateResult() {\n            if (\n                !this.resultCollection ||\n                this.resultCollection.total < this.searchCriteria.page * this.searchCriteria.limit\n            ) {\n                return;\n            }\n\n            this.searchCriteria.setPage(this.searchCriteria.page + 1);\n            this.sendSearchRequest();\n        },\n\n        paginateDisplayList() {\n            if (this.totalAssigned < this.entityCollection.criteria.page * this.entityCollection.criteria.limit) {\n                return;\n            }\n\n            this.entityCollection.criteria.setPage(this.entityCollection.criteria.page + 1);\n            this.displayItemLimit = this.entityCollection.criteria.page * this.entityCollection.criteria.limit;\n            this.fetchDisplayItems();\n        },\n\n        emitChanges(ids) {\n            const newEntityCollection = new EntityCollection(\n                this.entityCollection.source,\n                this.entityCollection.entity,\n                this.entityCollection.context,\n                this.entityCollection.criteria,\n            );\n\n            ids.forEach((id) => {\n                let entity = this.entityCollection.get(id);\n                if (entity === null) {\n                    entity = this.resultCollection.get(id);\n                }\n\n                newEntityCollection.push(deepCopyObject(entity));\n            });\n\n            this.$emit('update:entityCollection', newEntityCollection);\n        },\n\n        addItem(item) {\n            if (this.isSelected(item)) {\n                this.remove(item);\n                return Promise.resolve();\n            }\n\n            this.$emit('item-add', item);\n\n            this.selectedIds = [\n                ...this.selectedIds,\n                item.id,\n            ];\n\n            this.$refs.selectionList.select();\n            this.$refs.selectionList.focus();\n\n            if (this.localMode) {\n                this.totalAssigned += 1;\n                return Promise.resolve();\n            }\n\n            this.isLoading = true;\n\n            return this.repository.assign(item.id, this.entityCollection.context).then((response) => {\n                this.totalAssigned += 1;\n                this.isLoading = false;\n                return response;\n            });\n        },\n\n        remove(item) {\n            this.$emit('item-remove', item);\n\n            if (this.localMode) {\n                this.removeIdFromList(item.id);\n                return Promise.resolve();\n            }\n\n            this.isLoading = true;\n            return this.repository.delete(item.id, this.entityCollection.context).then((response) => {\n                this.removeIdFromList(item.id);\n                this.isLoading = false;\n                return response;\n            });\n        },\n\n        removeIdFromList(id) {\n            this.totalAssigned -= 1;\n            this.selectedIds = this.selectedIds.filter((currentId) => {\n                return currentId !== id;\n            });\n        },\n\n        resetSearchCriteria() {\n            this.searchCriteria.setPage(1);\n            this.searchCriteria.setTerm(this.searchTerm);\n            this.searchCriteria.setLimit(this.resultLimit);\n        },\n\n        onSelectExpanded() {\n            this.resetSearchCriteria();\n            this.resultCollection = null;\n\n            this.sendSearchRequest().then(() => {\n                this.resetActiveItem();\n            });\n\n            this.$refs.selectionList.focus();\n        },\n\n        onSelectCollapsed() {\n            this.$refs.selectionList.blur();\n        },\n\n        onSearchTermChange(term) {\n            this.searchTerm = term;\n            this.$emit('search-term-change', term);\n            this.debouncedSearch(term);\n        },\n\n        resetActiveItem() {\n            this.$refs.swSelectResultList?.setActiveItemIndex(0);\n        },\n\n        debouncedSearch: debounce(function updateSearchTerm() {\n            this.search();\n        }, 400),\n\n        // Used to reset the results. Normally all search results are appended to the results list, because of pagination.\n        // Useful when the criteria changes from outside and we have to search again because of changed filters for example.\n        resetResultCollection() {\n            this.resultCollection = null;\n\n            // Direct new search if the select field is expanded\n            if (this.$refs.selectBase.expanded) {\n                this.sendSearchRequest();\n            }\n        },\n\n        getKey(object, keyPath, defaultValue) {\n            return get(object, keyPath, defaultValue);\n        },\n\n        openAdvancedSelectionModal() {\n            this.isAdvancedSelectionModalVisible = true;\n        },\n\n        closeAdvancedSelectionModal() {\n            this.isAdvancedSelectionModalVisible = false;\n        },\n\n        onAdvancedSelectionSubmit(selectedItems) {\n            this.isLoading = true;\n\n            const added = selectedItems.filter((value) => !this.selectedIds.includes(value.id));\n            const removedIds = this.selectedIds.filter(\n                (id) =>\n                    !selectedItems.some((item) => {\n                        return item.id === id;\n                    }),\n            );\n\n            const addPromises = added.map((item) => {\n                this.$emit('item-add', item);\n\n                this.selectedIds = [\n                    ...this.selectedIds,\n                    item.id,\n                ];\n\n                if (this.localMode) {\n                    this.totalAssigned += 1;\n                    return Promise.resolve();\n                }\n\n                return this.repository.assign(item.id, this.entityCollection.context).then((response) => {\n                    this.totalAssigned += 1;\n                    return response;\n                });\n            });\n\n            const removePromises = removedIds.map((id) => {\n                this.$emit('item-remove', this.entityCollection.get(id));\n\n                if (this.localMode) {\n                    this.removeIdFromList(id);\n                    return Promise.resolve();\n                }\n\n                this.isLoading = true;\n                return this.repository.delete(id, this.entityCollection.context).then((response) => {\n                    this.removeIdFromList(id);\n                    return response;\n                });\n            });\n\n            Promise.all([\n                ...addPromises,\n                ...removePromises,\n            ]).then(() => {\n                this.$refs.selectionList.select();\n                this.$refs.selectionList.focus();\n                this.isLoading = false;\n            });\n        },\n    },\n});\n"],"names":["template","Component","debounce","get","deepCopyObject","Criteria","EntityCollection","props","newIds","newVal","item","result","collection","searchResult","ids","criteria","assigned","id","searchPromise","newEntityCollection","entity","response","currentId","term","_a","object","keyPath","defaultValue","selectedItems","added","value","removedIds","addPromises","removePromises"],"mappings":"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"}