const i=`{% block sw_range_filter %} <sw-base-filter v-bind="$attrs" class="sw-range-filter" > {% block sw_range_filter_content %} <sw-container :class="{ 'sw-container--has-divider': isShowDivider }" > <slot></slot> <slot name="from-field"> {% block sw_range_filter_from_field %}{% endblock %} </slot> <slot name="divider"> {% block sw_range_filter_divider %} <span v-if="isShowDivider" class="sw-range-filter__divider" ></span> {% endblock %} </slot> <slot name="to-field"> {% block sw_range_filter_to_field %}{% endblock %} </slot> </sw-container> {% endblock %} </sw-base-filter> {% endblock %}`,{Component:s}=Shopware,{Criteria:o}=Shopware.Data;s.register("sw-range-filter",{template:i,inject:["feature"],emits:["filter-update"],props:{value:{type:Object,required:!0},property:{type:String,required:!0},isShowDivider:{type:Boolean,required:!1,default:!0}},computed:{},watch:{value:{deep:!0,handler(e){this.updateFilter(e)}}},methods:{updateFilter(e){const t={...e.from?{gte:e.from}:{},...e.to?{lte:e.to}:{}},r=[o.range(this.property,t)];this.$emit("filter-update",r)}}});
