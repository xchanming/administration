{"version":3,"file":"index-BUa6xLoZ.js","sources":["../../../app/administration/src/module/sw-settings-product-feature-sets/page/sw-settings-product-feature-sets-list/sw-settings-product-feature-sets-list.html.twig","../../../app/administration/src/module/sw-settings-product-feature-sets/page/sw-settings-product-feature-sets-list/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_list %}\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_product_feature_set_index %}\n<sw-page class=\"sw-settings-product-feature-sets-list\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_product_feature_set_list_search_bar %}\n    <template #search-bar>\n        <sw-search-bar\n            initial-search-type=\"feature_set\"\n            :placeholder=\"$tc('sw-settings-product-feature-sets.general.placeholderSearchBar')\"\n            :initial-search=\"term\"\n            @search=\"onSearch\"\n        />\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_product_feature_set_list_smart_bar_header %}\n    <template #smart-bar-header>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_product_feature_set_list_smart_bar_header_title %}\n        <h2>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_product_feature_set_list_smart_bar_header_title_text %}\n            {{ $tc('sw-settings.index.title') }} <sw-icon\n                name=\"regular-chevron-right-xs\"\n                small\n            /> {{ $tc('sw-settings-product-feature-sets.list.textHeadline') }}\n            {% endblock %}\n        </h2>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_product_feature_set_list_smart_bar_actions %}\n    <template #smart-bar-actions>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_product_feature_set_list_smart_bar_actions_add %}\n        <sw-button\n            :router-link=\"{ name: 'sw.settings.product.feature.sets.create' }\"\n            :disabled=\"!acl.can('product_feature_sets.creator') || undefined\"\n            class=\"sw-settings-product-feature-sets-list-grid__create-button\"\n            variant=\"primary\"\n        >\n            {{ $tc('sw-settings-product-feature-sets.list.buttonAddEssentialCharacteristics') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_product_feature_set_list_smart_bar_language_switch %}\n    <template #language-switch>\n        <sw-language-switch @on-change=\"onChangeLanguage\" />\n    </template>\n    {% endblock %}\n\n    <template #content>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_product_feature_set_list_content %}\n        <div class=\"sw-product-feature-sets-list__content\">\n\n            <sw-entity-listing\n                v-if=\"isLoading || productFeatureSets\"\n                ref=\"swSettingsProductFeatureSetsGrid\"\n                class=\"sw-settings-product-feature-sets-list-grid\"\n                :items=\"productFeatureSets\"\n                :columns=\"getProductFeatureSetsColumns()\"\n                :repository=\"productFeatureSetsRepository\"\n                detail-route=\"sw.settings.product.feature.sets.detail\"\n                :disable-data-fetching=\"true\"\n                :sort-by=\"sortBy\"\n                :sort-direction=\"sortDirection\"\n                :allow-inline-edit=\"acl.can('product_feature_sets.editor')\"\n                :allow-edit=\"acl.can('product_feature_sets.editor')\"\n                :allow-view=\"acl.can('product_feature_sets.viewer')\"\n                :allow-delete=\"acl.can('product_feature_sets.deleter')\"\n                :is-loading=\"isLoading\"\n                @page-change=\"onPageChange\"\n                @column-sort=\"onSortColumn\"\n                @inline-edit-save=\"onInlineEditSave\"\n            >\n\n                <template #column-features=\"{ item }\">\n                    <span v-if=\"item.features\">\n                        {{ renderFeaturePreview(item.features) }}\n                    </span>\n                </template>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_product_feature_set_list_grid_columns_actions %}\n                <template #actions=\"{ item }\">\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_settings_product_feature_set_list_grid_columns_actions_edit %}\n                    <sw-context-menu-item\n                        :router-link=\"{ name: 'sw.settings.product.feature.sets.detail', params: { id: item.id, edit: 'edit' }}\"\n                        :disabled=\"!acl.can('product_feature_sets.editor') || undefined\"\n                        class=\"sw-product-feature-sets-list__edit-action\"\n                    >\n                        {{ $tc('sw-settings-product-feature-sets.list.contextMenuEdit') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_settings_product_feature_set_list_grid_columns_actions_delete %}\n                    <sw-context-menu-item\n                        :disabled=\"item.isSystemDefault || !acl.can('product_feature_sets.deleter') || undefined\"\n                        variant=\"danger\"\n                        class=\"sw-product-feature-sets-list__delete-action\"\n                        @click=\"onDelete(item.id)\"\n                    >\n                        {{ $tc('sw-settings-product-feature-sets.list.contextMenuDelete') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_product_feature_set_list_grid_action_modals %}\n                <template #action-modals=\"{ item }\">\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_settings_product_feature_set_list_delete_modal %}\n                    <sw-modal\n                        v-if=\"showDeleteModal\"\n                        :title=\"$tc('global.default.warning')\"\n                        variant=\"small\"\n                        @modal-close=\"onCloseDeleteModal\"\n                    >\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_product_feature_set_list_delete_modal_confirm_delete_text %}\n                        <p class=\"sw-settings-product-feature-sets-list__confirm-delete-text\">\n                            {{ $tc('sw-settings-product-feature-sets.list.textDeleteConfirm', 0, { name: item.name }) }}\n                        </p>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_product_feature_set_list_delete_modal_footer %}\n                        <template #modal-footer>\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_product_feature_set_list_delete_modal_cancel %}\n                            <sw-button\n                                size=\"small\"\n                                @click=\"onCloseDeleteModal\"\n                            >\n                                {{ $tc('global.default.cancel') }}\n                            </sw-button>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_product_feature_set_list_delete_modal_confirm %}\n                            <sw-button\n                                variant=\"danger\"\n                                size=\"small\"\n                                @click=\"onConfirmDelete(item.id)\"\n                            >\n                                {{ $tc('sw-settings-product-feature-sets.list.buttonDelete') }}\n                            </sw-button>\n                            {% endblock %}\n\n                        </template>\n                        {% endblock %}\n                    </sw-modal>\n                    {% endblock %}\n\n                </template>\n                {% endblock %}\n\n            </sw-entity-listing>\n\n        </div>\n        {% endblock %}\n\n    </template>\n\n</sw-page>\n    {% endblock %}\n{% endblock %}\n","/**\n * @package inventory\n */\n// eslint-disable-next-line max-len\nimport FeatureGridTranslationService from 'src/module/sw-settings-product-feature-sets/service/feature-grid-translation.service';\nimport template from './sw-settings-product-feature-sets-list.html.twig';\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            entityName: 'product_feature_set',\n            productFeatureSets: null,\n            sortBy: 'product_feature_set.name',\n            isLoading: false,\n            sortDirection: 'ASC',\n            naturalSorting: true,\n            showDeleteModal: false,\n            translationService: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        productFeatureSetsRepository() {\n            return this.repositoryFactory.create('product_feature_set');\n        },\n\n        propertyGroupRepository() {\n            return this.repositoryFactory.create('property_group');\n        },\n\n        customFieldRepository() {\n            return this.repositoryFactory.create('custom_field');\n        },\n\n        featureGridTranslationService() {\n            if (this.translationService === null) {\n                // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n                this.translationService = new FeatureGridTranslationService(\n                    this,\n                    this.propertyGroupRepository,\n                    this.customFieldRepository,\n                );\n            }\n\n            return this.translationService;\n        },\n    },\n\n    methods: {\n        metaInfo() {\n            return {\n                title: this.$createTitle(),\n            };\n        },\n\n        getList() {\n            this.isLoading = true;\n            this.naturalSorting = this.sortBy === 'name';\n\n            const criteria = new Criteria(this.page, this.limit);\n            criteria.setTerm(this.term);\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, this.naturalSorting));\n\n            this.productFeatureSetsRepository\n                .search(criteria)\n                .then((items) => {\n                    this.total = items.total;\n                    this.productFeatureSets = items;\n\n                    return items;\n                })\n                .then((items) => {\n                    const allFeatures = items.reduce((features, featureSet) => {\n                        if (featureSet.features && featureSet.features.length) {\n                            features = [\n                                ...features,\n                                ...(featureSet.features || []),\n                            ];\n                        }\n                        return features;\n                    }, []);\n\n                    return Promise.all([\n                        this.featureGridTranslationService.fetchPropertyGroupEntities(allFeatures),\n                        this.featureGridTranslationService.fetchCustomFieldEntities(allFeatures),\n                    ]);\n                })\n                .then(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        onChangeLanguage(languageId) {\n            Cicada.State.commit('context/setApiLanguageId', languageId);\n            this.getList();\n        },\n\n        onInlineEditSave(promise, productFeatureSets) {\n            promise\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-settings-product-feature-sets.detail.messageSaveSuccess', 0, {\n                            name: productFeatureSets.name,\n                        }),\n                    });\n                })\n                .catch(() => {\n                    this.getList();\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-product-feature-sets.detail.messageSaveError'),\n                    });\n                });\n        },\n\n        onDelete(id) {\n            this.showDeleteModal = id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete(id) {\n            this.showDeleteModal = false;\n\n            return this.productFeatureSetsRepository.delete(id).then(() => {\n                this.getList();\n            });\n        },\n\n        getProductFeatureSetsColumns() {\n            return [\n                {\n                    property: 'name',\n                    inlineEdit: 'string',\n                    label: 'sw-settings-product-feature-sets.list.columnTemplate',\n                    routerLink: 'sw.settings.product.feature.sets.detail',\n                    allowResize: true,\n                    primary: true,\n                },\n                {\n                    property: 'description',\n                    inlineEdit: 'string',\n                    label: 'sw-settings-product-feature-sets.list.columnDescription',\n                    allowResize: true,\n                },\n                {\n                    property: 'features',\n                    label: 'sw-settings-product-feature-sets.list.columnValues',\n                    allowResize: true,\n                },\n            ];\n        },\n\n        renderFeaturePreview(features) {\n            if (!features.length) {\n                return null;\n            }\n\n            const preview = features\n                .slice(0, 4)\n                .map((feature) => this.featureGridTranslationService.getNameTranslation(feature))\n                .join(', ');\n\n            return features.length > 4 ? `${preview}, ...` : preview;\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","index","FeatureGridTranslationService","criteria","items","allFeatures","features","featureSet","languageId","promise","productFeatureSets","id","preview","feature"],"mappings":"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"}