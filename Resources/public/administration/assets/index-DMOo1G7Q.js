const e='{% block sw_block_field %} <sw-base-field class="sw-block-field" :class="swBlockFieldClasses" v-bind="$attrs" v-on="listeners" > <template #sw-field-input="{ identification, error, disabled }"> <div class="sw-block-field__block"> <slot name="sw-field-input" v-bind="{ identification, error, disabled, size, setFocusClass, removeFocusClass }" ></slot> </div> </template> <template #hint> <slot name="hint"></slot> </template> <template #label> <slot name="label"></slot> </template> </sw-base-field> {% endblock %}',{Component:l}=Cicada;l.register("sw-block-field",{template:e,inheritAttrs:!1,compatConfig:Cicada.compatConfig,props:{size:{type:String,required:!1,default:"default",validValues:["small","medium","default"],validator(s){return["small","medium","default"].includes(s)}}},data(){return{hasFocus:!1}},computed:{swBlockSize(){return`sw-field--${this.size}`},swBlockFieldClasses(){return[{"has--focus":this.hasFocus},this.swBlockSize]},listeners(){return this.isCompatEnabled("INSTANCE_LISTENERS")?this.$listeners:{}}},methods:{setFocusClass(){this.hasFocus=!0},removeFocusClass(){this.hasFocus=!1}}});
//# sourceMappingURL=index-DMOo1G7Q.js.map
