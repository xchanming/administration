{"version":3,"file":"index-fpAkLmxb.js","sources":["../../../app/administration/src/module/sw-import-export/view/sw-import-export-view-profiles/sw-import-export-view-profiles.html.twig","../../../app/administration/src/module/sw-import-export/view/sw-import-export-view-profiles/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_import_export_view_profile %}\n<div class=\"sw-import-export-view-profiles\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_import_export_view_profile_profiles %}\n    <sw-card\n        :title=\"$tc('sw-import-export.page.profileTab')\"\n        class=\"sw-import-export-view-profiles__grid-card\"\n        position-identifier=\"sw-import-export-view-profiles\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_import_export_view_profile_profiles_toolbar %}\n        <div class=\"sw-import-export-view-profiles__toolbar\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_import_export_view_profile_profiles_toolbar_search_field %}\n            <sw-simple-search-field\n                v-model:value=\"searchTerm\"\n                class=\"sw-import-export-view-profiles__search\"\n                size=\"small\"\n                variant=\"form\"\n                @search-term-change=\"onSearch\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_import_export_view_profile_profiles_toolbar_add_new_profile %}\n            <sw-button\n                v-tooltip=\"createTooltip\"\n                class=\"sw-import-export-view-profiles__create-action\"\n                variant=\"ghost\"\n                :disabled=\"isLoading || isNotSystemLanguage\"\n                size=\"small\"\n                @click=\"onAddNewProfile\"\n            >\n                {{ $tc('sw-import-export.profile.addNewProfileLabel') }}\n            </sw-button>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_import_export_view_profile_profiles_listing %}\n        <template #grid>\n            <sw-entity-listing\n                ref=\"listing\"\n                class=\"sw-import-export-view-profiles__listing\"\n                :repository=\"profileRepository\"\n                :items=\"profiles\"\n                :is-loading=\"isLoading\"\n                :columns=\"profilesColumns\"\n                :sort-by=\"sortBy\"\n                :sort-direction=\"sortDirection\"\n                :show-settings=\"false\"\n                :show-selection=\"false\"\n                :allow-column-edit=\"false\"\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_import_export_view_profile_profiles_listing_column_label %}\n                <template #column-label=\"{ item }\">\n                    <a\n                        href=\"#\"\n                        @click.prevent=\"onEditProfile(item.id)\"\n                    >\n                        {{ item.translated.label || item.label }}\n                    </a>\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_import_export_view_profile_profiles_listing_column_system_default %}\n                <template #column-systemDefault=\"{ item }\">\n                    {{ getTypeLabel(item.systemDefault) }}\n                </template>\n                {% endblock %}\n\n                <template #actions=\"{ item }\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_import_export_view_profile_profiles_listing_edit %}\n                    <sw-context-menu-item\n                        class=\"sw-import-export-view-profiles__listing-open-action\"\n                        @click=\"onEditProfile(item.id)\"\n                    >\n                        {{ $tc('sw-import-export.profile.openLabel') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_import_export_view_profile_profiles_listing_duplicate %}\n                    <sw-context-menu-item\n                        class=\"sw-import-export-view-profiles__listing-duplicate-action\"\n                        @click=\"onDuplicateProfile(item)\"\n                    >\n                        {{ $tc('sw-import-export.profile.duplicateLabel') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_import_export_view_profile_profiles_listing_download_template %}\n                    <sw-context-menu-item\n                        class=\"sw-import-export-view-profiles__listing-download-template-action\"\n                        @click=\"onDownloadTemplate(item)\"\n                    >\n                        {{ $tc('sw-import-export.profile.downloadTemplateLabel') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_import_export_view_profile_profiles_listing_delete %}\n                    <sw-context-menu-item\n                        class=\"sw-import-export-view-profiles__listing-delete-action\"\n                        variant=\"danger\"\n                        :disabled=\"item.systemDefault\"\n                        @click=\"onDeleteProfile(item.id)\"\n                    >\n                        {{ $tc('sw-import-export.profile.deleteLabel') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n                </template>\n\n            </sw-entity-listing>\n        </template>\n        {% endblock %}\n    </sw-card>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_import_export_view_profile_modal %}\n    <sw-import-export-edit-profile-modal\n        :show=\"showProfileEditModal\"\n        :profile=\"selectedProfile\"\n        @profile-save=\"saveSelectedProfile\"\n        @profile-close=\"closeSelectedProfile\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_import_export_view_new_profile_wizard %}\n    <sw-import-export-new-profile-wizard\n        v-if=\"showNewProfileWizard\"\n        :profile=\"selectedProfile\"\n        @profile-save=\"saveSelectedProfile\"\n        @close=\"onCloseNewProfileWizard\"\n    />\n    {% endblock %}\n</div>\n{% endblock %}\n","/**\n * @package services-settings\n */\nimport template from './sw-import-export-view-profiles.html.twig';\nimport './sw-import-export-view-profiles.scss';\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n/**\n * @private\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'importExport',\n        'feature',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            selectedProfile: null,\n            profiles: null,\n            searchTerm: null,\n            sortBy: 'label',\n            sortDirection: 'ASC',\n            showProfileEditModal: false,\n            showNewProfileWizard: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        profileRepository() {\n            return this.repositoryFactory.create('import_export_profile');\n        },\n\n        profileCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.setTerm(this.searchTerm);\n            criteria.addAssociation('importExportLogs');\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection));\n\n            return criteria;\n        },\n\n        profilesColumns() {\n            return [\n                {\n                    property: 'label',\n                    dataIndex: 'label',\n                    label: 'sw-import-export.profile.nameColumn',\n                    allowResize: true,\n                    primary: true,\n                },\n                {\n                    property: 'technicalName',\n                    dataIndex: 'technicalName',\n                    label: 'sw-import-export.profile.technicalNameColumn',\n                    allowResize: true,\n                },\n                {\n                    property: 'systemDefault',\n                    dataIndex: 'systemDefault',\n                    label: 'sw-import-export.profile.typeColumn',\n                    allowResize: true,\n                },\n            ];\n        },\n\n        isNotSystemLanguage() {\n            return Cicada.Context.api.systemLanguageId !== Cicada.Context.api.languageId;\n        },\n\n        createTooltip() {\n            return {\n                showDelay: 300,\n                message: this.$tc('sw-import-export.profile.addNewProfileTooltipLanguage'),\n                disabled: !this.isNotSystemLanguage,\n            };\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.loadProfiles();\n        },\n\n        async loadProfiles() {\n            this.isLoading = true;\n\n            this.profiles = await this.profileRepository.search(this.profileCriteria);\n\n            this.isLoading = false;\n        },\n\n        reloadContent() {\n            this.loadProfiles();\n        },\n\n        onSearch() {\n            this.loadProfiles();\n        },\n\n        onAddNewProfile() {\n            const profile = this.profileRepository.create();\n            profile.fileType = 'text/csv';\n            profile.mapping = [];\n            profile.config = {};\n            profile.config.createEntities = true;\n            profile.config.updateEntities = true;\n            profile.type = 'import-export';\n            profile.translated = {};\n            profile.delimiter = ';';\n            profile.enclosure = '\"';\n\n            this.selectedProfile = null;\n            this.selectedProfile = profile;\n            this.showNewProfileWizard = true;\n        },\n\n        async onEditProfile(id) {\n            const profile = await this.profileRepository.get(id);\n\n            if (Array.isArray(profile.config) && profile.config.length <= 0) {\n                if (this.isCompatEnabled('INSTANCE_SET')) {\n                    this.$set(profile, 'config', {});\n                } else {\n                    this.profile.config = {};\n                }\n            }\n\n            if (profile.config?.createEntities === undefined) {\n                profile.config.createEntities = true;\n            }\n            if (profile.config?.updateEntities === undefined) {\n                profile.config.updateEntities = true;\n            }\n\n            this.selectedProfile = profile;\n            this.showProfileEditModal = true;\n        },\n\n        onDuplicateProfile(item) {\n            const behavior = {\n                cloneChildren: false,\n                overwrites: {\n                    label: `${this.$tc('sw-import-export.profile.copyOfLabel')} ${item.label || item.translated.label}`,\n                    technicalName: `${item.technicalName}-copy-${Date.now()}`,\n                    systemDefault: false,\n                },\n            };\n\n            return this.profileRepository\n                .clone(item.id, behavior, Cicada.Context.api)\n                .then((clone) => {\n                    const criteria = new Criteria(1, 25);\n                    criteria.setIds([clone.id]);\n                    return this.profileRepository.search(criteria);\n                })\n                .then((profiles) => {\n                    const profile = profiles[0];\n                    if (profile.config?.createEntities === undefined) {\n                        profile.config.createEntities = true;\n                    }\n                    if (profile.config?.updateEntities === undefined) {\n                        profile.config.updateEntities = true;\n                    }\n\n                    this.selectedProfile = profile;\n                    this.showProfileEditModal = true;\n                    return this.loadProfiles(); // refresh the list in any case (even if the modal is canceled)\n                    // because the duplicate already exists.\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('global.notification.unspecifiedSaveErrorMessage'),\n                    });\n                });\n        },\n\n        async onDownloadTemplate(profile) {\n            return window.open(await this.importExport.getTemplateFileDownloadUrl(profile.id), '_blank');\n        },\n\n        onDeleteProfile(id) {\n            this.$refs.listing.showDelete(id);\n        },\n\n        closeSelectedProfile() {\n            this.showProfileEditModal = false;\n            this.selectedProfile = null;\n        },\n\n        saveSelectedProfile() {\n            this.isLoading = true;\n            return this.profileRepository\n                .save(this.selectedProfile, Cicada.Context.api)\n                .then(() => {\n                    this.showProfileEditModal = false;\n                    this.selectedProfile = null;\n                    this.onCloseNewProfileWizard();\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-import-export.profile.messageSaveSuccess', 0),\n                    });\n                    return this.loadProfiles();\n                })\n                .catch((exception) => {\n                    this.onError(exception);\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        onError(error) {\n            const errorCode = error?.response?.data?.errors?.[0]?.code ?? null;\n            let errorDetails = '';\n\n            if (errorCode !== null && this.$te(`sw-import-export.errors.${errorCode}`)) {\n                errorDetails = this.$tc(`sw-import-export.errors.${errorCode}`);\n            }\n\n            this.createNotificationError({\n                message: `${this.$tc('sw-import-export.profile.messageSaveError', 0)} ${errorDetails}`,\n            });\n        },\n\n        getTypeLabel(isSystemDefault) {\n            return isSystemDefault\n                ? this.$tc('sw-import-export.profile.defaultTypeLabel')\n                : this.$tc('sw-import-export.profile.customTypeLabel');\n        },\n\n        onCloseNewProfileWizard() {\n            this.showNewProfileWizard = false;\n            this.selectedProfile = null;\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","index","criteria","profile","id","_a","_b","item","behavior","clone","profiles","exception","error","_c","_d","errorCode","errorDetails","isSystemDefault"],"mappings":"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"}