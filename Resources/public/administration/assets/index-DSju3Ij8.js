const l='{% block sw_existence_filter %} <div class="sw-existence-filter"> <sw-base-filter :title="filter.label" :show-reset-button="!!value" :active="active" @filter-reset="resetFilter" > {% block sw_existence_filter_content %} <sw-select-field :value="value" :placeholder="filter.placeholder" @update:value="changeValue" > <option :value="true"> {{ filter.optionHasCriteria }} </option> <option :value="false"> {{ filter.optionNoCriteria }} </option> </sw-select-field> {% endblock %} </sw-base-filter> </div> {% endblock %}',{Component:s}=Shopware,{Criteria:i}=Shopware.Data;s.register("sw-existence-filter",{template:l,emits:["filter-update","filter-reset"],props:{filter:{type:Object,required:!0},active:{type:Boolean,required:!0}},computed:{value(){return this.filter.value}},methods:{changeValue(e){if(!e){this.resetFilter();return}const r=this.filter.property.concat(this.filter.schema?`.${this.filter.schema.localField}`:"");let t=[i.equals(r,null)];e==="true"&&(t=[i.not("AND",t)]),this.$emit("filter-update",this.filter.name,t,e)},resetFilter(){this.$emit("filter-reset",this.filter.name)}}});
