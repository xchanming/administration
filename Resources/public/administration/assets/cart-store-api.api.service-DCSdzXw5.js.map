{"version":3,"file":"cart-store-api.api.service-DCSdzXw5.js","sources":["../../../app/administration/src/core/service/api/cart-store-api.api.service.ts"],"sourcesContent":["import { deepCopyObject } from 'src/core/service/utils/object.utils';\nimport utils from 'src/core/service/util.service';\nimport type { AxiosInstance } from 'axios';\nimport ApiService from '../api.service';\nimport type { LoginService } from '../login.service';\nimport type { LineItem, CalculatedPrice } from '../../../module/sw-order/order.types';\nimport { LineItemType, PriceType } from '../../../module/sw-order/order.types';\n/**\n * Gateway for the API end point \"cart\"\n * Uses the _proxy endpoint of the admin api to connect to the store-api endpoint cart\n * @class\n * @extends ApiService\n */\nclass CartStoreService extends ApiService {\n    constructor(httpClient: AxiosInstance, loginService: LoginService, apiEndpoint = 'cart') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'cartStoreService';\n    }\n\n    mapLineItemTypeToPriceType(itemType: LineItemType): PriceType {\n        const mapTypes = {\n            [LineItemType.PRODUCT]: PriceType.QUANTITY,\n            [LineItemType.CUSTOM]: PriceType.QUANTITY,\n            [LineItemType.CREDIT]: PriceType.ABSOLUTE,\n        } as Record<LineItemType, PriceType>;\n\n        return mapTypes[itemType];\n    }\n\n    createCart(salesChannelId: string, additionalParams = {}, additionalHeaders = {}) {\n        return this.getCart(salesChannelId, null, additionalParams, additionalHeaders);\n    }\n\n    getCart(salesChannelId: string, contextToken: string | null, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart`;\n        const headers = this.getBasicHeaders({ ...additionalHeaders });\n        if (contextToken) {\n            headers['sw-context-token'] = contextToken;\n        }\n\n        return this.httpClient.get(route, { ...additionalParams, headers });\n    }\n\n    cancelCart(salesChannelId: string, contextToken: string, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart`;\n        const headers = this.getBasicHeaders({\n            ...additionalHeaders,\n            'sw-context-token': contextToken,\n        });\n\n        return this.httpClient.delete(route, { ...additionalParams, headers });\n    }\n\n    removeLineItems(\n        salesChannelId: string,\n        contextToken: string,\n        lineItemKeys: string[],\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart/line-item`;\n        const headers = this.getBasicHeaders({\n            ...additionalHeaders,\n            'sw-context-token': contextToken,\n        });\n\n        return this.httpClient.delete(route, {\n            ...additionalParams,\n            headers,\n            data: { ids: lineItemKeys },\n        });\n    }\n\n    getRouteForItem(id: string, salesChannelId: string) {\n        return `_proxy/store-api/${salesChannelId}/checkout/cart/line-item`;\n    }\n\n    shouldPriceUpdated(item: LineItem, isNewProductItem: boolean) {\n        const isUnitPriceEdited = item.price?.unitPrice !== item.priceDefinition.price;\n        const isTaxRateEdited =\n            (item.price?.taxRules?.[0]?.taxRate ?? null) !== (item.priceDefinition?.taxRules?.[0]?.taxRate ?? null);\n        const isCustomItem = item.type === LineItemType.CUSTOM;\n\n        const isExistingProductAndUnitPriceIsEdited = !isNewProductItem && isUnitPriceEdited;\n\n        if (isExistingProductAndUnitPriceIsEdited || isTaxRateEdited || (isCustomItem && !isUnitPriceEdited)) {\n            return true;\n        }\n        return false;\n    }\n\n    getPayloadForItem(item: LineItem, salesChannelId: string, isNewProductItem: boolean, id: string) {\n        let dummyPrice = null;\n        if (this.shouldPriceUpdated(item, isNewProductItem)) {\n            dummyPrice = deepCopyObject(item.priceDefinition);\n            dummyPrice.taxRules = item.priceDefinition.taxRules;\n            dummyPrice.quantity = item.quantity;\n            dummyPrice.type = this.mapLineItemTypeToPriceType(item.type);\n        }\n\n        return {\n            items: [\n                {\n                    id: id,\n                    referencedId: id,\n                    label: item.label,\n                    quantity: item.quantity,\n                    type: item.type,\n                    description: item.description,\n                    priceDefinition: dummyPrice,\n                    stackable: true,\n                    removable: true,\n                    salesChannelId,\n                },\n            ],\n        };\n    }\n\n    saveLineItem(\n        salesChannelId: string,\n        contextToken: string,\n        item: LineItem,\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const isNewProductItem = item._isNew && item.type === LineItemType.PRODUCT;\n        const id = item.identifier || item.id || utils.createId();\n        const route = this.getRouteForItem(id, salesChannelId);\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const payload = this.getPayloadForItem(item, salesChannelId, isNewProductItem, id);\n\n        if (item._isNew) {\n            return this.httpClient.post(route, payload, {\n                ...additionalParams,\n                headers,\n            });\n        }\n\n        return this.httpClient.patch(route, payload, {\n            ...additionalParams,\n            headers,\n        });\n    }\n\n    addPromotionCode(\n        salesChannelId: string,\n        contextToken: string,\n        code: string,\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart/line-item`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const payload = {\n            items: [\n                {\n                    type: LineItemType.PROMOTION,\n                    referencedId: code,\n                },\n            ],\n        };\n\n        return this.httpClient.post(route, payload, {\n            ...additionalParams,\n            headers,\n        });\n    }\n\n    modifyShippingCosts(\n        salesChannelId: string,\n        contextToken: string,\n        shippingCosts: CalculatedPrice,\n        additionalHeaders = {},\n        additionalParams = {},\n    ) {\n        const route = '_proxy/modify-shipping-costs';\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        return this.httpClient.patch(route, { salesChannelId, shippingCosts }, { ...additionalParams, headers });\n    }\n\n    disableAutomaticPromotions(\n        contextToken: string,\n        additionalParams: { salesChannelId: string | null } = {\n            salesChannelId: null,\n        },\n        additionalHeaders = {},\n    ) {\n        const route = '_proxy/disable-automatic-promotions';\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const data = {\n            salesChannelId: additionalParams.salesChannelId,\n        };\n\n        return this.httpClient.patch(route, data, {\n            ...additionalParams,\n            headers,\n        });\n    }\n\n    enableAutomaticPromotions(\n        contextToken: string,\n        additionalParams: { salesChannelId: string | null } = {\n            salesChannelId: null,\n        },\n        additionalHeaders = {},\n    ) {\n        const route = '_proxy/enable-automatic-promotions';\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const data = {\n            salesChannelId: additionalParams.salesChannelId,\n        };\n\n        return this.httpClient.patch(route, data, {\n            ...additionalParams,\n            headers,\n        });\n    }\n\n    addMultipleLineItems(\n        salesChannelId: string,\n        contextToken: string,\n        items: LineItem[],\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart/line-item`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const payload = items.map((item) => {\n            if (item.type === LineItemType.PROMOTION) {\n                return item;\n            }\n\n            const id = item.identifier || item.id || utils.createId();\n\n            return {\n                id,\n                referencedId: id,\n                label: item.label,\n                quantity: item.quantity,\n                type: item.type,\n                description: item.description,\n                priceDefinition: item.type === LineItemType.PRODUCT ? null : item.priceDefinition,\n                stackable: true,\n                removable: true,\n                salesChannelId,\n            };\n        });\n\n        return this.httpClient.post(route, { items: payload }, { ...additionalParams, headers });\n    }\n}\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default CartStoreService;\n"],"names":["CartStoreService","ApiService","httpClient","loginService","apiEndpoint","itemType","LineItemType","PriceType","salesChannelId","additionalParams","additionalHeaders","contextToken","route","headers","lineItemKeys","id","item","isNewProductItem","isUnitPriceEdited","_a","isTaxRateEdited","_d","_c","_b","_g","_f","_e","isCustomItem","dummyPrice","deepCopyObject","utils","payload","code","shippingCosts","data","items"],"mappings":"wWAaA,MAAMA,UAAyBC,CAAW,CACtC,YAAYC,EAA2BC,EAA4BC,EAAc,OAAQ,CAC/E,MAAAF,EAAYC,EAAcC,CAAW,EAC3C,KAAK,KAAO,kBAChB,CAEA,2BAA2BC,EAAmC,CAO1D,MANiB,CACb,CAACC,EAAa,OAAO,EAAGC,EAAU,SAClC,CAACD,EAAa,MAAM,EAAGC,EAAU,SACjC,CAACD,EAAa,MAAM,EAAGC,EAAU,QAAA,EAGrBF,CAAQ,CAC5B,CAEA,WAAWG,EAAwBC,EAAmB,CAAA,EAAIC,EAAoB,CAAA,EAAI,CAC9E,OAAO,KAAK,QAAQF,EAAgB,KAAMC,EAAkBC,CAAiB,CACjF,CAEA,QAAQF,EAAwBG,EAA6BF,EAAmB,CAAI,EAAAC,EAAoB,GAAI,CAClG,MAAAE,EAAQ,oBAAoBJ,CAAc,iBAC1CK,EAAU,KAAK,gBAAgB,CAAE,GAAGH,CAAmB,CAAA,EAC7D,OAAIC,IACAE,EAAQ,kBAAkB,EAAIF,GAG3B,KAAK,WAAW,IAAIC,EAAO,CAAE,GAAGH,EAAkB,QAAAI,EAAS,CACtE,CAEA,WAAWL,EAAwBG,EAAsBF,EAAmB,CAAI,EAAAC,EAAoB,GAAI,CAC9F,MAAAE,EAAQ,oBAAoBJ,CAAc,iBAC1CK,EAAU,KAAK,gBAAgB,CACjC,GAAGH,EACH,mBAAoBC,CAAA,CACvB,EAEM,OAAA,KAAK,WAAW,OAAOC,EAAO,CAAE,GAAGH,EAAkB,QAAAI,EAAS,CACzE,CAEA,gBACIL,EACAG,EACAG,EACAL,EAAmB,CAAC,EACpBC,EAAoB,GACtB,CACQ,MAAAE,EAAQ,oBAAoBJ,CAAc,2BAC1CK,EAAU,KAAK,gBAAgB,CACjC,GAAGH,EACH,mBAAoBC,CAAA,CACvB,EAEM,OAAA,KAAK,WAAW,OAAOC,EAAO,CACjC,GAAGH,EACH,QAAAI,EACA,KAAM,CAAE,IAAKC,CAAa,CAAA,CAC7B,CACL,CAEA,gBAAgBC,EAAYP,EAAwB,CAChD,MAAO,oBAAoBA,CAAc,0BAC7C,CAEA,mBAAmBQ,EAAgBC,EAA2B,mBAC1D,MAAMC,IAAoBC,EAAAH,EAAK,QAAL,YAAAG,EAAY,aAAcH,EAAK,gBAAgB,MACnEI,KACDC,GAAAC,GAAAC,EAAAP,EAAK,QAAL,YAAAO,EAAY,WAAZ,YAAAD,EAAuB,KAAvB,YAAAD,EAA2B,UAAW,WAAWG,GAAAC,GAAAC,EAAAV,EAAK,kBAAL,YAAAU,EAAsB,WAAtB,YAAAD,EAAiC,KAAjC,YAAAD,EAAqC,UAAW,MAChGG,EAAeX,EAAK,OAASV,EAAa,OAIhD,MAAI,GAF0C,CAACW,GAAoBC,GAEtBE,GAAoBO,GAAgB,CAACT,EAItF,CAEA,kBAAkBF,EAAgBR,EAAwBS,EAA2BF,EAAY,CAC7F,IAAIa,EAAa,KACjB,OAAI,KAAK,mBAAmBZ,EAAMC,CAAgB,IACjCW,EAAAC,EAAeb,EAAK,eAAe,EACrCY,EAAA,SAAWZ,EAAK,gBAAgB,SAC3CY,EAAW,SAAWZ,EAAK,SAC3BY,EAAW,KAAO,KAAK,2BAA2BZ,EAAK,IAAI,GAGxD,CACH,MAAO,CACH,CACI,GAAAD,EACA,aAAcA,EACd,MAAOC,EAAK,MACZ,SAAUA,EAAK,SACf,KAAMA,EAAK,KACX,YAAaA,EAAK,YAClB,gBAAiBY,EACjB,UAAW,GACX,UAAW,GACX,eAAApB,CACJ,CACJ,CAAA,CAER,CAEA,aACIA,EACAG,EACAK,EACAP,EAAmB,CAAC,EACpBC,EAAoB,GACtB,CACE,MAAMO,EAAmBD,EAAK,QAAUA,EAAK,OAASV,EAAa,QAC7DS,EAAKC,EAAK,YAAcA,EAAK,IAAMc,EAAM,WACzClB,EAAQ,KAAK,gBAAgBG,EAAIP,CAAc,EAC/CK,EAAU,CACZ,GAAG,KAAK,gBAAgBH,CAAiB,EACzC,mBAAoBC,CAAA,EAGlBoB,EAAU,KAAK,kBAAkBf,EAAMR,EAAgBS,EAAkBF,CAAE,EAEjF,OAAIC,EAAK,OACE,KAAK,WAAW,KAAKJ,EAAOmB,EAAS,CACxC,GAAGtB,EACH,QAAAI,CAAA,CACH,EAGE,KAAK,WAAW,MAAMD,EAAOmB,EAAS,CACzC,GAAGtB,EACH,QAAAI,CAAA,CACH,CACL,CAEA,iBACIL,EACAG,EACAqB,EACAvB,EAAmB,CAAC,EACpBC,EAAoB,GACtB,CACQ,MAAAE,EAAQ,oBAAoBJ,CAAc,2BAC1CK,EAAU,CACZ,GAAG,KAAK,gBAAgBH,CAAiB,EACzC,mBAAoBC,CAAA,EAGlBoB,EAAU,CACZ,MAAO,CACH,CACI,KAAMzB,EAAa,UACnB,aAAc0B,CAClB,CACJ,CAAA,EAGJ,OAAO,KAAK,WAAW,KAAKpB,EAAOmB,EAAS,CACxC,GAAGtB,EACH,QAAAI,CAAA,CACH,CACL,CAEA,oBACIL,EACAG,EACAsB,EACAvB,EAAoB,CAAC,EACrBD,EAAmB,GACrB,CACE,MAAMG,EAAQ,+BACRC,EAAU,CACZ,GAAG,KAAK,gBAAgBH,CAAiB,EACzC,mBAAoBC,CAAA,EAGxB,OAAO,KAAK,WAAW,MAAMC,EAAO,CAAE,eAAAJ,EAAgB,cAAAyB,CAAc,EAAG,CAAE,GAAGxB,EAAkB,QAAAI,CAAS,CAAA,CAC3G,CAEA,2BACIF,EACAF,EAAsD,CAClD,eAAgB,IAAA,EAEpBC,EAAoB,CAAA,EACtB,CACE,MAAME,EAAQ,sCACRC,EAAU,CACZ,GAAG,KAAK,gBAAgBH,CAAiB,EACzC,mBAAoBC,CAAA,EAGlBuB,EAAO,CACT,eAAgBzB,EAAiB,cAAA,EAGrC,OAAO,KAAK,WAAW,MAAMG,EAAOsB,EAAM,CACtC,GAAGzB,EACH,QAAAI,CAAA,CACH,CACL,CAEA,0BACIF,EACAF,EAAsD,CAClD,eAAgB,IAAA,EAEpBC,EAAoB,CAAA,EACtB,CACE,MAAME,EAAQ,qCACRC,EAAU,CACZ,GAAG,KAAK,gBAAgBH,CAAiB,EACzC,mBAAoBC,CAAA,EAGlBuB,EAAO,CACT,eAAgBzB,EAAiB,cAAA,EAGrC,OAAO,KAAK,WAAW,MAAMG,EAAOsB,EAAM,CACtC,GAAGzB,EACH,QAAAI,CAAA,CACH,CACL,CAEA,qBACIL,EACAG,EACAwB,EACA1B,EAAmB,CAAC,EACpBC,EAAoB,GACtB,CACQ,MAAAE,EAAQ,oBAAoBJ,CAAc,2BAC1CK,EAAU,CACZ,GAAG,KAAK,gBAAgBH,CAAiB,EACzC,mBAAoBC,CAAA,EAGlBoB,EAAUI,EAAM,IAAKnB,GAAS,CAC5B,GAAAA,EAAK,OAASV,EAAa,UACpB,OAAAU,EAGX,MAAMD,EAAKC,EAAK,YAAcA,EAAK,IAAMc,EAAM,WAExC,MAAA,CACH,GAAAf,EACA,aAAcA,EACd,MAAOC,EAAK,MACZ,SAAUA,EAAK,SACf,KAAMA,EAAK,KACX,YAAaA,EAAK,YAClB,gBAAiBA,EAAK,OAASV,EAAa,QAAU,KAAOU,EAAK,gBAClE,UAAW,GACX,UAAW,GACX,eAAAR,CAAA,CACJ,CACH,EAED,OAAO,KAAK,WAAW,KAAKI,EAAO,CAAE,MAAOmB,CAAQ,EAAG,CAAE,GAAGtB,EAAkB,QAAAI,CAAS,CAAA,CAC3F,CACJ"}