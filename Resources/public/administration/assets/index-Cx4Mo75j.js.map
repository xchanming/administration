{"version":3,"file":"index-Cx4Mo75j.js","sources":["../../../app/administration/src/module/sw-settings-custom-field/page/sw-settings-custom-field-set-create/sw-settings-custom-field-set-create.html.twig","../../../app/administration/src/module/sw-settings-custom-field/page/sw-settings-custom-field-set-create/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_custom_field_set_detail_content_detail_custom_field_list %}\n<sw-card\n    class=\"sw-settings-set-create__option-list-empty-state__wrapper\"\n    position-identifier=\"sw-settings-custom-field-set-create\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_custom_field_set_detail_content_detail_custom_field_list_empty_state %}\n    <sw-empty-state\n        :absolute=\"false\"\n        class=\"sw-settings-set-create__option-list-empty-state__empty-state\"\n        :title=\"$tc('sw-settings-custom-field.set.detail.messageCustomFieldsEmpty')\"\n    >\n\n        <p>{{ $tc('sw-settings-custom-field.set.detail.emptyStateDescription') }}</p>\n    </sw-empty-state>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n","/**\n * @package services-settings\n */\nimport template from './sw-settings-custom-field-set-create.html.twig';\n\nconst { Criteria } = Cicada.Data;\nconst utils = Cicada.Utils;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    beforeRouteEnter(to, from, next) {\n        if (to.name.includes('sw.settings.custom.field.create') && !to.params.id) {\n            to.params.id = utils.createId();\n        }\n\n        next();\n    },\n\n    methods: {\n        async createdComponent() {\n            this.isLoading = true;\n            this.set = await this.customFieldSetRepository.create(Cicada.Context.api, this.$route.params.id);\n            this.set.name = 'custom_';\n\n            if (this.isCompatEnabled('INSTANCE_SET')) {\n                this.$set(this.set, 'config', {});\n            } else {\n                this.set.config = {};\n            }\n\n            this.setId = this.set.id;\n            this.isLoading = false;\n        },\n        saveFinish() {\n            this.isSaveSuccessful = false;\n            this.$router.push({\n                name: 'sw.settings.custom.field.detail',\n                params: { id: this.setId },\n            });\n        },\n        onSave() {\n            this.isLoading = true;\n\n            if (!this.set || !this.set.name) {\n                this.createNotificationError({\n                    title: this.$tc('global.default.error'),\n                    message: this.$tc('global.error-codes.c1051bb4-d103-4f74-8988-acbcafc7fdc3'),\n                });\n\n                this.technicalNameError = {\n                    detail: this.$tc('global.error-codes.c1051bb4-d103-4f74-8988-acbcafc7fdc3'),\n                };\n\n                this.isLoading = false;\n\n                return;\n            }\n\n            // Check if a set with the same name exists\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(Criteria.equals('name', this.set.name));\n\n            this.customFieldSetRepository.search(criteria).then((res) => {\n                if (res.length === 0) {\n                    this.$super('onSave');\n\n                    return;\n                }\n\n                this.createNameNotUniqueNotification();\n                this.isLoading = false;\n            });\n        },\n        createNameNotUniqueNotification() {\n            this.createNotificationError({\n                title: this.$tc('global.default.error'),\n                message: this.$tc('sw-settings-custom-field.set.detail.messageNameNotUnique'),\n            });\n\n            this.technicalNameError = {\n                detail: this.$tc('sw-settings-custom-field.set.detail.messageNameNotUnique'),\n            };\n        },\n    },\n};\n"],"names":["template","Criteria","utils","index","to","from","next","criteria","res"],"mappings":"AAAA,MAAeA,EAAA,qnBCKT,CAAE,SAAAC,CAAQ,EAAK,OAAO,KACtBC,EAAQ,OAAO,MAGNC,EAAA,CACX,SAAAH,EAEA,iBAAiBI,EAAIC,EAAMC,EAAM,CACzBF,EAAG,KAAK,SAAS,iCAAiC,GAAK,CAACA,EAAG,OAAO,KAClEA,EAAG,OAAO,GAAKF,EAAM,SAAQ,GAGjCI,GACH,EAED,QAAS,CACL,MAAM,kBAAmB,CACrB,KAAK,UAAY,GACjB,KAAK,IAAM,MAAM,KAAK,yBAAyB,OAAO,OAAO,QAAQ,IAAK,KAAK,OAAO,OAAO,EAAE,EAC/F,KAAK,IAAI,KAAO,UAEZ,KAAK,gBAAgB,cAAc,EACnC,KAAK,KAAK,KAAK,IAAK,SAAU,CAAE,CAAA,EAEhC,KAAK,IAAI,OAAS,GAGtB,KAAK,MAAQ,KAAK,IAAI,GACtB,KAAK,UAAY,EACpB,EACD,YAAa,CACT,KAAK,iBAAmB,GACxB,KAAK,QAAQ,KAAK,CACd,KAAM,kCACN,OAAQ,CAAE,GAAI,KAAK,KAAO,CAC1C,CAAa,CACJ,EACD,QAAS,CAGL,GAFA,KAAK,UAAY,GAEb,CAAC,KAAK,KAAO,CAAC,KAAK,IAAI,KAAM,CAC7B,KAAK,wBAAwB,CACzB,MAAO,KAAK,IAAI,sBAAsB,EACtC,QAAS,KAAK,IAAI,yDAAyD,CAC/F,CAAiB,EAED,KAAK,mBAAqB,CACtB,OAAQ,KAAK,IAAI,yDAAyD,CAC9F,EAEgB,KAAK,UAAY,GAEjB,MACH,CAGD,MAAMC,EAAW,IAAIN,EAAS,EAAG,EAAE,EACnCM,EAAS,UAAUN,EAAS,OAAO,OAAQ,KAAK,IAAI,IAAI,CAAC,EAEzD,KAAK,yBAAyB,OAAOM,CAAQ,EAAE,KAAMC,GAAQ,CACzD,GAAIA,EAAI,SAAW,EAAG,CAClB,KAAK,OAAO,QAAQ,EAEpB,MACH,CAED,KAAK,gCAA+B,EACpC,KAAK,UAAY,EACjC,CAAa,CACJ,EACD,iCAAkC,CAC9B,KAAK,wBAAwB,CACzB,MAAO,KAAK,IAAI,sBAAsB,EACtC,QAAS,KAAK,IAAI,0DAA0D,CAC5F,CAAa,EAED,KAAK,mBAAqB,CACtB,OAAQ,KAAK,IAAI,0DAA0D,CAC3F,CACS,CACJ,CACL"}