{"version":3,"file":"index-8VRQI1JY.js","sources":["../../../app/administration/src/module/sw-users-permissions/components/sw-users-permissions-permissions-grid/sw-users-permissions-permissions-grid.html.twig","../../../app/administration/src/module/sw-users-permissions/components/sw-users-permissions-permissions-grid/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_users_permissions_permissions_grid %}\n<sw-card\n    class=\"sw-users-permissions-permissions-grid\"\n    position-identifier=\"sw-users-permissions-permissions-grid\"\n    :title=\"$tc('sw-users-permissions.roles.grid.title')\"\n>\n    <div class=\"sw-users-permissions-permissions-grid__grid\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_users_permissions_permissions_grid_header %}\n        <div class=\"sw-users-permissions-permissions-grid__entry sw-users-permissions-permissions-grid__entry-header\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_users_permissions_permissions_grid_header_title %}\n            <div class=\"sw-users-permissions-permissions-grid__title\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_users_permissions_permissions_grid_header_title_content %}\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_users_permissions_permissions_grid_header_roles %}\n            <div\n                v-for=\"role in roles\"\n                :key=\"role\"\n                class=\"sw-users-permissions-permissions-grid__checkbox-wrapper\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_users_permissions_permissions_grid_header_roles_name %}\n                {{ $tc('sw-privileges.roles.' + role) }}\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_users_permissions_permissions_grid_header_all_roles %}\n            <div class=\"sw-users-permissions-permissions-grid__all\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_users_permissions_permissions_grid_header_all_roles_name %}\n                {{ $tc('sw-privileges.roles.all') }}\n                {% endblock %}\n            </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_users_permissions_permissions_grid_permissions %}\n        <template\n            v-for=\"permission in permissionsWithParents\"\n            :key=\"permission.value\"\n        >\n            <div\n                v-if=\"permission.type === 'parent'\"\n                :class=\"'sw-users-permissions-permissions-grid__parent_' + permission.value\"\n                class=\"sw-users-permissions-permissions-grid__entry\n                                sw-users-permissions-permissions-grid__parent\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_users_permissions_permissions_grid_parent_title %}\n                <div class=\"sw-users-permissions-permissions-grid__title\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_users_permissions_permissions_grid_parent_title_content %}\n                    {{ $tc('sw-privileges.permissions.parents.' + (permission.value || 'other')) }}\n                    {% endblock %}\n                </div>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_users_permissions_permissions_grid_parent_roles %}\n                <div\n                    v-for=\"role in roles\"\n                    :key=\"`${permission.value}-${role}`\"\n                    :class=\"'sw-users-permissions-permissions-grid__role_' + role\"\n                    class=\"sw-users-permissions-permissions-grid__checkbox-wrapper\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_users_permissions_permissions_grid_parent_roles_field %}\n                    <sw-checkbox-field\n                        v-if=\"parentRoleHasChildRoles(permission.value, role)\"\n                        :value=\"areAllChildrenRolesSelected(permission.value, role)\"\n                        :ghost-value=\"areSomeChildrenRolesSelected(permission.value, role)\"\n                        :disabled=\"isParentRoleDisabled(permission.value, role) || disabled\"\n                        @update:value=\"toggleAllChildrenWithRole(permission.value, role)\"\n                    />\n                    {% endblock %}\n                </div>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_users_permissions_permissions_grid_parent_all_roles %}\n                <div class=\"sw-users-permissions-permissions-grid__all sw-users-permissions-permissions-grid__role_all\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_users_permissions_permissions_grid_parent_all_roles_field %}\n                    <sw-checkbox-field\n                        :value=\"areAllChildrenWithAllRolesSelected(permission.value)\"\n                        :ghost-value=\"areSomeChildrenWithAllRolesSelected(permission.value)\"\n                        :disabled=\"disabled\"\n                        @update:value=\"toggleAllChildrenWithAllRoles(permission.value)\"\n                    />\n                    {% endblock %}\n                </div>\n                {% endblock %}\n            </div>\n\n            <div\n                v-else\n                :key=\"`else-${permission.key}`\"\n                :class=\"'sw-users-permissions-permissions-grid__entry_' + permission.key\"\n                class=\"sw-users-permissions-permissions-grid__entry\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_users_permissions_permissions_grid_permissions_title %}\n                <div class=\"sw-users-permissions-permissions-grid__title\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_users_permissions_permissions_grid_permissions_title_content %}\n                    {{ $tc('sw-privileges.permissions.' + permission.key + '.label') }}\n                    {% endblock %}\n                </div>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_users_permissions_permissions_grid_permissions_roles %}\n                <div\n                    v-for=\"role in roles\"\n                    :key=\"`else-${permission.key}${role}`\"\n                    :class=\"'sw-users-permissions-permissions-grid__role_' + role\"\n                    class=\"sw-users-permissions-permissions-grid__checkbox-wrapper\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_users_permissions_permissions_grid_permissions_roles_field %}\n                    <sw-checkbox-field\n                        v-if=\"permission.roles[role]\"\n                        v-tooltip=\"{\n                            message: $tc('sw-users-permissions.roles.grid.disabledCheckboxMessage'),\n                            disabled: !isPermissionDisabled(permission.key, role) || disabled,\n                            showOnDisabledElements: false\n                        }\"\n                        :value=\"isPermissionSelected(permission.key, role)\"\n                        :disabled=\"isPermissionDisabled(permission.key, role) || disabled\"\n                        @update:value=\"changePermission(permission.key, role)\"\n                    />\n                    {% endblock %}\n                </div>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_users_permissions_permissions_grid_permissions_all_roles %}\n                <div class=\"sw-users-permissions-permissions-grid__all sw-users-permissions-permissions-grid__role_all\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_users_permissions_permissions_grid_permissions_all_roles_field %}\n                    <sw-checkbox-field\n                        v-if=\"Object.keys(permission.roles).length > 0\"\n                        :value=\"allPermissionsForKeySelected(permission.key)\"\n                        :disabled=\"disabled\"\n                        @update:value=\"changeAllPermissionsForKey(permission.key)\"\n                    />\n                    {% endblock %}\n                </div>\n                {% endblock %}\n            </div>\n        </template>\n        {% endblock %}\n    </div>\n</sw-card>\n{% endblock %}\n","/**\n * @package services-settings\n */\nimport template from './sw-users-permissions-permissions-grid.html.twig';\nimport './sw-users-permissions-permissions-grid.scss';\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['privileges'],\n\n    props: {\n        role: {\n            type: Object,\n            required: true,\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    computed: {\n        permissionsWithParents() {\n            const permissionsWithParents = [];\n\n            this.parents.forEach((parent) => {\n                permissionsWithParents.push({\n                    type: 'parent',\n                    value: parent,\n                });\n\n                const children = this.getPermissionsForParent(parent);\n\n                children.forEach((child) => {\n                    permissionsWithParents.push(child);\n                });\n            });\n\n            return permissionsWithParents;\n        },\n\n        permissions() {\n            const privileges = this.privileges.getPrivilegesMappings();\n\n            return privileges\n                .filter((privilege) => privilege.category === 'permissions')\n                .sort((a, b) => {\n                    const labelA = this.$tc(`sw-privileges.permissions.${a.key}.label`);\n                    const labelB = this.$tc(`sw-privileges.permissions.${b.key}.label`);\n\n                    return labelA.localeCompare(labelB);\n                });\n        },\n\n        parents() {\n            return this.permissions\n                .reduce((parents, privilege) => {\n                    if (parents.includes(privilege.parent)) {\n                        return parents;\n                    }\n\n                    return [\n                        ...parents,\n                        privilege.parent,\n                    ];\n                }, [])\n                .sort((a, b) => {\n                    const labelA = this.$tc(`sw-privileges.permissions.parents.${a || 'other'}`);\n                    const labelB = this.$tc(`sw-privileges.permissions.parents.${b || 'other'}`);\n\n                    return labelA.localeCompare(labelB);\n                });\n        },\n\n        usedDependencies() {\n            const dependencies = new Set();\n\n            this.role.privileges.forEach((privilegeKey) => {\n                const privilegeRole = this.privileges.getPrivilegeRole(privilegeKey);\n\n                if (!privilegeRole) {\n                    return;\n                }\n\n                privilegeRole.dependencies.forEach((dependency) => {\n                    dependencies.add(dependency);\n                });\n            });\n\n            return [...dependencies];\n        },\n\n        roles() {\n            return [\n                'viewer',\n                'editor',\n                'creator',\n                'deleter',\n            ];\n        },\n    },\n\n    methods: {\n        changePermission(permissionKey, permissionRole) {\n            const identifier = `${permissionKey}.${permissionRole}`;\n\n            if (this.role.privileges.includes(identifier)) {\n                this.removePermission(identifier);\n            } else {\n                this.addPermission(identifier);\n            }\n        },\n\n        addPermission(identifier) {\n            if (this.role.privileges.includes(identifier)) {\n                return;\n            }\n\n            this.role.privileges.push(identifier);\n\n            this.addDependenciesForRole(identifier);\n        },\n\n        addDependenciesForRole(identifier) {\n            const privilegeRole = this.privileges.getPrivilegeRole(identifier);\n\n            if (!privilegeRole) {\n                return;\n            }\n\n            privilegeRole.dependencies.forEach((dependencyIdentifier) => {\n                this.addPermission(dependencyIdentifier);\n            });\n        },\n\n        removePermission(identifier) {\n            this.role.privileges = this.role.privileges.filter((privilege) => {\n                return privilege !== identifier;\n            });\n        },\n\n        isPermissionSelected(permissionKey, permissionRole) {\n            return this.role.privileges.some((privilege) => {\n                return privilege === `${permissionKey}.${permissionRole}`;\n            });\n        },\n\n        isPermissionDisabled(permissionKey, permissionRole) {\n            return this.usedDependencies.includes(`${permissionKey}.${permissionRole}`);\n        },\n\n        changeAllPermissionsForKey(permissionKey) {\n            const areAllSelected = this.allPermissionsForKeySelected(permissionKey);\n\n            this.roles.forEach((role) => {\n                const identifier = `${permissionKey}.${role}`;\n                const privilegeExists = this.privileges.existsPrivilege(identifier);\n\n                if (!privilegeExists) {\n                    return;\n                }\n\n                if (areAllSelected) {\n                    this.removePermission(identifier);\n                } else {\n                    this.addPermission(identifier);\n                }\n            });\n        },\n\n        allPermissionsForKeySelected(permissionKey) {\n            const containsUnselected = this.roles.some((permissionRole) => {\n                const doesExist = this.privileges.existsPrivilege(`${permissionKey}.${permissionRole}`);\n\n                if (!doesExist) {\n                    return false;\n                }\n\n                return !this.isPermissionSelected(permissionKey, permissionRole);\n            });\n\n            return !containsUnselected;\n        },\n\n        getPermissionsForParent(parentKey) {\n            return this.permissions.filter((permission) => {\n                return permission.parent === parentKey;\n            });\n        },\n\n        areAllChildrenRolesSelected(parentKey, roleKey) {\n            const permissionsForParent = this.getPermissionsForParent(parentKey);\n\n            const hasUnselected = permissionsForParent.some((permission) => {\n                if (permission.roles[roleKey] === undefined) {\n                    return false;\n                }\n\n                return !this.isPermissionSelected(permission.key, roleKey);\n            });\n\n            return !hasUnselected;\n        },\n\n        areAllChildrenWithAllRolesSelected(parentKey) {\n            return this.roles.every((roleKey) => {\n                return this.areAllChildrenRolesSelected(parentKey, roleKey);\n            });\n        },\n\n        areSomeChildrenRolesSelected(parentKey, roleKey, ignoreMissingPrivilege = true) {\n            const permissionsForParent = this.getPermissionsForParent(parentKey);\n\n            return permissionsForParent.some((permission) => {\n                if (!ignoreMissingPrivilege) {\n                    const privilegeExists = this.privileges.existsPrivilege(`${permission.key}.${roleKey}`);\n\n                    if (!privilegeExists) {\n                        return true;\n                    }\n                }\n\n                return this.isPermissionSelected(permission.key, roleKey);\n            });\n        },\n\n        areSomeChildrenWithAllRolesSelected(parentKey) {\n            return this.roles.every((roleKey) => {\n                return this.areSomeChildrenRolesSelected(parentKey, roleKey, false);\n            });\n        },\n\n        isParentRoleDisabled(parentKey, roleKey) {\n            const permissionsForParent = this.getPermissionsForParent(parentKey);\n\n            return permissionsForParent.every((permission) => {\n                return this.isPermissionDisabled(permission.key, roleKey);\n            });\n        },\n\n        toggleAllChildrenWithRole(parentKey, roleKey) {\n            const permissionsForParent = this.getPermissionsForParent(parentKey);\n            const allChildrenRolesSelected = this.areAllChildrenRolesSelected(parentKey, roleKey);\n\n            permissionsForParent.forEach((permission) => {\n                if (!permission.roles[roleKey]) {\n                    return;\n                }\n\n                const identifier = `${permission.key}.${roleKey}`;\n\n                if (this.isPermissionDisabled(permission.key, roleKey)) {\n                    return;\n                }\n\n                if (allChildrenRolesSelected) {\n                    this.removePermission(identifier);\n                } else {\n                    this.addPermission(identifier);\n                }\n            });\n        },\n\n        toggleAllChildrenWithAllRoles(parentKey) {\n            const permissionsForParent = this.getPermissionsForParent(parentKey);\n            const allChildrenWithAllRolesSelected = this.areAllChildrenWithAllRolesSelected(parentKey);\n\n            return this.roles.forEach((roleKey) => {\n                permissionsForParent.forEach((permission) => {\n                    const identifier = `${permission.key}.${roleKey}`;\n\n                    if (allChildrenWithAllRolesSelected) {\n                        this.removePermission(identifier);\n                    } else {\n                        this.addPermission(identifier);\n                    }\n                });\n            });\n        },\n\n        parentRoleHasChildRoles(parentKey, roleKey) {\n            return this.getPermissionsForParent(parentKey).some((currentRole) => {\n                return currentRole.roles[roleKey] !== undefined;\n            });\n        },\n    },\n};\n"],"names":["template","index","permissionsWithParents","parent","child","privilege","a","b","labelA","labelB","parents","dependencies","privilegeKey","privilegeRole","dependency","permissionKey","permissionRole","identifier","dependencyIdentifier","areAllSelected","role","parentKey","permission","roleKey","ignoreMissingPrivilege","permissionsForParent","allChildrenRolesSelected","allChildrenWithAllRolesSelected","currentRole"],"mappings":"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"}