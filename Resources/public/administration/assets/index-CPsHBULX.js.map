{"version":3,"file":"index-CPsHBULX.js","sources":["../../../app/administration/src/app/component/grid/sw-grid-column/sw-grid-column.html.twig","../../../app/administration/src/app/component/grid/sw-grid-column/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_grid_column %}\n<div\n    class=\"sw-grid-column sw-grid__cell\"\n    :class=\"'sw-grid-column--' + align\"\n    v-on=\"listeners\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_grid_column_content %}\n    <div\n        class=\"sw-grid__cell-content\"\n        :class=\"{ 'is--truncate': truncate }\"\n    >\n        <slot>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_grid_column_slot_default %}{% endblock %}\n        </slot>\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_grid_column_editing %}\n    <div class=\"sw-grid__cell-inline-editing\">\n        <slot name=\"inline-edit\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_grid_column_slot_inline_edit %}{% endblock %}\n        </slot>\n    </div>\n    {% endblock %}\n</div>\n{% endblock %}\n","import './sw-grid-column.scss';\nimport template from './sw-grid-column.html.twig';\n\nconst { Component } = Cicada;\n\n/**\n * @package admin\n *\n * @private\n */\nComponent.register('sw-grid-column', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: {\n        feature: {\n            from: 'feature',\n            default: null,\n        },\n        swGridColumns: {\n            from: 'swGridColumns',\n            default: null,\n        },\n    },\n\n    props: {\n        label: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        iconLabel: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        align: {\n            type: String,\n            default: 'left',\n        },\n        // eslint-disable-next-line vue/require-prop-types\n        flex: {\n            required: false,\n            default: 1,\n        },\n        sortable: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        dataIndex: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        editable: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        truncate: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    computed: {\n        parentGrid() {\n            if (this.isCompatEnabled('INSTANCE_CHILDREN')) {\n                return this.$parent.$parent.$parent.$parent;\n            }\n\n            return undefined;\n        },\n\n        listeners() {\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return this.$listeners;\n            }\n\n            return {};\n        },\n    },\n\n    watch: {\n        label(newLabel, oldLabel) {\n            const parentGridColumns = this.isCompatEnabled('INSTANCE_CHILDREN')\n                ? this.parentGrid?.columns\n                : this.swGridColumns;\n\n            const index = parentGridColumns.findIndex((col) => col.label === oldLabel);\n\n            if (index === -1 || !newLabel) {\n                return;\n            }\n\n            if (this.parentGrid) {\n                parentGridColumns[index].label = newLabel;\n            }\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.registerColumn();\n        },\n\n        registerColumn() {\n            const parentGridColumns = this.isCompatEnabled('INSTANCE_CHILDREN')\n                ? this.parentGrid?.columns\n                : this.swGridColumns;\n\n            const hasColumn = parentGridColumns.some((column) => {\n                return column.label === this.label;\n            });\n\n            if (!hasColumn && this.label) {\n                parentGridColumns.push({\n                    label: this.label,\n                    iconLabel: this.iconLabel,\n                    flex: this.flex,\n                    sortable: this.sortable,\n                    dataIndex: this.dataIndex,\n                    align: this.align,\n                    editable: this.editable,\n                    truncate: this.truncate,\n                });\n            }\n        },\n    },\n});\n"],"names":["template","Component","newLabel","oldLabel","_a","parentGridColumns","index","col","column"],"mappings":"AAAA,MAAeA,EAAA,6hBCGT,CAAE,UAAAC,CAAW,EAAG,OAOtBA,EAAU,SAAS,iBAAkB,CACjC,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,QAAS,CACL,KAAM,UACN,QAAS,IACZ,EACD,cAAe,CACX,KAAM,gBACN,QAAS,IACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EACD,UAAW,CACP,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EACD,MAAO,CACH,KAAM,OACN,QAAS,MACZ,EAED,KAAM,CACF,SAAU,GACV,QAAS,CACZ,EACD,SAAU,CACN,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EACD,UAAW,CACP,KAAM,OACN,SAAU,GACV,QAAS,EACZ,EACD,SAAU,CACN,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EACD,SAAU,CACN,KAAM,QACN,SAAU,GACV,QAAS,EACZ,CACJ,EAED,SAAU,CACN,YAAa,CACT,GAAI,KAAK,gBAAgB,mBAAmB,EACxC,OAAO,KAAK,QAAQ,QAAQ,QAAQ,OAI3C,EAED,WAAY,CACR,OAAI,KAAK,gBAAgB,oBAAoB,EAClC,KAAK,WAGT,EACV,CACJ,EAED,MAAO,CACH,MAAME,EAAUC,EAAU,CDvFlC,IAAAC,ECwFY,MAAMC,EAAoB,KAAK,gBAAgB,mBAAmB,GAC5DD,EAAA,KAAK,aAAL,YAAAA,EAAiB,QACjB,KAAK,cAELE,EAAQD,EAAkB,UAAWE,GAAQA,EAAI,QAAUJ,CAAQ,EAErEG,IAAU,IAAM,CAACJ,GAIjB,KAAK,aACLG,EAAkBC,CAAK,EAAE,MAAQJ,EAExC,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,eAAc,CACtB,EAED,gBAAiB,CDjHzB,IAAAE,ECkHY,MAAMC,EAAoB,KAAK,gBAAgB,mBAAmB,GAC5DD,EAAA,KAAK,aAAL,YAAAA,EAAiB,QACjB,KAAK,cAMP,CAJcC,EAAkB,KAAMG,GAC/BA,EAAO,QAAU,KAAK,KAChC,GAEiB,KAAK,OACnBH,EAAkB,KAAK,CACnB,MAAO,KAAK,MACZ,UAAW,KAAK,UAChB,KAAM,KAAK,KACX,SAAU,KAAK,SACf,UAAW,KAAK,UAChB,MAAO,KAAK,MACZ,SAAU,KAAK,SACf,SAAU,KAAK,QACnC,CAAiB,CAER,CACJ,CACL,CAAC"}