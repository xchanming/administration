const l=`<div class="sw-custom-entity-input-field"> <sw-text-field v-if="type === 'string'" class="sw-custom-entity-input-field__string" :value="currentValue" :label="label" :placeholder="placeholder" :help-text="helpText" @update:value="onChange" /> <sw-textarea-field v-else-if="type === 'text'" class="sw-custom-entity-input-field__text" :value="currentValue" :label="label" :placeholder="placeholder" :help-text="helpText" @update:value="onChange" /> <sw-number-field v-else-if="type === 'int'" class="sw-custom-entity-input-field__int" :value="currentValue" number-type="int" :label="label" :placeholder="placeholder" :help-text="helpText" @update:value="onChange" /> <sw-number-field v-else-if="type === 'float'" class="sw-custom-entity-input-field__float" :value="currentValue" number-type="float" :digits="10" :label="label" :placeholder="placeholder" :help-text="helpText" @update:value="onChange" /> <sw-switch-field v-else-if="type === 'boolean'" class="sw-custom-entity-input-field__boolean" :value="currentValue" :label="label" :placeholder="placeholder" :help-text="helpText" @update:value="onChange" /> <sw-datepicker v-else-if="type === 'date'" class="sw-custom-entity-input-field__date" hide-hint :value="currentValue" :label="label" :placeholder="placeholder" :help-text="helpText" @update:value="onChange" /> <sw-text-field v-else class="sw-custom-entity-input-field__undefined" :label="label" :error="{ code: 'CONTENT__INVALID_CUSTOM_ENTITY_FIELD_TYPE' }" disabled /> </div>`,t=Cicada.Component.wrapComponentConfig({template:l,compatConfig:Cicada.compatConfig,inject:["feature"],props:{value:{type:[Object,String,Number,Boolean],required:!1,default:null},type:{type:String,required:!0},label:{type:String,required:!1,default:""},placeholder:{type:String,required:!1,default:""},helpText:{type:String,required:!1,default:""}},computed:{currentValue:{get(){return this.value},set(e){this.onChange(e)}}},methods:{onChange(e){this.$emit("update:value",e)}}});export{t as default};
//# sourceMappingURL=index-CNmxBJhP.js.map
