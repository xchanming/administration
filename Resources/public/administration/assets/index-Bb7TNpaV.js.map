{"version":3,"file":"index-Bb7TNpaV.js","sources":["../../../app/administration/src/module/sw-product/component/sw-product-variants/sw-product-variants-delivery/sw-product-variants-delivery-listing/sw-product-variants-delivery-listing.html.twig","../../../app/administration/src/module/sw-product/component/sw-product-variants/sw-product-variants-delivery/sw-product-variants-delivery-listing/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_product_variants_delivery_listing %}\n<div class=\"sw-product-variants-delivery-listing\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variants_delivery_listing_mode %}\n    <div class=\"sw-product-variants-delivery-listing-mode\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_delivery_listing_mode_selection %}\n        <sw-radio-field\n            :value=\"product.listingMode\"\n            :options=\"listingModeOptions\"\n            @update:value=\"updateListingMode\"\n        />\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variants_delivery_listing_config %}\n    <div class=\"sw-product-variants-delivery-listing-config\">\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_delivery_listing_config_single %}\n        <div\n            class=\"sw-product-variants-delivery-listing-config-options\"\n            :class=\"{ 'is--disabled': isDisabledListingMode('single') }\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_delivery_variant_mode_selection %}\n            <sw-radio-field\n                class=\"sw-product-variants-delivery-listing_variant-selection\"\n                :value=\"product.variantListingConfig.displayParent\"\n                :options=\"mainVariantModeOptions\"\n                :disabled=\"isDisabledListingMode('single')\"\n                @update:value=\"updateVariantMode\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_delivery_listing_config_single_main_variant_label %}\n            <p>{{ $tc('sw-product.variations.deliveryModal.listingLabelMainVariant') }}</p>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_delivery_listing_config_single_main_variant_select %}\n            <sw-entity-single-select\n                id=\"mainVariant\"\n                :key=\"product.id\"\n                class=\"sw-product-variants-delivery-listing_entity-select\"\n                :value=\"mainVariant\"\n                entity=\"product\"\n                label-property=\"name\"\n                :criteria=\"variantCriteria\"\n                :context=\"context\"\n                :disabled=\"isDisabledListingMode('single')\"\n                :placeholder=\"$tc('sw-product.variations.deliveryModal.listingPlaceholderSelectMainVariant')\"\n                show-clearable-button\n                @update:value=\"updateMainVariant\"\n                @select-collapsed=\"onSelectCollapsed\"\n                @search-term-change=\"onSearchTermChange\"\n            >\n                <template #selection-label-property=\"{ item }\">\n                    <slot\n                        name=\"selection-label-property\"\n                        v-bind=\"{ item }\"\n                    >\n                        <sw-product-variant-info\n                            :variations=\"item.variation\"\n                        >\n                            {{ item.name || item.translated.name }}\n                        </sw-product-variant-info>\n                    </slot>\n                </template>\n\n                <template #result-item=\"{ item, index }\">\n                    <slot\n                        name=\"result-item\"\n                        v-bind=\"{ item, index, isSelected }\"\n                    >\n                        <sw-select-result\n                            :selected=\"isSelected(item)\"\n                            v-bind=\"{ item, index }\"\n                        >\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_product_variants_results_list_result_label %}\n                            <span class=\"sw-select-result__result-item-text\">\n                                <sw-product-variant-info\n                                    :variations=\"item.variation\"\n                                >\n                                    {{ item.translated.name || item.name }}\n                                </sw-product-variant-info>\n                            </span>\n                            {% endblock %}\n                        </sw-select-result>\n                    </slot>\n                </template>\n            </sw-entity-single-select>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_delivery_listing_config_single_main_variant_explanation %}\n            <div class=\"sw-product-variants-delivery-listing__option-explanation\">\n                <p v-if=\"product.variantListingConfig.displayParent\">\n                    {{ $tc('sw-product.variations.deliveryModal.listingExplanationModeMainProduct') }}\n                </p>\n                <p v-else>\n                    {{ $tc('sw-product.variations.deliveryModal.listingExplanationModeSingle') }}\n                </p>\n            </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_delivery_listing_config_expanded %}\n        <div\n            class=\"sw-product-variants-delivery-listing-config-options\"\n            :class=\"{ 'is--disabled': isDisabledListingMode('expanded') }\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_delivery_listing_config_expanded_group_list %}\n            <dl>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variants_delivery_listing_config_expanded_group_list_items %}\n                <dd\n                    v-for=\"group in selectedGroupsSorted\"\n                    :key=\"group.id\"\n                    :disabled=\"isDisabledListingMode('expanded')\"\n                    class=\"sw-product-variants-delivery-listing__groupElement\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_variants_delivery_listing_config_expanded_group_list_item %}\n                    <sw-checkbox-field\n                        :value=\"isActiveGroupInListing(group.id)\"\n                        :disabled=\"isDisabledListingMode('expanded')\"\n                        :label=\"group.translated.name\"\n                        @update:value=\"onChangeGroupListing($event, group.id)\"\n                    />\n                    {% endblock %}\n                </dd>\n                {% endblock %}\n            </dl>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </div>\n    {% endblock %}\n</div>\n{% endblock %}\n","/*\n * @package inventory\n */\n\nimport template from './sw-product-variants-delivery-listing.html.twig';\nimport './sw-product-variants-delivery-listing.scss';\n\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    props: {\n        product: {\n            type: Object,\n            required: true,\n        },\n\n        selectedGroups: {\n            type: Array,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            searchTerm: '',\n        };\n    },\n\n    computed: {\n        listingModeOptions() {\n            return [\n                {\n                    value: 'single',\n                    name: this.$tc('sw-product.variations.deliveryModal.listingLabelModeSingle'),\n                },\n                {\n                    value: 'expanded',\n                    name: this.$tc('sw-product.variations.deliveryModal.listingLabelModeExpanded'),\n                },\n            ];\n        },\n\n        listingMode() {\n            return this.mainVariant || this.product.variantListingConfig.displayParent === true ? 'single' : 'expanded';\n        },\n\n        mainVariantModeOptions() {\n            return [\n                {\n                    value: true,\n                    name: this.$tc('sw-product.variations.deliveryModal.listingLabelModeDisplayParent'),\n                },\n                {\n                    value: false,\n                    name: this.$tc('sw-product.variations.deliveryModal.listingLabelMainVariant'),\n                },\n            ];\n        },\n\n        mainVariant() {\n            return this.product.variantListingConfig.mainVariantId;\n        },\n\n        variantCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(Criteria.equals('product.parentId', this.product.id));\n            criteria.addAssociation('options.group');\n\n            if (typeof this.searchTerm === 'string' && this.searchTerm.length > 0) {\n                criteria.addQuery(Criteria.contains('product.options.name', this.searchTerm), 500);\n            }\n\n            return criteria;\n        },\n\n        context() {\n            const context = { ...Cicada.Context.api, inheritance: true };\n\n            return context;\n        },\n\n        selectedGroupsSorted() {\n            // prepare group sorting\n            let sortedGroups = [];\n            const selectedGroupsCopy = [...this.selectedGroups];\n\n            // check if sorting exists on server\n            if (\n                this.product.variantListingConfig.configuratorGroupConfig &&\n                this.product.variantListingConfig.configuratorGroupConfig.length > 0\n            ) {\n                // add server sorting to the sortedGroups\n                sortedGroups = this.product.variantListingConfig.configuratorGroupConfig.reduce((acc, configGroup) => {\n                    const relatedGroup = selectedGroupsCopy.find((group) => group.id === configGroup.id);\n\n                    if (relatedGroup) {\n                        acc.push(relatedGroup);\n\n                        // remove from original array\n                        selectedGroupsCopy.splice(selectedGroupsCopy.indexOf(relatedGroup), 1);\n                    }\n\n                    return acc;\n                }, []);\n            }\n\n            // add non sorted groups at the end of the sorted array\n            sortedGroups = [\n                ...sortedGroups,\n                ...selectedGroupsCopy,\n            ];\n\n            return sortedGroups;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.updateListingMode(this.listingMode);\n        },\n\n        updateListingMode(value) {\n            if (value === 'expanded') {\n                this.product.variantListingConfig.displayParent = true;\n            }\n\n            this.product.listingMode = value;\n        },\n\n        updateVariantMode(value) {\n            this.product.variantListingConfig.displayParent = value;\n        },\n\n        updateMainVariant(value) {\n            this.product.variantListingConfig.mainVariantId = value;\n        },\n\n        isActiveGroupInListing(groupId) {\n            const configuratorGroupConfig = this.product.variantListingConfig?.configuratorGroupConfig || [];\n\n            if (!configuratorGroupConfig.length) {\n                return false;\n            }\n\n            const activeGroupConfig = this.product.variantListingConfig.configuratorGroupConfig.find((group) => {\n                return group.id === groupId;\n            });\n\n            return activeGroupConfig ? activeGroupConfig.expressionForListings : false;\n        },\n\n        onChangeGroupListing(value, groupId) {\n            const configuratorGroupConfig = this.product.variantListingConfig?.configuratorGroupConfig || [];\n            const existingGroup = configuratorGroupConfig.find((group) => group.id === groupId);\n\n            if (existingGroup) {\n                existingGroup.expressionForListings = value;\n                return;\n            }\n\n            configuratorGroupConfig.push({\n                id: groupId,\n                expressionForListings: value,\n                representation: 'box',\n            });\n\n            this.product.variantListingConfig.configuratorGroupConfig = configuratorGroupConfig;\n        },\n\n        isActiveListingMode(mode) {\n            return mode === this.product.listingMode;\n        },\n\n        isDisabledListingMode(mode) {\n            return !this.isActiveListingMode(mode);\n        },\n\n        isSelected(item) {\n            return this.mainVariant === item.id;\n        },\n\n        onSearchTermChange(value) {\n            this.searchTerm = value;\n        },\n\n        onSelectCollapsed() {\n            this.searchTerm = '';\n        },\n    },\n};\n"],"names":["template","Criteria","index","criteria","sortedGroups","selectedGroupsCopy","acc","configGroup","relatedGroup","group","value","groupId","_a","activeGroupConfig","configuratorGroupConfig","existingGroup","mode","item"],"mappings":"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"}