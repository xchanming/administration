{"version":3,"file":"index-Q5G-eEDF.js","sources":["../../../app/administration/src/app/component/form/sw-password-field-deprecated/sw-password-field-deprecated.html.twig","../../../app/administration/src/app/component/form/sw-password-field-deprecated/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_password_field %}\n<!-- eslint-disable sw-deprecation-rules/no-twigjs-blocks, vue/no-duplicate-attributes, vue/no-parsing-error -->\n{% block sw_text_field %}\n<sw-contextual-field\n    class=\"sw-field--password\"\n    v-bind=\"{\n        ...$attrs,\n        ...inheritanceAttrs\n    }\"\n    :name=\"formFieldName\"\n    @inheritance-restore=\"$emit('inheritance-restore', $event)\"\n    @inheritance-remove=\"$emit('inheritance-remove', $event)\"\n>\n    <template #sw-field-input=\"{ identification, disabled, size, setFocusClass, removeFocusClass }\">\n        <div class=\"sw-field--password__container\">\n            <!-- eslint-disable-next-line vuejs-accessibility/form-control-has-label -->\n            <input\n                :id=\"identification\"\n                :type=\"showPassword ? 'text' : 'password'\"\n                :name=\"identification\"\n                :placeholder=\"passwordPlaceholder\"\n                :disabled=\"disabled\"\n                :value=\"currentValue\"\n                :autocomplete=\"autocomplete\"\n                @input=\"onInput\"\n                @change=\"onChange\"\n                @focus=\"setFocusClass\"\n                @blur=\"removeFocusClass\"\n                v-on=\"additionalListeners\"\n            >\n            <span\n                v-if=\"passwordToggleAble\"\n                :title=\"showPassword ? $tc('global.sw-field.titleHidePassword') : $tc('global.sw-field.titleShowPassword')\"\n                class=\"sw-field__toggle-password-visibility\"\n                role=\"button\"\n                tabindex=\"0\"\n                @click=\"onTogglePasswordVisibility(disabled)\"\n                @keydown.enter=\"onTogglePasswordVisibility(disabled)\"\n            >\n                <sw-icon\n                    v-if=\"showPassword\"\n                    name=\"regular-eye-slash\"\n                    small\n                />\n\n                <sw-icon\n                    v-else\n                    name=\"regular-eye\"\n                    small\n                />\n            </span>\n        </div>\n    </template>\n\n    <template\n        v-if=\"copyable\"\n        #sw-contextual-field-suffix=\"{ identification }\"\n    >\n        <sw-field-copyable\n            v-if=\"copyable\"\n            :display-name=\"identification\"\n            :copyable-text=\"currentValue\"\n            :tooltip=\"copyableTooltip\"\n        />\n    </template>\n\n    <template #label>\n        <slot name=\"label\"></slot>\n    </template>\n\n    <template #hint>\n        <slot name=\"hint\"></slot>\n    </template>\n</sw-contextual-field>\n    {% endblock %}\n{% endblock %}\n","import template from './sw-password-field-deprecated.html.twig';\nimport './sw-password-field.scss';\n\n/**\n * @package admin\n *\n * @private\n * @description password input field.\n * @status ready\n * @example-type static\n * @component-example\n * <sw-password-field type=\"password\" label=\"Name\" placeholder=\"placeholder goes here...\"></sw-password-field>\n */\nCicada.Component.extend('sw-password-field-deprecated', 'sw-text-field-deprecated', {\n    template,\n\n    emits: [\n        'inheritance-restore',\n        'inheritance-remove',\n    ],\n\n    props: {\n        passwordToggleAble: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        placeholderIsPassword: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        autocomplete: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            showPassword: false,\n        };\n    },\n\n    computed: {\n        typeFieldClass() {\n            return this.passwordToggleAble ? 'sw-field--password' : 'sw-field--password sw-field--password--untoggable';\n        },\n\n        passwordPlaceholder() {\n            return this.showPassword || !this.placeholderIsPassword\n                ? this.placeholder\n                : '*'.repeat(this.placeholder.length ? this.placeholder.length : 6);\n        },\n    },\n\n    methods: {\n        onTogglePasswordVisibility(disabled) {\n            if (disabled) {\n                return;\n            }\n\n            this.showPassword = !this.showPassword;\n        },\n    },\n});\n"],"names":["template","disabled"],"mappings":"AAAA,MAAeA,EAAA,uiDCaf,OAAO,UAAU,OAAO,+BAAgC,2BAA4B,CAChF,SAAAA,EAEA,MAAO,CACH,sBACA,oBACH,EAED,MAAO,CACH,mBAAoB,CAChB,KAAM,QACN,SAAU,GAEV,QAAS,EACZ,EAED,sBAAuB,CACnB,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EAED,aAAc,CACV,KAAM,OACN,SAAU,GACV,QAAS,IACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,aAAc,EAC1B,CACK,EAED,SAAU,CACN,gBAAiB,CACb,OAAO,KAAK,mBAAqB,qBAAuB,mDAC3D,EAED,qBAAsB,CAClB,OAAO,KAAK,cAAgB,CAAC,KAAK,sBAC5B,KAAK,YACL,IAAI,OAAO,KAAK,YAAY,OAAS,KAAK,YAAY,OAAS,CAAC,CACzE,CACJ,EAED,QAAS,CACL,2BAA2BC,EAAU,CAC7BA,IAIJ,KAAK,aAAe,CAAC,KAAK,aAC7B,CACJ,CACL,CAAC"}