const s='{% block sw_settings_search_view_general %} <div class="sw-settings-search__view-general"> {% block sw_settings_search_search_behaviour_card %} <sw-settings-search-search-behaviour :is-loading="isLoading" :search-behaviour-configs="productSearchConfigs" /> {% endblock %} {% block sw_settings_search_searchable_content_card %} <sw-settings-search-searchable-content :product-search-configs="productSearchConfigs" :search-config-id="searchConfigId" v-on="listeners" /> {% endblock %} {% block sw_settings_search_excluded_search_terms_card %} <sw-settings-search-excluded-search-terms :search-configs="productSearchConfigs" :is-excluded-terms-loading="isLoading" v-on="listeners" @data-load="loadData" /> {% endblock %} </div> {% endblock %}',a={template:s,compatConfig:Cicada.compatConfig,emits:["excluded-search-terms-load"],props:{productSearchConfigs:{type:Object,required:!1,default:()=>{}},isLoading:{type:Boolean,required:!1,default:!1}},data(){return{searchConfigId:""}},watch:{productSearchConfigs(e){this.searchConfigId=e.id||""}},computed:{listeners(){return this.isCompatEnabled("INSTANCE_LISTENERS")?this.$listeners:{}}},methods:{loadData(){this.$emit("excluded-search-terms-load")}}};export{a as default};
//# sourceMappingURL=index-RN0lZWZ2.js.map
