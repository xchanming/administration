{"version":3,"file":"index-C_MPidus.js","sources":["../../../app/administration/src/module/sw-settings-country/page/sw-settings-country-list/sw-settings-country-list.html.twig","../../../app/administration/src/module/sw-settings-country/page/sw-settings-country-list/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_list %}\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_country_index %}\n<sw-page class=\"sw-settings-country-list\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_country_list_search_bar %}\n    <template #search-bar>\n        <sw-search-bar\n            initial-search-type=\"country\"\n            :placeholder=\"$tc('sw-settings-country.general.placeholderSearchBar')\"\n            :initial-search=\"term\"\n            @search=\"onSearch\"\n        />\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_country_list_smart_bar_header %}\n    <template #smart-bar-header>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_country_list_smart_bar_header_title %}\n        <h2>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_country_list_smart_bar_header_title_text %}\n            {{ $tc('sw-settings.index.title') }} <sw-icon\n                name=\"regular-chevron-right-xs\"\n                small\n            /> {{ $tc('sw-settings-country.list.textHeadline') }}\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_country_list_smart_bar_header_amount %}\n            <span\n                v-if=\"!isLoading\"\n                class=\"sw-page__smart-bar-amount\"\n            >\n                ({{ total }})\n            </span>\n            {% endblock %}\n        </h2>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_country_list_smart_bar_actions %}\n    <template #smart-bar-actions>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_country_list_smart_bar_actions_add %}\n        <sw-button\n            v-tooltip.bottom=\"{\n                message: $tc('sw-privileges.tooltip.warning'),\n                disabled: acl.can('country.creator'),\n                showOnDisabledElements: true\n            }\"\n            class=\"sw-settings-country-list__button-create\"\n            variant=\"primary\"\n            :router-link=\"{ name: 'sw.settings.country.create' }\"\n            :disabled=\"!acl.can('country.creator') || undefined\"\n        >\n            {{ $tc('sw-settings-country.list.buttonAddCountry') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_country_list_language_switch %}\n    <template #language-switch>\n        <sw-language-switch @on-change=\"onChangeLanguage\" />\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_country_list_content %}\n    <template #content>\n        <sw-card-view>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_country_list_content_card %}\n            <sw-card\n                v-if=\"isLoading || country\"\n                position-identifier=\"sw-settings-country-list\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_country_list_grid %}\n                <template #grid>\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_settings_country_list_grid_inner %}\n                    <sw-entity-listing\n                        ref=\"swSettingsCountryGrid\"\n                        class=\"sw-settings-country-list-grid\"\n                        :items=\"country\"\n                        :columns=\"getCountryColumns()\"\n                        :repository=\"countryRepository\"\n                        :full-page=\"false\"\n                        detail-route=\"sw.settings.country.detail\"\n                        :show-selection=\"true\"\n                        :is-loading=\"isLoading\"\n                        :allow-view=\"acl.can('country.viewer') || undefined\"\n                        :allow-edit=\"acl.can('country.editor') || undefined\"\n                        :allow-inline-edit=\"acl.can('country.editor') || undefined\"\n                        :allow-delete=\"acl.can('country.deleter') || undefined\"\n                        @inline-edit-save=\"onInlineEditSave\"\n                    >\n\n                        <template #column-active=\"{ item, isInlineEdit }\">\n                            <template v-if=\"isInlineEdit\">\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_settings_country_list_columns_active_editor %}\n                                <sw-checkbox-field\n                                    v-model:value=\"item.active\"\n                                />\n                                {% endblock %}\n                            </template>\n                            <template v-else>\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_settings_country_list_columns_active_label %}\n                                <sw-icon\n                                    v-if=\"item.active\"\n                                    name=\"regular-checkmark-xs\"\n                                    small\n                                    class=\"is--active\"\n                                />\n                                <sw-icon\n                                    v-else\n                                    name=\"regular-times-s\"\n                                    small\n                                    class=\"is--inactive\"\n                                />\n                                {% endblock %}\n                            </template>\n                        </template>\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_country_list_grid_columns_actions %}\n                        <template #actions=\"{ item }\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_country_list_grid_columns_actions_edit %}\n                            <sw-context-menu-item\n                                :router-link=\"{ name: 'sw.settings.country.detail', params: { id: item.id, edit: 'edit' }}\"\n                                :disabled=\"!acl.can('country.editor') && !acl.can('country.viewer') || undefined\"\n                                class=\"sw-country-list__edit-action\"\n                            >\n                                {{ detailPageLinkText }}\n                            </sw-context-menu-item>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_country_list_grid_columns_actions_delete %}\n                            <sw-context-menu-item\n                                class=\"sw-country-list__delete-action\"\n                                variant=\"danger\"\n                                :disabled=\"!acl.can('country.deleter') || undefined\"\n                                @click=\"onDelete(item.id)\"\n                            >\n                                {{ $tc('sw-settings-country.list.contextMenuDelete') }}\n                            </sw-context-menu-item>\n                            {% endblock %}\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_country_list_grid_action_modals %}\n                        <template #action-modals=\"{ item }\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_country_list_delete_modal %}\n                            <sw-modal\n                                v-if=\"showDeleteModal === item.id\"\n                                :title=\"$tc('global.default.warning')\"\n                                variant=\"small\"\n                                @modal-close=\"onCloseDeleteModal\"\n                            >\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_settings_country_list_delete_modal_confirm_delete_text %}\n                                <p class=\"sw-settings-country-list__confirm-delete-text\">\n                                    {{ $tc('sw-settings-country.list.textDeleteConfirm', 0, { name: item.name }) }}\n                                </p>\n                                {% endblock %}\n\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_settings_country_list_delete_modal_footer %}\n                                <template #modal-footer>\n                                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                    {% block sw_settings_country_list_delete_modal_cancel %}\n                                    <sw-button\n                                        size=\"small\"\n                                        @click=\"onCloseDeleteModal\"\n                                    >\n                                        {{ $tc('global.default.cancel') }}\n                                    </sw-button>\n                                    {% endblock %}\n\n                                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                    {% block sw_settings_country_list_delete_modal_confirm %}\n                                    <sw-button\n                                        variant=\"danger\"\n                                        size=\"small\"\n                                        @click=\"onConfirmDelete(item.id)\"\n                                    >\n                                        {{ $tc('sw-settings-country.list.buttonDelete') }}\n                                    </sw-button>\n                                    {% endblock %}\n                                </template>\n                                {% endblock %}\n                            </sw-modal>\n                            {% endblock %}\n                        </template>\n                        {% endblock %}\n                    </sw-entity-listing>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n            </sw-card>\n            {% endblock %}\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n    {% endblock %}\n{% endblock %}\n","/**\n * @package buyers-experience\n */\nimport template from './sw-settings-country-list.html.twig';\nimport './sw-settings-country-list.scss';\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    data() {\n        return {\n            entityName: 'country',\n            country: null,\n            sortBy: 'country.name',\n            isLoading: false,\n            sortDirection: 'ASC',\n            naturalSorting: true,\n            showDeleteModal: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        countryRepository() {\n            return this.repositoryFactory.create('country');\n        },\n\n        detailPageLinkText() {\n            if (!this.acl.can('country.editor') && this.acl.can('country.viewer')) {\n                return this.$tc('global.default.view');\n            }\n\n            return this.$tc('global.default.edit');\n        },\n    },\n\n    methods: {\n        getList() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            this.isLoading = true;\n\n            this.naturalSorting = this.sortBy === 'name';\n            criteria.setTerm(this.term);\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, this.naturalSorting));\n\n            this.countryRepository\n                .search(criteria, Cicada.Context.api)\n                .then((items) => {\n                    this.total = items.total;\n                    this.country = items;\n                    this.isLoading = false;\n\n                    return items;\n                })\n                .catch(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        onInlineEditSave(promise, country) {\n            promise\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-settings-country.detail.messageSaveSuccess', 0, { name: country.name }),\n                    });\n                })\n                .catch(() => {\n                    this.getList();\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-country.detail.messageSaveError'),\n                    });\n                });\n        },\n\n        onChangeLanguage(languageId) {\n            Cicada.State.commit('context/setApiLanguageId', languageId);\n            this.getList();\n        },\n\n        onDelete(id) {\n            this.showDeleteModal = id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete(id) {\n            this.showDeleteModal = false;\n\n            return this.countryRepository.delete(id).then(() => {\n                this.getList();\n            });\n        },\n\n        getCountryColumns() {\n            return [\n                {\n                    property: 'name',\n                    dataIndex: 'name',\n                    inlineEdit: 'string',\n                    label: 'sw-settings-country.list.columnName',\n                    routerLink: 'sw.settings.country.detail',\n                    primary: true,\n                },\n                {\n                    property: 'position',\n                    inlineEdit: 'number',\n                    label: 'sw-settings-country.list.columnPosition',\n                },\n                {\n                    property: 'iso',\n                    inlineEdit: 'string',\n                    label: 'sw-settings-country.list.columnIso',\n                },\n                {\n                    property: 'iso3',\n                    inlineEdit: 'string',\n                    label: 'sw-settings-country.list.columnIso3',\n                },\n                {\n                    property: 'active',\n                    inlineEdit: 'string',\n                    label: 'sw-settings-country.list.columnActive',\n                },\n            ];\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","index","criteria","items","promise","country","languageId","id"],"mappings":"AAAA,MAAeA,EAAA,67JCMT,CAAE,MAAAC,CAAO,EAAG,OACZ,CAAE,SAAAC,CAAQ,EAAK,OAAO,KAGbC,EAAA,CACX,SAAAH,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,oBACA,KACH,EAED,OAAQ,CACJC,EAAM,UAAU,SAAS,CAC5B,EAED,MAAO,CACH,MAAO,CACH,WAAY,UACZ,QAAS,KACT,OAAQ,eACR,UAAW,GACX,cAAe,MACf,eAAgB,GAChB,gBAAiB,EAC7B,CACK,EAED,UAAW,CACP,MAAO,CACH,MAAO,KAAK,aAAc,CACtC,CACK,EAED,SAAU,CACN,mBAAoB,CAChB,OAAO,KAAK,kBAAkB,OAAO,SAAS,CACjD,EAED,oBAAqB,CACjB,MAAI,CAAC,KAAK,IAAI,IAAI,gBAAgB,GAAK,KAAK,IAAI,IAAI,gBAAgB,EACzD,KAAK,IAAI,qBAAqB,EAGlC,KAAK,IAAI,qBAAqB,CACxC,CACJ,EAED,QAAS,CACL,SAAU,CACN,MAAMG,EAAW,IAAIF,EAAS,KAAK,KAAM,KAAK,KAAK,EAEnD,KAAK,UAAY,GAEjB,KAAK,eAAiB,KAAK,SAAW,OACtCE,EAAS,QAAQ,KAAK,IAAI,EAC1BA,EAAS,WAAWF,EAAS,KAAK,KAAK,OAAQ,KAAK,cAAe,KAAK,cAAc,CAAC,EAEvF,KAAK,kBACA,OAAOE,EAAU,OAAO,QAAQ,GAAG,EACnC,KAAMC,IACH,KAAK,MAAQA,EAAM,MACnB,KAAK,QAAUA,EACf,KAAK,UAAY,GAEVA,EACV,EACA,MAAM,IAAM,CACT,KAAK,UAAY,EACrC,CAAiB,CACR,EAED,iBAAiBC,EAASC,EAAS,CAC/BD,EACK,KAAK,IAAM,CACR,KAAK,0BAA0B,CAC3B,QAAS,KAAK,IAAI,gDAAiD,EAAG,CAAE,KAAMC,EAAQ,KAAM,CACpH,CAAqB,CACrB,CAAiB,EACA,MAAM,IAAM,CACT,KAAK,QAAO,EACZ,KAAK,wBAAwB,CACzB,QAAS,KAAK,IAAI,6CAA6C,CACvF,CAAqB,CACrB,CAAiB,CACR,EAED,iBAAiBC,EAAY,CACzB,OAAO,MAAM,OAAO,2BAA4BA,CAAU,EAC1D,KAAK,QAAO,CACf,EAED,SAASC,EAAI,CACT,KAAK,gBAAkBA,CAC1B,EAED,oBAAqB,CACjB,KAAK,gBAAkB,EAC1B,EAED,gBAAgBA,EAAI,CAChB,YAAK,gBAAkB,GAEhB,KAAK,kBAAkB,OAAOA,CAAE,EAAE,KAAK,IAAM,CAChD,KAAK,QAAO,CAC5B,CAAa,CACJ,EAED,mBAAoB,CAChB,MAAO,CACH,CACI,SAAU,OACV,UAAW,OACX,WAAY,SACZ,MAAO,sCACP,WAAY,6BACZ,QAAS,EACZ,EACD,CACI,SAAU,WACV,WAAY,SACZ,MAAO,yCACV,EACD,CACI,SAAU,MACV,WAAY,SACZ,MAAO,oCACV,EACD,CACI,SAAU,OACV,WAAY,SACZ,MAAO,qCACV,EACD,CACI,SAAU,SACV,WAAY,SACZ,MAAO,uCACV,CACjB,CACS,CACJ,CACL"}