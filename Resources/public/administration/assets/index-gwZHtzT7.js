import{J as a}from"./channel-Cvr-E4M4.js";const l=`{% block sw_text_field %} <sw-contextual-field class="sw-field--text" v-bind="{ ...$attrs, ...inheritanceAttrs }" :name="formFieldName" @inheritance-restore="$emit('inheritance-restore', $event)" @inheritance-remove="$emit('inheritance-remove', $event)" > <template v-if="hasPrefix" #sw-contextual-field-prefix="{ disabled, identification }" > <slot name="prefix" v-bind="{ disabled, identification }" ></slot> </template> <template #sw-field-input="{ identification, error, disabled, size, setFocusClass, removeFocusClass, hasSuffix, hasPrefix }"> <input v-bind="filteredInputAttributes" :id="createInputId(identification)" type="text" :name="identification" :disabled="disabled" :value="currentValue" :placeholder="placeholder" :aria-label="ariaLabel && $tc(ariaLabel)" @input="onInput" @change="onChange" @focus="setFocusClass" @blur="removeFocusClass" > </template> <template v-if="copyable || hasSuffix" #sw-contextual-field-suffix="{ disabled, identification }" > <slot name="suffix" v-bind="{ identification }" ></slot> <sw-field-copyable v-if="copyable" :display-name="identification" :copyable-text="currentValue" :tooltip="copyableTooltip" /> </template> <template #label> <slot name="label"></slot> </template> <template #hint> <slot name="hint"></slot> </template> </sw-contextual-field> {% endblock %}`,{Component:r,Mixin:i}=Shopware;r.register("sw-text-field-deprecated",{template:l,inheritAttrs:!1,inject:["feature"],emits:["update:value","inheritance-restore","inheritance-remove"],mixins:[i.getByName("sw-form-field"),i.getByName("remove-api-error"),i.getByName("validation")],props:{value:{required:!1},placeholder:{type:String,required:!1,default:""},copyable:{type:Boolean,required:!1,default:!1},copyableTooltip:{type:Boolean,required:!1,default:!1},idSuffix:{type:String,required:!1,default(){return""}},ariaLabel:{type:String,required:!1,default(){var e;return(e=a("ariaLabel",null))==null?void 0:e.value}}},data(){return{currentValue:this.value}},computed:{hasPrefix(){return this.$slots.hasOwnProperty("prefix")},hasSuffix(){return this.$slots.hasOwnProperty("suffix")},filteredInputAttributes(){return Object.keys(this.$attrs).reduce((e,t)=>(["size","class"].includes(t)||(e[t]=this.$attrs[t]),e),{})}},watch:{value(e){this.currentValue=e}},methods:{onChange(e){this.$emit("update:value",e.target.value||"")},onInput(e){this.$emit("update:value",e.target.value)},restoreInheritance(){this.$emit("update:value",null)},createInputId(e){return!this.idSuffix||this.idSuffix.length<=0?e:`${e}-${this.idSuffix}`}}});
