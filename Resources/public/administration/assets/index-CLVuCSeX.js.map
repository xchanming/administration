{"version":3,"file":"index-CLVuCSeX.js","sources":["../../../app/administration/src/module/sw-order/component/sw-order-create-details-footer/sw-order-create-details-footer.html.twig","../../../app/administration/src/module/sw-order/component/sw-order-create-details-footer/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_order_create_details_footer %}\n<sw-container\n    class=\"sw-order-create-details-footer\"\n    columns=\"minmax(min-content, 1fr) minmax(min-content, 1fr)\"\n    gap=\"0 32px\"\n>\n    <div>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_create_details_footer_sales_channel %}\n        <sw-entity-single-select\n            v-model:value=\"salesChannelId\"\n            disabled\n            size=\"small\"\n            entity=\"sales_channel\"\n            class=\"sw-order-create-details-footer__item\"\n            :label=\"$tc('sw-order.createBase.detailsFooter.labelSalesChannel')\"\n            :placeholder=\"$tc('sw-order.createBase.detailsFooter.placeholderSalesChannel')\"\n            show-clearable-button\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_create_details_footer_payment_method %}\n        <sw-entity-single-select\n            v-model:value=\"context.paymentMethodId\"\n            size=\"small\"\n            entity=\"payment_method\"\n            label-property=\"distinguishableName\"\n            class=\"sw-order-create-details-footer__item\"\n            :disabled=\"!isCustomerActive\"\n            :criteria=\"paymentMethodCriteria\"\n            :label=\"$tc('sw-order.createBase.detailsFooter.labelPaymentMethod')\"\n            :help-text=\"$tc('sw-order.createBase.detailsFooter.helpTextPaymentMethod')\"\n            :placeholder=\"$tc('sw-order.createBase.detailsFooter.placeholderPaymentMethod')\"\n            show-clearable-button\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_create_details_footer_shipping_method %}\n        <sw-entity-single-select\n            v-model:value=\"context.shippingMethodId\"\n            size=\"small\"\n            entity=\"shipping_method\"\n            class=\"sw-order-create-details-footer__item\"\n            :disabled=\"!isCustomerActive\"\n            :criteria=\"salesChannelCriteria\"\n            :label=\"$tc('sw-order.createBase.detailsFooter.labelShippingMethod')\"\n            :placeholder=\"$tc('sw-order.createBase.detailsFooter.placeholderShippingMethod')\"\n        />\n        {% endblock %}\n    </div>\n\n    <div>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_create_details_footer_order_language %}\n        <sw-entity-single-select\n            v-model:value=\"context.languageId\"\n            size=\"small\"\n            entity=\"language\"\n            class=\"sw-order-create-details-footer__item\"\n            :disabled=\"!isCustomerActive\"\n            :criteria=\"salesChannelCriteria\"\n            :label=\"$tc('sw-order.createBase.detailsFooter.labelOrderLanguage')\"\n            :placeholder=\"$tc('sw-order.createBase.detailsFooter.placeholderOrderLanguage')\"\n            show-clearable-button\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_create_details_footer_currency %}\n        <sw-entity-single-select\n            v-model:value=\"context.currencyId\"\n            size=\"small\"\n            entity=\"currency\"\n            class=\"sw-order-create-details-footer__item\"\n            :disabled=\"!isCustomerActive\"\n            :criteria=\"salesChannelCriteria\"\n            :label=\"$tc('sw-order.createBase.detailsFooter.labelCurrency')\"\n            :placeholder=\"$tc('sw-order.createBase.detailsFooter.placeholderCurrency')\"\n            show-clearable-button\n        />\n        {% endblock %}\n    </div>\n</sw-container>\n{% endblock %}\n","import template from './sw-order-create-details-footer.html.twig';\n\n/**\n * @package checkout\n */\n\nconst { State, Service } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    inject: {\n        swOrderDetailOnLoadingChange: {\n            from: 'swOrderDetailOnLoadingChange',\n            default: null,\n        },\n    },\n\n    compatConfig: Cicada.compatConfig,\n\n    emits: ['loading-change'],\n\n    props: {\n        cart: {\n            type: Object,\n            required: true,\n        },\n\n        customer: {\n            type: Object,\n            default: null,\n        },\n\n        isCustomerActive: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    computed: {\n        context: {\n            get() {\n                return this.customer ? this.customer.salesChannel : {};\n            },\n\n            set(context) {\n                if (this.customer) this.customer.salesChannel = context;\n            },\n        },\n\n        salesChannelId: {\n            get() {\n                return this.customer ? this.customer.salesChannelId : null;\n            },\n\n            set(salesChannelId) {\n                if (this.customer) this.customer.salesChannelId = salesChannelId;\n            },\n        },\n\n        salesChannelCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            if (this.salesChannelId) {\n                criteria.addFilter(Criteria.equals('salesChannels.id', this.salesChannelId));\n            }\n\n            return criteria;\n        },\n\n        paymentMethodCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            if (this.salesChannelId) {\n                criteria.addFilter(Criteria.equals('salesChannels.id', this.salesChannelId));\n            }\n\n            criteria.addFilter(Criteria.equals('afterOrderEnabled', 1));\n\n            return criteria;\n        },\n\n        currencyRepository() {\n            return Service('repositoryFactory').create('currency');\n        },\n\n        currentCurrencyId() {\n            return State.getters['swOrder/currencyId'];\n        },\n\n        defaultSalesChannel() {\n            return State.get('swOrder').defaultSalesChannel;\n        },\n\n        isCartTokenAvailable() {\n            return State.getters['swOrder/isCartTokenAvailable'];\n        },\n    },\n\n    watch: {\n        context: {\n            immediate: true,\n            deep: true,\n            handler() {\n                if (!this.customer || !this.cart.token) {\n                    return;\n                }\n\n                this.updateContext();\n                this.updateOrderContext();\n            },\n        },\n\n        isCartTokenAvailable: {\n            immediate: true,\n            handler() {\n                if (this.isCartTokenAvailable && this.customer) {\n                    this.updateOrderContext();\n                }\n            },\n        },\n    },\n\n    methods: {\n        updateContext() {\n            const contextKeys = [\n                'currencyId',\n                'languageId',\n                'shippingMethodId',\n                'paymentMethodId',\n            ];\n            contextKeys.forEach((key) => {\n                this.context[key] = this.context[key] || this.defaultSalesChannel[key];\n            });\n        },\n\n        updateOrderContext() {\n            State.dispatch('swOrder/updateOrderContext', {\n                context: this.context,\n                salesChannelId: this.customer.salesChannelId,\n                contextToken: this.cart.token,\n            }).then(() => {\n                // Make sure updateCustomerContext() is run when updateOrderContext() completed\n                this.updateCustomerContext();\n\n                if (this.currentCurrencyId !== this.context.currencyId) {\n                    this.getCurrency();\n                }\n            });\n        },\n\n        updateCustomerContext() {\n            // We do getCart() only when user just changes the order context items. Otherwise, we do updateCustomerContext()\n            State.dispatch('swOrder/updateCustomerContext', {\n                customerId: this.customer.id,\n                salesChannelId: this.customer.salesChannelId,\n                contextToken: this.cart.token,\n            }).then((response) => {\n                if (response.status === 200) {\n                    this.getCart();\n                }\n            });\n        },\n\n        getCart() {\n            if (this.swOrderDetailOnLoadingChange) {\n                this.swOrderDetailOnLoadingChange(true);\n            }\n\n            this.$emit('loading-change', true);\n\n            State.dispatch('swOrder/getCart', {\n                salesChannelId: this.customer.salesChannelId,\n                contextToken: this.cart.token,\n            }).finally(() => {\n                if (this.swOrderDetailOnLoadingChange) {\n                    this.swOrderDetailOnLoadingChange(false);\n                }\n\n                this.$emit('loading-change', false);\n            });\n        },\n\n        getCurrency() {\n            return this.currencyRepository.get(this.context.currencyId).then((currency) => {\n                State.commit('swOrder/setCurrency', currency);\n            });\n        },\n    },\n};\n"],"names":["template","State","Service","Criteria","index","context","salesChannelId","criteria","key","response","currency"],"mappings":"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"}