const a='{% block sw_order_create_create_initial %} <div class="sw-order-create-initial"> <sw-order-create-initial-modal @modal-close="onCloseCreateModal" @order-preview="onPreviewOrder" /> </div> {% endblock %}',{State:s,Data:i,Service:r}=Cicada,{Criteria:d}=i,n={template:a,compatConfig:Cicada.compatConfig,inject:["feature"],computed:{customerRepository(){return r("repositoryFactory").create("customer")},customerCriteria(){const t=new d(1,25);return t.addAssociation("addresses").addAssociation("group").addAssociation("salutation").addAssociation("salesChannel").addAssociation("lastPaymentMethod").addAssociation("defaultBillingAddress.country").addAssociation("defaultBillingAddress.countryState").addAssociation("defaultBillingAddress.salutation").addAssociation("defaultShippingAddress.country").addAssociation("defaultShippingAddress.countryState").addAssociation("defaultShippingAddress.salutation").addAssociation("tags"),t}},created(){this.createdComponent()},methods:{async createdComponent(){var o;const t=(o=this.$route.query)==null?void 0:o.customerId;if(!t)return;const e=await this.customerRepository.get(t,Cicada.Context.api,this.customerCriteria);e&&s.commit("swOrder/setCustomer",e)},onCloseCreateModal(){this.$nextTick(()=>{this.$router.push({name:"sw.order.index"})})},onPreviewOrder(){this.$nextTick(()=>{this.$router.push({name:"sw.order.create.general"})})}}};export{n as default};
//# sourceMappingURL=index-BZSbHDDI.js.map
