{"version":3,"file":"index-OrGKORyY.js","sources":["../../../app/administration/src/module/sw-settings-custom-field/component/sw-custom-field-set-detail-base/sw-custom-field-set-detail-base.html.twig","../../../app/administration/src/module/sw-settings-custom-field/component/sw-custom-field-set-detail-base/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_custom_field_set_detail_base %}\n<sw-card\n    class=\"sw-settings-custom-field-set-detail-base\"\n    position-identifier=\"sw-custom-field-detail-base\"\n    :title=\"$tc('sw-settings-custom-field.set.detail.titleCardInformation')\"\n>\n    <!-- eslint-disable sw-deprecation-rules/no-twigjs-blocks,vue/attributes-order -->\n    {% block sw_settings_custom_field_set_detail_base_technical_name %}\n    <sw-text-field\n        v-model:value=\"set.name\"\n        name=\"sw-field--set-name\"\n        class=\"sw-settings-custom-field-set-detail-base__technical-name\"\n        :label=\"$tc(`sw-settings-custom-field.set.detail.labelTechnicalName`)\"\n        :help-text=\"$tc('sw-settings-custom-field.general.tooltipTechnicalName')\"\n        :disabled=\"!set._isNew || !acl.can('custom_field.editor') || undefined\"\n        :error=\"technicalNameError\"\n        required\n        @update:value=\"onTechnicalNameChange\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable sw-deprecation-rules/no-twigjs-blocks, vue/attributes-order -->\n    {% block sw_settings_custom_field_set_detail_base_position %}\n    <sw-number-field\n        v-model:value=\"set.position\"\n        name=\"sw-field--set-position\"\n        class=\"sw-settings-custom-field-set-detail-base__base-postion\"\n        :disabled=\"!acl.can('custom_field.editor') || undefined\"\n        :label=\"$tc(`sw-settings-custom-field.set.detail.labelPosition`)\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_custom_field_set_detail_base_translated %}\n    <sw-switch-field\n        v-if=\"set.config\"\n        v-model:value=\"set.config.translated\"\n        name=\"sw-field--set-config-translated\"\n        class=\"sw-settings-custom-field-set-detail-base__base-translation\"\n        :disabled=\"!acl.can('custom_field.editor') || undefined\"\n        :label=\"$tc('sw-settings-custom-field.set.detail.labelCheckboxTranslated')\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_custom_field_set_detail_base_labels %}\n    <sw-custom-field-translated-labels\n        v-if=\"set.config\"\n        v-model:config=\"set.config\"\n        :disabled=\"!acl.can('custom_field.editor') || undefined\"\n        :property-names=\"propertyNames\"\n        :locales=\"locales\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_custom_field_set_detail_base_multi_select %}\n    <sw-multi-select\n        id=\"entities\"\n        class=\"sw-settings-custom-field-set-detail-base__label-entities\"\n        :disabled=\"!acl.can('custom_field.editor') || undefined\"\n        :label=\"$tc('sw-settings-custom-field.set.detail.labelEntities')\"\n        :options=\"relationEntityNames\"\n        value-property=\"entityName\"\n        label-property=\"entityName\"\n        :value=\"selectedRelationEntityNames\"\n        :search-function=\"searchRelationEntityNames\"\n        @item-add=\"onAddRelation\"\n        @item-remove=\"onRemoveRelation\"\n    >\n        <template #result-label-property=\"{ item }\">\n            {{ $tc(`global.entities.${item.entityName}`, 2) }}\n        </template>\n\n        <template #selection-label-property=\"{ item }\">\n            {{ $tc(`global.entities.${item.entityName}`, 2) }}\n        </template>\n\n    </sw-multi-select>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_custom_field_set_detail_base_entities %}\n    {% endblock %}\n</sw-card>\n{% endblock %}\n","/**\n * @package services-settings\n */\nimport template from './sw-custom-field-set-detail-base.html.twig';\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'customFieldDataProviderService',\n        'acl',\n    ],\n\n    emits: ['reset-errors'],\n\n    props: {\n        set: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            },\n        },\n        technicalNameError: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            propertyNames: {\n                label: this.$tc('sw-settings-custom-field.customField.detail.labelLabel'),\n            },\n        };\n    },\n\n    computed: {\n        locales() {\n            if (this.set.config.translated && this.set.config.translated === true) {\n                return Object.keys(this.$root.$i18n.messages);\n            }\n\n            return [this.$root.$i18n.fallbackLocale];\n        },\n\n        customFieldSetRelationRepository() {\n            if (!this.set.relations) {\n                return undefined;\n            }\n\n            return Cicada.Service('repositoryFactory').create(this.set.relations.entity, this.set.relations.source);\n        },\n\n        selectedRelationEntityNames() {\n            if (!this.set.relations) {\n                return [];\n            }\n\n            return this.set.relations.map((relation) => relation.entityName);\n        },\n\n        relationEntityNames() {\n            if (!this.set.relations) {\n                return [];\n            }\n\n            const entityNames = this.customFieldDataProviderService.getEntityNames();\n\n            return entityNames.map((entityName) => {\n                const relation = this.customFieldSetRelationRepository.create();\n                relation.entityName = entityName;\n\n                if (this.isCompatEnabled('INSTANCE_SET')) {\n                    this.$set(relation, 'searchField', {});\n                } else {\n                    relation.searchField = {};\n                }\n\n                Object.keys(this.$root.$i18n.messages).forEach((locale) => {\n                    if (!this.$te(`global.entities.${entityName}`)) {\n                        return;\n                    }\n\n                    if (this.isCompatEnabled('INSTANCE_SET')) {\n                        this.$set(relation.searchField, locale, this.$tc(`global.entities.${entityName}`, 2, locale));\n                    } else {\n                        relation.searchField[locale] = this.$tc(`global.entities.${entityName}`, 2, locale);\n                    }\n                });\n\n                return relation;\n            });\n        },\n    },\n\n    methods: {\n        onAddRelation(relation) {\n            this.set.relations.push(relation);\n        },\n\n        onRemoveRelation(relationToRemove) {\n            const matchingRelation = this.set.relations.find((relation) => {\n                return relation.entityName === relationToRemove.entityName;\n            });\n\n            if (!matchingRelation) {\n                return;\n            }\n\n            this.set.relations.remove(matchingRelation.id);\n        },\n\n        searchRelationEntityNames({ options, searchTerm }) {\n            const lowerSearchTerm = searchTerm.toLowerCase();\n\n            return options.filter((option) => {\n                return Object.values(option.searchField).some((label) => {\n                    return label.toLowerCase().includes(lowerSearchTerm);\n                });\n            });\n        },\n\n        onTechnicalNameChange() {\n            this.$emit('reset-errors');\n        },\n    },\n};\n"],"names":["template","index","relation","entityName","locale","relationToRemove","matchingRelation","options","searchTerm","lowerSearchTerm","option","label"],"mappings":"AAAA,MAAeA,EAAA,skFCMAC,EAAA,CACX,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,iCACA,KACH,EAED,MAAO,CAAC,cAAc,EAEtB,MAAO,CACH,IAAK,CACD,KAAM,OACN,SAAU,GACV,SAAU,CACN,MAAO,EACV,CACJ,EACD,mBAAoB,CAChB,KAAM,OACN,SAAU,GACV,QAAS,IACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,cAAe,CACX,MAAO,KAAK,IAAI,wDAAwD,CAC3E,CACb,CACK,EAED,SAAU,CACN,SAAU,CACN,OAAI,KAAK,IAAI,OAAO,YAAc,KAAK,IAAI,OAAO,aAAe,GACtD,OAAO,KAAK,KAAK,MAAM,MAAM,QAAQ,EAGzC,CAAC,KAAK,MAAM,MAAM,cAAc,CAC1C,EAED,kCAAmC,CAC/B,GAAK,KAAK,IAAI,UAId,OAAO,OAAO,QAAQ,mBAAmB,EAAE,OAAO,KAAK,IAAI,UAAU,OAAQ,KAAK,IAAI,UAAU,MAAM,CACzG,EAED,6BAA8B,CAC1B,OAAK,KAAK,IAAI,UAIP,KAAK,IAAI,UAAU,IAAKE,GAAaA,EAAS,UAAU,EAHpD,EAId,EAED,qBAAsB,CAClB,OAAK,KAAK,IAAI,UAIM,KAAK,+BAA+B,eAAc,EAEnD,IAAKC,GAAe,CACnC,MAAMD,EAAW,KAAK,iCAAiC,OAAM,EAC7D,OAAAA,EAAS,WAAaC,EAElB,KAAK,gBAAgB,cAAc,EACnC,KAAK,KAAKD,EAAU,cAAe,CAAE,CAAA,EAErCA,EAAS,YAAc,GAG3B,OAAO,KAAK,KAAK,MAAM,MAAM,QAAQ,EAAE,QAASE,GAAW,CAClD,KAAK,IAAI,mBAAmBD,CAAU,EAAE,IAIzC,KAAK,gBAAgB,cAAc,EACnC,KAAK,KAAKD,EAAS,YAAaE,EAAQ,KAAK,IAAI,mBAAmBD,CAAU,GAAI,EAAGC,CAAM,CAAC,EAE5FF,EAAS,YAAYE,CAAM,EAAI,KAAK,IAAI,mBAAmBD,CAAU,GAAI,EAAGC,CAAM,EAE1G,CAAiB,EAEMF,CACvB,CAAa,EA5BU,EA6Bd,CACJ,EAED,QAAS,CACL,cAAcA,EAAU,CACpB,KAAK,IAAI,UAAU,KAAKA,CAAQ,CACnC,EAED,iBAAiBG,EAAkB,CAC/B,MAAMC,EAAmB,KAAK,IAAI,UAAU,KAAMJ,GACvCA,EAAS,aAAeG,EAAiB,UACnD,EAEIC,GAIL,KAAK,IAAI,UAAU,OAAOA,EAAiB,EAAE,CAChD,EAED,0BAA0B,CAAE,QAAAC,EAAS,WAAAC,GAAc,CAC/C,MAAMC,EAAkBD,EAAW,cAEnC,OAAOD,EAAQ,OAAQG,GACZ,OAAO,OAAOA,EAAO,WAAW,EAAE,KAAMC,GACpCA,EAAM,YAAW,EAAG,SAASF,CAAe,CACtD,CACJ,CACJ,EAED,uBAAwB,CACpB,KAAK,MAAM,cAAc,CAC5B,CACJ,CACL"}