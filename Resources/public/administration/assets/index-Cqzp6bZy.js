const l=`{% block sw_import_export_edit_profile_modal_mapping %} <div class="sw-import-export-edit-profile-modal-mapping"> {% block sw_import_export_edit_profile_modal_mapping_toolbar %} <div class="sw-import-export-edit-profile-modal-mapping__toolbar"> {% block sw_import_export_edit_profile_modal_mapping_toolbar_search_field %} <sw-simple-search-field v-model:value="searchTerm" size="small" variant="form" :disabled="!mappingsExist" @search-term-change="onSearch" /> {% endblock %} {% block sw_import_export_edit_profile_modal_mapping_toolbar_add_mapping %} <sw-button v-tooltip="{ message: $tc('sw-import-export.profile.addMappingTooltipText'), disabled: addMappingEnabled, showOnDisabledElements: true }" class="sw-import-export-edit-profile-modal-mapping__add-action" variant="ghost" :disabled="profile.systemDefault || !addMappingEnabled" size="small" @click="onAddMapping" > {{ $tc('sw-import-export.profile.addMappingLabel') }} </sw-button> {% endblock %} </div> {% endblock %} {% block sw_import_export_edit_profile_modal_mapping_grid %} <sw-data-grid v-if="mappingsExist" :data-source="sortedMappings" :compact-mode="false" :show-selection="false" :show-actions="!profile.systemDefault" :columns="mappingColumns" plain-appearance class="sw-import-export-edit-profile-modal-mapping__grid" > {% block sw_import_export_edit_profile_modal_mapping_grid_csv_name_column %} <template #column-csvName="{ item, itemIndex }"> <sw-text-field v-model:value="item.mappedKey" :name="\`mappedKey-\${itemIndex}\`" :disabled="profile.systemDefault" /> </template> {% endblock %} {% block sw_import_export_edit_profile_modal_mapping_grid_entry_column %} <template #column-entry="{ item }"> <sw-import-export-entity-path-select v-model:value="item.key" :languages="languages" :currencies="currencies" :entity-type="profile.sourceEntity" :disabled="profile.systemDefault" :custom-field-sets="customFieldSets" /> </template> {% endblock %} {% block sw_import_export_edit_profile_modal_mapping_grid_required_column %} <template #column-required="{ item }"> <sw-switch-field v-show="isRequiredBySystem(item)" class="sw-import-export-edit-profile-modal-mapping__required-by-user-switch" :value="true" :disabled="true" /> <sw-switch-field v-show="!isRequiredBySystem(item)" v-model:value="item.requiredByUser" class="sw-import-export-edit-profile-modal-mapping__required-by-user-switch" :disabled="profile.systemDefault" /> </template> {% endblock %} {% block sw_import_export_edit_profile_modal_mapping_grid_default_value_column %} <template #column-defaultValue="{ item, itemIndex }"> <sw-switch-field v-model:value="item.useDefaultValue" :name="\`useDefaultValue-\${itemIndex}\`" :disabled="isDefaultValueCheckboxDisabled()" class="sw-import-export-edit-profile-modal-mapping__default-value-switch" /> <sw-text-field v-model:value="item.defaultValue" :name="\`defaultValue-\${itemIndex}\`" :disabled="isDefaultValueTextFieldDisabled(item)" /> </template> {% endblock %} {% block sw_import_export_edit_profile_modal_mapping_grid_position_column %} <template #column-position="{ item, itemIndex }"> {% block sw_import_export_edit_profile_modal_mapping_grid_position_column_button_group %} <sw-button-group> {% block sw_import_export_edit_profile_modal_mapping_grid_position_column_button_group_up %} <sw-button size="x-small" square :disabled="isFirstMapping(item) || !!searchTerm" @click="updateSorting(itemIndex, 'up')" > {% block sw_import_export_edit_profile_modal_mapping_grid_position_column_button_group_up_icon %} <sw-icon name="regular-chevron-up-xxs" size="14px" /> {% endblock %} </sw-button> {% endblock %} {% block sw_import_export_edit_profile_modal_mapping_grid_position_column_button_group_down %} <sw-button size="x-small" square :disabled="isLastMapping(item) || !!searchTerm" @click="updateSorting(itemIndex, 'down')" > {% block sw_import_export_edit_profile_modal_mapping_grid_position_column_button_group_down_icon %} <sw-icon name="regular-chevron-down-xxs" size="14px" /> {% endblock %} </sw-button> {% endblock %} </sw-button-group> {% endblock %} </template> {% endblock %} {% block sw_import_export_edit_profile_modal_mapping_grid_context_menu_delete %} <template #actions="{ item }"> <sw-context-menu-item variant="danger" :disabled="profile.systemDefault" @click="onDeleteMapping(item.id)" > {{ $tc('sw-import-export.profile.deleteMappingLabel') }} </sw-context-menu-item> </template> {% endblock %} </sw-data-grid> {% endblock %} {% block sw_import_export_edit_profile_modal_mapping_empty_state %} <sw-empty-state v-else class="sw-import-export-edit-profile-modal-mapping__empty-state" :title="$tc('sw-import-export.profile.mappingEmptyState')" :absolute="false" /> {% endblock %} </div> {% endblock %}`,{debounce:n,createId:s,object:{cloneDeep:d}}=Cicada.Utils,a=Cicada.Data.Criteria,m={template:l,compatConfig:Cicada.compatConfig,inject:["repositoryFactory","feature"],emits:["update-mapping"],mixins:[Cicada.Mixin.getByName("notification")],props:{profile:{type:Object,required:!1,default:null},systemRequiredFields:{type:Object,required:!1,default(){return{}}}},data(){return{searchTerm:null,mappings:[],currencies:[],languages:[],customFieldSets:[],addMappingEnabled:!1}},computed:{languageRepository(){return this.repositoryFactory.create("language")},currencyRepository(){return this.repositoryFactory.create("currency")},customFieldSetRepository(){return this.repositoryFactory.create("custom_field_set")},languageCriteria(){const e=new a(1,500);return e.addAssociation("locale"),e},currencyCriteria(){return new a(1,500)},customFieldSetCriteria(){const e=new a(1,500);return e.addAssociation("relations"),e.addAssociation("customFields"),e},mappingColumns(){let e=[{property:"csvName",label:"sw-import-export.profile.mapping.fileValueLabel",allowResize:!0,primary:!0},{property:"entry",label:"sw-import-export.profile.mapping.entityLabel",allowResize:!0,width:"300px"}];return this.profile.type!=="export"&&(e=[...e,{property:"required",label:"sw-import-export.profile.mapping.isRequired",allowResize:!0,align:"center"},{property:"defaultValue",label:"sw-import-export.profile.mapping.defaultValue",allowResize:!0,width:"300px"}]),this.profile.systemDefault||(e=[...e,{property:"position",label:"sw-import-export.profile.mapping.position",allowResize:!1,align:"center"}]),e},mappingsExist(){return this.profile.mapping.length>0},sortedMappings(){return this.profile.mapping.sort((t,i)=>t.position>i.position?1:t.position<i.position?-1:0)}},watch:{profile:{handler(e){this.toggleAddMappingActionState(e.sourceEntity)},deep:!0}},created(){this.createdComponent()},methods:{createdComponent(){this.toggleAddMappingActionState(this.profile.sourceEntity),this.languageRepository.search(this.languageCriteria).then(e=>{this.languages=e,this.languages.push({locale:{code:"DEFAULT"}})}),this.currencyRepository.search(this.currencyCriteria).then(e=>{this.currencies=e,this.currencies.push({isoCode:"DEFAULT"})}),this.customFieldSetRepository.search(this.customFieldSetCriteria).then(e=>{this.customFieldSets=e}),this.loadMappings()},toggleAddMappingActionState(e){this.addMappingEnabled=!!e},onDeleteMapping(e){this.profile.mapping=this.profile.mapping.filter(t=>t.id!==e),this.loadMappings()},loadMappings(){if(this.searchTerm){const e=this.searchTerm.toLowerCase();this.mappings=this.profile.mapping.filter(t=>{const i=t.key.toLowerCase(),o=t.mappedKey.toLowerCase();return!!(i.includes(e)||o.includes(e))});return}this.mappings=[],this.profile.mapping.forEach(e=>{e.id||(e.id=s()),this.mappings.push(e)})},onAddMapping(){this.profile.sourceEntity&&(this.profile.mapping.forEach(e=>{e.position+=1}),this.profile.mapping.unshift({id:s(),key:"",mappedKey:"",position:0}),this.loadMappings())},onSearch(){this.debouncedSearch()},debouncedSearch:n(function(){this.loadMappings()},100),isDefaultValueCheckboxDisabled(){return this.profile.systemDefault},isDefaultValueTextFieldDisabled(e){return this.profile.systemDefault||!e.useDefaultValue},isRequiredBySystem(e){return!e||!e.key?!1:this.systemRequiredFields[e.key]!==void 0},updateSorting(e,t){const i=d(this.sortedMappings),o=i[e];if(t==="up"&&e>0){const p=i[e-1];this.swapItems(p,o),this.$emit("update-mapping",i);return}const r=i.length;if(t==="down"&&r-1){const p=i[e+1];this.swapItems(o,p),this.$emit("update-mapping",i)}},swapItems(e,t){const i=e.position;e.position=t.position,t.position=i},isFirstMapping(e){return e.position===0},isLastMapping(e){const t=this.profile.mapping.length-1;return e.position===t}}};export{m as default};
//# sourceMappingURL=index-Cqzp6bZy.js.map
