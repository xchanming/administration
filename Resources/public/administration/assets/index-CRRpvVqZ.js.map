{"version":3,"file":"index-CRRpvVqZ.js","sources":["../../../app/administration/src/module/sw-product/component/sw-product-variants/sw-product-variants-configurator/sw-product-variants-configurator-prices/sw-product-variants-configurator-prices.html.twig","../../../app/administration/src/module/sw-product/component/sw-product-variants/sw-product-variants-configurator/sw-product-variants-configurator-prices/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_product_variants_configurator_prices %}\n<div class=\"sw-product-variants-configurator-prices\">\n    <sw-alert\n        class=\"sw-product-variants-configurator-prices__alert\"\n        variant=\"info\"\n    >\n        {{ $tc('sw-product.variations.configuratorModal.surchargeNotice') }}\n    </sw-alert>\n    <div class=\"sw-product-variants-configurator-prices__table\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_configurator_prices_groups %}\n        <div class=\"sw-product-variants-configurator-prices__groups\">\n            <ul>\n                <li\n                    v-for=\"group in selectedGroups\"\n                    :key=\"group.id\"\n                    class=\"sw-product-variants-configurator-prices__groupElement\"\n                    :class=\"{'is--selected': activeGroup.id == group.id}\"\n                    role=\"button\"\n                    tabindex=\"0\"\n                    @click=\"activeGroup = group\"\n                    @keydown.enter=\"activeGroup = group\"\n                >\n                    <sw-icon\n                        name=\"regular-folder\"\n                        size=\"16px\"\n                    />\n                    {{ group.translated.name }}\n                </li>\n            </ul>\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_configurator_prices_prices %}\n        <div class=\"sw-product-variants-configurator-prices__prices\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_configurator_prices_search %}\n            <div class=\"sw-product-variants-configurator-prices__search\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variants_configurator_prices_search_field %}\n                <sw-simple-search-field\n                    v-model:value=\"term\"\n                    size=\"small\"\n                    variant=\"form\"\n                    :placeholder=\"$tc('sw-product.variations.configuratorModal.searchPlaceholder')\"\n                />\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_configurator_prices_grid_wrapper %}\n            <div class=\"sw-product-variants-configurator-prices__grid-wrapper\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variants_configurator_prices_data_grid %}\n                <sw-data-grid\n                    v-if=\"optionsForGroup.length\"\n                    :data-source=\"optionsForGroup\"\n                    :show-selection=\"false\"\n                    :columns=\"optionColumns\"\n                    show-settings\n                    full-page\n                >\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_variants_configurator_prices_column_name %}\n                    <template\n                        #column-name=\"{ item, isInlineEdit, compact }\"\n                    >\n                        {{ item.option.translated.name }}\n                    </template>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_variants_configurator_prices_column_currency %}\n                    <template\n                        v-for=\"currency in currenciesList\"\n                        :key=\"currency.id\"\n                        #[`column-currency.${currency.id}`]=\"{ item, isInlineEdit, compact }\"\n                    >\n\n                        <sw-product-variants-price-field\n                            :price=\"getCurrencyOfOption(item, currency.id)\"\n                            :tax-rate=\"product.taxId\"\n                            :currency=\"currency\"\n                            compact\n                        />\n                    </template>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_variants_configurator_prices_actions %}\n                    <template\n                        #actions=\"{ item }\"\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_product_variants_configurator_prices_actions_items %}\n                        <sw-context-menu-item\n                            variant=\"danger\"\n                            @click=\"resetSurcharges(item, true)\"\n                        >\n                            {{ $tc('sw-product.variations.configuratorModal.resetSurcharges') }}\n                        </sw-context-menu-item>\n                        {% endblock %}\n                    </template>\n                    {% endblock %}\n                </sw-data-grid>\n                {% endblock %}\n            </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </div>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variants_configurator_prices_loader %}\n    <sw-loader v-if=\"isLoading\" />\n    {% endblock %}\n\n</div>\n{% endblock %}\n","/*\n * @package inventory\n */\n\nimport template from './sw-product-variants-configurator-prices.html.twig';\nimport './sw-product-variants-configurator-prices.scss';\n\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['repositoryFactory'],\n\n    props: {\n        product: {\n            type: Object,\n            required: true,\n        },\n\n        selectedGroups: {\n            type: Array,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            activeGroup: {},\n            term: '',\n            optionsForGroup: [],\n            currencies: {},\n            isLoading: true,\n        };\n    },\n\n    computed: {\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n\n        currenciesList() {\n            return this.currencies.map((currency) => {\n                return {\n                    id: currency.id,\n                    name: currency.name,\n                    symbol: currency.symbol,\n                };\n            });\n        },\n\n        optionColumns() {\n            const defaultColumns = [\n                {\n                    property: 'name',\n                    label: this.$tc('sw-product.variations.configuratorModal.priceOptions'),\n                    rawData: true,\n                },\n            ];\n\n            const currenciesColumns = this.currenciesList.map((currency) => {\n                return {\n                    property: `currency.${currency.id}`,\n                    label: currency.name,\n                    rawData: true,\n                    allowResize: true,\n                    width: '200px',\n                };\n            });\n\n            return [\n                ...defaultColumns,\n                ...currenciesColumns,\n            ];\n        },\n    },\n\n    watch: {\n        activeGroup() {\n            this.getOptionsForGroup();\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        onSearchTermChange() {\n            this.getOptionsForGroup();\n        },\n        mountedComponent() {\n            this.isLoading = false;\n            this.loadCurrencies();\n        },\n\n        loadCurrencies() {\n            this.currencyRepository.search(new Criteria(1, 25)).then((searchResult) => {\n                this.currencies = searchResult;\n            });\n        },\n\n        getOptionsForGroup() {\n            this.optionsForGroup = this.product.configuratorSettings\n                // Filter if option is in active group\n                .filter((element) => {\n                    if (element.option.groupId === this.activeGroup.id) {\n                        this.resetSurcharges(element);\n                        return true;\n                    }\n                    return false;\n                })\n                // Filter if search term matches option name\n                .filter((element) => element.option.translated.name.toLowerCase().includes(this.term.toLowerCase()));\n        },\n\n        resetSurcharges(option, force = false) {\n            // check if surcharge exists\n            if (Array.isArray(option.price) && option.price && option.price.length > 0 && !force) {\n                return;\n            }\n\n            // set empty surcharge\n            if (this.isCompatEnabled('INSTANCE_SET')) {\n                this.$set(option, 'price', []);\n            } else {\n                option.price = [];\n            }\n            this.currenciesList.forEach((currency) => {\n                if (!option.price.find((price) => price.currencyId === currency.id)) {\n                    const newPriceForCurrency = {\n                        currencyId: currency.id,\n                        gross: 0,\n                        linked: true,\n                        net: 0,\n                    };\n                    option.price.push(newPriceForCurrency);\n                }\n            });\n        },\n\n        getCurrencyOfOption(option, currencyId) {\n            return option.price.find((currency) => currency.currencyId === currencyId);\n        },\n    },\n};\n"],"names":["template","Criteria","index","currency","defaultColumns","currenciesColumns","searchResult","element","option","force","price","newPriceForCurrency","currencyId"],"mappings":"AAAA,MAAeA,EAAA,2vFCOT,CAAE,SAAAC,CAAQ,EAAK,OAAO,KAGbC,EAAA,CACX,SAAAF,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,mBAAmB,EAE5B,MAAO,CACH,QAAS,CACL,KAAM,OACN,SAAU,EACb,EAED,eAAgB,CACZ,KAAM,MACN,SAAU,EACb,CACJ,EAED,MAAO,CACH,MAAO,CACH,YAAa,CAAE,EACf,KAAM,GACN,gBAAiB,CAAE,EACnB,WAAY,CAAE,EACd,UAAW,EACvB,CACK,EAED,SAAU,CACN,oBAAqB,CACjB,OAAO,KAAK,kBAAkB,OAAO,UAAU,CAClD,EAED,gBAAiB,CACb,OAAO,KAAK,WAAW,IAAKG,IACjB,CACH,GAAIA,EAAS,GACb,KAAMA,EAAS,KACf,OAAQA,EAAS,MACrC,EACa,CACJ,EAED,eAAgB,CACZ,MAAMC,EAAiB,CACnB,CACI,SAAU,OACV,MAAO,KAAK,IAAI,sDAAsD,EACtE,QAAS,EACZ,CACjB,EAEkBC,EAAoB,KAAK,eAAe,IAAKF,IACxC,CACH,SAAU,YAAYA,EAAS,EAAE,GACjC,MAAOA,EAAS,KAChB,QAAS,GACT,YAAa,GACb,MAAO,OAC3B,EACa,EAED,MAAO,CACH,GAAGC,EACH,GAAGC,CACnB,CACS,CACJ,EAED,MAAO,CACH,aAAc,CACV,KAAK,mBAAkB,CAC1B,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,oBAAqB,CACjB,KAAK,mBAAkB,CAC1B,EACD,kBAAmB,CACf,KAAK,UAAY,GACjB,KAAK,eAAc,CACtB,EAED,gBAAiB,CACb,KAAK,mBAAmB,OAAO,IAAIJ,EAAS,EAAG,EAAE,CAAC,EAAE,KAAMK,GAAiB,CACvE,KAAK,WAAaA,CAClC,CAAa,CACJ,EAED,oBAAqB,CACjB,KAAK,gBAAkB,KAAK,QAAQ,qBAE/B,OAAQC,GACDA,EAAQ,OAAO,UAAY,KAAK,YAAY,IAC5C,KAAK,gBAAgBA,CAAO,EACrB,IAEJ,EACV,EAEA,OAAQA,GAAYA,EAAQ,OAAO,WAAW,KAAK,YAAa,EAAC,SAAS,KAAK,KAAK,YAAW,CAAE,CAAC,CAC1G,EAED,gBAAgBC,EAAQC,EAAQ,GAAO,CAE/B,MAAM,QAAQD,EAAO,KAAK,GAAKA,EAAO,OAASA,EAAO,MAAM,OAAS,GAAK,CAACC,IAK3E,KAAK,gBAAgB,cAAc,EACnC,KAAK,KAAKD,EAAQ,QAAS,CAAE,CAAA,EAE7BA,EAAO,MAAQ,GAEnB,KAAK,eAAe,QAASL,GAAa,CACtC,GAAI,CAACK,EAAO,MAAM,KAAME,GAAUA,EAAM,aAAeP,EAAS,EAAE,EAAG,CACjE,MAAMQ,EAAsB,CACxB,WAAYR,EAAS,GACrB,MAAO,EACP,OAAQ,GACR,IAAK,CAC7B,EACoBK,EAAO,MAAM,KAAKG,CAAmB,CACxC,CACjB,CAAa,EACJ,EAED,oBAAoBH,EAAQI,EAAY,CACpC,OAAOJ,EAAO,MAAM,KAAML,GAAaA,EAAS,aAAeS,CAAU,CAC5E,CACJ,CACL"}