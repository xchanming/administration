const r=`{% block sw_flow_create_mail_template_modal %} <sw-modal class="sw-flow-create-mail-template-modal" :title="$tc('sw-flow.modals.mail.titleNewEmailTemplate')" :closable="false" @modal-close="onClose" > {% block sw_flow_create_mail_template_modal_content %} {% block sw_flow_create_mail_template_modal_type_selection %} <sw-entity-single-select v-model:value="mailTemplate.mailTemplateTypeId" name="sw-field--mailTemplate-mailTemplateTypeId" class="sw-flow-create-mail-template-modal__type" entity="mail_template_type" required :label="$tc('sw-flow.modals.mail.labelMailType')" :placeholder="$tc('sw-flow.modals.mail.placeholderMailType')" :error="mailTemplateMailTemplateTypeIdError" @update:value="onChangeType" /> {% endblock %} {% block sw_flow_create_mail_template_modal_info %} <sw-container columns="1fr 1fr" gap="30px" > {% block sw_flow_create_mail_template_modal_subject %} <sw-text-field v-model:value="mailTemplate.subject" name="sw-field--mailTemplate-subject" class="sw-flow-create-mail-template-modal__subject" required :label="$tc('sw-flow.modals.mail.labelSubject')" :placeholder="$tc('sw-flow.modals.mail.placeholderSubject')" :error="mailTemplateSubjectError" /> {% endblock %} {% block sw_flow_create_mail_template_modal_sender_name %} <sw-text-field v-model:value="mailTemplate.senderName" name="sw-field--mailTemplate-senderName" class="sw-flow-create-mail-template-modal__sender-name" :label="$tc('sw-flow.modals.mail.labelSenderName')" :placeholder="$tc('sw-flow.modals.mail.placeholderSenderName')" /> {% endblock %} </sw-container> {% endblock %} {% block sw_flow_create_mail_template_modal_description %} <sw-textarea-field v-model:value="mailTemplate.description" name="sw-field--mailTemplate-description" class="sw-flow-create-mail-template-modal__description" :label="$tc('sw-flow.modals.mail.labelDescription')" :placeholder="$tc('sw-flow.modals.mail.placeholderDescription')" /> {% endblock %} {% block sw_flow_create_mail_template_modal_plain_content %} <sw-code-editor ref="plainEditor" :key="\`\${mailTemplate.mailTemplateTypeId}plain\`" v-model:value="mailTemplate.contentPlain" class="sw-flow-create-mail-template-modal__content-plain" name="content_plain" completion-mode="entity" :label="$tc('sw-flow.modals.mail.labelContentPlain')" :placeholder="placeholder(mailTemplate, 'contentPlain', $tc('sw-flow.modals.mail.placeholderPlain'))" :completer-function="outerCompleterFunction" :editor-config="editorConfig" :error="mailTemplateContentPlainError" required /> {% endblock %} {% block sw_flow_create_mail_template_modal_html_content %} <sw-code-editor ref="htmlEditor" :key="\`\${mailTemplate.mailTemplateTypeId}html\`" v-model:value="mailTemplate.contentHtml" class="sw-flow-create-mail-template-modal__content-html" name="content_html" completion-mode="entity" :label="$tc('sw-flow.modals.mail.labelContentHtml')" :placeholder="placeholder(mailTemplate, 'contentPlain', $tc('sw-flow.modals.mail.placeholderHtml'))" :completer-function="outerCompleterFunction" :editor-config="editorConfig" :error="mailTemplateContentHtmlError" required /> {% endblock %} {% endblock %} {% block sw_flow_create_mail_template_modal_footer %} <template #modal-footer> {% block sw_flow_create_mail_template_modal_footer_cancel_button %} <sw-button class="sw-flow-create-mail-template-modal__cancel-button" size="small" @click="onClose" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_flow_create_mail_template_modal_footer_save_button %} <sw-button class="sw-flow-create-mail-template-modal__save-button" variant="primary" size="small" :is-loading="isLoading" @click="onAddMailTemplate" > {{ $tc('sw-flow.modals.mail.buttonAddMailTemplate') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %}`,{Mixin:i}=Cicada,{Criteria:n}=Cicada.Data,{mapPropertyErrors:c}=Cicada.Component.getComponentHelper(),p=Cicada.Utils,d={template:r,compatConfig:Cicada.compatConfig,inject:["mailService","entityMappingService","repositoryFactory"],emits:["modal-close","process-finish"],mixins:[i.getByName("placeholder"),i.getByName("notification")],data(){return{mailTemplate:{},mailTemplateType:{},editorConfig:{enableBasicAutocompletion:!0},isLoading:!1}},computed:{mailTemplateRepository(){return this.repositoryFactory.create("mail_template")},mailTemplateTypeRepository(){return this.repositoryFactory.create("mail_template_type")},mailTemplateCriteria(){const e=new n(1,25);return e.addAssociation("mailTemplateType"),e},outerCompleterFunction(){return function(t,l){function a(m){const o=[];return Object.keys(t.getEntityMapping(m,l.availableEntities)).forEach(s=>{o.push({value:s})}),o}return a}(this.entityMappingService,this.mailTemplateType)},...c("mailTemplate",["contentHtml","contentPlain","mailTemplateTypeId","subject"])},created(){this.createdComponent()},methods:{createdComponent(){Cicada.State.getters["context/isSystemDefaultLanguage"]||Cicada.State.commit("context/resetLanguageToDefault"),this.mailTemplate=this.mailTemplateRepository.create(Cicada.Context.api,p.createId())},onClose(){this.$emit("modal-close")},onAddMailTemplate(){const e=this.mailTemplate.subject||this.placeholder(this.mailTemplate,"subject");return this.isSaveSuccessful=!1,this.isLoading=!0,this.mailTemplateRepository.save(this.mailTemplate).then(()=>{this.getMailTemplate()}).catch(t=>{let l="";if(this.isLoading=!1,t.response.data.errors.length>0){const a=t.response.data.errors[0].detail;l=`<br/> ${this.$tc("sw-mail-template.detail.textErrorMessage")}: "${a}"`}this.createNotificationError({message:this.$tc("sw-mail-template.detail.messageSaveError",0,{subject:e})+l})})},getMailTemplateType(){var e;return(e=this.mailTemplate)!=null&&e.mailTemplateTypeId?this.mailTemplateTypeRepository.get(this.mailTemplate.mailTemplateTypeId).then(t=>{this.mailTemplateType=t,this.$refs.htmlEditor.defineAutocompletion(this.outerCompleterFunction),this.$refs.plainEditor.defineAutocompletion(this.outerCompleterFunction)}):Promise.resolve()},async onChangeType(e){if(e)try{await this.getMailTemplateType()}catch(t){let l="";if(t.response.data.errors.length>0){const a=t.response.data.errors[0].detail;l=`<br/> ${this.$tc("sw-mail-template.detail.textErrorMessage")}: "${a}"`}this.createNotificationError({message:l})}},getMailTemplate(){return this.mailTemplateRepository.get(this.mailTemplate.id,Cicada.Context.api,this.mailTemplateCriteria).then(e=>{this.$emit("process-finish",e)}).catch(()=>{this.$emit("process-finish",null)}).finally(()=>{this.isLoading=!1,this.onClose()})}}};export{d as default};
//# sourceMappingURL=index-CfSXvBVN.js.map
