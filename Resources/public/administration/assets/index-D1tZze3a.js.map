{"version":3,"file":"index-D1tZze3a.js","sources":["../../../app/administration/src/app/component/form/select/base/sw-select-selection-list/sw-select-selection-list.html.twig","../../../app/administration/src/app/component/form/select/base/sw-select-selection-list/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_select_selection_list %}\n<ul class=\"sw-select-selection-list\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_select_selection_list_item %}\n    <template v-if=\"!hideLabels\">\n        <li\n            v-for=\"(selection, index) in selections\"\n            :key=\"selection[valueProperty]\"\n            class=\"sw-select-selection-list__item-holder\"\n            :class=\"'sw-select-selection-list__item-holder--' + index\"\n            :data-id=\"selection[valueProperty]\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_select_selection_list_item_inner %}\n            <slot\n                name=\"selected-option\"\n                v-bind=\"{ selection, defaultLabel: selection[labelProperty], disabled }\"\n            >\n                <sw-label\n                    :dismissable=\"!isSelectionDisabled(selection)\"\n                    :size=\"size\"\n                    @dismiss=\"onClickDismiss(selection)\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_select_selection_list_item_text %}\n                    <span class=\"sw-select-selection-list__item\">\n                        <slot\n                            name=\"label-property\"\n                            v-bind=\"{ item: selection, index, labelProperty, valueProperty }\"\n                        >\n                            {{ selection[labelProperty] }}\n                        </slot>\n                    </span>\n                {% endblock %}\n                </sw-label>\n            </slot>\n        {% endblock %}\n        </li>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_select_selection_list_load_more %}\n    <li\n        v-if=\"invisibleCount > 0 && !hideLabels\"\n        class=\"sw-select-selection-list__load-more\"\n    >\n        <slot\n            name=\"invisible-count\"\n            v-bind=\"{ invisibleCount, onClickInvisibleCount }\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_select_selection_list_load_more_item_button %}\n            <sw-button\n                class=\"sw-select-selection-list__load-more-button\"\n                @click.stop=\"onClickInvisibleCount\"\n            >\n                +{{ invisibleCount }}\n            </sw-button>\n            {% endblock %}\n        </slot>\n    </li>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_select_selection_list_input %}\n    <li class=\"sw-select-selection-list__input-wrapper\">\n        <slot\n            name=\"input\"\n            v-bind=\"{ placeholder, searchTerm, onSearchTermChange, onKeyDownDelete }\"\n        >\n            <!-- eslint-disable-next-line vuejs-accessibility/role-has-required-aria-props -->\n            <input\n                ref=\"swSelectInput\"\n                class=\"sw-select-selection-list__input\"\n                type=\"text\"\n                role=\"combobox\"\n                :disabled=\"disabled\"\n                :readonly=\"!enableSearch\"\n                :placeholder=\"showPlaceholder\"\n                :value=\"searchTerm\"\n                :aria-label=\"inputLabel\"\n                @input=\"onSearchTermChange\"\n                @keydown.delete=\"onKeyDownDelete\"\n                @keydown.enter=\"onKeyDownEnter\"\n            >\n        </slot>\n    </li>\n    {% endblock %}\n</ul>\n{% endblock %}\n","import template from './sw-select-selection-list.html.twig';\nimport './sw-select-selection-list.scss';\n\nconst { Component } = Cicada;\n\n/**\n * @package admin\n *\n * @private\n * @status ready\n * @description Base component for rendering selection lists.\n * @example-type code-only\n */\nComponent.register('sw-select-selection-list', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['feature'],\n\n    emits: [\n        'total-count-click',\n        'search-term-change',\n        'last-item-delete',\n        'key-down-enter',\n        'item-remove',\n    ],\n\n    props: {\n        selections: {\n            type: Array,\n            required: false,\n            default: () => [],\n        },\n        labelProperty: {\n            type: String,\n            required: false,\n            default: 'label',\n        },\n        valueProperty: {\n            type: String,\n            required: false,\n            default: 'value',\n        },\n        enableSearch: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n        invisibleCount: {\n            type: Number,\n            required: false,\n            default: 0,\n        },\n        size: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        alwaysShowPlaceholder: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        placeholder: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        searchTerm: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        selectionDisablingMethod: {\n            type: Function,\n            required: false,\n            default: () => false,\n        },\n        hideLabels: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        inputLabel: {\n            type: String,\n            required: false,\n            default: undefined,\n        },\n    },\n\n    data() {\n        return {\n            /**\n             * @deprecated tag:v6.7.0 - Will be removed\n             */\n            tagLimit: true,\n        };\n    },\n\n    computed: {\n        showPlaceholder() {\n            return this.alwaysShowPlaceholder || this.selections.length === 0 || this.hideLabels ? this.placeholder : '';\n        },\n\n        /**\n         * @deprecated tag:v6.7.0 - Will be removed\n         */\n        // eslint-disable-next-line vue/return-in-computed-property\n        visibleTags() {},\n\n        /**\n         * @deprecated tag:v6.7.0 - Will be removed\n         */\n        // eslint-disable-next-line vue/return-in-computed-property\n        numberOfHiddenTags() {},\n    },\n\n    methods: {\n        isSelectionDisabled(selection) {\n            if (this.disabled) {\n                return true;\n            }\n\n            return this.selectionDisablingMethod(selection);\n        },\n\n        onClickInvisibleCount() {\n            this.$emit('total-count-click');\n        },\n\n        onSearchTermChange(event) {\n            this.$emit('search-term-change', event.target.value, event);\n        },\n\n        onKeyDownDelete() {\n            if (this.searchTerm.length < 1) {\n                this.$emit('last-item-delete');\n            }\n        },\n\n        onKeyDownEnter() {\n            this.$emit('key-down-enter');\n        },\n\n        onClickDismiss(item) {\n            this.$emit('item-remove', item);\n        },\n\n        focus() {\n            this.$refs.swSelectInput.focus();\n        },\n\n        blur() {\n            this.$refs.swSelectInput.blur();\n        },\n\n        select() {\n            this.$refs.swSelectInput.select();\n        },\n\n        getFocusEl() {\n            return this.$refs.swSelectInput;\n        },\n\n        /**\n         * @deprecated tag:v6.7.0 - Will be removed\n         */\n        removeTagLimit() {},\n    },\n});\n"],"names":["template","Component","selection","event","item"],"mappings":"AAAA,MAAeA,EAAA,06DCGT,CAAE,UAAAC,CAAW,EAAG,OAUtBA,EAAU,SAAS,2BAA4B,CAC3C,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,SAAS,EAElB,MAAO,CACH,oBACA,qBACA,mBACA,iBACA,aACH,EAED,MAAO,CACH,WAAY,CACR,KAAM,MACN,SAAU,GACV,QAAS,IAAM,CAAE,CACpB,EACD,cAAe,CACX,KAAM,OACN,SAAU,GACV,QAAS,OACZ,EACD,cAAe,CACX,KAAM,OACN,SAAU,GACV,QAAS,OACZ,EACD,aAAc,CACV,KAAM,QACN,SAAU,GAEV,QAAS,EACZ,EACD,eAAgB,CACZ,KAAM,OACN,SAAU,GACV,QAAS,CACZ,EACD,KAAM,CACF,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EACD,sBAAuB,CACnB,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EACD,YAAa,CACT,KAAM,OACN,SAAU,GACV,QAAS,EACZ,EACD,UAAW,CACP,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EACD,WAAY,CACR,KAAM,OACN,SAAU,GACV,QAAS,EACZ,EACD,SAAU,CACN,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EACD,yBAA0B,CACtB,KAAM,SACN,SAAU,GACV,QAAS,IAAM,EAClB,EACD,WAAY,CACR,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EACD,WAAY,CACR,KAAM,OACN,SAAU,GACV,QAAS,MACZ,CACJ,EAED,MAAO,CACH,MAAO,CAIH,SAAU,EACtB,CACK,EAED,SAAU,CACN,iBAAkB,CACd,OAAO,KAAK,uBAAyB,KAAK,WAAW,SAAW,GAAK,KAAK,WAAa,KAAK,YAAc,EAC7G,EAMD,aAAc,CAAE,EAMhB,oBAAqB,CAAE,CAC1B,EAED,QAAS,CACL,oBAAoBE,EAAW,CAC3B,OAAI,KAAK,SACE,GAGJ,KAAK,yBAAyBA,CAAS,CACjD,EAED,uBAAwB,CACpB,KAAK,MAAM,mBAAmB,CACjC,EAED,mBAAmBC,EAAO,CACtB,KAAK,MAAM,qBAAsBA,EAAM,OAAO,MAAOA,CAAK,CAC7D,EAED,iBAAkB,CACV,KAAK,WAAW,OAAS,GACzB,KAAK,MAAM,kBAAkB,CAEpC,EAED,gBAAiB,CACb,KAAK,MAAM,gBAAgB,CAC9B,EAED,eAAeC,EAAM,CACjB,KAAK,MAAM,cAAeA,CAAI,CACjC,EAED,OAAQ,CACJ,KAAK,MAAM,cAAc,OAC5B,EAED,MAAO,CACH,KAAK,MAAM,cAAc,MAC5B,EAED,QAAS,CACL,KAAK,MAAM,cAAc,QAC5B,EAED,YAAa,CACT,OAAO,KAAK,MAAM,aACrB,EAKD,gBAAiB,CAAE,CACtB,CACL,CAAC"}