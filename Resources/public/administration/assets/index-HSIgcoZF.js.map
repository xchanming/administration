{"version":3,"file":"index-HSIgcoZF.js","sources":["../../../app/administration/src/app/component/wizard/sw-wizard/sw-wizard.html.twig","../../../app/administration/src/app/component/wizard/sw-wizard/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_wizard %}\n<sw-modal\n    class=\"sw-wizard\"\n    v-bind=\"$attrs\"\n    :title=\"title\"\n    @modal-close=\"onClose\"\n    @page-add=\"addPage\"\n    @page-remove=\"removePage\"\n>\n    <slot>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_wizard_slot_default %}{% endblock %}\n    </slot>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_wizard_slot_footer %}\n    <template #modal-footer>\n        <slot name=\"footer-left-button\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_wizard_slot_footer_left_buttons %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_wizard_slot_footer_left_buttons_close %}\n            <sw-button\n                v-if=\"currentlyActivePage === 0\"\n                size=\"small\"\n                :disabled=\"leftButtonDisabled\"\n                @click=\"onClose\"\n            >\n                {{ $tc('sw-wizard.closeButton') }}\n            </sw-button>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_wizard_slot_footer_left_buttons_back %}\n            <sw-button\n                v-else\n                size=\"small\"\n                :disabled=\"leftButtonDisabled\"\n                @click=\"previousPage\"\n            >\n                {{ $tc('sw-wizard.backButton') }}\n            </sw-button>\n            {% endblock %}\n\n            {% endblock %}\n\n        </slot>\n\n        <slot name=\"footer-dot-navigation\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_wizard_slot_footer_dot_navigation %}\n            <sw-wizard-dot-navigation\n                v-if=\"showNavigationDots\"\n                :pages=\"pages\"\n                :active-page=\"currentlyActivePage\"\n            />\n            {% endblock %}\n\n        </slot>\n\n        <slot name=\"footer-right-button\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_wizard_slot_footer_right_button %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_wizard_slot_footer_right_button_finish %}\n            <sw-button\n                v-if=\"currentlyActivePage >= pagesCount - 1\"\n                size=\"small\"\n                variant=\"primary\"\n                :disabled=\"rightButtonDisabled\"\n                @click=\"$emit('finish')\"\n            >\n                {{ $tc('sw-wizard.finishButton') }}\n            </sw-button>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_wizard_slot_footer_right_button_next %}\n            <sw-button\n                v-else\n                size=\"small\"\n                variant=\"primary\"\n                :disabled=\"rightButtonDisabled\"\n                @click=\"nextPage\"\n            >\n                {{ $tc('sw-wizard.nextButton') }}\n            </sw-button>\n            {% endblock %}\n            {% endblock %}\n\n        </slot>\n    </template>\n    {% endblock %}\n\n</sw-modal>\n{% endblock %}\n","import './sw-wizard.scss';\nimport template from './sw-wizard.html.twig';\n\nconst { Component } = Cicada;\n\n/**\n * @package admin\n *\n * @private\n * @description Provides a wrapper to create a wizard modal. The wizard pages are placed in the default slot of the\n * component. Dot navigation as well as the navigation buttons are dynamically within the wizard itself.\n * Please use `sw-wizard-page` for the different wizard pages. When a more sophisticated wizard page is necessary,\n * please extend the default `sw-wizard-page`.\n * @status ready\n * @example-type code-only\n * @component-example\n * <sw-wizard :showDotNavigation=\"true\">\n *     <sw-wizard-page position=\"1\" title=\"Example #1\">\n *         <h1>Example #1</h1>\n *     </sw-wizard-page>\n *     <sw-wizard-page position=\"2\" title=\"Example #2\">\n *         <h1>Example #2</h1>\n *     </sw-wizard-page>\n *     <sw-wizard-page position=\"3\" title=\"Example #3\">\n *         <h1>Example #3</h1>\n *     </sw-wizard-page>\n * </sw-wizard>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nComponent.register('sw-wizard', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['feature'],\n\n    provide() {\n        return {\n            swWizardPageAdd: this.addPage,\n            swWizardPageRemove: this.removePage,\n        };\n    },\n\n    emits: [\n        'finish',\n        'pages-updated',\n        'current-page-change',\n        'close',\n    ],\n\n    props: {\n        showNavigationDots: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default() {\n                return false;\n            },\n        },\n\n        activePage: {\n            type: Number,\n            required: false,\n            default() {\n                return 0;\n            },\n        },\n\n        leftButtonDisabled: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default() {\n                return false;\n            },\n        },\n\n        rightButtonDisabled: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default() {\n                return false;\n            },\n        },\n    },\n\n    data() {\n        return {\n            pages: [],\n            currentlyActivePage: this.activePage,\n            title: this.$attrs.title || '',\n        };\n    },\n\n    computed: {\n        hasFooterSlot() {\n            return !!this.$slots['footer-left-button'] || !!this.$slots['footer-right-button'];\n        },\n\n        pagesCount() {\n            return this.pages.length;\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.changePage(this.currentlyActivePage);\n        },\n\n        addPage(component) {\n            this.pages.push(component);\n            this.$emit('pages-updated', this.pages, component, 'add');\n\n            this.changePage(this.currentlyActivePage);\n        },\n\n        removePage(component) {\n            this.pages = this.pages.filter((page) => {\n                return page !== component;\n            });\n\n            this.$emit('pages-updated', this.pages, component, 'remove');\n        },\n\n        nextPage() {\n            const newPage = this.currentlyActivePage + 1;\n\n            if (newPage > this.pagesCount) {\n                return false;\n            }\n\n            this.changePage(newPage);\n            return true;\n        },\n\n        previousPage() {\n            const newPage = this.currentlyActivePage - 1;\n\n            if (newPage < 0) {\n                return false;\n            }\n\n            this.changePage(newPage);\n            return true;\n        },\n\n        changePage(newPageIndex) {\n            if (!this.pagesCount) {\n                return;\n            }\n\n            this.currentlyActivePage = newPageIndex;\n            this.pages.forEach((page) => {\n                page.isCurrentlyActive = newPageIndex === page.position;\n            });\n\n            const page = this.pages.find((pageComponent) => {\n                return pageComponent.position === newPageIndex;\n            });\n\n            // Set title of the modal\n            if (page) {\n                this.title = page.title || page.modalTitle;\n            }\n\n            this.$emit('current-page-change', this.currentlyActivePage, page);\n        },\n\n        onClose() {\n            this.$emit('close');\n        },\n    },\n});\n"],"names":["template","Component","component","page","newPage","newPageIndex","pageComponent"],"mappings":"AAAA,MAAeA,EAAA,qnDCGT,CAAE,UAAAC,CAAW,EAAG,OA0BtBA,EAAU,SAAS,YAAa,CAC5B,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,SAAS,EAElB,SAAU,CACN,MAAO,CACH,gBAAiB,KAAK,QACtB,mBAAoB,KAAK,UACrC,CACK,EAED,MAAO,CACH,SACA,gBACA,sBACA,OACH,EAED,MAAO,CACH,mBAAoB,CAChB,KAAM,QACN,SAAU,GAEV,SAAU,CACN,MAAO,EACV,CACJ,EAED,WAAY,CACR,KAAM,OACN,SAAU,GACV,SAAU,CACN,MAAO,EACV,CACJ,EAED,mBAAoB,CAChB,KAAM,QACN,SAAU,GAEV,SAAU,CACN,MAAO,EACV,CACJ,EAED,oBAAqB,CACjB,KAAM,QACN,SAAU,GAEV,SAAU,CACN,MAAO,EACV,CACJ,CACJ,EAED,MAAO,CACH,MAAO,CACH,MAAO,CAAE,EACT,oBAAqB,KAAK,WAC1B,MAAO,KAAK,OAAO,OAAS,EACxC,CACK,EAED,SAAU,CACN,eAAgB,CACZ,MAAO,CAAC,CAAC,KAAK,OAAO,oBAAoB,GAAK,CAAC,CAAC,KAAK,OAAO,qBAAqB,CACpF,EAED,YAAa,CACT,OAAO,KAAK,MAAM,MACrB,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,WAAW,KAAK,mBAAmB,CAC3C,EAED,QAAQE,EAAW,CACf,KAAK,MAAM,KAAKA,CAAS,EACzB,KAAK,MAAM,gBAAiB,KAAK,MAAOA,EAAW,KAAK,EAExD,KAAK,WAAW,KAAK,mBAAmB,CAC3C,EAED,WAAWA,EAAW,CAClB,KAAK,MAAQ,KAAK,MAAM,OAAQC,GACrBA,IAASD,CACnB,EAED,KAAK,MAAM,gBAAiB,KAAK,MAAOA,EAAW,QAAQ,CAC9D,EAED,UAAW,CACP,MAAME,EAAU,KAAK,oBAAsB,EAE3C,OAAIA,EAAU,KAAK,WACR,IAGX,KAAK,WAAWA,CAAO,EAChB,GACV,EAED,cAAe,CACX,MAAMA,EAAU,KAAK,oBAAsB,EAE3C,OAAIA,EAAU,EACH,IAGX,KAAK,WAAWA,CAAO,EAChB,GACV,EAED,WAAWC,EAAc,CACrB,GAAI,CAAC,KAAK,WACN,OAGJ,KAAK,oBAAsBA,EAC3B,KAAK,MAAM,QAASF,GAAS,CACzBA,EAAK,kBAAoBE,IAAiBF,EAAK,QAC/D,CAAa,EAED,MAAMA,EAAO,KAAK,MAAM,KAAMG,GACnBA,EAAc,WAAaD,CACrC,EAGGF,IACA,KAAK,MAAQA,EAAK,OAASA,EAAK,YAGpC,KAAK,MAAM,sBAAuB,KAAK,oBAAqBA,CAAI,CACnE,EAED,SAAU,CACN,KAAK,MAAM,OAAO,CACrB,CACJ,CACL,CAAC"}