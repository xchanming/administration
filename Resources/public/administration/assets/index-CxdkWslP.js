const l=`{% block sw_settings_document_detail %} <sw-page class="sw-settings-document-detail"> {% block sw_settings_document_detail_header %} <template #smart-bar-header> <h2 v-if="documentConfig.name"> {{ documentConfig.name }} </h2> <h2 v-else> {{ $tc('sw-settings-document.detail.textHeadline') }} </h2> </template> {% endblock %} {% block sw_settings_document_detail_actions %} <template #smart-bar-actions> {% block sw_settings_document_detail_actions_abort %} <sw-button v-tooltip.bottom="tooltipCancel" :disabled="isLoading || undefined" @click="onCancel" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_settings_document_detail_actions_save %} <sw-button-process v-model:process-success="isSaveSuccessful" v-tooltip.bottom="tooltipSave" class="sw-settings-document-detail__save-action" :disabled="isLoading || !acl.can('document.editor') || undefined" variant="primary" @update:process-success="saveFinish" @click.prevent="onSave" > {{ $tc('sw-settings-document.detail.buttonSave') }} </sw-button-process> {% endblock %} </template> {% endblock %} {% block sw_settings_document_detail_content %} <template #content> <sw-card-view> <template v-if="isLoading"> <sw-skeleton /> <sw-skeleton /> </template> <template v-else> {% block sw_settings_document_detail_assignment_card %} <sw-card position-identifier="sw-settings-document-detail-assignment" :title="$tc('sw-settings-document.detail.assignmentCard')" :is-loading="isLoading || typeIsLoading" > <sw-container columns="repeat(auto-fit, minmax(100%, 1fr))" gap="0px 30px" > {% block sw_document_detail_base_general_input_type %} <sw-entity-single-select id="documentConfigTypes" v-model:value="documentConfig.documentTypeId" name="sw-field--documentConfig-documentTypeId" @update:value="(id, type) => onChangeType(type)" v-tooltip="{ showDelay: 300, message: $tc('sw-settings-document.detail.disabledTypeSelect'), disabled: !documentConfig.global || !acl.can('document.editor') }" required show-clearable-button :error="documentBaseConfigDocumentTypeIdError" entity="document_type" :criteria="documentCriteria" :label="$tc('sw-settings-document.detail.labelType')" class="sw-settings-document-detail__select-type" :disabled="documentConfig.global || !acl.can('document.editor') || undefined" /> {% endblock %} {% block sw_document_detail_base_general_input_sales_channel %} <sw-multi-select v-if="documentConfig.salesChannels && (!documentConfig.global || documentConfig.global === false)" id="documentSalesChannel" v-model:value="documentConfigSalesChannels" @update:value="(v) => documentConfigSalesChannels = v" name="sw-field--documentConfigSalesChannels" v-tooltip="{ showDelay: 300, message: $tc('sw-settings-document.detail.disabledSalesChannelSelect'), disabled: !!documentConfig.documentType }" label-property="name" value-property="id" :options="documentConfigSalesChannelOptionsCollection" :label="$tc('sw-settings-document.detail.labelSalesChannel')" :disabled="!documentConfig.documentType || !acl.can('document.editor')" class="sw-document-detail__select-type" > {% block sw_document_detail_base_general_input_sales_channel_label %} <template #selection-label-property="{ item }"> {{ item.salesChannel.translated.name }} </template> {% endblock %} {% block sw_document_detail_base_general_input_sales_channel_result_item %} <template #result-item="{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, isSelected, addItem, getKey }"> <sw-select-result v-tooltip="{ showDelay: 300, message: $tc('sw-settings-document.detail.disabledSalesChannel'), disabled: !alreadyAssignedSalesChannelIdsToType.includes(item.salesChannel.id) }" :selected="isSelected(item)" :disabled="alreadyAssignedSalesChannelIdsToType.includes(item.salesChannel.id)" v-bind="{ item, index }" @item-select="addItem" > <sw-highlight-text v-if="highlightSearchTerm" :text="item.salesChannel.translated.name" :search-term="searchTerm" /> <template v-else> {{ item.salesChannel.translated.name }} </template> </sw-select-result> </template> {% endblock %} </sw-multi-select> {% endblock %} </sw-container> </sw-card> {% endblock %} {% block sw_settings_document_detail_content_card %} <sw-card position-identifier="sw-settings-document-detail-content" :title="$tc('sw-settings-document.detail.configCard')" :is-loading="isLoading" > <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="0px 30px" > {% block sw_settings_document_detail_content_field_name %} <div class="sw-settings-document-detail__field_name"> <sw-text-field v-model:value="documentConfig.name" name="sw-field--documentConfig-name" :label="$tc('sw-settings-document.detail.labelName')" :placeholder="$tc('sw-settings-document.detail.placeholderName')" :disabled="!acl.can('document.editor') || undefined" validation="required" :error="documentBaseConfigNameError" required /> </div> {% endblock %} {% block sw_settings_document_detail_content_field_media %} <div flex="250px" align="stretch" class="media-column" > <sw-media-field :value="documentConfig.logoId" @update:value="(v) => documentConfig.logoId = v" name="sw-field--documentConfig-logoId" :disabled="!acl.can('document.editor')" :label="$tc('sw-settings-document.detail.labelOptionMedia')" /> </div> {% endblock %} {% block sw_settings_document_detail_content_field_file_name_prefix %} <div class="sw-settings-document-detail__field_file_name_prefix"> <sw-text-field v-model:value="documentConfig.filenamePrefix" name="sw-field--documentConfig-filenamePrefix" :disabled="!acl.can('document.editor') || undefined" :label="$tc('sw-settings-document.detail.labelFileNamePrefix')" /> </div> {% endblock %} {% block sw_settings_document_detail_content_field_file_name_suffix %} <div class="sw-settings-document-detail__field_file_name_suffix"> <sw-text-field v-model:value="documentConfig.filenameSuffix" name="sw-field--documentConfig-filenameSuffix" :disabled="!acl.can('document.editor') || undefined" :label="$tc('sw-settings-document.detail.labelFileNameSuffix')" /> </div> {% endblock %} {% block sw_settings_document_detail_content_form_field_renderer_content %} <template v-if="documentConfig.config"> <template v-for="(formField, index) in generalFormFields" :key="\`formField-\${index}\`" > {% block sw_settings_document_detail_content_form_field_renderer_multi_select %} <sw-multi-select v-if="formField && formField.name === 'fileTypes'" class="sw-settings-document-detail__multi-select" :disabled="!acl.can('document.editor') || undefined" :label="formField.config.label" :options="formField.config.options" :value-property="formField.config.valueProperty" :label-property="formField.config.labelProperty" v-model:value="fileTypesSelected" @item-remove="onRemoveDocumentType" @item-add="onAddDocumentType" /> {% endblock %} {% block sw_settings_document_detail_content_form_field_renderer %} <sw-form-field-renderer v-else-if="formField" v-model:value="documentConfig.config[formField.name]" :disabled="!acl.can('document.editor') || undefined" class="sw-settings-document-detail__form-field-renderer" v-bind="formField" /> <div v-else :key="\`else-formField-\${index}\`" ></div> {% endblock %} </template> </template> {% endblock %} {% block sw_settings_document_detail_content_field_display_divergent_delivery_address %} <sw-checkbox-field v-if="isShowDivergentDeliveryAddress" v-model:value="documentConfig.config.displayDivergentDeliveryAddress" name="sw-field--documentConfig-config-displayDivergentDeliveryAddress" class="sw-settings-document-detail__field_divergent_delivery_address" :disabled="!acl.can('document.editor') || undefined" :label="$tc('sw-settings-document.detail.labelDisplayDivergentDeliveryAddress')" /> {% endblock %} {% block sw_settings_document_detail_content_field_additional_note_delivery %} <sw-checkbox-field v-if="isShowDisplayNoteDelivery" v-model:value="documentConfig.config.displayAdditionalNoteDelivery" name="sw-field--documentConfig-config-displayAdditionalNoteDelivery" class="sw-settings-document-detail__field_additional_note_delivery" :disabled="!acl.can('document.editor') || undefined" :label="$tc('sw-settings-document.detail.labelDisplayAdditionalNoteDelivery')" /> {% endblock %} {% block sw_settings_document_detail_content_field_customer_vat_id %} <sw-checkbox-field v-if="isShowDisplayNoteDelivery" v-model:value="documentConfig.config.displayCustomerVatId" name="sw-field--documentConfig-config-displayCustomerVatId" class="sw-settings-document-detail__field_customer_vat_id" :disabled="!acl.can('document.editor') || undefined" :label="$tc('sw-settings-document.detail.labelDisplayCustomerVatId')" /> {% endblock %} {# @deprecated tag:v6.7.0 - Remove the block #} {% block sw_settings_document_detail_content_field_delivery_countries %} {% endblock %} </sw-container> </sw-card> {% endblock %} {% block sw_settings_document_detail_company_card %} <sw-card class="sw-settings-document-detail__company_card" position-identifier="sw-settings-document-detail-company" :title="$tc('sw-settings-document.detail.companyCard')" :is-loading="isLoading" > <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="0px 30px" align="end" > {% block sw_settings_document_detail_company_form_field_renderer_content %} <template v-if="documentConfig.config"> <template v-for="formField in companyFormFields" :key="formField.name" > {% block sw_settings_document_detail_company_form_field_renderer %} <sw-form-field-renderer v-model:value="documentConfig.config[formField.name]" :disabled="!acl.can('document.editor') || undefined" v-bind="formField" /> {% endblock %} </template> </template> {% endblock %} </sw-container> </sw-card> {% endblock %} {% block sw_settings_document_detail_custom_field_sets %} <sw-card v-if="showCustomFields" position-identifier="sw-settings-document-detail-custom-field-sets" :title="$tc('sw-settings-custom-field.general.mainMenuItemGeneral')" :is-loading="isLoading" > <sw-custom-field-set-renderer :entity="documentConfig" :disabled="!acl.can('document.editor') || undefined" :sets="customFieldSets" /> </sw-card> {% endblock %} </template> </sw-card-view> </template> {% endblock %} </sw-page> {% endblock %}`,{Component:d,Mixin:o}=Shopware,{get:c,cloneDeep:m}=Shopware.Utils.object,{Criteria:i,EntityCollection:r}=Shopware.Data,{mapPropertyErrors:u}=d.getComponentHelper(),g=["storno","credit_note","invoice"],f={template:l,inject:["repositoryFactory","acl","feature","customFieldDataProviderService"],mixins:[o.getByName("notification"),o.getByName("placeholder")],shortcuts:{"SYSTEMKEY+S":"onSave",ESCAPE:"onCancel"},props:{documentConfigId:{type:String,required:!1,default:null}},data(){return{documentConfig:{config:{displayAdditionalNoteDelivery:!1}},documentConfigSalesChannelOptionsCollection:[],documentConfigSalesChannels:[],isLoading:!1,isSaveSuccessful:!1,salesChannels:{},selectedType:{},isShowDisplayNoteDelivery:!1,isShowDivergentDeliveryAddress:!1,isShowCountriesSelect:!1,generalFormFields:[{name:"pageOrientation",type:"radio",config:{componentName:"sw-single-select",labelProperty:"name",valueProperty:"id",options:[{id:"portrait",name:"Portrait"},{id:"landscape",name:"Landscape"}],label:this.$tc("sw-settings-document.detail.labelPageOrientation")}},{name:"pageSize",type:"radio",config:{componentName:"sw-single-select",labelProperty:"name",valueProperty:"id",options:[{id:"a4",name:"A4"},{id:"a5",name:"A5"},{id:"legal",name:"Legal"},{id:"letter",name:"Letter"}],label:this.$tc("sw-settings-document.detail.labelPageSize")}},{name:"itemsPerPage",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelItemsPerPage")}},{name:"fileTypes",type:"array",config:{componentName:"sw-multi-select",labelProperty:"name",valueProperty:"id",options:[{id:"pdf",name:"PDF"},{id:"html",name:"HTML"}],label:this.$tc("sw-settings-document.detail.labelFileTypes")}},{name:"displayHeader",type:"bool",config:{type:"checkbox",label:this.$tc("sw-settings-document.detail.labelDisplayHeader")}},{name:"displayFooter",type:"bool",config:{type:"checkbox",label:this.$tc("sw-settings-document.detail.labelDisplayFooter")}},{name:"displayPageCount",type:"bool",config:{type:"checkbox",label:this.$tc("sw-settings-document.detail.labelDisplayPageCount")}},{name:"displayLineItems",type:"bool",config:{type:"checkbox",label:this.$tc("sw-settings-document.detail.labelDisplayLineItems")}},{name:"displayLineItemPosition",type:"bool",config:{type:"checkbox",label:this.$tc("sw-settings-document.detail.labelDisplayLineItemPosition")}},{name:"displayPrices",type:"bool",config:{type:"checkbox",label:this.$tc("sw-settings-document.detail.labelDisplayPrices")}},{name:"displayInCustomerAccount",type:"bool",config:{type:"checkbox",label:this.$tc("sw-settings-document.detail.labelDisplayDocumentInCustomerAccount"),helpText:this.$tc("sw-settings-document.detail.helpTextDisplayDocumentInCustomerAccount")}}],companyFormFields:[{name:"displayCompanyAddress",type:"bool",config:{type:"checkbox",label:this.$tc("sw-settings-document.detail.labelDisplayCompanyAddress"),class:"sw-settings-document-detail__company-address-checkbox"}},{name:"companyStreet",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelCompanyStreet")}},{name:"companyZipcode",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelCompanyZipcode")}},{name:"companyCity",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelCompanyCity")}},{name:"companyCountryId",type:"sw-entity-single-select",config:{entity:"country",componentName:"sw-entity-single-select",label:this.$tc("sw-settings-document.detail.labelCompanyCountry")}},{name:"companyName",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelCompanyName")}},{name:"companyEmail",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelCompanyEmail")}},{name:"companyPhone",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelCompanyPhone")}},{name:"companyUrl",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelCompanyUrl")}},{name:"taxNumber",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelTaxNumber")}},{name:"taxOffice",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelTaxOffice")}},{name:"vatId",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelVatId")}},{name:"bankName",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelBankName")}},{name:"bankIban",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelBankIban")}},{name:"bankBic",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelBankBic")}},{name:"placeOfJurisdiction",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelPlaceOfJurisdiction")}},{name:"placeOfFulfillment",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelPlaceOfFulfillment")}},{name:"executiveDirector",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelExecutiveDirector")}},{name:"paymentDueDate",type:"text",config:{type:"text",label:this.$tc("sw-settings-document.detail.labelPaymentDueDate"),helpText:this.$tc("sw-settings-document.detail.helpTextPaymentDueDate")}}],alreadyAssignedSalesChannelIdsToType:[],typeIsLoading:!1,customFieldSets:null}},metaInfo(){return{title:this.$createTitle(this.identifier)}},computed:{identifier(){return c(this.documentConfig,"name","")},countryRepository(){return this.repositoryFactory.create("country")},documentBaseConfigCriteria(){const e=new i(1,25);return e.addAssociation("documentType").getAssociation("salesChannels").addAssociation("salesChannel"),e},documentBaseConfigRepository(){return this.repositoryFactory.create("document_base_config")},documentTypeRepository(){return this.repositoryFactory.create("document_type")},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},documentBaseConfigSalesChannelRepository(){return this.repositoryFactory.create("document_base_config_sales_channel")},tooltipSave(){return this.acl.can("document.editor")?{message:`${this.$device.getSystemKey()} + S`,appearance:"light"}:{message:this.$tc("sw-privileges.tooltip.warning"),disabled:this.acl.can("order.editor"),showOnDisabledElements:!0}},tooltipCancel(){return{message:"ESC",appearance:"light"}},documentBaseConfig(){return this.documentConfig},...u("documentBaseConfig",["name","documentTypeId"]),showCustomFields(){return this.customFieldSets&&this.customFieldSets.length>0},fileTypesSelected(){var e,t;return(t=(e=this.documentConfig)==null?void 0:e.config)!=null&&t.fileTypes?this.documentConfig.config.fileTypes:[]},documentCriteria(){const e=new i(1,25);return e.addFilter(i.not("AND",[i.prefix("technicalName","zugferd_")])),e}},created(){this.createdComponent()},methods:{async createdComponent(){this.isLoading=!0,await this.loadAvailableSalesChannel(),this.documentConfigId?await Promise.all([this.loadEntityData(),this.loadCustomFieldSets()]):(this.documentConfig=this.documentBaseConfigRepository.create(),this.documentConfig.global=!1,this.documentConfig.config={}),this.isLoading=!1},async loadEntityData(){this.isLoading=!0;const e=this.documentConfigId||this.$route.params.id;this.documentConfig=await this.documentBaseConfigRepository.get(e,Shopware.Context.api,this.documentBaseConfigCriteria),this.documentConfig||(this.documentConfig={}),this.documentConfig.config||(this.documentConfig.config={}),await this.onChangeType(this.documentConfig.documentType),this.documentConfig.salesChannels===void 0&&(this.documentConfig.salesChannels=[]),this.documentConfig.salesChannels.forEach(t=>{this.documentConfigSalesChannels.push(t.id)}),this.isLoading=!1},loadCustomFieldSets(){this.customFieldDataProviderService.getCustomFieldSets("document_base_config").then(e=>{this.customFieldSets=e})},async loadAvailableSalesChannel(){this.salesChannels=await this.salesChannelRepository.search(new i(1,500))},showOption(e){return e.id!==this.documentConfig.id},async onChangeType(e){if(!e)return;this.typeIsLoading=!0,this.documentConfig.documentType=e,this.documentConfigSalesChannels=[],this.isShowDisplayNoteDelivery=!1,this.isShowDivergentDeliveryAddress=!1;const t=m(e);t.technicalName==="invoice"&&(this.isShowDivergentDeliveryAddress=!0),g.includes(t.technicalName)&&(this.isShowDisplayNoteDelivery=!0),this.createSalesChannelSelectOptions();const n=new i(1,25);n.addFilter(i.equals("documentTypeId",e.id)),this.documentBaseConfigSalesChannelRepository.search(n).then(a=>{this.alreadyAssignedSalesChannelIdsToType=[],a.forEach(s=>{s.salesChannelId!==null&&s.documentBaseConfigId!==this.documentConfig.id&&this.alreadyAssignedSalesChannelIdsToType.push(s.salesChannelId)}),this.typeIsLoading=!1})},onChangeSalesChannel(){this.documentConfigSalesChannels&&this.documentConfigSalesChannels.length>0&&this.documentConfigSalesChannels.forEach(e=>{this.documentConfig.salesChannels.has(e)||this.documentConfig.salesChannels.push(this.documentConfigSalesChannelOptionsCollection.get(e))}),this.documentConfig.salesChannels.forEach(e=>{this.documentConfigSalesChannels.includes(e.id)||this.documentConfig.salesChannels.remove(e.id)})},async saveFinish(){this.documentConfig.isNew()&&await this.$router.replace({name:"sw.settings.document.detail",params:{id:this.documentConfig.id}}),this.loadEntityData()},onSave(){return this.isSaveSuccessful=!1,this.isLoading=!0,this.onChangeSalesChannel(),this.isSaveSuccessful=!0,this.documentBaseConfigRepository.save(this.documentConfig).then(()=>{this.isLoading=!1,this.isSaveSuccessful=!0}).catch(()=>{this.isLoading=!1})},onCancel(){this.$router.push({name:"sw.settings.document.index"})},createSalesChannelSelectOptions(){this.documentConfigSalesChannelOptionsCollection=new r(this.documentConfig.salesChannels.source,this.documentConfig.salesChannels.entity,Shopware.Context.api),this.documentConfig.documentType&&this.salesChannels.forEach(e=>{let t=!1;if(this.documentConfig.salesChannels.forEach(n=>{n.salesChannelId===e.id&&(t=!0,this.documentConfigSalesChannelOptionsCollection.push(n))}),!t){const n=this.documentBaseConfigSalesChannelRepository.create();n.documentBaseConfigId=this.documentConfig.id,n.documentTypeId=this.documentConfig.documentType.id,n.salesChannelId=e.id,n.salesChannel=e,this.documentConfigSalesChannelOptionsCollection.push(n)}})},onRemoveDocumentType(e){let t=this.documentConfig.config.fileTypes??[];t.length!==1&&(t=t.filter(n=>n!==e.id),this.documentConfig.config.fileTypes=t)},onAddDocumentType(e){this.documentConfig.config.fileTypes.push(e.id)}}};export{f as default};
