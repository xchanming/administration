{"version":3,"file":"index-D7Hvo3RQ.js","sources":["../../../app/administration/src/module/sw-settings-snippet/component/sidebar/sw-settings-snippet-filter-switch/sw-settings-snippet-filter-switch.html.twig","../../../app/administration/src/module/sw-settings-snippet/component/sidebar/sw-settings-snippet-filter-switch/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_snippet_filter_switch %}\n<div class=\"sw-settings-snippet-filter-switch\">\n    <slot name=\"template\">\n        <div :class=\"fieldClasses\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_snippet_filter_switch_field %}\n            <slot name=\"field\">\n                <sw-switch-field\n                    :name=\"name\"\n                    :value=\"value\"\n                    :label=\"label\"\n                    @update:value=\"onChange\"\n                />\n            </slot>\n            {% endblock %}\n        </div>\n    </slot>\n</div>\n{% endblock %}\n","/**\n * @package discovery\n */\nimport template from './sw-settings-snippet-filter-switch.html.twig';\nimport './sw-settings-snippet-filter-switch.scss';\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    emits: ['update:value'],\n\n    props: {\n        label: {\n            type: String,\n            required: false,\n            default: '',\n        },\n\n        name: {\n            type: String,\n            required: true,\n        },\n\n        group: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        borderTop: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        borderBottom: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        type: {\n            type: String,\n            required: false,\n            default: 'small',\n            validator(value) {\n                if (!value.length) {\n                    return true;\n                }\n                return [\n                    'small',\n                    'large',\n                ].includes(value);\n            },\n        },\n\n        value: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    computed: {\n        fieldClasses() {\n            return [\n                'sw-settings-snippet-filter-switch__field',\n                `sw-settings-snippet-filter-switch--${this.type}`,\n                {\n                    'border-top': this.borderTop,\n                    'border-bottom': this.borderBottom,\n                },\n            ].join(' ');\n        },\n    },\n\n    methods: {\n        onChange(value) {\n            const name = this.name;\n            const group = this.group;\n            this.$emit('update:value', { value, name, group });\n        },\n    },\n};\n"],"names":["template","index","value","name","group"],"mappings":"AAAA,MAAeA,EAAA,+WCOAC,EAAA,CACX,SAAAD,EAEA,aAAc,OAAO,aAErB,MAAO,CAAC,cAAc,EAEtB,MAAO,CACH,MAAO,CACH,KAAM,OACN,SAAU,GACV,QAAS,EACZ,EAED,KAAM,CACF,KAAM,OACN,SAAU,EACb,EAED,MAAO,CACH,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EAED,UAAW,CACP,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EAED,aAAc,CACV,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EAED,KAAM,CACF,KAAM,OACN,SAAU,GACV,QAAS,QACT,UAAUE,EAAO,CACb,OAAKA,EAAM,OAGJ,CACH,QACA,OACpB,EAAkB,SAASA,CAAK,EALL,EAMd,CACJ,EAED,MAAO,CACH,KAAM,QACN,SAAU,GACV,QAAS,EACZ,CACJ,EAED,SAAU,CACN,cAAe,CACX,MAAO,CACH,2CACA,sCAAsC,KAAK,IAAI,GAC/C,CACI,aAAc,KAAK,UACnB,gBAAiB,KAAK,YACzB,CACjB,EAAc,KAAK,GAAG,CACb,CACJ,EAED,QAAS,CACL,SAASA,EAAO,CACZ,MAAMC,EAAO,KAAK,KACZC,EAAQ,KAAK,MACnB,KAAK,MAAM,eAAgB,CAAE,MAAAF,EAAO,KAAAC,EAAM,MAAAC,CAAK,CAAE,CACpD,CACJ,CACL"}