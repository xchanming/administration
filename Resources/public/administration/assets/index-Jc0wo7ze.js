const i=`{% block sw_product_properties %} <sw-inherit-wrapper v-if="properties" v-model:value="product.properties" class="sw-product-properties" :is-association="isAssociation" :disabled="disabled || undefined" :inherited-value="parentProduct.properties" > <template #content="{ isInherited, updateCurrentValue, isInheritField, restoreInheritance, removeInheritance }"> {% block sw_product_properties_card %} <sw-card class="sw-product-properties__card" :class="{ 'is--inherited': isInherited, 'is--disabled': disabled, }" position-identifier="sw-product-properties" :is-loading="isLoading" > <template #title> {% block sw_product_properties_card_title %} <div class="sw-card__title" :class="{ 'is--inherited': isInherited }" > {% block sw_product_properties_card_title_icon %} <sw-inheritance-switch v-if="isInheritField && showInheritanceSwitcher" class="sw-inherit-wrapper__inheritance-icon" :is-inherited="isInherited" :disabled="!acl.can('product.editor') || undefined" @inheritance-restore="restoreInheritance" @inheritance-remove="removeInheritance" /> {% endblock %} {% block sw_product_properties_card_title_text %} {{ $tc('sw-product.properties.cardTitle') }} {% endblock %} </div> {% endblock %} </template> <template v-if="productHasProperties" #grid > {% block sw_product_properties_filled_state %} <sw-container rows="auto auto"> {% block sw_product_properties_filled_state_header %} <sw-card-section secondary divider="bottom" > <sw-container columns="1fr auto" gap="0 15px" > {% block sw_product_properties_filled_state_header_form_control %} <sw-simple-search-field v-model:value="searchTerm" variant="form" size="small" :placeholder="$tc('sw-product.properties.placeholderSearchAddedProperties')" :disabled="isPropertiesLoading || undefined" @search-term-change="onChangeSearchTerm" /> {% endblock %} {% block sw_product_properties_filled_state_header_button %} <sw-button v-tooltip="{ message: $tc('sw-privileges.tooltip.warning'), disabled: acl.can('product.editor'), showOnDisabledElements: true }" class="sw-product-properties__button-add-property" variant="ghost" size="small" :disabled="!acl.can('product.editor') || undefined" @click="turnOnAddPropertiesModal" > {{ $tc('sw-product.properties.buttonAddProperty') }} </sw-button> {% endblock %} </sw-container> </sw-card-section> {% endblock %} {% block sw_product_properties_filled_state_body_filled_state %} <sw-entity-listing v-if="properties.length > 0" ref="entityListing" class="sw-product-properties__list" detail-route="sw.property.detail" identifier="sw-product-properties-list" plain-appearance :items="properties" :data-source="properties" :columns="propertyColumns" :repository="propertyGroupRepository" :full-page="false" :show-settings="false" :allow-column-edit="false" :allow-inline-edit="false" :allow-view="acl.can('product.viewer') || undefined" :allow-edit="acl.can('property.editor') || undefined" :allow-delete="acl.can('product.deleter') || undefined" > <template #column-values="{ item }"> {% block sw_product_properties_filled_state_body_filled_state_column_values %} <div v-for="option in item.options" :key="option.id" class="sw-product-properties-list__column-values" > <sw-label size="medium" :dismissable="acl.can('product.deleter')" @dismiss="onDeletePropertyValue(option)" > {{ option.translated.name }} </sw-label> </div> {% endblock %} </template> <template #delete-modal-delete-item="{ item }"> {% block sw_product_properties_filled_state_body_filled_state_delete_modal_delete_item %} <sw-button variant="danger" size="small" @click="onDeleteProperty(item)" > {{ $tc('global.default.delete') }} </sw-button> {% endblock %} </template> <template #bulk-modal-delete-items> {% block sw_product_properties_filled_state_body_filled_state_bulk_modal_delete_items %} <sw-button variant="danger" size="small" @click="onDeleteProperties" > {{ $tc('global.default.delete') }} </sw-button> {% endblock %} </template> </sw-entity-listing> {% endblock %} {% block sw_product_properties_filled_state_body_empty_state %} <sw-empty-state v-if="properties.length <= 0" class="sw-product-properties__empty-state has--no-search-result" :absolute="false" :show-description="false" :title="$tc('sw-product.properties.titleEmptyStateList')" > <template #icon> {% block sw_product_properties_filled_state_body_empty_state_image %} <img :src="assetFilter('/administration/static/img/empty-states/products-empty-state.svg')" :alt="$tc('sw-product.properties.titleEmptyStateList')" > {% endblock %} </template> </sw-empty-state> {% endblock %} {% block sw_product_properties_filled_state_body_loading_state %} <sw-loader v-if="isPropertiesLoading" /> {% endblock %} </sw-container> {% endblock %} </template> {% block sw_product_properties_empty_state %} <sw-empty-state v-if="!productHasProperties" class="sw-product-properties__empty-state has--no-properties" :absolute="false" :show-description="false" :title="$tc('sw-product.properties.titleEmptyState')" > <template #icon> {% block sw_product_properties_empty_state_image %} <img :src="assetFilter('/administration/static/img/empty-states/products-empty-state.svg')" :alt="$tc('sw-product.properties.titleEmptyState')" > {% endblock %} </template> <template #actions> {% block sw_product_properties_empty_state_button %} <sw-button v-tooltip="{ message: $tc('sw-privileges.tooltip.warning'), disabled: acl.can('product.editor'), showOnDisabledElements: true }" variant="ghost" :disabled="!acl.can('product.editor') || undefined" @click="turnOnAddPropertiesModal" > {{ $tc('sw-product.properties.buttonAddProperties') }} </sw-button> {% endblock %} </template> </sw-empty-state> {% endblock %} </sw-card> {% endblock %} {% block sw_product_properties_add_properties_modal %} <sw-product-add-properties-modal v-if="showAddPropertiesModal" :new-properties="newProperties" :properties-available="propertiesAvailable" @modal-cancel="onCancelAddPropertiesModal" @modal-save="onSaveAddPropertiesModal($event, updateCurrentValue)" /> {% endblock %} </template> </sw-inherit-wrapper> {% endblock %}`,{Context:o}=Shopware,{Criteria:r,EntityCollection:p}=Shopware.Data,a={template:i,inject:["repositoryFactory","acl"],props:{disabled:{type:Boolean,required:!1,default:!1},isAssociation:{type:Boolean,required:!1,default:!0},showInheritanceSwitcher:{type:Boolean,required:!1,default:!0}},data(){return{groupIds:[],properties:[],isPropertiesLoading:!1,searchTerm:null,showAddPropertiesModal:!1,newProperties:[],propertiesAvailable:!0}},computed:{propertyGroupRepository(){return this.repositoryFactory.create("property_group")},propertyOptionRepository(){return this.repositoryFactory.create("property_group_option")},propertyGroupCriteria(){const e=new r(1,10);e.addSorting(r.sort("name","ASC",!1)),e.addFilter(r.equalsAny("id",this.groupIds)),this.searchTerm&&e.setTerm(this.searchTerm);const t=this.productProperties.getIds();return e.getAssociation("options").addFilter(r.equalsAny("id",t)),e.addFilter(r.equalsAny("options.id",t)),e},propertyColumns(){return[{property:"name",label:"sw-product.properties.columnProperty",sortable:!1,routerLink:"sw.property.detail"},{property:"values",label:"sw-product.properties.columnValue",sortable:!1}]},product(){return Shopware.Store.get("swProductDetail").product},parentProduct(){return Shopware.Store.get("swProductDetail").parentProduct},isLoading(){return Shopware.Store.get("swProductDetail").isLoading},isChild(){return Shopware.Store.get("swProductDetail").isChild},productProperties(){var e,t;return this.isChild&&((t=(e=this.product)==null?void 0:e.properties)==null?void 0:t.length)<=0?this.parentProduct.properties:this.product.properties},assetFilter(){return Shopware.Filter.getByName("asset")},productHasProperties(){var e;return((e=this.product)==null?void 0:e.id)&&this.groupIds.length>0}},watch:{productProperties:{immediate:!0,handler(e){e&&(this.getGroupIds(),this.getProperties())}}},created(){this.createdComponent()},methods:{createdComponent(){this.checkIfPropertiesExists()},getGroupIds(){var e;(e=this.product)!=null&&e.id&&(this.groupIds=this.productProperties.reduce((t,{groupId:s})=>(t.indexOf(s)<0&&t.push(s),t),[]))},getProperties(){var e;return!((e=this.product)!=null&&e.id)||this.groupIds.length<=0?(this.properties=[],this.searchTerm=null,Promise.resolve()):(this.isPropertiesLoading=!0,this.propertyGroupRepository.search(this.propertyGroupCriteria,o.api).then(t=>{this.properties=t}).catch(()=>{this.properties=[]}).finally(()=>{this.isPropertiesLoading=!1}))},onDeletePropertyValue(e){this.productProperties.remove(e.id)},onDeleteProperty(e){this.$refs.entityListing.deleteId=null,this.$nextTick(()=>{this.productProperties.filter(({groupId:t})=>t===e.id).forEach(({id:t})=>{this.productProperties.remove(t)}),this.$refs.entityListing.resetSelection()})},onDeleteProperties(){this.$refs.entityListing.showBulkDeleteModal=!1,this.$nextTick(()=>{const e={...this.$refs.entityListing.selection};Object.values(e).forEach(t=>{t.options.forEach(s=>{this.productProperties.remove(s.id)})}),this.$refs.entityListing.resetSelection()})},onChangeSearchTerm(e){return this.searchTerm=e,this.getProperties()},turnOnAddPropertiesModal(){this.propertiesAvailable?(this.updateNewProperties(),this.showAddPropertiesModal=!0):this.$router.push({name:"sw.property.index"})},turnOffAddPropertiesModal(){this.showAddPropertiesModal=!1,this.updateNewProperties()},updateNewProperties(){this.newProperties=new p(this.productProperties.source,this.productProperties.entity,this.productProperties.context,r.fromCriteria(this.productProperties.criteria),this.productProperties,this.productProperties.total,this.productProperties.aggregations)},onCancelAddPropertiesModal(){this.turnOffAddPropertiesModal()},onSaveAddPropertiesModal(e,t){this.turnOffAddPropertiesModal(),!(e.length<=0)&&typeof t=="function"&&t.bind(this)(e)},checkIfPropertiesExists(){this.propertyOptionRepository.search(new r(1,1)).then(e=>{this.propertiesAvailable=e.total>0})}}};export{a as default};
