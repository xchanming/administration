{"version":3,"file":"index-D2uAmvxq.js","sources":["../../../app/administration/src/app/component/filter/sw-filter-panel/sw-filter-panel.html.twig","../../../app/administration/src/app/component/filter/sw-filter-panel/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_filter_panel %}\n<div class=\"sw-filter-panel\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_filter_panel_item %}\n    <div\n        v-for=\"filter in listFilters\"\n        :id=\"filter.name\"\n        :key=\"filter.name\"\n        class=\"sw-filter-panel__item\"\n    >\n        <div v-if=\"false\"></div>\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_filter_panel_extension_point %}{% endblock %}\n\n        <sw-boolean-filter\n            v-else-if=\"showFilter(filter, 'boolean-filter')\"\n            :filter=\"filter\"\n            :active=\"!!activeFilters[filter.name]\"\n            @filter-update=\"updateFilter\"\n            @filter-reset=\"resetFilter\"\n        />\n\n        <sw-existence-filter\n            v-else-if=\"showFilter(filter, 'existence-filter')\"\n            :filter=\"filter\"\n            :active=\"!!activeFilters[filter.name]\"\n            @filter-update=\"updateFilter\"\n            @filter-reset=\"resetFilter\"\n        />\n\n        <sw-multi-select-filter\n            v-else-if=\"showFilter(filter, 'multi-select-filter')\"\n            :filter=\"filter\"\n            :active=\"!!activeFilters[filter.name]\"\n            @filter-update=\"updateFilter\"\n            @filter-reset=\"resetFilter\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_multi_select_filter_content_path_label %}\n            <template\n                v-if=\"filter.displayPath\"\n                #selection-label-property=\"{ item, index }\"\n            >\n                <sw-highlight-text\n                    :key=\"item.id\"\n                    v-tooltip=\"{\n                        message: getBreadcrumb(item),\n                        width: 300\n                    }\"\n                    selected=\"\"\n                    :text=\"getLabelName(item)\"\n                />\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_multi_select_filter_content_path_result_item %}\n            <template\n                v-if=\"filter.displayPath\"\n                #result-item=\"{ item, index }\"\n            >\n                <sw-select-result\n                    v-bind=\"{ item, index }\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_multi_select_filter_content_path_result_label %}\n                    <span class=\"sw-select-result__result-item-text\">\n                        <sw-highlight-text\n                            :key=\"item.id\"\n                            v-tooltip=\"{\n                                message: getBreadcrumb(item),\n                                width: 300\n                            }\"\n                            selected=\"\"\n                            :text=\"getLabelName(item)\"\n                        />\n                    </span>\n                    {% endblock %}\n                </sw-select-result>\n            </template>\n            {% endblock %}\n        </sw-multi-select-filter>\n\n        <sw-date-filter\n            v-else-if=\"showFilter(filter, 'date-filter')\"\n            :filter=\"filter\"\n            :active=\"!!activeFilters[filter.name]\"\n            :config=\"filter.config\"\n            @filter-update=\"updateFilter\"\n            @filter-reset=\"resetFilter\"\n        />\n\n        <sw-string-filter\n            v-else-if=\"showFilter(filter, 'string-filter')\"\n            :filter=\"filter\"\n            :active=\"!!activeFilters[filter.name]\"\n            :criteria-filter-type=\"filter.criteriaFilterType\"\n            @filter-update=\"updateFilter\"\n            @filter-reset=\"resetFilter\"\n        />\n\n        <sw-number-filter\n            v-else-if=\"showFilter(filter, 'number-filter')\"\n            :filter=\"filter\"\n            :active=\"!!activeFilters[filter.name]\"\n            :step=\"filter.step\"\n            :digits=\"filter.digits\"\n            :number-type=\"filter.numberType\"\n            :min=\"filter.min\"\n            :max=\"filter.max\"\n            allow-empty\n            @filter-update=\"updateFilter\"\n            @filter-reset=\"resetFilter\"\n        />\n    </div>\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-filter-panel.html.twig';\nimport './sw-filter-panel.scss';\n\nconst { Component } = Cicada;\n\n/**\n * @private\n */\nComponent.register('sw-filter-panel', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['repositoryFactory'],\n\n    emits: ['criteria-changed'],\n\n    props: {\n        filters: {\n            type: Array,\n            required: true,\n        },\n\n        defaults: {\n            type: Array,\n            required: true,\n        },\n\n        storeKey: {\n            type: String,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            activeFilters: {},\n            filterChanged: false,\n            storedFilters: null,\n        };\n    },\n\n    computed: {\n        criteria() {\n            const filters = [];\n\n            Object.values(this.activeFilters).forEach((activeFilter) => {\n                filters.push(...activeFilter);\n            });\n\n            return filters;\n        },\n\n        isFilterActive() {\n            return this.activeFiltersNumber > 0;\n        },\n\n        activeFiltersNumber() {\n            return Object.keys(this.activeFilters).length;\n        },\n\n        listFilters() {\n            const savedFilters = { ...this.storedFilters };\n            const filters = [];\n\n            this.filters.forEach((el) => {\n                const filter = { ...el };\n\n                filter.value = savedFilters[filter.name] ? savedFilters[filter.name].value : null;\n                filter.filterCriteria = savedFilters[filter.name] ? savedFilters[filter.name].criteria : null;\n\n                filters.push(filter);\n            });\n\n            return filters;\n        },\n    },\n\n    watch: {\n        criteria: {\n            handler() {\n                if (this.filterChanged) {\n                    Cicada.Service('filterService')\n                        .saveFilters(this.storeKey, this.storedFilters)\n                        .then((response) => {\n                            this.storedFilters = response;\n                            this.$emit('criteria-changed', this.criteria);\n                        });\n                }\n            },\n            deep: true,\n        },\n\n        $route() {\n            this.filterChanged = false;\n            this.createdComponent();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Cicada.Service('filterService')\n                .getStoredFilters(this.storeKey)\n                .then((filters) => {\n                    this.activeFilters = {};\n                    this.storedFilters = filters;\n\n                    this.listFilters.forEach((filter) => {\n                        const criteria = filters[filter.name] ? filters[filter.name].criteria : null;\n                        if (criteria) {\n                            if (this.isCompatEnabled('INSTANCE_SET')) {\n                                this.$set(this.activeFilters, filter.name, criteria);\n                            } else {\n                                this.activeFilters[filter.name] = criteria;\n                            }\n                        }\n                    });\n                });\n        },\n\n        updateFilter(name, filter, value) {\n            this.filterChanged = true;\n            if (this.isCompatEnabled('INSTANCE_SET')) {\n                this.$set(this.activeFilters, name, filter);\n            } else {\n                this.activeFilters[name] = filter;\n            }\n            this.storedFilters[name] = { value: value, criteria: filter };\n        },\n\n        resetFilter(name) {\n            this.filterChanged = true;\n            if (this.isCompatEnabled('INSTANCE_DELETE')) {\n                this.$delete(this.activeFilters, name);\n            } else {\n                delete this.activeFilters[name];\n            }\n            this.storedFilters[name] = { value: null, criteria: null };\n        },\n\n        resetAll() {\n            this.filterChanged = true;\n            this.activeFilters = {};\n\n            Object.values(this.storedFilters).forEach((el) => {\n                el.value = null;\n                el.criteria = null;\n            });\n        },\n\n        showFilter(filter, type) {\n            return filter.type === type && this.defaults.includes(filter.name);\n        },\n\n        getBreadcrumb(item) {\n            if (item.breadcrumb) {\n                return item.breadcrumb.join(' / ');\n            }\n            return item.translated?.name || item.name;\n        },\n\n        getLabelName(item) {\n            if (item.breadcrumb && item.breadcrumb.length > 1) {\n                return `.. / ${item.translated?.name || item.name} `;\n            }\n\n            return item.translated?.name || item.name;\n        },\n    },\n});\n"],"names":["template","Component","filters","activeFilter","savedFilters","el","filter","response","criteria","name","value","type","item","_a","_b"],"mappings":"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"}