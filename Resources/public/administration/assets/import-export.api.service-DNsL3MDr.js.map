{"version":3,"file":"import-export.api.service-DNsL3MDr.js","sources":["../../../app/administration/src/core/service/api/import-export.api.service.js"],"sourcesContent":["const ApiService = Cicada.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"import-export\"\n * @class\n * @extends ApiService\n * @package services-settings\n */\nclass ImportExportApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'import-export') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'importExportService';\n    }\n\n    getFeatures() {\n        const apiRoute = `/_action/${this.getApiBasePath()}/features`;\n\n        return this.httpClient\n            .get(apiRoute, {\n                headers: this.getBasicHeaders(),\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    initiate(profileId, expireDate, file) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/initiate`;\n        const formData = new FormData();\n        if (file) {\n            formData.append('file', file);\n        }\n        formData.append('profileId', profileId);\n        formData.append('expireDate', expireDate);\n\n        return this.httpClient\n            .post(apiRoute, formData, {\n                headers: this.getBasicHeaders(),\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    process(logId, offset) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/process`;\n\n        return this.httpClient\n            .post(\n                apiRoute,\n                {\n                    logId: logId,\n                    offset: offset,\n                },\n                {\n                    headers: this.getBasicHeaders(),\n                },\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    cancel(logId) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/cancel`;\n\n        return this.httpClient\n            .post(\n                apiRoute,\n                {\n                    logId: logId,\n                },\n                {\n                    headers: this.getBasicHeaders(),\n                },\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getDownloadUrl(fileId, accessToken) {\n        const baseUrl = `${Cicada.Context.api.apiPath}`;\n        return `/${baseUrl}/_action/${this.getApiBasePath()}/file/download?fileId=${fileId}&accessToken=${accessToken}`;\n    }\n}\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default ImportExportApiService;\n"],"names":["ApiService","ImportExportApiService","httpClient","loginService","apiEndpoint","apiRoute","response","profileId","expireDate","file","formData","logId","offset","fileId","accessToken"],"mappings":"AAAA,MAAMA,EAAa,OAAO,QAAQ,WAQlC,MAAMC,UAA+BD,CAAW,CAC5C,YAAYE,EAAYC,EAAcC,EAAc,gBAAiB,CACjE,MAAMF,EAAYC,EAAcC,CAAW,EAC3C,KAAK,KAAO,qBACf,CAED,aAAc,CACV,MAAMC,EAAW,YAAY,KAAK,eAAc,CAAE,YAElD,OAAO,KAAK,WACP,IAAIA,EAAU,CACX,QAAS,KAAK,gBAAiB,CAC/C,CAAa,EACA,KAAMC,GACIN,EAAW,eAAeM,CAAQ,CAC5C,CACR,CAED,SAASC,EAAWC,EAAYC,EAAM,CAClC,MAAMJ,EAAW,YAAY,KAAK,eAAc,CAAE,YAC5CK,EAAW,IAAI,SACrB,OAAID,GACAC,EAAS,OAAO,OAAQD,CAAI,EAEhCC,EAAS,OAAO,YAAaH,CAAS,EACtCG,EAAS,OAAO,aAAcF,CAAU,EAEjC,KAAK,WACP,KAAKH,EAAUK,EAAU,CACtB,QAAS,KAAK,gBAAiB,CAC/C,CAAa,EACA,KAAMJ,GACIN,EAAW,eAAeM,CAAQ,CAC5C,CACR,CAED,QAAQK,EAAOC,EAAQ,CACnB,MAAMP,EAAW,YAAY,KAAK,eAAc,CAAE,WAElD,OAAO,KAAK,WACP,KACGA,EACA,CACI,MAAOM,EACP,OAAQC,CACX,EACD,CACI,QAAS,KAAK,gBAAiB,CAClC,CACJ,EACA,KAAMN,GACIN,EAAW,eAAeM,CAAQ,CAC5C,CACR,CAED,OAAOK,EAAO,CACV,MAAMN,EAAW,YAAY,KAAK,eAAc,CAAE,UAElD,OAAO,KAAK,WACP,KACGA,EACA,CACI,MAAOM,CACV,EACD,CACI,QAAS,KAAK,gBAAiB,CAClC,CACJ,EACA,KAAML,GACIN,EAAW,eAAeM,CAAQ,CAC5C,CACR,CAED,eAAeO,EAAQC,EAAa,CAEhC,MAAO,IADS,GAAG,OAAO,QAAQ,IAAI,OAAO,EAC3B,YAAY,KAAK,gBAAgB,yBAAyBD,CAAM,gBAAgBC,CAAW,EAChH,CACL"}