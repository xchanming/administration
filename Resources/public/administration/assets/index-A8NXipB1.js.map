{"version":3,"file":"index-A8NXipB1.js","sources":["../../../app/administration/src/app/component/form/sw-dynamic-url-field/sw-dynamic-url-field.html.twig","../../../app/administration/src/app/component/form/sw-dynamic-url-field/index.ts"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_dynamic_url_field %}\n<div class=\"sw-dynamic-url-field\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_dynamic_url_field_content %}\n    <div class=\"sw-dynamic-url-field_link-category\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_dynamic_url_field_content_type %}\n        <sw-select-field\n            :value=\"linkCategory\"\n            :label=\"$tc('sw-text-editor-toolbar.link.labelType')\"\n            require\n            @update:value=\"onSelectFieldChange\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_dynamic_url_field_content_type_options %}\n            <option value=\"link\">\n                {{ $tc('sw-text-editor-toolbar.link.labelUrl') }}\n            </option>\n            <option value=\"detail\">\n                {{ $tc('sw-text-editor-toolbar.link.labelProduct') }}\n            </option>\n            <option value=\"navigation\">\n                {{ $tc('sw-text-editor-toolbar.link.labelCategory') }}\n            </option>\n            <option value=\"media\">\n                {{ $tc('sw-text-editor-toolbar.link.labelMedia') }}\n            </option>\n            <option value=\"email\">\n                {{ $tc('sw-text-editor-toolbar.link.labelEmail') }}\n            </option>\n            <option value=\"phone\">\n                {{ $tc('sw-text-editor-toolbar.link.labelPhoneNumber') }}\n            </option>\n            {% endblock %}\n        </sw-select-field>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_dynamic_url_field_content_type_inputs %}\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_dynamic_url_field_content_type_inputs_link %}\n        <sw-text-field\n            v-if=\"linkCategory === 'link'\"\n            v-model:value=\"linkTarget\"\n            :label=\"$tc('sw-text-editor-toolbar.link.linkTo')\"\n            :placeholder=\"$tc('sw-text-editor-toolbar.link.placeholder')\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_dynamic_url_field_content_type_inputs_phone %}\n        <sw-text-field\n            v-else-if=\"linkCategory === 'phone'\"\n            v-model:value=\"linkTarget\"\n            :label=\"$tc('sw-text-editor-toolbar.link.linkTo')\"\n            :placeholder=\"$tc('sw-text-editor-toolbar.link.placeholderPhoneNumber')\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_dynamic_url_field_content_type_inputs_email %}\n        <sw-email-field\n            v-else-if=\"linkCategory === 'email'\"\n            v-model:value=\"linkTarget\"\n            :label=\"$tc('sw-text-editor-toolbar.link.linkTo')\"\n            :placeholder=\"$tc('sw-text-editor-toolbar.link.placeholderEmail')\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_dynamic_url_field_content_type_inputs_detail %}\n        <sw-entity-single-select\n            v-else-if=\"linkCategory === 'detail'\"\n            v-model:value=\"linkTarget\"\n            class=\"sw-dynamic-url-field__entity-single-select\"\n            should-show-active-state\n            display-variants\n            entity=\"product\"\n            :criteria=\"entityFilter\"\n            :label=\"$tc('sw-text-editor-toolbar.link.linkTo')\"\n            :placeholder=\"$tc('sw-text-editor-toolbar.link.placeholderProduct')\"\n            show-clearable-button\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_dynamic_url_field_content_type_inputs_category %}\n        <sw-category-tree-field\n            v-else-if=\"linkCategory === 'navigation'\"\n            :label=\"$tc('sw-text-editor-toolbar.link.linkTo')\"\n            :criteria=\"entityFilter\"\n            :placeholder=\"$tc('sw-text-editor-toolbar.link.placeholderCategory')\"\n            :categories-collection=\"categoryCollection\"\n            single-select\n            @selection-add=\"replaceCategorySelection\"\n            @selection-remove=\"removeCategorySelection\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_dynamic_url_field_content_type_inputs_media %}\n        <sw-media-field\n            v-else-if=\"linkCategory === 'media'\"\n            v-model:value=\"linkTarget\"\n            :label=\"$tc('sw-text-editor-toolbar.link.linkTo')\"\n            :criteria=\"entityFilter\"\n            single-select\n        />\n        {% endblock %}\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_dynamic_url_field_button_remove %}\n    <sw-button\n        class=\"sw-dynamic-url-field__link-menu-buttons-button-remove\"\n        variant=\"ghost-danger\"\n        size=\"small\"\n        :disabled=\"!linkTarget\"\n        @click=\"removeLink\"\n    >\n        {{ $tc('global.default.remove') }}\n    </sw-button>\n    {% endblock %}\n</div>\n{% endblock %}\n","import type CriteriaType from 'src/core/data/criteria.data';\nimport type RepositoryType from 'src/core/data/repository.data';\nimport type EntityCollectionType from 'src/core/data/entity-collection.data';\nimport template from './sw-dynamic-url-field.html.twig';\nimport './sw-dynamic-url-field.scss';\n\nconst { Component } = Cicada;\nconst { Criteria, EntityCollection } = Cicada.Data;\n\ntype LinkCategories = 'link' | 'detail' | 'navigation' | 'media' | 'email' | 'phone';\n\n/**\n * @package admin\n *\n * @private\n */\nComponent.register('sw-dynamic-url-field', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    props: {\n        value: {\n            type: String,\n            required: false,\n            default: '',\n        },\n    },\n\n    data(): {\n        lastEmittedLink: string;\n        linkTarget: string;\n        isHTTPs: boolean;\n        displayAsButton: boolean;\n        linkCategory: LinkCategories;\n        categoryCollection?: EntityCollectionType<'category'>;\n    } {\n        return {\n            lastEmittedLink: '',\n            linkTarget: '',\n            isHTTPs: false,\n            displayAsButton: false,\n            linkCategory: 'link',\n            categoryCollection: undefined,\n        };\n    },\n\n    computed: {\n        seoUrlReplacePrefix(): string {\n            return '124c71d524604ccbad6042edce3ac799';\n        },\n\n        entityFilter(): CriteriaType {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addAssociation('options.group');\n\n            criteria.addFilter(\n                Criteria.multi('OR', [\n                    Criteria.equals('product.childCount', 0),\n                    Criteria.equals('product.childCount', null),\n                ]),\n            );\n\n            return criteria;\n        },\n\n        categoryRepository(): RepositoryType<'category'> {\n            return this.repositoryFactory.create('category');\n        },\n    },\n\n    watch: {\n        value: {\n            async handler(value): Promise<void> {\n                if (value === this.lastEmittedLink || typeof value !== 'string') {\n                    return;\n                }\n\n                const parsedResult = await this.parseLink(value);\n                this.linkCategory = parsedResult.type;\n                this.linkTarget = parsedResult.target;\n            },\n            immediate: true,\n        },\n        linkTarget: {\n            handler(): void {\n                const preparedLink = this.prepareLink();\n\n                if (preparedLink === this.value) {\n                    return;\n                }\n\n                this.lastEmittedLink = preparedLink;\n\n                this.$emit('update:value', preparedLink);\n            },\n        },\n    },\n\n    created(): void {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent(): void {\n            this.categoryCollection = this.getEmptyCategoryCollection();\n        },\n\n        getEmptyCategoryCollection(): EntityCollectionType<'category'> {\n            return new EntityCollection(\n                this.categoryRepository.route,\n                this.categoryRepository.entityName,\n                Cicada.Context.api,\n            );\n        },\n\n        getCategoryCollection(categoryId: string): Promise<EntityCollectionType<'category'>> {\n            const categoryCriteria = new Criteria(1, 25).addFilter(Criteria.equals('id', categoryId));\n            return this.categoryRepository.search(categoryCriteria);\n        },\n\n        async parseLink(link: string): Promise<{ type: LinkCategories; target: string }> {\n            const slicedLink = link.slice(0, -1).split('/');\n\n            if (\n                link.startsWith(this.seoUrlReplacePrefix) &&\n                [\n                    'navigation',\n                    'detail',\n                    'mediaId',\n                ].includes(slicedLink[1])\n            ) {\n                if (slicedLink[1] === 'navigation') {\n                    this.categoryCollection = await this.getCategoryCollection(slicedLink[2]);\n                } else if (slicedLink[1] === 'mediaId') {\n                    slicedLink[1] = 'media';\n                }\n                return {\n                    type: slicedLink[1] as LinkCategories,\n                    target: slicedLink[2],\n                };\n            }\n\n            if (link.startsWith('mailto:')) {\n                return {\n                    type: 'email',\n                    target: link.replace('mailto:', ''),\n                };\n            }\n\n            if (link.startsWith('tel:')) {\n                return {\n                    type: 'phone',\n                    target: link.replace('tel:', ''),\n                };\n            }\n\n            return {\n                type: 'link',\n                target: link,\n            };\n        },\n\n        replaceCategorySelection(category: { id: string }): void {\n            this.linkTarget = category.id;\n        },\n\n        removeCategorySelection(): void {\n            this.linkTarget = '';\n        },\n\n        prepareLink(): string {\n            if (!this.linkTarget) {\n                return '';\n            }\n\n            switch (this.linkCategory) {\n                case 'detail':\n                    return `${this.seoUrlReplacePrefix}/detail/${this.linkTarget}#`;\n                case 'navigation':\n                    return `${this.seoUrlReplacePrefix}/navigation/${this.linkTarget}#`;\n                case 'media':\n                    return `${this.seoUrlReplacePrefix}/mediaId/${this.linkTarget}#`;\n                case 'email':\n                    return `mailto:${this.linkTarget}`;\n                case 'phone':\n                    return `tel:${this.linkTarget.replace(/\\//, '')}`;\n                default:\n                    return this.linkTarget;\n            }\n        },\n\n        removeLink(): void {\n            this.linkTarget = '';\n        },\n\n        onSelectFieldChange(selectedLinkCategory: string): void {\n            this.linkTarget = '';\n            this.linkCategory = selectedLinkCategory as LinkCategories;\n        },\n    },\n});\n"],"names":["template","Component","Criteria","EntityCollection","criteria","value","parsedResult","preparedLink","categoryId","categoryCriteria","link","slicedLink","category","selectedLinkCategory"],"mappings":"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"}