{"version":3,"file":"index-ZPK_gn3E.js","sources":["../../../app/administration/src/module/sw-first-run-wizard/view/sw-first-run-wizard-cicada-account/sw-first-run-wizard-cicada-account.html.twig","../../../app/administration/src/module/sw-first-run-wizard/view/sw-first-run-wizard-cicada-account/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_first_run_wizard_cicada_account %}\n<div class=\"sw-first-run-wizard-cicada-account\">\n    <sw-container columns=\"1fr 1fr\">\n        <img\n            class=\"sw-first-run-wizard-cicada-account__illustration\"\n            :src=\"assetFilter('/administration/static/img/first-run-wizard/cicada-account.svg')\"\n            alt=\"\"\n        >\n        <div>\n            <h5 class=\"headline\">\n                {{ $tc('sw-first-run-wizard.cicadaAccount.headline') }}\n            </h5>\n            <p\n                class=\"message\"\n                v-html=\"$tc('sw-first-run-wizard.cicadaAccount.message')\"\n            ></p>\n            <p class=\"create-account\">\n                {{ $tc('sw-first-run-wizard.cicadaAccount.registerAccountText') }}\n                <a\n                    class=\"external-link\"\n                    :href=\"$tc('sw-first-run-wizard.cicadaAccount.registerAccountUrl')\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                >\n                    {{ $tc('sw-first-run-wizard.cicadaAccount.registerAccountHere') }}\n                </a>.\n            </p>\n            <div class=\"input-fields\">\n                <sw-text-field\n                    v-model:value=\"cicadaId\"\n                    name=\"cicadaId\"\n                    validation=\"required\"\n                    :label=\"$tc('sw-first-run-wizard.cicadaAccount.emailAddressLabel')\"\n                    :placeholder=\"$tc('sw-first-run-wizard.cicadaAccount.emailAddressPlaceholder')\"\n                />\n            </div>\n\n            <div class=\"input-fields\">\n                <sw-password-field\n                    v-model:value=\"password\"\n                    :label=\"$tc('sw-first-run-wizard.cicadaAccount.passwordLabel')\"\n                    :placeholder=\"$tc('sw-first-run-wizard.cicadaAccount.passwordPlaceholder')\"\n                />\n            </div>\n            <p class=\"forgot-password\">\n                <a\n                    class=\"external-link\"\n                    :href=\"$tc('sw-first-run-wizard.cicadaAccount.forgotPasswordUrl')\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                >\n                    {{ $tc('sw-first-run-wizard.cicadaAccount.forgotPasswordText') }}\n                </a>\n            </p>\n\n            <div\n                v-if=\"accountError\"\n                class=\"sw-first-run-wizard-cicada-account__error\"\n            >\n                <sw-alert\n                    :title=\"$tc('global.default.error')\"\n                    variant=\"error\"\n                    appearance=\"notification\"\n                >\n                    {{ $tc('sw-first-run-wizard.error.messageLoginDataInvalid') }}\n                </sw-alert>\n            </div>\n        </div>\n    </sw-container>\n</div>\n{% endblock %}\n","import template from './sw-first-run-wizard-cicada-account.html.twig';\nimport './sw-first-run-wizard-cicada-account.scss';\n\n/**\n * @package checkout\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['firstRunWizardService'],\n\n    emits: [\n        'frw-set-title',\n        'buttons-update',\n        'frw-redirect',\n    ],\n\n    data() {\n        return {\n            cicadaId: '',\n            password: '',\n            accountError: false,\n        };\n    },\n\n    computed: {\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.setTitle();\n            this.updateButtons();\n        },\n\n        setTitle() {\n            this.$emit('frw-set-title', this.$tc('sw-first-run-wizard.cicadaAccount.modalTitle'));\n        },\n\n        updateButtons() {\n            const disabledExtensionManagement = Cicada.State.get('context').app.config.settings.disableExtensionManagement;\n            const prevRoute = disabledExtensionManagement ? 'mailer.selection' : 'plugins';\n            const skipRoute = disabledExtensionManagement ? 'finish' : 'store';\n\n            const buttonConfig = [\n                {\n                    key: 'back',\n                    label: this.$tc('sw-first-run-wizard.general.buttonBack'),\n                    position: 'left',\n                    variant: null,\n                    action: `sw.first.run.wizard.index.${prevRoute}`,\n                    disabled: false,\n                },\n                {\n                    key: 'skip',\n                    label: this.$tc('sw-first-run-wizard.general.buttonSkip'),\n                    position: 'right',\n                    variant: null,\n                    action: `sw.first.run.wizard.index.${skipRoute}`,\n                    disabled: false,\n                },\n                {\n                    key: 'next',\n                    label: this.$tc('sw-first-run-wizard.general.buttonNext'),\n                    position: 'right',\n                    variant: 'primary',\n                    action: this.testCredentials.bind(this),\n                    disabled: false,\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        testCredentials() {\n            const { cicadaId, password } = this;\n\n            return this.firstRunWizardService\n                .checkCicadaId({\n                    cicadaId,\n                    password,\n                })\n                .then(() => {\n                    this.accountError = false;\n\n                    this.$emit('frw-redirect', 'sw.first.run.wizard.index.cicada.domain');\n\n                    return false;\n                })\n                .catch(() => {\n                    this.accountError = true;\n\n                    return true;\n                });\n        },\n    },\n};\n"],"names":["template","index","disabledExtensionManagement","prevRoute","skipRoute","buttonConfig","cicadaId","password"],"mappings":"AAAA,MAAeA,EAAA,suDCOAC,EAAA,CACX,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,uBAAuB,EAEhC,MAAO,CACH,gBACA,iBACA,cACH,EAED,MAAO,CACH,MAAO,CACH,SAAU,GACV,SAAU,GACV,aAAc,EAC1B,CACK,EAED,SAAU,CACN,aAAc,CACV,OAAO,OAAO,OAAO,UAAU,OAAO,CACzC,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,SAAQ,EACb,KAAK,cAAa,CACrB,EAED,UAAW,CACP,KAAK,MAAM,gBAAiB,KAAK,IAAI,8CAA8C,CAAC,CACvF,EAED,eAAgB,CACZ,MAAME,EAA8B,OAAO,MAAM,IAAI,SAAS,EAAE,IAAI,OAAO,SAAS,2BAC9EC,EAAYD,EAA8B,mBAAqB,UAC/DE,EAAYF,EAA8B,SAAW,QAErDG,EAAe,CACjB,CACI,IAAK,OACL,MAAO,KAAK,IAAI,wCAAwC,EACxD,SAAU,OACV,QAAS,KACT,OAAQ,6BAA6BF,CAAS,GAC9C,SAAU,EACb,EACD,CACI,IAAK,OACL,MAAO,KAAK,IAAI,wCAAwC,EACxD,SAAU,QACV,QAAS,KACT,OAAQ,6BAA6BC,CAAS,GAC9C,SAAU,EACb,EACD,CACI,IAAK,OACL,MAAO,KAAK,IAAI,wCAAwC,EACxD,SAAU,QACV,QAAS,UACT,OAAQ,KAAK,gBAAgB,KAAK,IAAI,EACtC,SAAU,EACb,CACjB,EAEY,KAAK,MAAM,iBAAkBC,CAAY,CAC5C,EAED,iBAAkB,CACd,KAAM,CAAE,SAAAC,EAAU,SAAAC,CAAU,EAAG,KAE/B,OAAO,KAAK,sBACP,cAAc,CACX,SAAAD,EACA,SAAAC,CACpB,CAAiB,EACA,KAAK,KACF,KAAK,aAAe,GAEpB,KAAK,MAAM,eAAgB,yCAAyC,EAE7D,GACV,EACA,MAAM,KACH,KAAK,aAAe,GAEb,GACV,CACR,CACJ,CACL"}