{"version":3,"file":"index-CtlxiVDY.js","sources":["../../../app/administration/src/module/sw-cms/component/sw-cms-sidebar/sw-cms-sidebar.html.twig","../../../app/administration/src/module/sw-cms/component/sw-cms-sidebar/index.ts"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_cms_sidebar %}\n<sw-sidebar class=\"sw-cms-sidebar\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_sidebar_page_settings %}\n    <sw-sidebar-item\n        ref=\"pageConfigSidebar\"\n        icon=\"regular-cog\"\n        :title=\"$tc('sw-cms.detail.sidebar.titlePageSettings')\"\n        :has-simple-badge=\"hasPageConfigErrors\"\n        badge-type=\"error\"\n        :disabled=\"page.locked || disabled\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_sidebar_page_settings_content %}\n        <sw-sidebar-collapse :expand-on-loading=\"true\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_sidebar_page_settings_header %}\n            <template #header>\n                <span>{{ $tc('sw-cms.detail.sidebar.headerPageSettings') }}</span>\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_sidebar_page_settings_form %}\n            <template #content>\n                <div class=\"sw-cms-sidebar__settings\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_page_settings_name_field %}\n                    <sw-text-field\n                        v-model:value=\"page.name\"\n                        :label=\"$tc('sw-cms.detail.label.pageName')\"\n                        :placeholder=\"placeholder(page, 'name')\"\n                        :error=\"pageNameError\"\n                    />\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_page_settings_css_class_field %}\n                    <sw-text-field\n                        v-model:value=\"page.cssClass\"\n                        :label=\"$tc('sw-cms.detail.label.pageCssClass')\"\n                        :placeholder=\"placeholder(page, 'cssClass')\"\n                        :help-text=\"$tc('sw-cms.detail.helpText.cssClassField')\"\n                    />\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_page_settings_type_field %}\n                    <sw-select-field\n                        v-tooltip.bottom=\"tooltipDisabled\"\n                        :value=\"page.type\"\n                        :label=\"$tc('sw-cms.detail.label.pageTypeSelection')\"\n                        :disabled=\"!isSystemDefaultLanguage || page.type === 'product_detail' || undefined\"\n                        @update:value=\"onPageTypeChange\"\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_sidebar_page_settings_type_field_options %}\n                        <option\n                            v-for=\"pageType in pageTypes\"\n                            :key=\"pageType.name\"\n                            :value=\"pageType.name\"\n                            :disabled=\"isDisabledPageType(pageType) || undefined\"\n                        >\n                            {{ $tc(pageType.title) }}\n                        </option>\n                        {% endblock %}\n                    </sw-select-field>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_page_settings_demo_field %}\n                    <sw-entity-single-select\n                        v-if=\"demoEntity !== null\"\n                        v-model:value=\"demoEntityId\"\n                        :label=\"$tc('sw-cms.detail.label.demoEntity')\"\n                        :placeholder=\"$tc('sw-cms.detail.placeholder.demoEntity')\"\n                        :entity=\"demoEntity\"\n                        :criteria=\"demoCriteria\"\n                        :context=\"demoContext\"\n                        show-clearable-button\n                        @update:value=\"onDemoEntityChange\"\n                    >\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_sidebar_page_settings_demo_field_variant_label %}\n                        <template\n                            v-if=\"demoEntity === 'product'\"\n                            #selection-label-property=\"{ item }\"\n                        >\n                            <sw-product-variant-info :variations=\"item.variation\">\n                                {{ item.translated.name || item.name }}\n                            </sw-product-variant-info>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_sidebar_page_settings_demo_field_result_item %}\n                        <template\n                            v-if=\"demoEntity === 'product'\"\n                            #result-item=\"{ item, index }\"\n                        >\n                            <sw-select-result\n                                v-bind=\"{ item, index }\"\n                            >\n\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_cms_sidebar_page_settings_demo_field_result_label %}\n                                <span class=\"sw-select-result__result-item-text\">\n                                    <sw-product-variant-info :variations=\"item.variation\">\n                                        {{ item.translated.name || item.name }}\n                                    </sw-product-variant-info>\n                                </span>\n                                {% endblock %}\n                            </sw-select-result>\n                        </template>\n                        {% endblock %}\n                    </sw-entity-single-select>\n                    {% endblock %}\n                </div>\n            </template>\n            {% endblock %}\n        </sw-sidebar-collapse>\n        {% endblock %}\n    </sw-sidebar-item>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_sidebar_block_overview %}\n    <sw-sidebar-item\n        ref=\"blockSelectionSidebar\"\n        icon=\"regular-plus-circle\"\n        :title=\"addBlockTitle\"\n        :disabled=\"currentDeviceView === 'form' || !isSystemDefaultLanguage || page.locked || disabled\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_sidebar_block_overview_content %}\n        <div class=\"sw-cms-sidebar__block-overview\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_sidebar_block_overview_category %}\n            <div class=\"sw-cms-sidebar__block-category\">\n                <sw-select-field\n                    v-model:value=\"currentBlockCategory\"\n                    :label=\"$tc('sw-cms.detail.label.blockCategorySelection')\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_block_overview_category_options %}\n                    <option\n                        v-for=\"blockCategory in cmsBlockCategories\"\n                        :key=\"blockCategory.value\"\n                        :value=\"blockCategory.value\"\n                    >\n                        {{ $tc(blockCategory.label) }}\n                    </option>\n                    {% endblock %}\n                </sw-select-field>\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_sidebar_block_overview_preview %}\n            <div\n                class=\"sw-cms-sidebar__block-selection\"\n            >\n                <sw-empty-state\n                    v-if=\"cmsBlocksBySelectedBlockCategory.length === 0 && currentBlockCategory === 'favorite'\"\n                    icon=\"solid-heart\"\n                    :absolute=\"false\"\n                    :title=\"$tc('sw-cms.detail.title.blockFavoriteEmptyState')\"\n                >\n                    {{ $tc('sw-cms.detail.label.blockFavoriteEmptyState') }}\n                </sw-empty-state>\n\n                <div\n                    v-for=\"block in cmsBlocksBySelectedBlockCategory\"\n                    :key=\"block.name\"\n                    class=\"sw-cms-sidebar__block\"\n                >\n\n                    <div class=\"sw-cms-sidebar__block-preview-with-actions\">\n                        <div\n                            v-draggable=\"{ dragGroup: 'cms-stage', data: { block }, onDrop: onBlockStageDrop }\"\n                            class=\"sw-cms-sidebar__block-preview\"\n                            :class=\"{ 'has--no-label': !block.label }\"\n                        >\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_cms_sidebar_block_overview_preview_component %}\n                            <component\n                                :is=\"block.previewComponent\"\n                                :block=\"block\"\n                            />\n                            {% endblock %}\n                        </div>\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_sidebar_block_overview_preview_favorite_action %}\n                        <sw-button\n                            class=\"sw-cms-sidebar__block-favorite\"\n                            size=\"small\"\n                            square\n                            block\n                            :disabled=\"block.appName === 'SwagCeToRiseUpsellingApp'\"\n                            @click=\"onToggleBlockFavorite(block.name)\"\n                        >\n                            <sw-icon\n                                v-if=\"cmsBlockFavorites.isFavorite(block.name)\"\n                                name=\"solid-heart\"\n                                size=\"20\"\n                                class=\"sw-cms-sidebar__icon-cms-block-favorite\"\n                            />\n                            <sw-icon\n                                v-else\n                                name=\"regular-heart\"\n                                size=\"20\"\n                                class=\"sw-cms-sidebar__icon-cms-block-favorite\"\n                            />\n                        </sw-button>\n                        {% endblock %}\n                    </div>\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_block_overview_preview_label %}\n                    <span\n                        v-if=\"block.label\"\n                        class=\"sw-cms-sidebar__block-label\"\n                    >\n                        {{ $tc(block.label) }}\n                    </span>\n                    {% endblock %}\n                </div>\n            </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </sw-sidebar-item>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_sidebar_block_and_section_settings %}\n    <sw-sidebar-item\n        ref=\"itemConfigSidebar\"\n        icon=\"regular-file-edit\"\n        :title=\"sidebarItemSettings\"\n        :disabled=\"(selectedBlock === null && selectedSection === null) || page.locked || disabled\"\n        @close-content=\"onCloseBlockConfig\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_sidebar_block_settings %}\n        <div class=\"sw-cms-sidebar__block-settings\">\n            <template v-if=\"selectedBlock !== null\">\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_sidebar_block_settings_content %}\n                <sw-sidebar-collapse :expand-on-loading=\"true\">\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_block_settings_header %}\n                    <template #header>\n                        <span>\n                            {{ $tc('sw-cms.sidebar.contentMenu.generalSettings') }}\n                        </span>\n                    </template>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_block_settings_form %}\n                    <template #content>\n                        <sw-cms-block-config\n                            :block=\"selectedBlock\"\n                            @block-delete=\"onBlockDelete\"\n                            @block-duplicate=\"onBlockDuplicate\"\n                        />\n                    </template>\n                    {% endblock %}\n                </sw-sidebar-collapse>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_sidebar_block_layout_settings_content %}\n                <sw-sidebar-collapse :expand-on-loading=\"false\">\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_block_layout_settings_header %}\n                    <template #header>\n                        <span> {{ $tc('sw-cms.sidebar.contentMenu.layoutSettings') }}</span>\n                    </template>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_block_layout_settings_form %}\n                    <template #content>\n                        <sw-cms-block-layout-config :block=\"selectedBlock\" />\n                    </template>\n                    {% endblock %}\n                </sw-sidebar-collapse>\n                {% endblock %}\n\n                <sw-sidebar-collapse :expand-on-loading=\"false\">\n                    <template #header>\n                        <span>{{ $tc('sw-cms.sidebar.contentMenu.visibilitySettings') }}</span>\n                    </template>\n                    <template #content>\n                        <sw-cms-visibility-config\n                            class=\"sw-cms-sidebar__visibility-config-block\"\n                            :visibility=\"selectedBlock.visibility\"\n                            @visibility-change=\"(viewport, isVisible) => onVisibilityChange(selectedBlock, viewport, isVisible)\"\n                        />\n                    </template>\n                </sw-sidebar-collapse>\n            </template>\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_sidebar_section_settings %}\n        <div class=\"sw-cms-sidebar__section-settings\">\n            <template v-if=\"selectedSection !== null\">\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_sidebar_section_settings_content %}\n                <sw-sidebar-collapse :expand-on-loading=\"true\">\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_section_settings_header %}\n                    <template #header>\n                        <span>\n                            {{ $tc('sw-cms.sidebar.contentMenu.generalSettings') }}\n                        </span>\n                    </template>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_section_settings_form %}\n                    <template #content>\n                        <sw-cms-section-config\n                            :section=\"selectedSection\"\n                            @section-duplicate=\"onSectionDuplicate\"\n                            @section-delete=\"onSectionDelete\"\n                        />\n                    </template>\n                    {% endblock %}\n                </sw-sidebar-collapse>\n\n                <sw-sidebar-collapse :expand-on-loading=\"false\">\n                    <template #header>\n                        <span>{{ $tc('sw-cms.sidebar.contentMenu.visibilitySettings') }}</span>\n                    </template>\n                    <template #content>\n                        <sw-cms-visibility-config\n                            class=\"sw-cms-sidebar__visibility-config-section\"\n                            :visibility=\"selectedSection.visibility\"\n                            @visibility-change=\"(viewport, isVisible) => onVisibilityChange(selectedSection, viewport, isVisible)\"\n                        />\n                    </template>\n                </sw-sidebar-collapse>\n                {% endblock %}\n            </template>\n        </div>\n        {% endblock %}\n    </sw-sidebar-item>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_sidebar_navigator %}\n    <sw-sidebar-item\n        ref=\"blockNavigator\"\n        icon=\"regular-layer-group\"\n        :title=\"$tc('sw-cms.detail.sidebar.titleNavigator')\"\n        :disabled=\"!page.sections.length === 0 || currentDeviceView === 'form' || page.locked || disabled\"\n        @click=\"onSidebarNavigatorClick\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_sidebar_navigator_content %}\n        <div class=\"sw-cms-sidebar__navigator\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_sidebar_navigator_section %}\n            <div\n                v-for=\"(section, sectionIndex) in page.sections\"\n                :id=\"`sw-cms-sidebar__section-${section.id}`\"\n                :key=\"section.id\"\n                class=\"sw-cms-sidebar__navigator-section\"\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_sidebar_navigator_section_header %}\n                <div class=\"sw-cms-sidebar__navigator-section-header\">\n                    <template v-if=\"section.name\">\n                        {{ $tc('sw-cms.section.layoutSection') }} - {{ section.name }}\n                    </template>\n\n                    <template v-else-if=\"section.type === 'sidebar'\">\n                        {{ $tc('sw-cms.section.isSidebar') }}\n                    </template>\n\n                    <template v-else>\n                        {{ $tc('sw-cms.section.isDefault') }}\n                    </template>\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_navigator_section_menu %}\n                    <sw-context-button :key=\"section.position\">\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_sidebar_navigator_section_menu_move_up %}\n                        <sw-context-menu-item\n                            class=\"sw-cms-sidebar__navigator-section-move-up\"\n                            :disabled=\"section.position === 0 || undefined\"\n                            @click=\"moveSectionUp(section)\"\n                        >\n                            {{ $tc('sw-cms.sidebar.contentMenu.moveUp') }}\n                        </sw-context-menu-item>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_sidebar_navigator_section_menu_move_down %}\n                        <sw-context-menu-item\n                            class=\"sw-cms-sidebar__navigator-section-move-down\"\n                            :disabled=\"section.position === page.sections.length - 1 || undefined\"\n                            @click=\"moveSectionDown(section)\"\n                        >\n                            {{ $tc('sw-cms.sidebar.contentMenu.moveDown') }}\n                        </sw-context-menu-item>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_sidebar_navigator_section_menu_settings %}\n                        <sw-context-menu-item\n                            class=\"sw-cms-sidebar__navigator-section-settings\"\n                            @click=\"openSectionSettings(sectionIndex)\"\n                        >\n                            {{ $tc('sw-cms.sidebar.contentMenu.settings') }}\n                        </sw-context-menu-item>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_sidebar_navigator_section_menu_duplicate %}\n                        <sw-context-menu-item\n                            class=\"sw-cms-sidebar__navigator-section-duplicate\"\n                            :disabled=\"!sectionIsDuplicable(section)\"\n                            @click=\"onSectionDuplicate(section)\"\n                        >\n                            {{ $tc('global.default.duplicate') }}\n                        </sw-context-menu-item>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_sidebar_navigator_section_menu_delete %}\n                        <sw-context-menu-item\n                            class=\"sw-cms-sidebar__navigator-section-delete\"\n                            variant=\"danger\"\n                            @click=\"onSectionDelete(section.id)\"\n                        >\n                            {{ $tc('sw-cms.general.buttonDelete') }}\n                        </sw-context-menu-item>\n                        {% endblock %}\n                    </sw-context-button>\n                    {% endblock %}\n                </div>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_sidebar_navigator_main_elements %}\n                <template v-if=\"getMainContentBlocks(section.blocks).length > 0\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_navigator_main_element %}\n                    <template\n                        v-for=\"block in getMainContentBlocks(section.blocks)\"\n                        :key=\"block.id\"\n                    >\n                        <sw-cms-sidebar-nav-element\n                            v-draggable=\"getDragData(block, sectionIndex)\"\n                            v-droppable=\"getDropData(block, sectionIndex)\"\n                            :block=\"block\"\n                            class=\"sw-cms-sidebar__navigator-block\"\n                            :removable=\"blockIsRemovable(block)\"\n                            :duplicable=\"blockIsDuplicable(block)\"\n                            :class=\"{ 'is--dragging': block.isDragging }\"\n                            @block-delete=\"onBlockDelete($event, section)\"\n                            @block-duplicate=\"onBlockDuplicate($event, section)\"\n                        />\n                    </template>\n                    {% endblock %}\n                </template>\n\n                <template v-else>\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_navigator_main_empty %}\n                    <div\n                        :key=\"section.id + '_main'\"\n                        v-droppable=\"getDropData({ position: 0, sectionPosition: 'main' }, sectionIndex)\"\n                        class=\"sw-cms-sidebar__navigator-empty-element\"\n                    >\n                        {{ $tc('sw-cms.detail.label.addBlocks') }}\n                    </div>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                <template v-if=\"section.type === 'sidebar'\">\n                    <div class=\"sw-cms-sidebar__navigator-section-spacer\"></div>\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_sidebar_navigator_sidebar_elements %}\n                    <template v-if=\"getSidebarContentBlocks(section.blocks).length > 0\">\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_sidebar_navigator_sidebar_element %}\n                        <template\n                            v-for=\"block in getSidebarContentBlocks(section.blocks)\"\n                            :key=\"block.id\"\n                        >\n                            <sw-cms-sidebar-nav-element\n                                v-draggable=\"getDragData(block, sectionIndex)\"\n                                v-droppable=\"getDropData(block, sectionIndex)\"\n                                :block=\"block\"\n                                :removable=\"blockIsRemovable(block)\"\n                                class=\"sw-cms-sidebar__navigator-block is--sidebar\"\n                                :class=\"{ 'is--dragging': block.isDragging }\"\n                                @block-delete=\"onBlockDelete($event, section)\"\n                                @block-duplicate=\"onBlockDuplicate($event, section)\"\n                            />\n                        </template>\n                        {% endblock %}\n                    </template>\n\n                    <template v-else>\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_sidebar_navigator_sidebar_empty %}\n                        <div\n                            :key=\"section.id + '_sidebar'\"\n                            v-droppable=\"getDropData({ position: 0, sectionPosition: 'sidebar' }, sectionIndex)\"\n                            class=\"sw-cms-sidebar__navigator-empty-element\"\n                        >\n                            {{ $tc('sw-cms.detail.label.addBlocks') }}\n                        </div>\n                        {% endblock %}\n                    </template>\n                    {% endblock %}\n                </template>\n            </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </sw-sidebar-item>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_sidebar_layout_assignment %}\n    <sw-sidebar-item\n        ref=\"layoutAssignment\"\n        class=\"sw-cms-sidebar__layout-assignment\"\n        icon=\"regular-share\"\n        :title=\"$tc('sw-cms.detail.sidebar.titleLayoutAssignment')\"\n        :disabled=\"page.locked || disabled\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_sidebar_layout_assignment_content %}\n        <div class=\"sw-cms-sidebar__layout-assignment-content\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_sidebar_layout_assignment_headline %}\n            <h3 class=\"sw-cms-sidebar__layout-assignment-headline\">\n                {{ $tc('sw-cms.sidebar.layoutAssignment.headline') }}\n            </h3>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_sidebar_layout_assignment_info_text %}\n            <p class=\"sw-cms-sidebar__layout-assignment-info-text\">\n                {{ $tc('sw-cms.sidebar.layoutAssignment.infoText') }}\n            </p>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_sidebar_layout_assignment_action_open %}\n            <sw-button\n                variant=\"ghost\"\n                size=\"small\"\n                class=\"sw-cms-sidebar__layout-assignment-open\"\n                @click=\"onOpenLayoutAssignment\"\n            >\n                {{ $tc('sw-cms.sidebar.layoutAssignment.actionAssignLayout') }}\n            </sw-button>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <div\n            v-if=\"showDefaultLayoutSelection\"\n            class=\"sw-cms-sidebar__layout-set-as-default-content\"\n        >\n            <h3 class=\"sw-cms-sidebar__layout-set-as-default-headline\">\n                {{ $tc('sw-cms.sidebar.layoutSetAsDefault.headline') }}\n            </h3>\n\n            <p class=\"sw-cms-sidebar__layout-set-as-default-info-text\">\n                {{ $tc('sw-cms.components.setDefaultLayoutModal.infoText', page.type === 'product_detail') }}\n            </p>\n\n            <sw-button\n                variant=\"ghost\"\n                size=\"small\"\n                class=\"sw-cms-sidebar__layout-set-as-default-open\"\n                @click=\"onOpenLayoutSetAsDefault\"\n            >\n                {{ $tc('sw-cms.sidebar.layoutSetAsDefault.actionSetAsDefaultLayout') }}\n            </sw-button>\n        </div>\n    </sw-sidebar-item>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_sidebar_navigator_confirm_modal %}\n    <sw-modal\n        v-if=\"showSidebarNavigatorModal\"\n        class=\"sw-cms-sidebar__navigator-confirm-modal\"\n        :title=\"$tc('global.default.warning')\"\n        variant=\"small\"\n        @modal-close=\"onSidebarNavigationCancel\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_sidebar_navigator_confirm_modal_content %}\n        <p class=\"sw-confirm-modal__text\">\n            {{ $tc('sw-cms.detail.sidebar.confirmTextNavigator') }}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_sidebar_navigator_confirm_modal_content_input_reminder %}\n            <sw-checkbox-field\n                v-model:value=\"navigatorDontRemind\"\n                class=\"sw-cms-sidebar__navigator-confirm-modal-reminder\"\n                :label=\"$tc('sw-cms.detail.sidebar.confirmReminderNavigator')\"\n            />\n            {% endblock %}\n        </p>\n        {% endblock %}\n\n        <template #modal-footer>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_sidebar_navigator_confirm_modal_content_footer %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_sidebar_navigator_confirm_modal_content_footer_cancel %}\n            <sw-button\n                class=\"sw-cms-sidebar__navigator-confirm-modal-cancel\"\n                size=\"small\"\n                @click=\"onSidebarNavigationCancel\"\n            >\n                {{ $tc('global.default.cancel') }}\n            </sw-button>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_sidebar_navigator_confirm_modal_content_footer_confirm %}\n            <sw-button\n                class=\"sw-cms-sidebar__navigator-confirm-modal-confirm\"\n                variant=\"primary\"\n                size=\"small\"\n                @click=\"onSidebarNavigationConfirm\"\n            >\n                {{ $tc('global.default.confirm') }}\n            </sw-button>\n            {% endblock %}\n            {% endblock %}\n        </template>\n    </sw-modal>\n    {% endblock %}\n</sw-sidebar>\n{% endblock %}\n","import { type PropType } from 'vue';\nimport type EntityCollection from '@cicada-ag/meteor-admin-sdk/es/_internals/data/EntityCollection';\nimport template from './sw-cms-sidebar.html.twig';\nimport CMS from '../../constant/sw-cms.constant';\nimport './sw-cms-sidebar.scss';\nimport { type PageType } from '../../service/cms-page-type.service';\nimport type MediaUploadResult from '../../shared/MediaUploadResult';\n\nconst { Component, Mixin } = Cicada;\nconst { mapPropertyErrors } = Component.getComponentHelper();\nconst { Criteria } = Cicada.Data;\nconst { cloneDeep } = Cicada.Utils.object;\nconst types = Cicada.Utils.types;\n\ntype DraggableBlock = EntitySchema.Entity<'cms_block'> & {\n    isDragging?: boolean;\n};\n\ntype DragData = {\n    block: DraggableBlock;\n    sectionIndex: number;\n};\n\ntype DropData = {\n    dropIndex: number;\n    block: DraggableBlock;\n    section: EntitySchema.Entity<'cms_section'> | null;\n    sectionPosition: string;\n    sectionIndex: number;\n};\n\ntype DragObject = {\n    delay: number;\n    dragGroup: string;\n    validDragCls: null;\n    data: DragData;\n    onDragEnter: (dragData: DragData, dropData: DropData, validDrop: boolean) => void;\n    onDrop: (dragData: DragData) => void;\n};\n\ntype DropObject = {\n    dragGroup: string;\n    data: DropData;\n    onDrop: (dragData: DragData, dropData: DropData) => void;\n};\n\n/**\n * @package discovery\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default Cicada.Component.wrapComponentConfig({\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'acl',\n        'cmsService',\n        'repositoryFactory',\n        'feature',\n        'cmsBlockFavorites',\n        'cmsPageTypeService',\n    ],\n\n    emits: [\n        'page-type-change',\n        'demo-entity-change',\n        'page-save',\n        'block-stage-drop',\n        'current-block-change',\n        'section-duplicate',\n        'block-duplicate',\n        'page-update',\n        'open-layout-assignment',\n        'open-layout-set-as-default',\n    ],\n\n    mixins: [\n        Mixin.getByName('cms-state'),\n        Mixin.getByName('placeholder'),\n    ],\n\n    props: {\n        page: {\n            type: Object as PropType<EntitySchema.Entity<'cms_page'>>,\n            required: true,\n        },\n\n        demoEntity: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        demoEntityIdProp: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        isDefaultLayout: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            demoEntityId: this.demoEntityIdProp,\n            currentBlockCategory: 'text' as string,\n            currentDragSectionIndex: null as number | null,\n            showSidebarNavigatorModal: false,\n            navigatorDontRemind: false,\n        };\n    },\n\n    computed: {\n        pageTypes() {\n            return this.cmsPageTypeService.getTypes();\n        },\n\n        blockRepository() {\n            return this.repositoryFactory.create('cms_block');\n        },\n\n        slotRepository() {\n            return this.repositoryFactory.create('cms_slot');\n        },\n\n        cmsBlocks() {\n            const currentPageType = Cicada.Store.get('cmsPage').currentPageType;\n\n            if (!currentPageType) {\n                return {};\n            }\n\n            const blocks = Object.entries(this.cmsService.getCmsBlockRegistry()).filter(\n                ([\n                    name,\n                    block,\n                ]) => {\n                    return block && !block.hidden && this.cmsService.isBlockAllowedInPageType(name, currentPageType);\n                },\n            );\n\n            return Object.fromEntries(blocks);\n        },\n\n        cmsBlockCategories() {\n            const defaultCategories = [\n                {\n                    value: 'favorite',\n                    label: 'sw-cms.detail.label.blockCategoryFavorite',\n                },\n                {\n                    value: 'text',\n                    label: 'sw-cms.detail.label.blockCategoryText',\n                },\n                {\n                    value: 'image',\n                    label: 'sw-cms.detail.label.blockCategoryImage',\n                },\n                {\n                    value: 'video',\n                    label: 'sw-cms.detail.label.blockCategoryVideo',\n                },\n                {\n                    value: 'text-image',\n                    label: 'sw-cms.detail.label.blockCategoryTextImage',\n                },\n                {\n                    value: 'commerce',\n                    label: 'sw-cms.detail.label.blockCategoryCommerce',\n                },\n                {\n                    value: 'sidebar',\n                    label: 'sw-cms.detail.label.blockCategorySidebar',\n                },\n                {\n                    value: 'form',\n                    label: 'sw-cms.detail.label.blockCategoryForm',\n                },\n                {\n                    value: 'html',\n                    label: 'sw-cms.detail.label.blockCategoryHtml',\n                },\n            ];\n\n            // Check if blocks with the category 'app' are available\n            if (\n                Object.values(this.cmsService.getCmsBlockRegistry()).some((block) => {\n                    return block?.category === 'app';\n                })\n            ) {\n                defaultCategories.push({\n                    value: 'app',\n                    label: 'sw-cms.detail.label.blockCategoryApp',\n                });\n            }\n\n            // Get all missing categories from the block registry\n            const categories = Object.values(this.cmsService.getCmsBlockRegistry()).map((block) => block?.category);\n            const uniqueCategories = [...new Set(categories)] as string[];\n\n            // Add all missing categories to the default categories\n            uniqueCategories.forEach((category) => {\n                if (defaultCategories.some((defaultCategory) => defaultCategory.value === category)) {\n                    return;\n                }\n\n                if (this.isDuplicateCategory(category)) {\n                    return;\n                }\n\n                defaultCategories.push({\n                    value: category,\n                    label: `apps.sw-cms.detail.label.blockCategory.${category}`,\n                });\n            });\n\n            return defaultCategories;\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        addBlockTitle() {\n            if (!this.isSystemDefaultLanguage) {\n                return this.$tc('sw-cms.general.disabledAddingBlocksToolTip');\n            }\n\n            return this.$tc('sw-cms.detail.sidebar.titleBlockOverview');\n        },\n\n        pageSections() {\n            return this.page.sections;\n        },\n\n        sidebarItemSettings() {\n            if (this.selectedBlock !== null) {\n                return this.$tc('sw-cms.detail.sidebar.titleBlockSettings');\n            }\n\n            return this.$tc('sw-cms.detail.sidebar.titleSectionSettings');\n        },\n\n        tooltipDisabled() {\n            return {\n                message: this.$tc('sw-cms.detail.tooltip.cannotSelectProductPageLayout'),\n                disabled: this.page.type !== 'product_detail',\n            };\n        },\n\n        demoCriteria() {\n            if (this.demoEntity === 'product') {\n                const criteria = new Criteria(1, 25);\n                criteria.addAssociation('options.group');\n\n                return criteria;\n            }\n\n            return new Criteria(1, 25);\n        },\n\n        demoContext() {\n            if (this.demoEntity === 'product') {\n                return { ...Cicada.Context.api, inheritance: true };\n            }\n\n            return Cicada.Context.api;\n        },\n\n        blockTypes() {\n            return Object.keys(this.cmsService.getCmsBlockRegistry());\n        },\n\n        pageConfigErrors() {\n            return [this.pageNameError].filter((error) => !!error);\n        },\n\n        hasPageConfigErrors() {\n            return this.pageConfigErrors.length > 0;\n        },\n\n        showDefaultLayoutSelection() {\n            if (\n                !this.acl.can('system_config:read') ||\n                !this.acl.can('system_config:update') ||\n                !this.acl.can('system_config:create') ||\n                !this.acl.can('system_config:delete')\n            ) {\n                return false;\n            }\n\n            if (this.page.type === 'product_list' || this.page.type === 'product_detail') {\n                return !this.isDefaultLayout;\n            }\n\n            return false;\n        },\n\n        cmsBlocksBySelectedBlockCategory() {\n            const result = Object.values(this.cmsBlocks).filter((block) => block && !block.hidden);\n\n            if (this.currentBlockCategory === 'favorite') {\n                return result.filter((block) => block && this.cmsBlockFavorites.isFavorite(block.name));\n            }\n\n            return result.filter((block) => block && block.category === this.currentBlockCategory);\n        },\n\n        ...mapPropertyErrors('page', ['name']),\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.blockTypes.some((blockName) => this.cmsBlockFavorites.isFavorite(blockName))) {\n                this.currentBlockCategory = 'favorite';\n            }\n        },\n\n        onPageTypeChange(pageType: PageType) {\n            this.$emit('page-type-change', pageType);\n        },\n\n        onDemoEntityChange(demoEntityId: string) {\n            this.$emit('demo-entity-change', demoEntityId);\n        },\n\n        onCloseBlockConfig() {\n            const store = Cicada.Store.get('cmsPage');\n            store.removeSelectedBlock();\n            store.removeSelectedSection();\n        },\n\n        isDisabledPageType(pageType: PageType) {\n            if (this.page.type === 'product_detail') {\n                return true;\n            }\n\n            if (this.page.type.includes('custom_entity_')) {\n                return !pageType.name.includes('custom_entity_');\n            }\n\n            return pageType.name === 'product_detail' || pageType.name.includes('custom_entity_');\n        },\n\n        openSectionSettings(sectionIndex: number) {\n            Cicada.Store.get('cmsPage').setSection(this.page.sections![sectionIndex]);\n\n            const itemConfigSidebar = this.$refs.itemConfigSidebar as {\n                openContent: () => void;\n            };\n            itemConfigSidebar.openContent();\n        },\n\n        blockIsRemovable(block: EntitySchema.Entity<'cms_block'>) {\n            const cmsBlocks = this.cmsService.getCmsBlockRegistry();\n            return cmsBlocks[block.type]?.removable && this.isSystemDefaultLanguage;\n        },\n\n        blockIsUnique(block: EntitySchema.Entity<'cms_block'>) {\n            if (this.page.type !== CMS.PAGE_TYPES.PRODUCT_DETAIL) {\n                return false;\n            }\n\n            return block.slots!.some((slot) => {\n                return CMS.UNIQUE_SLOTS_KEBAB.includes(slot.type);\n            });\n        },\n\n        blockIsDuplicable(block: EntitySchema.Entity<'cms_block'>) {\n            return !this.blockIsUnique(block);\n        },\n\n        sectionIsDuplicable(section: EntitySchema.Entity<'cms_section'>) {\n            return section.blocks!.every((block) => this.blockIsDuplicable(block));\n        },\n\n        onBlockDragSort(dragData: DragData, dropData: DropData, validDrop: boolean) {\n            if (!validDrop) {\n                return;\n            }\n\n            const dragSectionIndex = dragData.sectionIndex;\n            const dropSectionIndex = dropData.sectionIndex;\n\n            const dropSection = this.page.sections![dropSectionIndex];\n\n            if (\n                dragSectionIndex < 0 ||\n                dragSectionIndex >= this.page.sections!.length ||\n                dropSectionIndex < 0 ||\n                dropSectionIndex >= this.page.sections!.length\n            ) {\n                return;\n            }\n\n            if (dragData.block.sectionPosition !== dropData.block.sectionPosition) {\n                dragData.block.isDragging = true;\n                dragData.block.sectionPosition = dropData.block.sectionPosition;\n            }\n\n            // set current drag index to initial drag start index\n            if (this.currentDragSectionIndex === null) {\n                this.currentDragSectionIndex = dragSectionIndex;\n            }\n\n            // check if the section where the block is moved already has the block\n            const dropSectionHasBlock = dropSection.blocks!.has(dragData.block.id);\n            if (this.currentDragSectionIndex !== dropSectionIndex && !dropSectionHasBlock) {\n                dragData.block.isDragging = true;\n\n                // calculate the remove index (this may differ since the block is moved each time it enters a new\n                // section while the dragSectionIndex is the static start index of the drag\n                let removeIndex = dragSectionIndex;\n                if (\n                    this.currentDragSectionIndex !== dragSectionIndex &&\n                    Math.abs(this.currentDragSectionIndex - dropSectionIndex) === 1\n                ) {\n                    removeIndex = this.currentDragSectionIndex;\n                }\n\n                // drag direction is upwards so the currentDragSectionIndex is incremented\n                if (this.currentDragSectionIndex - dropSectionIndex < 0) {\n                    this.currentDragSectionIndex += 1;\n                }\n\n                // drag direction is downwards so the currentDragSectionIndex is decremented\n                if (this.currentDragSectionIndex - dropSectionIndex > 0) {\n                    this.currentDragSectionIndex -= 1;\n                }\n\n                dragData.block.sectionId = dropSection.id;\n\n                dropSection.blocks!.add(dragData.block);\n\n                const oldSection = this.page.sections![removeIndex];\n\n                oldSection.blocks!.remove(dragData.block.id);\n                oldSection._origin.blocks!.remove(dragData.block.id);\n\n                this.refreshPosition(oldSection.blocks!);\n                this.refreshPosition(dropSection.blocks!);\n                return;\n            }\n\n            if (dragData.block.position === dropData.block.position) {\n                return;\n            }\n\n            // move item inside the section\n            this.page.sections![dropSectionIndex].blocks!.moveItem(dragData.block.position, dropData.block.position);\n            this.refreshPosition(dropSection.blocks!);\n        },\n\n        refreshPosition(blocks: EntityCollection<'cms_block'>) {\n            return blocks.forEach((block, index) => {\n                block.position = index;\n            });\n        },\n\n        onSidebarNavigatorClick() {\n            const blockNavigator = this.$refs.blockNavigator as {\n                isActive: boolean;\n            };\n\n            if (!blockNavigator.isActive) {\n                return;\n            }\n\n            if (localStorage.getItem('cmsNavigatorDontRemind') === 'true') {\n                this.onSidebarNavigationConfirm();\n                return;\n            }\n\n            this.navigatorDontRemind = false;\n            this.showSidebarNavigatorModal = true;\n        },\n\n        onSidebarNavigationConfirm() {\n            if (this.navigatorDontRemind) {\n                localStorage.setItem('cmsNavigatorDontRemind', 'true');\n            }\n\n            this.$emit('page-save');\n            this.showSidebarNavigatorModal = false;\n        },\n\n        onSidebarNavigationCancel() {\n            const pageConfigSidebar = this.$refs.pageConfigSidebar as {\n                openContent: () => void;\n            };\n\n            this.showSidebarNavigatorModal = false;\n            void this.$nextTick(() => {\n                pageConfigSidebar.openContent();\n            });\n        },\n\n        getDragData(block: EntitySchema.Entity<'cms_block'>, sectionIndex: number): DragObject {\n            return {\n                delay: 300,\n                dragGroup: 'cms-navigator',\n                data: { block, sectionIndex },\n                validDragCls: null,\n                onDragEnter: this.onBlockDragSort.bind(this),\n                onDrop: this.onBlockDragStop.bind(this),\n            };\n        },\n\n        getDropData(block: EntitySchema.Entity<'cms_block'>, sectionIndex: number): DropObject {\n            return {\n                dragGroup: 'cms-navigator',\n                data: {\n                    block,\n                    sectionIndex,\n                    dropIndex: -1,\n                    section: null,\n                    sectionPosition: '',\n                },\n                onDrop: this.onBlockDropAbort.bind(this),\n            };\n        },\n\n        onBlockDragStop(data: DragData) {\n            this.currentDragSectionIndex = null;\n            data.block.isDragging = false;\n        },\n\n        onBlockDropAbort(dragData: DragData, dropData: DropData) {\n            const dragSectionIndex = dragData.sectionIndex;\n            const dropSectionIndex = dropData.sectionIndex;\n\n            if (dragSectionIndex < 0 || dropSectionIndex < 0) {\n                return;\n            }\n\n            const dragSectionHasBlock = this.page.sections![dragSectionIndex].blocks!.has(dragData.block.id);\n            const dropSectionHasBlock = this.page.sections![dropSectionIndex].blocks!.has(dragData.block.id);\n\n            if (!dragSectionHasBlock && !dropSectionHasBlock) {\n                this.page.sections![dragSectionIndex].blocks!.add(dragData.block);\n            }\n        },\n\n        onBlockStageDrop(dragData: DragData, dropData: DropData) {\n            if (!dropData || !dragData.block || dropData.dropIndex < 0 || !dropData.section) {\n                return;\n            }\n\n            const cmsBlocks = this.cmsService.getCmsBlockRegistry();\n            const section = dropData.section;\n            const blockConfig = cmsBlocks[dragData.block.name!];\n            const newBlock = this.blockRepository.create();\n\n            newBlock.type = dragData.block.name!;\n            newBlock.position = dropData.dropIndex;\n            newBlock.sectionPosition = dropData.sectionPosition;\n            newBlock.sectionId = section.id;\n\n            newBlock.visibility = {\n                desktop: true,\n                tablet: true,\n                mobile: true,\n            };\n\n            Object.assign(newBlock, cloneDeep(blockConfig?.defaultConfig || {}));\n\n            Object.keys(blockConfig?.slots as object).forEach((slotName) => {\n                const slotConfig = blockConfig?.slots![slotName];\n                const element = this.slotRepository.create();\n                element.blockId = newBlock.id;\n                element.slot = slotName;\n\n                if (typeof slotConfig === 'object') {\n                    element.type = slotConfig.type;\n\n                    if (slotConfig.default && types.isPlainObject(slotConfig.default)) {\n                        Object.assign(element, cloneDeep(slotConfig.default));\n                    }\n\n                    const slotDefaultData = slotConfig.default?.data;\n\n                    if (\n                        [\n                            slotDefaultData?.media?.source,\n                            slotDefaultData?.sliderItems?.source,\n                        ].includes('default')\n                    ) {\n                        element.config = {\n                            ...(element.config as object),\n                            ...slotDefaultData,\n                        };\n                    }\n                } else {\n                    element.type = slotConfig as unknown as string;\n                }\n\n                newBlock.slots!.add(element);\n            });\n            this.page.sections![section.position].blocks!.splice(dropData.dropIndex, 0, newBlock);\n\n            this.$emit('block-stage-drop');\n            this.$emit('current-block-change', section.id, newBlock);\n        },\n\n        moveSectionUp(section: EntitySchema.Entity<'cms_section'>) {\n            this.page.sections!.moveItem(section.position, section.position - 1);\n\n            this.$emit('page-save', true);\n        },\n\n        moveSectionDown(section: EntitySchema.Entity<'cms_section'>) {\n            this.page.sections!.moveItem(section.position, section.position + 1);\n\n            this.$emit('page-save', true);\n        },\n\n        onSectionDuplicate(section: EntitySchema.Entity<'cms_section'>) {\n            this.$emit('section-duplicate', section);\n        },\n\n        onSectionDelete(sectionId: string) {\n            Cicada.Store.get('cmsPage').removeSelectedSection();\n            this.page.sections!.remove(sectionId);\n            this.$emit('page-save');\n        },\n\n        onBlockDelete(block: EntitySchema.Entity<'cms_block'>, section: EntitySchema.Entity<'cms_section'> | null) {\n            if (!section) {\n                section = this.page.sections!.get(block.sectionId);\n            }\n\n            section?.blocks?.remove(block.id);\n\n            if (this.selectedBlock && this.selectedBlock.id === block.id) {\n                Cicada.Store.get('cmsPage').removeSelectedBlock();\n            }\n\n            this.$emit('page-save', true);\n        },\n\n        onBlockDuplicate(block: EntitySchema.Entity<'cms_block'>, section: EntitySchema.Entity<'cms_section'> | null) {\n            if (!section) {\n                section = this.page.sections!.get(block.sectionId);\n            }\n\n            this.$emit('block-duplicate', block, section);\n        },\n\n        onRemoveSectionBackgroundMedia(section: EntitySchema.Entity<'cms_section'>) {\n            section.backgroundMediaId = undefined;\n            section.backgroundMedia = undefined;\n\n            this.pageUpdate();\n        },\n\n        onSetSectionBackgroundMedia(\n            [mediaItem]: [EntitySchema.Entity<'media'>],\n            section: EntitySchema.Entity<'cms_section'>,\n        ) {\n            section.backgroundMediaId = mediaItem.id;\n            section.backgroundMedia = mediaItem;\n\n            this.pageUpdate();\n        },\n\n        onToggleBlockFavorite(blockName: string) {\n            this.cmsBlockFavorites.update(!this.cmsBlockFavorites.isFavorite(blockName), blockName);\n        },\n\n        successfulUpload(media: MediaUploadResult, section: EntitySchema.Entity<'cms_section'>) {\n            section.backgroundMediaId = media.targetId;\n\n            void this.mediaRepository.get(media.targetId).then((mediaItem) => {\n                section.backgroundMedia = mediaItem ?? undefined;\n                this.pageUpdate();\n            });\n        },\n\n        uploadTag(section: EntitySchema.Entity<'cms_section'>) {\n            return `cms-section-media-config-${section.id}`;\n        },\n\n        getMainContentBlocks(sectionBlocks: EntityCollection<'cms_block'>) {\n            return sectionBlocks.filter((block) => this.blockTypeExists(block.type) && block.sectionPosition === 'main');\n        },\n\n        getSidebarContentBlocks(sectionBlocks: EntityCollection<'cms_block'>) {\n            return sectionBlocks.filter((block) => this.blockTypeExists(block.type) && block.sectionPosition === 'sidebar');\n        },\n\n        pageUpdate() {\n            this.$emit('page-update');\n        },\n\n        onOpenLayoutAssignment() {\n            this.$emit('open-layout-assignment');\n        },\n\n        onOpenLayoutSetAsDefault() {\n            this.$emit('open-layout-set-as-default');\n        },\n\n        blockTypeExists(type: string) {\n            return this.blockTypes.includes(type);\n        },\n\n        onVisibilityChange(selectedBlock: EntitySchema.Entity<'cms_block'>, viewport: string, isVisible: boolean) {\n            (selectedBlock.visibility as { [key: string]: boolean })[viewport] = isVisible;\n        },\n\n        /**\n         * @deprecated tag:v6.7.0 - Remove the duplicate category check and all usages.\n         * Use the auto-generated category label instead of the hardcoded option\n         * value inside the template.\n         */\n        isDuplicateCategory(categoryValue: string) {\n            /**\n             * This method is a unusual hack to prevent the category from being added twice.\n             * Recommended for plugin developer is to remove the hardcoded option value\n             * inside the template and use the auto-generated category label instead.\n             * */\n            const swCmsSidebarTemplate = Cicada.Template.getRenderedTemplate('sw-cms-sidebar');\n            return swCmsSidebarTemplate?.includes(`value=\"${categoryValue}\"`);\n        },\n    },\n});\n"],"names":["template","Component","Mixin","mapPropertyErrors","Criteria","cloneDeep","types","index","currentPageType","blocks","name","block","defaultCategories","categories","category","defaultCategory","criteria","error","result","blockName","pageType","demoEntityId","store","sectionIndex","_a","CMS","slot","section","dragData","dropData","validDrop","dragSectionIndex","dropSectionIndex","dropSection","dropSectionHasBlock","removeIndex","oldSection","pageConfigSidebar","data","dragSectionHasBlock","cmsBlocks","blockConfig","newBlock","slotName","slotConfig","element","slotDefaultData","_b","_c","sectionId","mediaItem","media","sectionBlocks","type","selectedBlock","viewport","isVisible","categoryValue","swCmsSidebarTemplate"],"mappings":"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"}