const a=`{% block sw_grid_column %} <div class="sw-grid-column sw-grid__cell" :class="'sw-grid-column--' + align" v-on="listeners" > {% block sw_grid_column_content %} <div class="sw-grid__cell-content" :class="{ 'is--truncate': truncate }" > <slot> {% block sw_grid_column_slot_default %}{% endblock %} </slot> </div> {% endblock %} {% block sw_grid_column_editing %} <div class="sw-grid__cell-inline-editing"> <slot name="inline-edit"> {% block sw_grid_column_slot_inline_edit %}{% endblock %} </slot> </div> {% endblock %} </div> {% endblock %}`,{Component:r}=Cicada;r.register("sw-grid-column",{template:a,compatConfig:Cicada.compatConfig,inject:{feature:{from:"feature",default:null},swGridColumns:{from:"swGridColumns",default:null}},props:{label:{type:String,required:!1,default:null},iconLabel:{type:String,required:!1,default:null},align:{type:String,default:"left"},flex:{required:!1,default:1},sortable:{type:Boolean,required:!1,default:!1},dataIndex:{type:String,required:!1,default:""},editable:{type:Boolean,required:!1,default:!1},truncate:{type:Boolean,required:!1,default:!1}},computed:{parentGrid(){if(this.isCompatEnabled("INSTANCE_CHILDREN"))return this.$parent.$parent.$parent.$parent},listeners(){return this.isCompatEnabled("INSTANCE_LISTENERS")?this.$listeners:{}}},watch:{label(e,i){var n;const t=this.isCompatEnabled("INSTANCE_CHILDREN")?(n=this.parentGrid)==null?void 0:n.columns:this.swGridColumns,l=t.findIndex(s=>s.label===i);l===-1||!e||this.parentGrid&&(t[l].label=e)}},created(){this.createdComponent()},methods:{createdComponent(){this.registerColumn()},registerColumn(){var t;const e=this.isCompatEnabled("INSTANCE_CHILDREN")?(t=this.parentGrid)==null?void 0:t.columns:this.swGridColumns;!e.some(l=>l.label===this.label)&&this.label&&e.push({label:this.label,iconLabel:this.iconLabel,flex:this.flex,sortable:this.sortable,dataIndex:this.dataIndex,align:this.align,editable:this.editable,truncate:this.truncate})}}});
//# sourceMappingURL=index-CPsHBULX.js.map
