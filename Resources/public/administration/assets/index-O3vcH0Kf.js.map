{"version":3,"file":"index-O3vcH0Kf.js","sources":["../../../app/administration/src/module/sw-order/view/sw-order-create-general/sw-order-create-general.html.twig","../../../app/administration/src/module/sw-order/view/sw-order-create-general/index.ts"],"sourcesContent":["<div class=\"sw-order-create-general\">\n    <sw-card\n        class=\"sw-order-create-general__general-info\"\n        position-identifier=\"sw-order-create-general-info\"\n        :title=\"$tc('sw-order.createBase.generalTab.labelGeneralInfoCard')\"\n    >\n        <sw-order-create-general-info\n            :cart=\"cart\"\n            :context=\"context\"\n            :is-loading=\"isLoading\"\n        />\n    </sw-card>\n\n    <sw-extension-component-section\n        position-identifier=\"sw-order-create-base-line-items__before\"\n    />\n\n    <sw-card\n        class=\"sw-order-create-general__line-items\"\n        position-identifier=\"sw-order-create-line-items\"\n        :is-loading=\"isLoading\"\n        :title=\"$tc('sw-order.createBase.generalTab.labelLineItemsCard')\"\n    >\n        <template #grid>\n            <sw-order-line-items-grid-sales-channel\n                editable\n                :cart=\"cart\"\n                :currency=\"currency\"\n                :sales-channel-id=\"context.salesChannel.id\"\n                :is-loading=\"isLoading\"\n                :is-customer-active=\"isCustomerActive\"\n                @on-save-item=\"onSaveItem\"\n                @on-remove-items=\"onRemoveItems\"\n            />\n\n            <sw-card-section\n                v-show=\"cart.lineItems.length\"\n                divider=\"top\"\n                slim\n            >\n\n                <sw-container\n                    class=\"sw-order-create-summary\"\n                    columns=\"1fr 1fr\"\n                >\n                    <sw-description-list\n                        class=\"sw-order-create-summary__data\"\n                        grid=\"1fr 1fr\"\n                    >\n                        <dt>{{ $tc('sw-order.createBase.summaryLabelAmount') }}</dt>\n                        <dd>{{ currencyFilter(cart.price ? cart.price.positionPrice : 0, currency.isoCode, currency.totalRounding.decimals) }}</dd>\n\n                        <template v-if=\"cartDelivery\">\n                            <dt>{{ $tc('sw-order.createBase.summaryLabelShippingCosts') }}</dt>\n                            <dd>\n                                <sw-order-saveable-field\n                                    v-tooltip=\"{\n                                        showDelay: 300,\n                                        message: shippingCostsDetail,\n                                        disabled: taxStatus === 'tax-free'\n                                    }\"\n                                    type=\"number\"\n                                    editable\n                                    :value=\"cartDelivery.shippingCosts.totalPrice\"\n                                    @value-change=\"onShippingChargeEdited\"\n                                    @update:value=\"onShippingChargeUpdated\"\n                                >\n                                    {{ currencyFilter(cartDelivery.shippingCosts.totalPrice, currency.isoCode, currency.totalRounding.decimals) }}\n                                </sw-order-saveable-field>\n                            </dd>\n                        </template>\n\n                        <template\n                            v-for=\"(delivery, index) in cartDeliveryDiscounts\"\n                            :key=\"index\"\n                        >\n                            <dt>\n                                {{ $tc('sw-order.createBase.discountLabelShippingCosts') }}\n                            </dt>\n                            <dd>\n                                {{ currencyFilter(delivery.shippingCosts.totalPrice, currency.isoCode, currency.totalRounding.decimals) }}\n                            </dd>\n                        </template>\n\n                        <template v-if=\"taxStatus !== 'tax-free'\">\n                            <dt><strong>{{ $tc('sw-order.createBase.summaryLabelAmountWithoutTaxes') }}</strong></dt>\n                            <dd>\n                                <strong>{{ currencyFilter(cart.price ? cart.price.netPrice : 0, currency.isoCode, currency.totalRounding.decimals) }}</strong>\n                            </dd>\n                        </template>\n\n                        <template v-if=\"taxStatus !== 'tax-free'\">\n                            <template\n                                v-for=\"(calculatedTax, index) in filteredCalculatedTaxes\"\n                                :key=\"index\"\n                            >\n                                <dt>\n                                    {{ $tc('sw-order.createBase.summaryLabelTaxes', 1, { taxRate: calculatedTax.taxRate }) }}\n                                </dt>\n                                <dd>\n                                    {{ currencyFilter(calculatedTax.tax, currency.isoCode, currency.totalRounding.decimals) }}\n                                </dd>\n                            </template>\n                        </template>\n\n                        <template v-if=\"taxStatus !== 'tax-free'\">\n                            <dt><strong>{{ $tc('sw-order.createBase.summaryLabelAmountTotal') }}</strong></dt>\n                            <dd>\n                                <strong>{{ currencyFilter(orderTotal, currency.isoCode, currency.totalRounding.decimals) }}</strong>\n                            </dd>\n                            <template v-if=\"displayRounded\">\n                                <dt><strong>{{ $tc('sw-order.createBase.summaryLabelAmountTotalRounded') }}</strong>\n                                </dt>\n                                <dd>\n                                    <strong>{{ currencyFilter(cart.price ? cart.price.totalPrice : 0, currency.isoCode, currency.totalRounding.decimals) }}</strong>\n                                </dd>\n                            </template>\n                        </template>\n\n                        <template v-if=\"taxStatus === 'tax-free'\">\n                            <dt><strong>{{ $tc('sw-order.detailBase.summaryLabelAmount') }}</strong></dt>\n                            <dd>\n                                <strong>{{ currencyFilter(cart.price ? cart.price.totalPrice : 0, currency.isoCode, currency.totalRounding.decimals) }}</strong>\n                            </dd>\n                        </template>\n                    </sw-description-list>\n                </sw-container>\n            </sw-card-section>\n        </template>\n    </sw-card>\n\n    <sw-extension-component-section\n        position-identifier=\"sw-order-create-base-line-items__after\"\n    />\n</div>\n","import type { Entity } from '@cicada-ag/meteor-admin-sdk/es/_internals/data/Entity';\nimport template from './sw-order-create-general.html.twig';\nimport type { CalculatedTax, CartDelivery, LineItem, Cart, PromotionCodeTag, SalesChannelContext } from '../../order.types';\n\n/**\n * @package checkout\n */\n\nconst { Component, State, Mixin, Utils } = Cicada;\nconst { get, format, array } = Utils;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default Component.wrapComponentConfig({\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('cart-notification'),\n    ],\n\n    data(): {\n        isLoading: boolean;\n    } {\n        return {\n            isLoading: false,\n        };\n    },\n\n    computed: {\n        customer(): Entity<'customer'> | null {\n            return State.get('swOrder').customer;\n        },\n\n        cart(): Cart {\n            return State.get('swOrder').cart;\n        },\n\n        currency(): Entity<'currency'> {\n            return State.get('swOrder').context.currency;\n        },\n\n        context(): SalesChannelContext {\n            return State.get('swOrder').context;\n        },\n\n        isCustomerActive(): boolean {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            return State.getters['swOrder/isCustomerActive'] as boolean;\n        },\n\n        cartDelivery(): CartDelivery {\n            return get(this.cart, 'deliveries[0]', null) as CartDelivery;\n        },\n\n        cartDeliveryDiscounts(): CartDelivery[] {\n            return array.slice(this.cart.deliveries, 1) || [];\n        },\n\n        taxStatus(): string {\n            return get(this.cart, 'price.taxStatus', '');\n        },\n\n        shippingCostsDetail(): string | null {\n            if (!this.cartDelivery) {\n                return null;\n            }\n\n            const calcTaxes = this.sortByTaxRate(this.cartDelivery.shippingCosts.calculatedTaxes);\n            const decorateCalcTaxes = calcTaxes.map((item: CalculatedTax) => {\n                return this.$tc('sw-order.createBase.shippingCostsTax', 0, {\n                    taxRate: item.taxRate,\n                    tax: format.currency(\n                        item.tax,\n                        this.currency.isoCode,\n                        // eslint-disable-next-line max-len\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-explicit-any\n                        (this.currency.totalRounding as any)?.decimals,\n                    ),\n                });\n            });\n\n            return `${this.$tc('sw-order.createBase.tax')}<br>${decorateCalcTaxes.join('<br>')}`;\n        },\n\n        filteredCalculatedTaxes(): CalculatedTax[] {\n            if (!this.cart.price || !this.cart.price.calculatedTaxes) {\n                return [];\n            }\n\n            return this.sortByTaxRate(this.cart.price.calculatedTaxes ?? []).filter(\n                (price: CalculatedTax) => price.tax !== 0,\n            );\n        },\n\n        displayRounded(): boolean {\n            if (!this.cart.price) {\n                return false;\n            }\n\n            return this.cart.price.rawTotal !== this.cart.price.totalPrice;\n        },\n\n        orderTotal(): number {\n            if (!this.cart.price) {\n                return 0;\n            }\n\n            if (this.displayRounded) {\n                return this.cart.price.rawTotal;\n            }\n\n            return this.cart.price.totalPrice;\n        },\n\n        currencyFilter() {\n            return Cicada.Filter.getByName('currency');\n        },\n    },\n\n    created(): void {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent(): void {\n            if (!this.customer) {\n                void this.$nextTick(() => {\n                    void this.$router.push({ name: 'sw.order.create.initial' });\n                });\n\n                return;\n            }\n\n            this.isLoading = true;\n\n            void this.loadCart().finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onSaveItem(item: LineItem): Promise<void> {\n            this.isLoading = true;\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return State.dispatch('swOrder/saveLineItem', {\n                salesChannelId: this.customer?.salesChannelId,\n                contextToken: this.cart.token,\n                item,\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onShippingChargeEdited(): void {\n            this.isLoading = true;\n\n            State.dispatch('swOrder/modifyShippingCosts', {\n                salesChannelId: this.customer?.salesChannelId,\n                contextToken: this.cart.token,\n                shippingCosts: this.cartDelivery.shippingCosts,\n            })\n                .catch((error) => {\n                    this.$emit('error', error);\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        onRemoveItems(lineItemKeys: string[]): Promise<void> {\n            this.isLoading = true;\n\n            return State.dispatch('swOrder/removeLineItems', {\n                salesChannelId: this.customer?.salesChannelId,\n                contextToken: this.cart.token,\n                lineItemKeys: lineItemKeys,\n            })\n                .then(() => {\n                    // Remove promotion code tag if corresponding line item removed\n                    lineItemKeys.forEach((key) => {\n                        const removedTag = State.get('swOrder').promotionCodes.find(\n                            (tag: PromotionCodeTag) => tag.discountId === key,\n                        );\n\n                        if (removedTag) {\n                            State.commit(\n                                'swOrder/setPromotionCodes',\n                                State.get('swOrder').promotionCodes.filter((item: PromotionCodeTag) => {\n                                    return item.discountId !== removedTag.discountId;\n                                }),\n                            );\n                        }\n                    });\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        loadCart(): Promise<void> {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return State.dispatch('swOrder/getCart', {\n                salesChannelId: this.customer?.salesChannelId,\n                contextToken: this.cart.token,\n            });\n        },\n\n        sortByTaxRate(price: Array<CalculatedTax>): Array<CalculatedTax> {\n            return price.sort((prev: CalculatedTax, current: CalculatedTax) => {\n                return prev.taxRate - current.taxRate;\n            });\n        },\n\n        onShippingChargeUpdated(amount: number): void {\n            const positiveAmount = Math.abs(amount);\n            this.cartDelivery.shippingCosts.unitPrice = positiveAmount;\n            this.cartDelivery.shippingCosts.totalPrice = positiveAmount;\n        },\n    },\n});\n"],"names":["template","Component","State","Mixin","Utils","get","format","array","index","decorateCalcTaxes","item","_a","price","error","lineItemKeys","key","removedTag","tag","prev","current","amount","positiveAmount"],"mappings":"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"}