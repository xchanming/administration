{"version":3,"file":"index-oveikqpQ.js","sources":["../../../app/administration/src/module/sw-extension/component/sw-extension-card-bought/sw-extension-card-bought.html.twig","../../../app/administration/src/module/sw-extension/component/sw-extension-card-bought/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_extension_card_base_activation_switch %}\n    {% parent %}\n\n<sw-extension-deactivation-modal\n    v-if=\"showDeactivationModal\"\n    :extension-name=\"label\"\n    :is-licensed=\"license !== null\"\n    :is-loading=\"isLoading\"\n    @modal-close=\"closeDeactivationModal\"\n    @extension-deactivate=\"closeModalAndDeactivateExtension\"\n/>\n{% endblock %}\n\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_extension_card_base_info_content %}\n    {% parent %}\n\n<section v-if=\"priceInfo && extension.storeLicense.variant === 'rent'\">\n    <span class=\"sw-extension-card-bought__info-price\">\n        {{ priceInfo }}\n    </span>\n</section>\n\n<section v-if=\"subscriptionExpiredText\">\n    <span\n        class=\"sw-extension-card-bought__info-subscription-expiry\"\n        :class=\"subscriptionExpiredTextClasses\"\n    >\n        <sw-icon\n            v-if=\"isExpiredTestPhase || isExpiredRent\"\n            name=\"solid-exclamation-circle\"\n            size=\"14\"\n            small\n        />\n        {{ subscriptionExpiredText }}\n    </span>\n</section>\n{% endblock %}\n\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_extension_card_base_context_menu_actions %}\n<sw-context-menu-item\n    v-if=\"detailLink\"\n    class=\"sw-extension-card-bought__detail-link\"\n    :router-link=\"detailLink\"\n>\n    {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.seeDetailsLabel') }}\n</sw-context-menu-item>\n\n<sw-context-menu-item\n    v-if=\"isInstalled && extension.storeLicense\"\n    class=\"sw-extension-card-bought__rate-link\"\n    @click=\"openRatingModal\"\n>\n    {{ $tc('sw-extension-store.component.sw-extension-card-base.contextMenu.rateLabel') }}\n</sw-context-menu-item>\n\n    {% parent %}\n{% endblock %}\n\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_extension_card_base_modals %}\n    {% parent %}\n\n<sw-extension-rating-modal\n    v-if=\"showRatingModal\"\n    :extension=\"extension\"\n    @modal-close=\"closeRatingModal\"\n/>\n\n<sw-modal\n    v-if=\"showExtensionInstallationFailedModal\"\n    :title=\"extension.label\"\n    variant=\"small\"\n    class=\"sw-extension-card-bought__installation-failed-modal\"\n    @modal-close=\"closeInstallationFailedNotification\"\n>\n    <sw-extension-adding-failed\n        :extension-name=\"extension.name\"\n        :title=\"installationFailedError && installationFailedError.title\"\n        :detail=\"installationFailedError && installationFailedError.message\"\n        :documentation-link=\"installationFailedError && installationFailedError.parameters && installationFailedError.parameters.documentationLink\"\n        @close=\"closeInstallationFailedNotification\"\n    />\n</sw-modal>\n{% endblock %}\n","import template from './sw-extension-card-bought.html.twig';\nimport './sw-extension-card-bought.scss';\nimport extensionErrorHandler from '../../service/extension-error-handler.service';\n\n/**\n * @package checkout\n * @private\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    mixins: ['sw-extension-error'],\n\n    props: {\n        extension: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            showDeactivationModal: false,\n            showRatingModal: false,\n            showExtensionInstallationFailedModal: false,\n            installationFailedError: null,\n            removePluginData: false,\n        };\n    },\n\n    computed: {\n        extensionCardClasses() {\n            return {\n                'sw-extension-card-bought': true,\n                ...this.$super('extensionCardClasses'),\n            };\n        },\n\n        priceInfo() {\n            return this.extension?.storeLicense?.paymentText ?? '';\n        },\n\n        detailLink() {\n            return {\n                name: 'sw.extension.store.detail',\n                params: {\n                    id: String(this.extension.storeExtension ? this.extension.storeExtension.id : this.extension.id),\n                },\n            };\n        },\n\n        subscriptionExpiredText() {\n            const expirationDate = this.extension?.storeLicense?.expirationDate ?? null;\n\n            if (expirationDate === null) {\n                return null;\n            }\n\n            const localDateString = new Date(expirationDate).toLocaleDateString();\n\n            // Show different text when it's a test phase instead of a rent\n            if (this.extension?.storeLicense?.variant === 'test' && !this.extension?.storeLicense?.expired) {\n                return this.$t('sw-extension-store.component.sw-extension-card-bought.testPhaseWillExpireAt', {\n                    date: localDateString,\n                });\n            }\n\n            // Text when the test phase is expired\n            if (this.isExpiredTestPhase) {\n                return this.$t('sw-extension-store.component.sw-extension-card-bought.testPhaseExpiredAt', {\n                    date: localDateString,\n                });\n            }\n\n            // Text for expired rent\n            if (this.isExpiredRent) {\n                return this.$t('sw-extension-store.component.sw-extension-card-bought.rentExpiredAt', {\n                    date: localDateString,\n                });\n            }\n\n            // Text for non-expired rent\n            return this.$t('sw-extension-store.component.sw-extension-card-bought.rentWillExpireAt', {\n                date: localDateString,\n            });\n        },\n\n        isExpiredRent() {\n            return this.extension?.storeLicense?.variant === 'rent' && this.extension?.storeLicense?.expired;\n        },\n\n        isExpiredTestPhase() {\n            return this.extension?.storeLicense?.variant === 'test' && this.extension?.storeLicense?.expired;\n        },\n\n        subscriptionExpiredTextClasses() {\n            return {\n                'is--expired-test-phase': this.isExpiredTestPhase,\n                'is--expired-rent': this.isExpiredRent,\n            };\n        },\n\n        showContextMenu() {\n            if (this.detailLink) {\n                return true;\n            }\n\n            if (this.isInstalled && this.extension.storeLicense) {\n                return true;\n            }\n\n            return this.$super('showContextMenu');\n        },\n    },\n\n    methods: {\n        async changeExtensionStatus() {\n            // State in checkbox has already changed so we have to treat extension.active as the state to change to\n            if (this.isActive) {\n                await this.activateExtension();\n                return;\n            }\n\n            if (!this.license || this.license.variant !== this.cicadaExtensionService.EXTENSION_VARIANT_TYPES.RENT) {\n                await this.deactivateExtension();\n                return;\n            }\n\n            this.showDeactivationModal = true;\n\n            // reset state in next tick to not visually reset state until async operations finish\n            this.$nextTick(() => {\n                this.extension.active = !this.extension.active;\n            });\n        },\n\n        async activateExtension() {\n            try {\n                this.isLoading = true;\n\n                await this.cicadaExtensionService.activateExtension(this.extension.name, this.extension.type);\n                this.extension.active = true;\n                this.clearCacheAndReloadPage();\n            } catch (e) {\n                this.extension.active = false;\n                this.showExtensionErrors(e);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        async deactivateExtension() {\n            try {\n                this.isLoading = true;\n\n                await this.cicadaExtensionService.deactivateExtension(this.extension.name, this.extension.type);\n                this.extension.active = false;\n                this.clearCacheAndReloadPage();\n            } catch (e) {\n                this.extension.active = true;\n                this.showExtensionErrors(e);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        closeDeactivationModal() {\n            this.showDeactivationModal = false;\n        },\n\n        async closeModalAndDeactivateExtension() {\n            await this.deactivateExtension();\n            this.showDeactivationModal = false;\n        },\n\n        async installExtension() {\n            this.isLoading = true;\n\n            try {\n                if (this.extension.source === 'store') {\n                    await this.extensionStoreActionService.downloadExtension(this.extension.name);\n                }\n\n                await this.cicadaExtensionService.installExtension(this.extension.name, this.extension.type);\n                await this.clearCacheAndReloadPage();\n            } catch (e) {\n                this.showExtensionErrors(e);\n                const error = extensionErrorHandler.mapErrors(e.response.data.errors)?.[0];\n\n                if (error.parameters) {\n                    this.installationFailedError = error;\n                } else {\n                    this.installationFailedError = {\n                        title: this.$tc(error.title),\n                        message: this.$tc(error.message),\n                    };\n                }\n                this.showExtensionInstallationFailedModal = true;\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        async installAndActivateExtension() {\n            this.isLoading = true;\n\n            try {\n                if (this.extension.source === 'store') {\n                    await this.extensionStoreActionService.downloadExtension(this.extension.name);\n                }\n\n                await this.cicadaExtensionService.installExtension(this.extension.name, this.extension.type);\n                await this.cicadaExtensionService.activateExtension(this.extension.name, this.extension.type);\n                await this.clearCacheAndReloadPage();\n            } catch (e) {\n                this.showExtensionErrors(e);\n                const error = extensionErrorHandler.mapErrors(e.response.data.errors)?.[0];\n\n                if (error.parameters) {\n                    this.installationFailedError = error;\n                } else {\n                    this.installationFailedError = {\n                        title: this.$tc(error.title),\n                        message: this.$tc(error.message),\n                    };\n                }\n                this.showExtensionInstallationFailedModal = true;\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        async cancelAndRemoveExtension() {\n            try {\n                this.closeRemovalModal();\n                this.isLoading = true;\n\n                // Do not try to cancel the license if the extension was already canceled\n                // by e.g. the cicada account and the extension already has an expiration date\n                if (!this.extension.storeLicense.expirationDate) {\n                    await this.cicadaExtensionService.cancelLicense(this.extension.storeLicense.id);\n                }\n\n                await this.cicadaExtensionService.removeExtension(this.extension.name, this.extension.type);\n\n                this.$nextTick(() => {\n                    this.emitUpdateList();\n                });\n            } catch (e) {\n                this.showExtensionErrors(e);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        openRatingModal() {\n            this.showRatingModal = true;\n        },\n\n        closeRatingModal() {\n            this.showRatingModal = false;\n        },\n\n        closeInstallationFailedNotification() {\n            this.showExtensionInstallationFailedModal = false;\n        },\n    },\n};\n"],"names":["template","index","_b","_a","expirationDate","localDateString","_d","_c","_f","_e","e","error","extensionErrorHandler"],"mappings":"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"}