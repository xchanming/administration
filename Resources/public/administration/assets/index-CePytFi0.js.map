{"version":3,"file":"index-CePytFi0.js","sources":["../../../app/administration/src/module/sw-settings-snippet/page/sw-settings-snippet-detail/sw-settings-snippet-detail.html.twig","../../../app/administration/src/module/sw-settings-snippet/page/sw-settings-snippet-detail/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_snippet_detail %}\n<sw-page class=\"sw-settings-snippet-detail\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_snippet_detail_smart_bar %}\n    <template #smart-bar-back>\n        <router-link\n            class=\"smart-bar__back-btn\"\n            :to=\"backPath\"\n            :style=\"{ 'color': moduleData.color }\"\n        >\n            <sw-icon\n                name=\"regular-chevron-left\"\n                small\n            />\n            <sw-icon\n                v-if=\"moduleData && moduleData.icon\"\n                :name=\"moduleData.icon\"\n                small\n            />\n        </router-link>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_snippet_detail_header %}\n    <template #smart-bar-header>\n        <h2 v-if=\"translationKey\">\n            {{ translationKey }}\n        </h2>\n        <h2 v-else>\n            {{ $tc('sw-settings-snippet.detail.textHeadline') }}\n        </h2>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_snippet_detail_actions %}\n    <template #smart-bar-actions>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_snippet_detail_actions_abort %}\n        <sw-button\n            :disabled=\"isLoading\"\n            :router-link=\"backPath\"\n        >\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_snippet_detail_actions_save %}\n        <sw-button-process\n            v-tooltip=\"getNoPermissionsTooltip('snippet.editor')\"\n            class=\"sw-snippet-detail__save-action\"\n            :is-loading=\"isLoading\"\n            :process-success=\"isSaveSuccessful\"\n            :disabled=\"!acl.can('snippet.editor') || isLoading || !translationKey || !isSaveable\"\n            variant=\"primary\"\n            @update:process-success=\"saveFinish\"\n            @click.prevent=\"onSave\"\n        >\n            {{ $tc('sw-settings-snippet.detail.buttonSave') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_snippet_detail_content %}\n    <template #content>\n        <sw-card-view>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_snippet_set_detail_card %}\n            <div class=\"sw-settings-snippet-set-detail-card\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_snippet_set_detail_card_information %}\n                <sw-card\n                    position-identifier=\"sw-settings-snippet-detail-information\"\n                    :title=\"$tc('sw-settings-snippet.detail.cardGeneralTitle')\"\n                    :is-loading=\"isLoading\"\n                >\n                    <div class=\"snippet-general-card\">\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_snippet_set_detail_card_information_key %}\n                        <sw-text-field\n                            v-model:value=\"translationKey\"\n                            v-tooltip.bottom=\"getNoPermissionsTooltip('snippet.editor')\"\n                            name=\"sw-field--translationKey\"\n                            :label=\"$tc('sw-settings-snippet.detail.labelName')\"\n                            :placeholder=\"$tc('sw-settings-snippet.detail.labelNamePlaceholder')\"\n                            :disabled=\"!(isCreate || isAddedSnippet)\"\n                            :error=\"invalidKeyError\"\n                            @update:value=\"onChange\"\n                        />\n                        {% endblock %}\n                    </div>\n                </sw-card>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_snippet_set_detail_card_snippets %}\n                <sw-card\n                    position-identifier=\"sw-settings-snippet-detail-snippets\"\n                    :title=\"$tc('sw-settings-snippet.detail.cardSnippetSetsTitle')\"\n                    :is-loading=\"isLoading || isLoadingSnippets\"\n                >\n                    <div class=\"snippet-overview-card\">\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_snippet_set_detail_card_snippets_fields %}\n                        <sw-text-field\n                            v-for=\"(snippet, index) in snippets\"\n                            :key=\"snippet.setId\"\n                            v-model:value=\"snippet.value\"\n                            v-tooltip.bottom=\"getNoPermissionsTooltip('snippet.editor')\"\n                            name=\"sw-field--snippet-value\"\n                            :class=\"`sw-settings-snippet-detail__translation-field--${index}`\"\n                            :disabled=\"!acl.can('snippet.editor') || isLoadingSnippets\"\n                            :label=\"$tc('sw-settings-snippet.detail.labelContent', 0, { name: sets.get(snippet.setId).name })\"\n                            :placeholder=\"snippet.origin || $tc('sw-settings-snippet.general.placeholderValue')\"\n                            @update:value=\"onChange\"\n                        />\n                        {% endblock %}\n                    </div>\n                </sw-card>\n                {% endblock %}\n            </div>\n            {% endblock %}\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n","/**\n * @package discovery\n */\nimport template from './sw-settings-snippet-detail.html.twig';\n\nconst {\n    Mixin,\n    Data: { Criteria },\n} = Cicada;\nconst CicadaError = Cicada.Classes.CicadaError;\nconst utils = Cicada.Utils;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'snippetSetService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            isLoading: true,\n            isLoadingSnippets: true,\n            isCreate: false,\n            isAddedSnippet: false,\n            isSaveable: true,\n            isInvalidKey: false,\n            queryIds: this.$route.query.ids,\n            page: this.$route.query.page,\n            limit: this.$route.query.limit,\n            moduleData: this.$route.meta.$module,\n            translationKey: '',\n            translationKeyOrigin: '',\n            snippets: [],\n            sets: {},\n            isSaveSuccessful: false,\n            pushParams: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        identifier() {\n            return this.translationKey;\n        },\n\n        snippetRepository() {\n            return this.repositoryFactory.create('snippet');\n        },\n\n        snippetSetRepository() {\n            return this.repositoryFactory.create('snippet_set');\n        },\n\n        snippetSetCriteria() {\n            const criteria = new Criteria(1, null);\n\n            criteria.addSorting(Criteria.sort('name', 'ASC'));\n\n            return criteria;\n        },\n\n        backPath() {\n            if (this.$route.query?.ids?.length > 0) {\n                return {\n                    name: 'sw.settings.snippet.list',\n                    query: {\n                        ids: this.$route.query.ids,\n                        limit: this.$route.query.limit,\n                        page: this.$route.query.page,\n                    },\n                };\n            }\n            return { name: 'sw.settings.snippet.index' };\n        },\n\n        invalidKeyError() {\n            if (this.isInvalidKey) {\n                return new CicadaError({\n                    code: 'DUPLICATED_SNIPPET_KEY',\n                    parameters: { key: this.translationKey },\n                });\n            }\n            return null;\n        },\n\n        currentAuthor: {\n            get() {\n                return this._currentAuthor || `user/${Cicada.State.get('session').currentUser.username}`;\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.translationKeyOrigin = this.$route.params.key;\n            this.prepareContent();\n        },\n\n        prepareContent() {\n            this.isLoading = true;\n\n            if (!this.$route.params.key && !this.isCreate) {\n                this.onNewKeyRedirect();\n            }\n            this.translationKey = this.$route.params.key || '';\n\n            this.snippetSetRepository\n                .search(this.snippetSetCriteria)\n                .then((sets) => {\n                    this.sets = sets;\n                    this.isLoadingSnippets = true;\n                    this.initializeSnippet();\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        initializeSnippet() {\n            this.snippets = this.createSnippetDummy();\n            this.getCustomList()\n                .then((response) => {\n                    if (!response.total) {\n                        this.isAddedSnippet = true;\n                        return;\n                    }\n\n                    this.applySnippetsToDummies(response.data[this.translationKey]);\n                })\n                .finally(() => {\n                    this.isLoadingSnippets = false;\n                });\n        },\n\n        applySnippetsToDummies(snippets) {\n            const dummySnippets = this.snippets;\n\n            dummySnippets.forEach((dummySnippet) => {\n                const realSnippet = snippets.find((snippet) => dummySnippet.setId === snippet.setId);\n\n                if (realSnippet) {\n                    dummySnippet.author = realSnippet.author;\n                    dummySnippet.id = realSnippet.id;\n                    dummySnippet.value = realSnippet.value;\n                    dummySnippet.origin = realSnippet.origin;\n                    dummySnippet.translationKey = realSnippet.translationKey;\n                    dummySnippet.setId = realSnippet.setId;\n\n                    if (realSnippet.id) {\n                        dummySnippet._isNew = false;\n                    }\n                }\n\n                return dummySnippet;\n            });\n\n            this.isAddedSnippet = snippets.some((snippet) => snippet.author.startsWith('user/') || snippet.author === '');\n        },\n\n        createSnippetDummy() {\n            const snippets = [];\n            this.sets.forEach((set) => {\n                const snippetDummy = this.snippetRepository.create();\n\n                snippetDummy.author = this.currentAuthor;\n                snippetDummy.id = null;\n                snippetDummy.value = null;\n                snippetDummy.origin = null;\n                snippetDummy.translationKey = this.translationKey;\n                snippetDummy.setId = set.id;\n\n                snippets.push(snippetDummy);\n            });\n\n            return snippets;\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n\n            this.$router.push({\n                name: 'sw.settings.snippet.detail',\n                params: this.pushParams,\n                query: {\n                    ids: this.queryIds,\n                    page: this.page,\n                    limit: this.limit,\n                },\n            });\n        },\n\n        onSave() {\n            const responses = [];\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            this.isSaveable = this.checkIsSaveable();\n\n            if (!this.isSaveable) {\n                this.isLoading = false;\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-snippet.detail.messageSaveError', 0, { key: this.translationKey }),\n                });\n\n                return;\n            }\n\n            this.snippets.forEach((snippet) => {\n                if (!snippet.author) {\n                    snippet.author = this.currentAuthor;\n                }\n\n                if (!snippet.hasOwnProperty('value') || snippet.value === null) {\n                    // If you clear the input-box, reset it to its origin value\n                    snippet.value = snippet.origin;\n                }\n\n                if (snippet.translationKey !== this.translationKey) {\n                    snippet.translationKey = this.translationKey;\n                    this.$route.params.key = this.translationKey;\n                    this.translationKeyOrigin = this.translationKey;\n                    responses.push(this.snippetRepository.save(snippet));\n                } else if (snippet.origin !== snippet.value) {\n                    // Only save if values differs from origin\n                    responses.push(this.snippetRepository.save(snippet));\n                } else if (snippet.hasOwnProperty('id') && snippet.id !== null) {\n                    // There's no need to keep a snippet which is exactly like the file-snippet, so delete\n                    responses.push(this.snippetRepository.delete(snippet.id));\n                }\n            });\n\n            this.snippets = [];\n\n            Promise.all(responses)\n                .then(() => {\n                    this.onNewKeyRedirect(true);\n                    this.prepareContent();\n                    this.isLoading = false;\n                    this.isSaveSuccessful = true;\n                })\n                .catch((error) => {\n                    let errormsg = '';\n                    this.isLoading = false;\n                    if (error.response.data.errors.length > 0) {\n                        errormsg = `<br/>Error Message: \"${error.response.data.errors[0].detail}\"`;\n                    }\n                    this.createNotificationError({\n                        message:\n                            this.$tc('sw-settings-snippet.detail.messageSaveError', 0, { key: this.translationKey }) +\n                            errormsg,\n                    });\n                });\n        },\n\n        onChange() {\n            if (!this.translationKey || this.translationKey.trim().length <= 0) {\n                this.isSaveable = false;\n                this.isInvalidKey = true;\n                return;\n            }\n            this.isInvalidKey = false;\n\n            this.doChange();\n        },\n\n        doChange: utils.debounce(function executeChange() {\n            this.getCustomList().then((response) => {\n                this.isSaveable = false;\n                if (!response.total || Object.keys(response.data)[0] === this.translationKeyOrigin) {\n                    this.isSaveable = this.checkIsSaveable();\n                    return;\n                }\n\n                this.isInvalidKey = true;\n                this.isSaveable = false;\n            });\n\n            if (!this.isSaveable) {\n                return;\n            }\n\n            if (this.isCreate || this.isAddedSnippet) {\n                this.translationKey = this.translationKey.trim();\n            }\n        }, 1000),\n\n        onNewKeyRedirect(isNewOrigin = false) {\n            this.isSaveSuccessful = true;\n            const params = {\n                key: this.translationKey,\n            };\n\n            if (isNewOrigin) {\n                params.origin = this.translationKey;\n            }\n\n            this.isCreate = false;\n            this.pushParams = params;\n        },\n\n        getCustomList() {\n            return this.snippetSetService.getCustomList(1, 25, {\n                translationKey: [this.translationKey],\n            });\n        },\n\n        checkIsSaveable() {\n            let count = 0;\n            this.snippets.forEach((snippet) => {\n                if (snippet.value === null) {\n                    return;\n                }\n\n                if (this.translationKey.trim() !== this.translationKeyOrigin) {\n                    count += 1;\n                }\n\n                if (snippet.value.trim().length >= 0) {\n                    count += 1;\n                }\n            });\n\n            return count > 0;\n        },\n\n        getNoPermissionsTooltip(role, showOnDisabledElements = true) {\n            return {\n                showDelay: 300,\n                appearance: 'dark',\n                showOnDisabledElements,\n                disabled: this.acl.can(role),\n                message: this.$tc('sw-privileges.tooltip.warning'),\n            };\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","CicadaError","utils","index","criteria","_a","_b","sets","response","snippets","dummySnippet","realSnippet","snippet","set","snippetDummy","responses","error","errormsg","isNewOrigin","params","count","role","showOnDisabledElements"],"mappings":"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"}