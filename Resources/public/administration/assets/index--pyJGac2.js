const s='{% block sw_tree_item_element_actions %} <span v-if="hideActions"></span> <span v-else>{% parent %}</span> {% endblock %} {% block sw_tree_item_element_selection %} <div class="sw-tree-item__selection"> <sw-checkbox-field :disabled="hasItemAssociation(item)" :ghost-value="checkedGhost" :value="checked || hasItemAssociation(item)" @update:value="toggleItemCheck($event, item)" /> </div> {% endblock %} {% block sw_tree_item_children_items %} <sw-settings-rule-tree-item v-for="child in item.children" :key="child.id" :association="association" :item="child" :dragged-item="draggedItem" :parent-scope="parentScope" :new-element-id="newElementId" :translation-context="translationContext" :on-change-route="onChangeRoute" :active-parent-ids="activeParentIds" :active-item-ids="activeItemIds" :mark-inactive="markInactive" :sortable="sortable" :should-focus="shouldFocus" :active-focus-id="activeFocusId" :display-checkbox="displayCheckbox" :disable-context-menu="disableContextMenu" :get-is-highlighted="getIsHighlighted" :hide-action="true" @check-item="emitCheckedItem" > <template v-if="hideActions" #actions > <span></span> </template> </sw-settings-rule-tree-item> {% endblock %}',a={template:s,compatConfig:Cicada.compatConfig,props:{association:{type:String,required:!0},hideActions:{type:Boolean,required:!1,default:!1}},methods:{hasItemAssociation(e){var t,i;return((t=e.data[this.association])==null?void 0:t.length)>0||((i=e.data.extensions[this.association])==null?void 0:i.length)>0}}};export{a as default};
//# sourceMappingURL=index--pyJGac2.js.map
