{"version":3,"file":"index-D0etdpjT.js","sources":["../../../app/administration/src/module/sw-sales-channel/view/sw-sales-channel-detail-products/sw-sales-channel-detail-products.html.twig","../../../app/administration/src/module/sw-sales-channel/view/sw-sales-channel-detail-products/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_sales_channel_detail_products %}\n<sw-card\n    v-if=\"salesChannel && products\"\n    position-identifier=\"sw-sales-channel-detail-products\"\n    class=\"sw-sales-channel-detail-products\"\n    :is-loading=\"isLoading || undefined\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_sales_channel_detail_products_filled_state %}\n    <template\n        v-if=\"products.length > 0 || searchTerm\"\n        #grid\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_sales_channel_detail_products_card_section %}\n        <sw-container rows=\"auto 500px\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_products_card_section_secondary %}\n            <sw-card-section secondary>\n                <sw-container\n                    columns=\"1fr auto\"\n                    gap=\"0 15px\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_sales_channel_detail_products_card_section_secondary_input %}\n                    <sw-simple-search-field\n                        v-model:value=\"searchTerm\"\n                        variant=\"form\"\n                        size=\"small\"\n                        @search-term-change=\"onChangeSearchTerm\"\n                    />\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_sales_channel_detail_products_card_section_secondary_button %}\n                    <sw-button\n                        v-tooltip=\"{\n                            message: $tc('sw-privileges.tooltip.warning'),\n                            disabled: acl.can('sales_channel.editor'),\n                            showOnDisabledElements: true\n                        }\"\n                        variant=\"ghost\"\n                        size=\"small\"\n                        :disabled=\"!acl.can('sales_channel.editor')\"\n                        @click=\"openAddProductsModal\"\n                    >\n                        {{ $tc('sw-sales-channel.detail.products.buttonAddProducts', 0) }}\n                    </sw-button>\n                    {% endblock %}\n                </sw-container>\n            </sw-card-section>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_products_card_section_primary %}\n            <sw-card-section divider=\"top\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_sales_channel_detail_products_card_section_primary_filled_state %}\n                <sw-entity-listing\n                    v-if=\"products.length > 0\"\n                    ref=\"entityListing\"\n                    class=\"sw-sales-channel-detail-products__list\"\n                    identifier=\"sw-sales-channel-detail-products-list\"\n                    detail-route=\"sw.product.detail\"\n                    :repository=\"productRepository\"\n                    :items=\"products\"\n                    :data-source=\"products\"\n                    :columns=\"productColumns\"\n                    :plain-appearance=\"true\"\n                    :skeleton-item-amount=\"limit\"\n                    :is-loading=\"isLoading\"\n                    :allow-inline-edit=\"false\"\n                    :allow-view=\"acl.can('sales_channel.viewer')\"\n                    :allow-edit=\"acl.can('product.editor')\"\n                    :allow-delete=\"acl.can('sales_channel.deleter')\"\n                    :is-record-selectable=\"isProductRemovable\"\n                    @selection-change=\"onProductSelectionChanged\"\n                >\n                    <template #selection-content=\"{ item, isSelected, isRecordSelectable, selectItem, itemIdentifierProperty }\">\n                        <slot v-bind=\"{ item, isSelected, isRecordSelectable, selectItem, itemIdentifierProperty }\">\n                            <div class=\"sw-data-grid__cell-content\">\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_sales_channel_detail_products_listing_select_item_checkbox %}\n                                <sw-checkbox-field\n                                    v-tooltip=\"{\n                                        message: $tc('sw-sales-channel.detail.products.inheritVariantNotRemovableTooltip'),\n                                        disabled: isRecordSelectable(item),\n                                        showOnDisabledElements: true\n                                    }\"\n                                    :disabled=\"!isRecordSelectable(item)\"\n                                    :value=\"isSelected(item[itemIdentifierProperty])\"\n                                    @update:value=\"selectItem($event, item)\"\n                                />\n                                {% endblock %}\n                            </div>\n                        </slot>\n                    </template>\n                    <template #column-name=\"{ item }\">\n                        <slot v-bind=\"{ item }\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_sales_channel_detail_products_listing_column_name %}\n                            <sw-product-variant-info\n                                :variations=\"item.variation\"\n                            >\n                                <router-link :to=\"{ name: 'sw.product.detail', params: { id: item.id } }\">\n                                    {{ item.translated.name || item.name }}\n                                </router-link>\n                            </sw-product-variant-info>\n                            {% endblock %}\n                        </slot>\n                    </template>\n\n                    <template #column-active=\"{ item }\">\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_sales_channel_detail_products_listing_column_active %}\n                        <sw-icon\n                            small\n                            :name=\"item.active === false ? 'regular-times-s' : 'regular-checkmark-xs'\"\n                            :color=\"item.active === false ? '#de294c' : '#37d046'\"\n                        />\n                        {% endblock %}\n                    </template>\n\n                    <template #pagination>\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_sales_channel_detail_products_listing_pagination %}\n                        <sw-pagination\n                            v-bind=\"{ page, limit, total }\"\n                            :total-visible=\"5\"\n                            :auto-hide=\"false\"\n                            @page-change=\"onChangePage\"\n                        />\n                        {% endblock %}\n                    </template>\n\n                    <template #delete-action=\"{ item }\">\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_sales_channel_detail_products_listing_delete_action %}\n                        <sw-context-menu-item\n                            variant=\"warning\"\n                            :disabled=\"!isProductRemovable(item)\"\n                            @click=\"onDeleteProduct(item)\"\n                        >\n                            {{ $tc('global.default.remove') }}\n                        </sw-context-menu-item>\n                        {% endblock %}\n                    </template>\n\n                    <template #bulk>\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_sales_channel_detail_products_listing_bulk %}\n                        <a\n                            class=\"link link-warning\"\n                            role=\"button\"\n                            tabindex=\"0\"\n                            @click=\"onDeleteProducts\"\n                            @keydown.enter=\"onDeleteProducts\"\n                        >\n                            {{ $tc('global.default.remove') }}\n                        </a>\n                        {% endblock %}\n                    </template>\n                </sw-entity-listing>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_sales_channel_detail_products_card_section_primary_empty_state %}\n                <sw-empty-state\n                    v-else\n                    :show-description=\"false\"\n                    :title=\"$tc('sw-sales-channel.detail.products.titleEmptyStateTable')\"\n                >\n                    <template #icon>\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_sales_channel_detail_products_card_section_primary_image %}\n                        <img\n                            :src=\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\"\n                            :alt=\"$tc('sw-sales-channel.detail.products.titleEmptyStateTable')\"\n                        >\n                        {% endblock %}\n                    </template>\n                </sw-empty-state>\n                {% endblock %}\n            </sw-card-section>\n            {% endblock %}\n        </sw-container>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_sales_channel_detail_products_empty_state %}\n    <sw-empty-state\n        v-if=\"products.length <= 0 && !searchTerm && !isLoading\"\n        :show-description=\"false\"\n        :absolute=\"false\"\n        :title=\"$tc('sw-sales-channel.detail.products.titleEmptyState')\"\n    >\n        <template #icon>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_products_empty_state_image %}\n            <img\n                :src=\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\"\n                :alt=\"$tc('sw-sales-channel.detail.products.titleEmptyState')\"\n            >\n            {% endblock %}\n        </template>\n\n        <template #actions>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_sales_channel_detail_products_empty_state_button %}\n            <sw-button\n                v-tooltip=\"{\n                    message: $tc('sw-privileges.tooltip.warning'),\n                    disabled: acl.can('sales_channel.editor'),\n                    showOnDisabledElements: true\n                }\"\n                variant=\"ghost\"\n                :disabled=\"!acl.can('sales_channel.editor')\"\n                @click=\"openAddProductsModal\"\n            >\n                {{ $tc('sw-sales-channel.detail.products.buttonAddProducts', 0) }}\n            </sw-button>\n            {% endblock %}\n        </template>\n    </sw-empty-state>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_sales_channel_detail_products_assignment_modal %}\n    <sw-sales-channel-products-assignment-modal\n        v-if=\"showProductsModal\"\n        :sales-channel=\"salesChannel\"\n        :is-assign-product-loading=\"isAssignProductLoading\"\n        @modal-close=\"showProductsModal = false\"\n        @products-add=\"onAddProducts\"\n    />\n    {% endblock %}\n</sw-card>\n{% endblock %}\n","/**\n * @package discovery\n */\n\nimport template from './sw-sales-channel-detail-products.html.twig';\nimport './sw-sales-channel-detail-products.scss';\n\nconst { Mixin, Context } = Cicada;\nconst { EntityCollection, Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'feature',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: false,\n            default: () => {},\n        },\n    },\n\n    data() {\n        return {\n            products: [],\n            productSelection: [],\n            isLoading: false,\n            searchTerm: null,\n            page: 1,\n            limit: 25,\n            total: 0,\n            showProductsModal: false,\n            isAssignProductLoading: false,\n        };\n    },\n\n    computed: {\n        productRepository() {\n            return this.repositoryFactory.create('product');\n        },\n\n        productVisibilityRepository() {\n            return this.repositoryFactory.create('product_visibility');\n        },\n\n        productCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            criteria.setTotalCountMode(1);\n\n            criteria.addAssociation('visibilities.salesChannel');\n            criteria.addAssociation('options.group');\n            criteria.addFilter(Criteria.equals('product.visibilities.salesChannelId', this.salesChannel.id));\n\n            if (this.searchTerm) {\n                criteria.setTerm(this.searchTerm);\n            }\n\n            return criteria;\n        },\n\n        productColumns() {\n            return [\n                {\n                    property: 'name',\n                    label: this.$tc('sw-sales-channel.detail.products.columnProductName'),\n                    allowResize: true,\n                    primary: true,\n                },\n                {\n                    property: 'active',\n                    label: this.$tc('sw-sales-channel.detail.products.columnActive'),\n                    allowResize: true,\n                    align: 'center',\n                },\n                {\n                    property: 'productNumber',\n                    label: this.$tc('sw-sales-channel.detail.products.columnProductNumber'),\n                    allowResize: true,\n                },\n            ];\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        salesChannel: {\n            deep: true,\n            immediate: true,\n            handler(newValue, oldValue) {\n                if (!newValue || oldValue?.id === newValue.id) {\n                    return;\n                }\n\n                this.getProducts();\n            },\n        },\n    },\n\n    methods: {\n        getProducts() {\n            if (!this.salesChannel?.id) {\n                return Promise.reject();\n            }\n\n            const context = { ...Context.api };\n            context.inheritance = true;\n\n            this.isLoading = true;\n            return this.productRepository\n                .search(this.productCriteria, context)\n                .then((products) => {\n                    this.products = products;\n                    this.total = products.total;\n\n                    if (this.total > 0 && this.products.length <= 0) {\n                        this.page = this.page === 1 ? 1 : this.page - 1;\n                        this.getProducts();\n                    }\n                })\n                .catch(() => {\n                    this.products = [];\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        onDeleteProduct(product) {\n            const deleteId = this.getDeleteId(product);\n\n            return this.productVisibilityRepository\n                .delete(deleteId, Context.api)\n                .then(() => {\n                    this.getProducts();\n\n                    this.$refs.entityListing.resetSelection();\n                })\n                .catch((error) => {\n                    if (error?.response?.data?.errors) {\n                        this.showNotificationError(error.response.data.errors);\n\n                        return;\n                    }\n\n                    this.createNotificationError({\n                        message: error.message,\n                    });\n                });\n        },\n\n        onDeleteProducts() {\n            const deleteIds = Object.values(this.productSelection).map((product) => {\n                return this.getDeleteId(product);\n            });\n\n            this.isLoading = true;\n            return this.productVisibilityRepository\n                .syncDeleted(deleteIds, Context.api)\n                .then(() => {\n                    this.isLoading = false;\n                    this.getProducts();\n\n                    this.$refs.entityListing.resetSelection();\n                })\n                .catch((error) => {\n                    this.isLoading = false;\n\n                    if (error?.response?.data?.data?.product_visibility?.result) {\n                        this.showNotificationError(error.response.data.data.product_visibility.result);\n\n                        return;\n                    }\n\n                    this.createNotificationError({\n                        message: error.message,\n                    });\n                });\n        },\n\n        getDeleteId(product) {\n            return product.visibilities.find((visibility) => {\n                return visibility.salesChannelId === this.salesChannel.id;\n            }).id;\n        },\n\n        showNotificationError(errors) {\n            errors.forEach((error) => {\n                if (error.errors) {\n                    this.showNotificationError(error.errors);\n                } else {\n                    this.createNotificationError({\n                        message: `${error.code}: ${error.detail}`,\n                    });\n                }\n            });\n        },\n\n        onChangePage(data) {\n            this.page = data.page;\n            this.limit = data.limit;\n            this.products.criteria.sortings.forEach(({ field, naturalSorting, order }) => {\n                this.productCriteria.addSorting(Criteria.sort(field, order, naturalSorting));\n            });\n\n            this.getProducts();\n        },\n\n        onChangeSearchTerm(searchTerm) {\n            this.searchTerm = searchTerm;\n\n            if (searchTerm) {\n                this.page = 1;\n            }\n\n            this.getProducts();\n        },\n\n        openAddProductsModal() {\n            this.showProductsModal = true;\n        },\n\n        onAddProducts(products) {\n            if (products.length <= 0) {\n                this.showProductsModal = false;\n                return Promise.reject();\n            }\n\n            const visibilities = new EntityCollection(\n                this.productVisibilityRepository.route,\n                this.productVisibilityRepository.entityName,\n                Context.api,\n            );\n\n            products.forEach((el) => {\n                if (this.products?.has(el.id)) {\n                    return;\n                }\n\n                const visibility = this.productVisibilityRepository.create(Context.api);\n                Object.assign(visibility, {\n                    visibility: 30,\n                    productId: el.id,\n                    salesChannelId: this.salesChannel.id,\n                    salesChannel: this.salesChannel,\n                });\n\n                visibilities.add(visibility);\n            });\n\n            this.isAssignProductLoading = true;\n\n            return this.saveProductVisibilities(visibilities)\n                .then(() => {\n                    this.getProducts();\n                })\n                .catch((error) => {\n                    this.createNotificationError({\n                        message: error,\n                    });\n                })\n                .finally(() => {\n                    this.showProductsModal = false;\n                    this.isAssignProductLoading = false;\n                });\n        },\n\n        saveProductVisibilities(data) {\n            if (data.length <= 0) {\n                return Promise.resolve();\n            }\n\n            return this.productVisibilityRepository.saveAll(data, Context.api);\n        },\n\n        isProductRemovable(product) {\n            const relevantVisibility = product.visibilities.find(\n                (visibility) => visibility.salesChannelId === this.salesChannel.id,\n            );\n\n            return product.parentId !== relevantVisibility?.productId;\n        },\n\n        onProductSelectionChanged(selection) {\n            this.productSelection = selection;\n        },\n    },\n};\n"],"names":["template","Mixin","Context","EntityCollection","Criteria","index","criteria","newValue","oldValue","_a","context","products","product","deleteId","error","_b","deleteIds","_c","_d","visibility","errors","data","field","naturalSorting","order","searchTerm","visibilities","el","relevantVisibility","selection"],"mappings":"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"}