const t=`{% block sw_first_run_wizard_finish %} <div class="sw-first-run-wizard-finish"> <span class="sw-first-run-wizard-finish__bubble"> <sw-icon class="sw-first-run-wizard-finish__icon" name="regular-checkmark-xs" size="24px" small /> </span> <h3 class="headline"> {{ $tc('sw-first-run-wizard.finish.headlineAllDone') }} </h3> <p class="message"> {{ successMessage }} </p> <h3 class="headline-useful-links"> {{ $tc('sw-first-run-wizard.finish.headlineUsefulLinks') }} </h3> <sw-container columns="1fr 1fr 1fr" class="list-useful-links" > <a :href="$tc('sw-first-run-wizard.finish.documentationUrl')" class="external-link" target="_blank" rel="noopener" > {{ $tc('sw-first-run-wizard.finish.documentationLabel') }} </a> <a :href="$tc('sw-first-run-wizard.finish.forumUrl')" class="external-link" target="_blank" rel="noopener" > {{ $tc('sw-first-run-wizard.finish.forumLabel') }} </a> <a :href="$tc('sw-first-run-wizard.finish.roadmapUrl')" class="external-link" target="_blank" rel="noopener" > {{ $tc('sw-first-run-wizard.finish.roadmapLabel') }} </a> </sw-container> <div v-if="restarting" class="restart-progress" > <sw-loader size="48px" /> <p class="sw-loader-info-text" v-html="$tc('sw-first-run-wizard.finish.loadingMessage')" ></p> </div> </div> {% endblock %}`,e={template:t,compatConfig:Cicada.compatConfig,inject:["firstRunWizardService"],emits:["frw-set-title","buttons-update","frw-finish"],data(){return{licenceDomains:[],licensed:!1,restarting:!1}},computed:{edition(){const i=this.licenceDomains.find(s=>s.active);return i?i.edition:""},successMessage(){if(!this.licensed)return this.$tc("sw-first-run-wizard.finish.messageNotLicensed");const{edition:i}=this;return this.$tc("sw-first-run-wizard.finish.message",{},{edition:i})},buttonConfig(){const s=Cicada.State.get("context").app.config.settings.disableExtensionManagement?"cicada.account":"store";return[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",variant:null,action:`sw.first.run.wizard.index.${s}`,disabled:!1},{key:"finish",label:this.$tc("sw-first-run-wizard.general.buttonFinish"),position:"right",variant:"primary",action:this.onFinish.bind(this),disabled:!1}]}},watch:{buttonConfig:{handler(){this.updateButtons()},deep:!0}},created(){this.createdComponent(),this.setTitle()},methods:{createdComponent(){this.updateButtons(),this.firstRunWizardService.getLicenseDomains().then(i=>{const{items:s}=i;!s||s.length<1||(this.licenceDomains=s,this.licensed=!0)}).catch(()=>{this.licensed=!1})},setTitle(){this.$emit("frw-set-title",this.$tc("sw-first-run-wizard.finish.modalTitle"))},updateButtons(){this.$emit("buttons-update",this.buttonConfig)},onFinish(){this.restarting=!0,this.$emit("frw-finish",!0)}}};export{e as default};
//# sourceMappingURL=index-BB7HEpk7.js.map
