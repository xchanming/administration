{"version":3,"file":"index-BJ39tXUp.js","sources":["../../../app/administration/src/app/asyncComponent/media/sw-media-folder-content/sw-media-folder-content.html.twig","../../../app/administration/src/app/asyncComponent/media/sw-media-folder-content/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_media_folder_content %}\n<div class=\"sw-media-folder-content\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_folder_content_folder_listing %}\n    <ul\n        v-if=\"subFolders.length > 0 || parentFolder !== null\"\n        class=\"sw-media-folder-content__folder-listing\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_folder_content_list_item %}\n\n        <li\n            v-if=\"parentFolder !== null\"\n            class=\"sw-media-folder-content__list-item\"\n        >\n            <button\n                class=\"sw-media-folder-content__button sw-media-folder-content__parent-folder\"\n                @click=\"emitInput(parentFolder)\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_folder_content_folder_icon %}\n                <img\n                    :src=\"assetFilter('/administration/static/img/media/folder-thumbnail.svg')\"\n                    class=\"sw-media-folder-content__folder-icon\"\n                    alt=\"Folder thumbnail\"\n                >\n                {% endblock %}\n                {{ parentFolder.name }}\n            </button>\n        </li>\n\n        <li\n            v-for=\"(folder, index) in subFolders\"\n            :key=\"folder.id\"\n            :class=\"[{'is--selected': folder.id === selectedId}, 'sw-media-folder-content__list-item--' + index ]\"\n            class=\"sw-media-folder-content__list-item\"\n            role=\"button\"\n            tabindex=\"0\"\n            @click=\"emitInput(folder)\"\n            @keydown.enter=\"emitInput(folder)\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_folder_content_button_folder %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_folder_content_button_folder_button %}\n            <button class=\"sw-media-folder-content__button sw-media-folder-content__folder-button\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_folder_content_folder_button_icon %}\n                <img\n                    :src=\"assetFilter('/administration/static/img/media/folder-thumbnail.svg')\"\n                    class=\"sw-media-folder-content__folder-icon\"\n                    alt=\"Folder thumbnail\"\n                >\n                {% endblock %}\n                {{ folder.name }}\n            </button>\n            {% endblock %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_folder_content_switch_button %}\n            <sw-icon\n                v-if=\"getChildCount(folder) > 0\"\n                class=\"sw-media-folder-content__switch-button\"\n                name=\"regular-chevron-right-xxs\"\n                size=\"12px\"\n            />\n            {% endblock %}\n            {% endblock %}\n        </li>\n        {% endblock %}\n    </ul>\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-media-folder-content.html.twig';\nimport './sw-media-folder-content.scss';\n\nconst { Context } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n/**\n * @package content\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'filterItems',\n        'repositoryFactory',\n    ],\n\n    emits: ['selected'],\n\n    props: {\n        startFolderId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        selectedId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            subFolders: [],\n            parentFolder: null,\n        };\n    },\n\n    computed: {\n        mediaFolderRepository() {\n            return this.repositoryFactory.create('media_folder');\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        startFolderId() {\n            this.getSubFolders(this.startFolderId);\n            this.fetchParentFolder(this.startFolderId);\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.getSubFolders(this.startFolderId);\n            this.fetchParentFolder(this.startFolderId);\n        },\n\n        async getSubFolders(parentId) {\n            const criteria = new Criteria(1, 50)\n                .addFilter(Criteria.equals('parentId', parentId))\n                .addAssociation('children')\n                .addSorting(Criteria.sort('name', 'asc'));\n\n            const searchResult = await this.mediaFolderRepository.search(criteria, Context.api);\n            this.subFolders = searchResult.filter(this.filterItems);\n        },\n\n        getChildCount(folder) {\n            return folder.children.filter(this.filterItems).length;\n        },\n\n        async fetchParentFolder(folderId) {\n            if (folderId !== null) {\n                const folder = await this.mediaFolderRepository.get(folderId, Context.api);\n                this.updateParentFolder(folder);\n            } else {\n                this.parentFolder = null;\n            }\n        },\n\n        async updateParentFolder(child) {\n            if (child.id === null) {\n                this.parentFolder = null;\n            } else if (child.parentId === null) {\n                this.parentFolder = {\n                    id: null,\n                    name: this.$tc('sw-media.index.rootFolderName'),\n                };\n            } else {\n                this.parentFolder = await this.mediaFolderRepository.get(child.parentId, Context.api);\n            }\n        },\n\n        emitInput(folder) {\n            this.$emit('selected', folder);\n        },\n    },\n};\n"],"names":["template","Context","Criteria","index","parentId","criteria","searchResult","folder","folderId","child"],"mappings":"AAAA,MAAeA,EAAA,2uDCGT,CAAE,QAAAC,CAAS,EAAG,OACd,CAAE,SAAAC,CAAQ,EAAK,OAAO,KAMbC,EAAA,CACX,SAAAH,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,cACA,mBACH,EAED,MAAO,CAAC,UAAU,EAElB,MAAO,CACH,cAAe,CACX,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EAED,WAAY,CACR,KAAM,OACN,SAAU,GACV,QAAS,IACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,WAAY,CAAE,EACd,aAAc,IAC1B,CACK,EAED,SAAU,CACN,uBAAwB,CACpB,OAAO,KAAK,kBAAkB,OAAO,cAAc,CACtD,EAED,aAAc,CACV,OAAO,OAAO,OAAO,UAAU,OAAO,CACzC,CACJ,EAED,MAAO,CACH,eAAgB,CACZ,KAAK,cAAc,KAAK,aAAa,EACrC,KAAK,kBAAkB,KAAK,aAAa,CAC5C,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,cAAc,KAAK,aAAa,EACrC,KAAK,kBAAkB,KAAK,aAAa,CAC5C,EAED,MAAM,cAAcI,EAAU,CAC1B,MAAMC,EAAW,IAAIH,EAAS,EAAG,EAAE,EAC9B,UAAUA,EAAS,OAAO,WAAYE,CAAQ,CAAC,EAC/C,eAAe,UAAU,EACzB,WAAWF,EAAS,KAAK,OAAQ,KAAK,CAAC,EAEtCI,EAAe,MAAM,KAAK,sBAAsB,OAAOD,EAAUJ,EAAQ,GAAG,EAClF,KAAK,WAAaK,EAAa,OAAO,KAAK,WAAW,CACzD,EAED,cAAcC,EAAQ,CAClB,OAAOA,EAAO,SAAS,OAAO,KAAK,WAAW,EAAE,MACnD,EAED,MAAM,kBAAkBC,EAAU,CAC9B,GAAIA,IAAa,KAAM,CACnB,MAAMD,EAAS,MAAM,KAAK,sBAAsB,IAAIC,EAAUP,EAAQ,GAAG,EACzE,KAAK,mBAAmBM,CAAM,CAC9C,MACgB,KAAK,aAAe,IAE3B,EAED,MAAM,mBAAmBE,EAAO,CACxBA,EAAM,KAAO,KACb,KAAK,aAAe,KACbA,EAAM,WAAa,KAC1B,KAAK,aAAe,CAChB,GAAI,KACJ,KAAM,KAAK,IAAI,+BAA+B,CAClE,EAEgB,KAAK,aAAe,MAAM,KAAK,sBAAsB,IAAIA,EAAM,SAAUR,EAAQ,GAAG,CAE3F,EAED,UAAUM,EAAQ,CACd,KAAK,MAAM,WAAYA,CAAM,CAChC,CACJ,CACL"}