const e='{% block sw_condtion_tree_node %} <component :is="conditionNodeComponent" :key="condition.type" class="condition-tree-node" v-bind="{ condition, parentCondition, level, disabled }" @create-before="insertNewNodeBefore" @create-after="insertNewNodeAfter" @condition-delete="deleteNode" /> {% endblock %}',{Component:t}=Shopware;t.register("sw-condition-tree-node",{template:e,inject:["conditionDataProviderService","createCondition","insertNodeIntoTree","removeNodeFromTree"],props:{level:{type:Number,required:!0},condition:{type:Object,required:!0},parentCondition:{type:Object,required:!1,default:null},disabled:{type:Boolean,required:!1,default:!1},insertBefore:{type:Function,required:!1,default:null},insertAfter:{type:Function,required:!1,default:null}},computed:{conditionNodeComponent(){return this.conditionDataProviderService.getComponentByCondition(this.condition)}},methods:{deleteNode(){this.removeNodeFromTree(this.parentCondition,this.condition)},insertNewNodeBefore(){if(typeof this.insertBefore=="function"){this.insertBefore();return}this.insertNodeIntoTree(this.parentCondition,this.createCondition(this.conditionDataProviderService.getPlaceholderData(),this.parentCondition.id,this.condition.position,[]))},insertNewNodeAfter(){if(typeof this.insertAfter=="function"){this.insertAfter();return}this.insertNodeIntoTree(this.parentCondition,this.createCondition(this.conditionDataProviderService.getPlaceholderData(),this.parentCondition.id,this.condition.position+1,[]))}}});
