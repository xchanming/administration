{"version":3,"file":"index-CfV42Srf.js","sources":["../../../app/administration/src/app/component/rule/sw-condition-all-line-items-container/sw-condition-all-line-items-container.html.twig","../../../app/administration/src/app/component/rule/sw-condition-all-line-items-container/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_condition_all_line_items_container %}\n<div\n    class=\"condition-all-line-items-container\"\n    :class=\"containerRowClass\"\n>\n    <template\n        v-for=\"(child, index) in condition[childAssociationField]\"\n        :key=\"`condition-all-line-items-child--${index}`\"\n    >\n        <sw-condition-tree-node\n            :parent-condition=\"condition\"\n            :condition=\"child\"\n            :disabled=\"disabled || undefined\"\n            :level=\"level + 1\"\n            :insert-before=\"onInsertBefore\"\n            :insert-after=\"onInsertAfter\"\n        />\n    </template>\n</div>\n{% endblock %}\n","import template from './sw-condition-all-line-items-container.html.twig';\n\nconst { Component, Mixin } = Cicada;\nconst { EntityCollection } = Cicada.Data;\n\n/**\n * @private\n * @package services-settings\n * @description Contains some sw-base-conditions for matching all line items.\n * This component must be a child of sw-condition-tree\n * @status prototype\n * @example-type code-only\n * @component-example\n * <sw-condition-all-line-items-container :condition=\"condition\" :level=\"0\"></sw-condition-all-line-items-container>\n */\nComponent.register('sw-condition-all-line-items-container', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    provide() {\n        return {\n            unwrapAllLineItemsCondition: this.unwrapCondition,\n        };\n    },\n\n    emits: [\n        'create-before',\n        'create-after',\n    ],\n\n    mixins: [\n        Mixin.getByName('ruleContainer'),\n    ],\n\n    computed: {\n        children() {\n            return this.condition.children;\n        },\n\n        childType() {\n            if (!this.children.first()) {\n                return null;\n            }\n\n            return this.children.first().type;\n        },\n    },\n\n    watch: {\n        children() {\n            if (this.children.length === 0) {\n                this.removeNodeFromTree(this.parentCondition, this.condition);\n            }\n        },\n\n        childType(type) {\n            if (!type) {\n                return;\n            }\n\n            const conditionType = this.conditionDataProviderService.getByType(type);\n            const component = Component.getComponentRegistry().get(conditionType.component);\n\n            if (component && component.extends !== 'sw-condition-base-line-item') {\n                this.unwrapCondition(this.children.first());\n            }\n            this.setConditionValue();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.setConditionValue();\n        },\n\n        setConditionValue() {\n            this.condition.value = [];\n            if (this.children.first().type === 'promotionLineItem') {\n                this.condition.value = { type: 'promotion' };\n                return;\n            }\n\n            if (this.children.first().type !== 'cartLineItemOfType') {\n                this.condition.value = { type: 'product' };\n            }\n        },\n\n        onAddPlaceholder() {},\n\n        unwrapCondition(childCondition) {\n            this.removeNodeFromTree(this.parentCondition, this.condition);\n            this.insertNodeIntoTree(\n                this.parentCondition,\n                this.createCondition(\n                    {\n                        type: childCondition.type,\n                        value: childCondition.value,\n                        [this.childAssociationField]: new EntityCollection(\n                            this.condition[this.childAssociationField].source,\n                            this.condition[this.childAssociationField].entity,\n                            this.condition[this.childAssociationField].context,\n                            null,\n                            [],\n                        ),\n                    },\n                    this.parentCondition.id,\n                    this.condition.position,\n                ),\n            );\n        },\n\n        onInsertBefore() {\n            this.$emit('create-before');\n        },\n\n        onInsertAfter() {\n            this.$emit('create-after');\n        },\n    },\n});\n"],"names":["template","Component","Mixin","EntityCollection","type","conditionType","component","childCondition"],"mappings":"AAAA,MAAeA,EAAA,2dCET,CAAE,UAAAC,EAAW,MAAAC,CAAO,EAAG,OACvB,CAAE,iBAAAC,CAAgB,EAAK,OAAO,KAYpCF,EAAU,SAAS,wCAAyC,CACxD,SAAAD,EAEA,aAAc,OAAO,aAErB,SAAU,CACN,MAAO,CACH,4BAA6B,KAAK,eAC9C,CACK,EAED,MAAO,CACH,gBACA,cACH,EAED,OAAQ,CACJE,EAAM,UAAU,eAAe,CAClC,EAED,SAAU,CACN,UAAW,CACP,OAAO,KAAK,UAAU,QACzB,EAED,WAAY,CACR,OAAK,KAAK,SAAS,QAIZ,KAAK,SAAS,MAAK,EAAG,KAHlB,IAId,CACJ,EAED,MAAO,CACH,UAAW,CACH,KAAK,SAAS,SAAW,GACzB,KAAK,mBAAmB,KAAK,gBAAiB,KAAK,SAAS,CAEnE,EAED,UAAUE,EAAM,CACZ,GAAI,CAACA,EACD,OAGJ,MAAMC,EAAgB,KAAK,6BAA6B,UAAUD,CAAI,EAChEE,EAAYL,EAAU,qBAAoB,EAAG,IAAII,EAAc,SAAS,EAE1EC,GAAaA,EAAU,UAAY,+BACnC,KAAK,gBAAgB,KAAK,SAAS,MAAO,CAAA,EAE9C,KAAK,kBAAiB,CACzB,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,kBAAiB,CACzB,EAED,mBAAoB,CAEhB,GADA,KAAK,UAAU,MAAQ,GACnB,KAAK,SAAS,MAAK,EAAG,OAAS,oBAAqB,CACpD,KAAK,UAAU,MAAQ,CAAE,KAAM,WAAW,EAC1C,MACH,CAEG,KAAK,SAAS,MAAK,EAAG,OAAS,uBAC/B,KAAK,UAAU,MAAQ,CAAE,KAAM,SAAS,EAE/C,EAED,kBAAmB,CAAE,EAErB,gBAAgBC,EAAgB,CAC5B,KAAK,mBAAmB,KAAK,gBAAiB,KAAK,SAAS,EAC5D,KAAK,mBACD,KAAK,gBACL,KAAK,gBACD,CACI,KAAMA,EAAe,KACrB,MAAOA,EAAe,MACtB,CAAC,KAAK,qBAAqB,EAAG,IAAIJ,EAC9B,KAAK,UAAU,KAAK,qBAAqB,EAAE,OAC3C,KAAK,UAAU,KAAK,qBAAqB,EAAE,OAC3C,KAAK,UAAU,KAAK,qBAAqB,EAAE,QAC3C,KACA,CAAE,CACL,CACJ,EACD,KAAK,gBAAgB,GACrB,KAAK,UAAU,QAClB,CACjB,CACS,EAED,gBAAiB,CACb,KAAK,MAAM,eAAe,CAC7B,EAED,eAAgB,CACZ,KAAK,MAAM,cAAc,CAC5B,CACJ,CACL,CAAC"}