{"version":3,"file":"integration.api.service-DqvoQp0q.js","sources":["../../../app/administration/src/core/service/api/integration.api.service.js"],"sourcesContent":["const ApiService = Cicada.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"integration\"\n * @class\n * @package services-settings\n * @extends ApiService\n */\nclass IntegrationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'integration') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'integrationService';\n    }\n\n    /**\n     * Get the generated access key and secret access key from the API\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    generateKey(additionalParams = {}, additionalHeaders = {}, user = false) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const endpoint = user ? '/_action/access-key/user' : '/_action/access-key/intergration';\n\n        return this.httpClient\n            .get(endpoint, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default IntegrationApiService;\n"],"names":["ApiService","IntegrationApiService","httpClient","loginService","apiEndpoint","additionalParams","additionalHeaders","user","params","headers","endpoint","response"],"mappings":"AAAA,MAAMA,EAAa,OAAO,QAAQ,WAQlC,MAAMC,UAA8BD,CAAW,CAC3C,YAAYE,EAAYC,EAAcC,EAAc,cAAe,CAC/D,MAAMF,EAAYC,EAAcC,CAAW,EAC3C,KAAK,KAAO,oBACf,CASD,YAAYC,EAAmB,CAAE,EAAEC,EAAoB,CAAE,EAAEC,EAAO,GAAO,CACrE,MAAMC,EAASH,EACTI,EAAU,KAAK,gBAAgBH,CAAiB,EAChDI,EAAWH,EAAO,2BAA6B,mCAErD,OAAO,KAAK,WACP,IAAIG,EAAU,CACX,OAAAF,EACA,QAAAC,CAChB,CAAa,EACA,KAAME,GACIX,EAAW,eAAeW,CAAQ,CAC5C,CACR,CACL"}