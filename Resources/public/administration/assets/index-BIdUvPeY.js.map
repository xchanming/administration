{"version":3,"file":"index-BIdUvPeY.js","sources":["../../../app/administration/src/module/sw-flow/component/modals/sw-flow-mail-send-modal/sw-flow-mail-send-modal.html.twig","../../../app/administration/src/module/sw-flow/component/modals/sw-flow-mail-send-modal/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_flow_mail_send_modal %}\n<sw-modal\n    class=\"sw-flow-mail-send-modal\"\n    :title=\"$tc('sw-flow.modals.mail.titleSendMail')\"\n    :closable=\"false\"\n    @modal-close=\"onClose\"\n>\n    <sw-single-select\n        :value=\"replyToSelection\"\n        class=\"sw-flow-mail-send-modal__use-different-reply-to\"\n        :options=\"replyToOptions\"\n        :label=\"$tc('sw-flow.modals.mail.useDifferentReplyToLabel')\"\n        :help-text=\"buildReplyToTooltip('sw-flow.modals.mail.tooltipDifferentReplyTo')\"\n        @update:value=\"changeShowReplyToField\"\n    />\n\n    <sw-text-field\n        v-if=\"showReplyToField\"\n        v-model:value=\"replyTo\"\n        name=\"sw-field--replyTo\"\n        class=\"sw-flow-mail-send-modal__reply-to\"\n        :label=\"$tc('sw-flow.modals.mail.labelReplyTo')\"\n        :placeholder=\"$tc('sw-flow.modals.mail.placeholderReplyTo')\"\n        :error=\"replyToError\"\n        required\n        @update:value=\"replyToError = null\"\n    />\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_mail_send_modal_recipient %}\n    <sw-single-select\n        v-model:value=\"mailRecipient\"\n        name=\"sw-field--mailRecipient\"\n        class=\"sw-flow-mail-send-modal__recipient\"\n        :options=\"recipientOptions\"\n        :label=\"$tc('sw-flow.modals.mail.labelRecipient')\"\n        :placeholder=\"$tc('sw-flow.modals.mail.placeholderRecipient')\"\n        @update:value=\"onChangeRecipient\"\n    />\n    {% endblock %}\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_mail_send_modal_recipient_emails_grid %}\n    <sw-data-grid\n        v-if=\"showRecipientEmails\"\n        ref=\"recipientsGrid\"\n        class=\"sw-flow-mail-send-modal__recipient-grid\"\n        :class=\"recipientGridError ? 'has--error' : ''\"\n        :data-source=\"recipients\"\n        :columns=\"recipientColumns\"\n        :show-selection=\"false\"\n        :plain-appearance=\"true\"\n        @inline-edit-save=\"saveRecipient\"\n        @inline-edit-cancel=\"cancelSaveRecipient\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_event_action_detail_recipients_grid_column_email %}\n        <template #column-email=\"{ item, column, isInlineEdit, compact }\">\n            <sw-text-field\n                v-if=\"isInlineEdit\"\n                v-model:value=\"item.email\"\n                name=\"sw-field--item-email\"\n                class=\"sw-flow-mail-send-modal__recipient-email\"\n                :size=\"compact ? 'small' : 'default'\"\n                :error=\"item.errorMail\"\n                :placeholder=\"$tc('sw-flow.modals.mail.placeholderRecipientEmailAddress')\"\n            />\n            <template v-else>\n                {{ item.email }}\n            </template>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_event_action_detail_recipients_grid_column_name %}\n        <template #column-name=\"{ item, column, isInlineEdit, compact }\">\n            <sw-text-field\n                v-if=\"isInlineEdit\"\n                v-model:value=\"item.name\"\n                name=\"sw-field--item-name\"\n                class=\"sw-flow-mail-send-modal__recipient-name\"\n                :size=\"compact ? 'small' : 'default'\"\n                :error=\"item.errorName\"\n                :placeholder=\"$tc('sw-flow.modals.mail.placeholderRecipientName')\"\n            />\n            <template v-else>\n                {{ item.name }}\n            </template>\n        </template>\n        {% endblock %}\n\n        <template #actions=\"{ item, itemIndex }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_event_action_detail_recipients_grid_action_edit %}\n            <sw-context-menu-item\n                class=\"sw-flow-mail-send-modal__grid-action-edit\"\n                @click=\"onEditRecipient(item)\"\n            >\n                {{ $tc('global.default.edit') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_event_action_detail_recipients_grid_action_delete %}\n            <sw-context-menu-item\n                class=\"sw-flow-mail-send-modal__grid-action-delete\"\n                variant=\"danger\"\n                :disabled=\"!allowDeleteRecipient(itemIndex)\"\n                @click=\"onDeleteRecipient(itemIndex)\"\n            >\n                {{ $tc('global.default.delete') }}\n            </sw-context-menu-item>\n            {% endblock %}\n        </template>\n    </sw-data-grid>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_mail_send_modal_mail_template_select %}\n    <sw-entity-single-select\n        v-model:value=\"mailTemplateId\"\n        name=\"sw-field--mailTemplateId\"\n        class=\"sw-flow-mail-send-modal__mail-template-select\"\n        required\n        entity=\"mail_template\"\n        value-property=\"title\"\n        label-property=\"description\"\n        :criteria=\"mailTemplateCriteria\"\n        :label=\"$tc('sw-flow.modals.mail.labelEmailTemplate')\"\n        :placeholder=\"$tc('sw-flow.modals.mail.placeholderEmailTemplate')\"\n        :error=\"mailTemplateIdError\"\n        @update:value=\"(id, template) => onChangeMailTemplate(id, template)\"\n    >\n\n        <template #before-item-list>\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_flow_mail_send_modal_mail_template_select_before_list %}\n            <ul class=\"sw-select-result__item-list\">\n                <li\n                    class=\"sw-select-result sw-select-result__create-new-template\"\n                    role=\"button\"\n                    tabindex=\"0\"\n                    @click=\"onCreateMailTemplate\"\n                    @keydown.enter=\"onCreateMailTemplate\"\n                >\n                    {{ $tc('sw-flow.modals.mail.titleNewEmailTemplate') }}\n                </li>\n            </ul>\n            {% endblock %}\n        </template>\n\n        <template #selection-label-property=\"{ item }\">\n            <strong>{{ item.translated.description }}</strong>\n            <template v-if=\"item.translated.description\">\n                -\n            </template>\n            {{ item.mailTemplateType.translated.name }}\n        </template>\n\n        <template #result-label-property=\"{ item, highlightSearchTerm, labelProperty, searchTerm }\">\n            <strong>\n                <sw-highlight-text\n                    :text=\"item.translated.description\"\n                    :search-term=\"searchTerm\"\n                />\n            </strong>\n            {{ item.mailTemplateType.translated.name }}\n        </template>\n    </sw-entity-single-select>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_mail_send_modal_mail_template_detail_link %}\n    <div class=\"sw-flow-mail-send-modal__mail-template-detail\">\n        <router-link\n            v-if=\"mailTemplateId\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            :to=\"{ name: 'sw.mail.template.detail', params: { id: mailTemplateId } }\"\n        >\n            {{ $tc('sw-flow.modals.mail.fieldMailTemplateDetailLink') }}\n        </router-link>\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_mail_send_modal_document_types %}\n    <sw-entity-multi-id-select\n        v-model:value=\"documentTypeIds\"\n        name=\"sw-field--documentTypeIds\"\n        :repository=\"documentTypeRepository\"\n        class=\"sw-flow-mail-send-modal__document-types\"\n        :label=\"$tc('sw-flow.modals.mail.labelLatestDocuments')\"\n        :placeholder=\"$tc('sw-flow.modals.mail.placeholderLatestDocuments')\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_mail_send_create_new_template %}\n    <sw-flow-create-mail-template-modal\n        v-if=\"showCreateMailTemplateModal\"\n        class=\"sw-flow-mail-send-modal__create-mail-template\"\n        @process-finish=\"onCreateMailTemplateSuccess\"\n        @modal-close=\"onCloseCreateMailTemplateModal\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_mail_send_modal_document_warning %}\n    <sw-alert\n        class=\"sw-flow-mail-send-modal__document_warning\"\n        variant=\"info\"\n    >\n        {{ $tc('sw-flow.modals.mail.documentDescription') }}\n    </sw-alert>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_mail_send_modal_custom %}\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_flow_mail_send_modal_footer %}\n    <template #modal-footer>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_flow_mail_send_modal_footer_cancel_button %}\n        <sw-button\n            class=\"sw-flow-mail-send-modal__cancel-button\"\n            size=\"small\"\n            @click=\"onClose\"\n        >\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_flow_mail_send_modal_footer_save_button %}\n        <sw-button\n            class=\"sw-flow-mail-send-modal__save-button\"\n            variant=\"primary\"\n            size=\"small\"\n            @click=\"onAddAction\"\n        >\n            {{ sequence.id ? $tc('sw-flow.modals.buttonSaveAction') : $tc('sw-flow.modals.buttonAddAction') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n","import { email as emailValidation } from 'src/core/service/validation.service';\nimport template from './sw-flow-mail-send-modal.html.twig';\nimport './sw-flow-mail-send-modal.scss';\n\nconst {\n    Component,\n    Utils,\n    Classes: { CicadaError },\n} = Cicada;\nconst { Criteria } = Cicada.Data;\nconst { mapState } = Component.getComponentHelper();\n\n/**\n * @private\n * @package services-settings\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    emits: [\n        'modal-close',\n        'process-finish',\n    ],\n\n    props: {\n        sequence: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            showCreateMailTemplateModal: false,\n            mailTemplateId: '',\n            showRecipientEmails: false,\n            mailRecipient: null,\n            documentTypeIds: [],\n            recipients: [],\n            selectedRecipient: null,\n            mailTemplateIdError: null,\n            recipientGridError: null,\n            replyTo: null,\n            replyToError: null,\n        };\n    },\n\n    computed: {\n        mailTemplateCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addAssociation('mailTemplateType');\n\n            return criteria;\n        },\n\n        documentTypeRepository() {\n            return this.repositoryFactory.create('document_type');\n        },\n\n        isNewMail() {\n            return !this.sequence?.id;\n        },\n\n        recipientCustomer() {\n            return [\n                {\n                    value: 'default',\n                    label: this.$tc('sw-flow.modals.mail.labelCustomer'),\n                },\n            ];\n        },\n\n        recipientAdmin() {\n            return [\n                {\n                    value: 'admin',\n                    label: this.$tc('sw-flow.modals.mail.labelAdmin'),\n                },\n            ];\n        },\n\n        recipientCustom() {\n            return [\n                {\n                    value: 'custom',\n                    label: this.$tc('sw-flow.modals.mail.labelCustom'),\n                },\n            ];\n        },\n\n        recipientDefault() {\n            return [\n                {\n                    value: 'default',\n                    label: this.$tc('sw-flow.modals.mail.labelDefault'),\n                },\n            ];\n        },\n\n        recipientContactFormMail() {\n            return [\n                {\n                    value: 'contactFormMail',\n                    label: this.$tc('sw-flow.modals.mail.labelContactFormMail'),\n                },\n            ];\n        },\n\n        entityAware() {\n            return [\n                'CustomerAware',\n                'UserAware',\n                'OrderAware',\n                'CustomerGroupAware',\n            ];\n        },\n\n        recipientOptions() {\n            const allowedAwareOrigin = this.triggerEvent.aware ?? [];\n            const allowAwareConverted = [];\n            allowedAwareOrigin.forEach((aware) => {\n                aware = aware.slice(aware.lastIndexOf('\\\\') + 1);\n                const awareUpperCase = aware.charAt(0).toUpperCase() + aware.slice(1);\n                if (!allowAwareConverted.includes(awareUpperCase)) {\n                    allowAwareConverted.push(awareUpperCase);\n                }\n            });\n\n            if (allowAwareConverted.length === 0) {\n                return this.recipientCustom;\n            }\n\n            if (this.triggerEvent.name === 'contact_form.send') {\n                return [\n                    ...this.recipientDefault,\n                    ...this.recipientContactFormMail,\n                    ...this.recipientAdmin,\n                    ...this.recipientCustom,\n                ];\n            }\n            if (\n                [\n                    'newsletter.confirm',\n                    'newsletter.register',\n                    'newsletter.unsubscribe',\n                ].includes(this.triggerEvent.name)\n            ) {\n                return [\n                    ...this.recipientCustomer,\n                    ...this.recipientAdmin,\n                    ...this.recipientCustom,\n                ];\n            }\n\n            const hasEntityAware = allowAwareConverted.some((allowedAware) => this.entityAware.includes(allowedAware));\n\n            if (hasEntityAware) {\n                return [\n                    ...this.recipientCustomer,\n                    ...this.recipientAdmin,\n                    ...this.recipientCustom,\n                ];\n            }\n\n            return [\n                ...this.recipientAdmin,\n                ...this.recipientCustom,\n            ];\n        },\n\n        recipientColumns() {\n            return [\n                {\n                    property: 'email',\n                    label: 'sw-flow.modals.mail.columnRecipientMail',\n                    inlineEdit: 'string',\n                },\n                {\n                    property: 'name',\n                    label: 'sw-flow.modals.mail.columnRecipientName',\n                    inlineEdit: 'string',\n                },\n            ];\n        },\n\n        replyToOptions() {\n            if (this.triggerEvent.name === 'contact_form.send') {\n                return [\n                    ...this.recipientDefault,\n                    ...this.recipientContactFormMail,\n                    ...this.recipientCustom,\n                ];\n            }\n\n            return [\n                ...this.recipientDefault,\n                ...this.recipientCustom,\n            ];\n        },\n\n        replyToSelection() {\n            switch (this.replyTo) {\n                case null:\n                    return 'default';\n                case 'contactFormMail':\n                    return 'contactFormMail';\n                default:\n                    return 'custom';\n            }\n        },\n\n        showReplyToField() {\n            return !(this.replyTo === null || this.replyTo === 'contactFormMail');\n        },\n\n        ...mapState('swFlowState', [\n            'mailTemplates',\n            'triggerEvent',\n            'triggerActions',\n        ]),\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.mailRecipient = this.recipientOptions[0].value;\n\n            if (!this.isNewMail) {\n                const { config } = this.sequence;\n\n                this.mailRecipient = config.recipient?.type;\n\n                if (config.recipient?.type === 'custom') {\n                    Object.entries(config.recipient.data).forEach(\n                        ([\n                            key,\n                            value,\n                        ]) => {\n                            const newId = Utils.createId();\n                            this.recipients.push({\n                                id: newId,\n                                email: key,\n                                name: value,\n                                isNew: false,\n                            });\n                        },\n                    );\n\n                    this.addRecipient();\n                    this.showRecipientEmails = true;\n                }\n\n                if (config.replyTo) {\n                    this.replyTo = config.replyTo;\n                }\n\n                this.mailTemplateId = config.mailTemplateId;\n                this.documentTypeIds = config.documentTypeIds;\n            }\n        },\n\n        onClose() {\n            this.$emit('modal-close');\n        },\n\n        getRecipientData() {\n            const recipientData = {};\n            if (this.mailRecipient !== 'custom') {\n                return recipientData;\n            }\n\n            this.recipients.forEach((recipient) => {\n                if (!recipient.email && !recipient.name) {\n                    return;\n                }\n\n                Object.assign(recipientData, {\n                    [recipient.email]: recipient.name,\n                });\n            });\n            return recipientData;\n        },\n\n        isRecipientGridError() {\n            if (this.mailRecipient !== 'custom') {\n                return false;\n            }\n\n            if (this.recipients.length === 1 && !this.recipients[0].email && !this.recipients[0].name) {\n                this.validateRecipient(this.recipients[0], 0);\n                return true;\n            }\n\n            const invalidItemIndex = this.recipients\n                .filter((item) => !item.isNew)\n                .findIndex((recipient) => !recipient.name || !recipient.email || !emailValidation(recipient.email));\n\n            if (invalidItemIndex >= 0) {\n                this.validateRecipient(this.recipients[invalidItemIndex], invalidItemIndex);\n            }\n\n            return invalidItemIndex >= 0;\n        },\n\n        onAddAction() {\n            this.mailTemplateIdError = this.mailTemplateError(this.mailTemplateId);\n            if (this.showReplyToField) {\n                this.replyToError = this.setMailError(this.replyTo);\n            }\n            this.recipientGridError = this.isRecipientGridError();\n\n            if (this.mailTemplateIdError || this.replyToError || this.recipientGridError) {\n                return;\n            }\n\n            this.resetError();\n\n            const sequence = {\n                ...this.sequence,\n                config: {\n                    mailTemplateId: this.mailTemplateId,\n                    documentTypeIds: this.documentTypeIds,\n                    recipient: {\n                        type: this.mailRecipient,\n                        data: this.getRecipientData(),\n                    },\n                    replyTo: this.replyTo,\n                },\n            };\n\n            this.$nextTick(() => {\n                this.$emit('process-finish', sequence);\n            });\n        },\n\n        onCreateMailTemplate() {\n            this.showCreateMailTemplateModal = true;\n        },\n\n        onCloseCreateMailTemplateModal() {\n            this.showCreateMailTemplateModal = false;\n        },\n\n        onCreateMailTemplateSuccess(mailTemplate) {\n            this.mailTemplateId = mailTemplate.id;\n            this.onChangeMailTemplate(mailTemplate.id, mailTemplate);\n        },\n\n        onChangeMailTemplate(id, mailTemplate) {\n            if (id) {\n                this.mailTemplateIdError = null;\n            }\n\n            const currentMailTemplate = this.mailTemplates.find((item) => item.id === id);\n            if (!currentMailTemplate && mailTemplate) {\n                Cicada.State.commit('swFlowState/setMailTemplates', [\n                    ...this.mailTemplates,\n                    mailTemplate,\n                ]);\n            }\n        },\n\n        onChangeRecipient(recipient) {\n            if (recipient === 'custom') {\n                this.showRecipientEmails = true;\n                this.addRecipient();\n            } else {\n                this.showRecipientEmails = false;\n            }\n        },\n\n        addRecipient() {\n            const newId = Utils.createId();\n\n            this.recipients.push({\n                id: newId,\n                email: '',\n                name: '',\n                isNew: true,\n            });\n\n            this.$nextTick().then(() => {\n                this.$refs.recipientsGrid.currentInlineEditId = newId;\n                this.$refs.recipientsGrid.enableInlineEdit();\n            });\n        },\n\n        saveRecipient(recipient) {\n            const index = this.recipients.findIndex((item) => {\n                return item.id === recipient.id;\n            });\n\n            if (this.validateRecipient(recipient, index)) {\n                this.$nextTick(() => {\n                    this.$refs.recipientsGrid.currentInlineEditId = recipient.id;\n                    this.$refs.recipientsGrid.enableInlineEdit();\n                });\n                return;\n            }\n\n            if (recipient.isNew) {\n                this.addRecipient();\n                this.recipients[index].isNew = false;\n            }\n\n            this.resetError();\n        },\n\n        cancelSaveRecipient(recipient) {\n            if (!recipient.isNew) {\n                const index = this.recipients.findIndex((item) => {\n                    return item.id === this.selectedRecipient.id;\n                });\n\n                // Reset data when saving is cancelled\n                this.recipients[index] = this.selectedRecipient;\n            } else {\n                recipient.name = '';\n                recipient.email = '';\n            }\n\n            this.resetError();\n        },\n\n        onEditRecipient(item) {\n            const index = this.recipients.findIndex((recipient) => {\n                return item.id === recipient.id;\n            });\n\n            // Recheck error in current item\n            if (!item.name && !item.email) {\n                if (this.isCompatEnabled('INSTANCE_SET')) {\n                    this.$set(this.recipients, index, {\n                        ...item,\n                        errorName: null,\n                    });\n                    this.$set(this.recipients, index, {\n                        ...item,\n                        errorMail: null,\n                    });\n                } else {\n                    this.recipients[index] = { ...item, errorName: null };\n                    this.recipients[index] = { ...item, errorMail: null };\n                }\n            } else {\n                this.validateRecipient(item, index);\n            }\n\n            this.$refs.recipientsGrid.currentInlineEditId = item.id;\n            this.$refs.recipientsGrid.enableInlineEdit();\n            this.selectedRecipient = { ...item };\n        },\n\n        onDeleteRecipient(itemIndex) {\n            this.recipients.splice(itemIndex, 1);\n        },\n\n        mailTemplateError(mailTemplate) {\n            if (!mailTemplate) {\n                return new CicadaError({\n                    code: 'c1051bb4-d103-4f74-8988-acbcafc7fdc3',\n                });\n            }\n\n            return null;\n        },\n\n        setNameError(name) {\n            const error = !name\n                ? new CicadaError({\n                      code: 'c1051bb4-d103-4f74-8988-acbcafc7fdc3',\n                  })\n                : null;\n\n            return error;\n        },\n\n        setMailError(mail) {\n            let error = null;\n\n            if (!mail) {\n                error = new CicadaError({\n                    code: 'c1051bb4-d103-4f74-8988-acbcafc7fdc3',\n                });\n            }\n\n            if (!emailValidation(mail)) {\n                error = new CicadaError({\n                    code: 'INVALID_MAIL',\n                });\n            }\n\n            return error;\n        },\n\n        validateRecipient(item, itemIndex) {\n            const errorName = this.setNameError(item.name);\n            const errorMail = this.setMailError(item.email);\n\n            if (this.isCompatEnabled('INSTANCE_SET')) {\n                this.$set(this.recipients, itemIndex, {\n                    ...item,\n                    errorName,\n                    errorMail,\n                });\n            } else {\n                this.recipients[itemIndex] = {\n                    ...item,\n                    errorName,\n                    errorMail,\n                };\n            }\n\n            return errorName || errorMail;\n        },\n\n        resetError() {\n            this.recipientGridError = null;\n            this.recipients.forEach((item) => {\n                item.errorName = null;\n                item.errorMail = null;\n            });\n        },\n\n        allowDeleteRecipient(itemIndex) {\n            return itemIndex !== this.recipients.length - 1;\n        },\n\n        changeShowReplyToField(value) {\n            switch (value) {\n                case 'default':\n                    this.replyToError = null;\n                    this.replyTo = null;\n\n                    return;\n                case 'contactFormMail':\n                    this.replyToError = null;\n                    this.replyTo = 'contactFormMail';\n\n                    return;\n                default:\n                    this.replyTo = '';\n            }\n        },\n\n        buildReplyToTooltip(snippet) {\n            const route = { name: 'sw.settings.basic.information.index' };\n            const routeData = this.$router.resolve(route);\n\n            const data = {\n                settingsLink: routeData.href,\n            };\n\n            return this.$tc(snippet, 0, data);\n        },\n    },\n};\n"],"names":["template","Component","Utils","CicadaError","Criteria","mapState","index","criteria","_a","allowedAwareOrigin","allowAwareConverted","aware","awareUpperCase","allowedAware","config","_b","key","value","newId","recipientData","recipient","invalidItemIndex","item","emailValidation","sequence","mailTemplate","id","itemIndex","name","mail","error","errorName","errorMail","snippet","route","data"],"mappings":"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"}