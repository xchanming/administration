const c=`{% block sw_order_select_document_type_modal %} <sw-modal v-bind="$attrs" :title="$tc('sw-order.components.selectDocumentTypeModal.title')" variant="small" class="sw-order-select-document-type-modal" @modal-close="$emit('modal-close', false)" > {% block sw_order_select_document_type_modal_document_types %} <sw-radio-field v-if="!isLoading && documentTypes.length" v-model:value="documentType" :options="documentTypes" class="sw-order-select-document-type-modal__radio-field" @update:value="onRadioFieldChange" /> {% endblock %} <template #modal-footer> {% block sw_order_select_document_type_modal_footer_action_cancel %} <sw-button @click="$emit('modal-close', false)" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_order_select_document_type_modal_footer_action_create %} <sw-button variant="primary" @click="$emit('modal-close', true)" > {{ $tc('sw-order.components.selectDocumentTypeModal.primaryAction') }} </sw-button> {% endblock %} </template> </sw-modal> {% endblock %}`,{Criteria:i}=Shopware.Data,n={template:c,inject:["repositoryFactory"],emits:["modal-close","update:value"],props:{order:{type:Object,required:!0},value:{required:!1,type:Object,default:null}},data(){return{documentTypes:[],documentTypeCollection:null,documentType:null,invoiceExists:!1,isLoading:!1}},computed:{creditItems(){const e=[];return this.order.lineItems.forEach(o=>{o.type==="credit"&&e.push(o)}),e},documentRepository(){return this.repositoryFactory.create("document")},documentTypeRepository(){return this.repositoryFactory.create("document_type")},documentTypeCriteria(){return new i(1,100).addSorting(i.sort("name","ASC"))},documentCriteria(){const e=new i(1,100);return e.addFilter(i.equals("order.id",this.order.id)),e.addFilter(i.equals("documentType.technicalName","invoice")),e}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0,this.documentRepository.searchIds(this.documentCriteria).then(e=>{this.invoiceExists=e.total>0,this.documentTypeRepository.search(this.documentTypeCriteria).then(o=>{this.documentTypeCollection=o,this.documentTypes=o.map(t=>{const a={value:t.id,name:t.translated.name,disabled:!this.documentTypeAvailable(t)};return t.technicalName==="storno"||t.technicalName==="credit_note"?this.addHelpTextToOption(a,t):a}),this.documentTypes.length&&(this.documentType=this.documentTypes.find(t=>!t.disabled).value,this.onRadioFieldChange()),this.isLoading=!1})})},documentTypeAvailable(e){return e.technicalName!=="storno"&&e.technicalName!=="credit_note"||(e.technicalName==="storno"||e.technicalName==="credit_note"&&this.creditItems.length!==0)&&this.invoiceExists},addHelpTextToOption(e,o){return e.helpText=this.$tc(`sw-order.components.selectDocumentTypeModal.helpText.${o.technicalName}`),e},onRadioFieldChange(){this.$emit("update:value",this.documentTypeCollection.get(this.documentType))}}};export{n as default};
