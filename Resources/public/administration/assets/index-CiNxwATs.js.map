{"version":3,"file":"index-CiNxwATs.js","sources":["../../../app/administration/src/app/asyncComponent/media/sw-media-folder-item/sw-media-folder-item.html.twig","../../../app/administration/src/app/asyncComponent/media/sw-media-folder-item/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_media_folder_item %}\n<sw-media-base-item\n    class=\"sw-media-folder-item\"\n    v-bind=\"$attrs\"\n    :truncate-right=\"true\"\n    :allow-multi-select=\"!isParent\"\n    v-on=\"listeners\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_folder_item_preview %}\n    <template #preview=\"{ item }\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_folder_parent_icon%}\n        <img\n            v-if=\"isParent\"\n            :src=\"assetFilter('/administration/static/img/media/folder--back.svg')\"\n            class=\"sw-media-folder-item__folder-thumbnails\"\n            alt=\"Folder back\"\n        >\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_folder_default_icon%}\n        <span\n            v-else-if=\"!!item.defaultFolderId\"\n        >\n            <img\n                :src=\"assetFilter('/administration/static/img/media/' + iconName + '.svg')\"\n                class=\"sw-media-folder-item__folder-thumbnails\"\n                :alt=\"iconName\"\n            >\n            <sw-icon\n                v-if=\"iconConfig.name\"\n                class=\"sw-media-folder-item__folder-thumbnails is--inner\"\n                v-bind=\"iconConfig\"\n            />\n        </span>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_folder_folder_icon%}\n        <img\n            v-else\n            :src=\"assetFilter('/administration/static/img/media/folder-thumbnail--large.svg')\"\n            class=\"sw-media-folder-item__folder-thumbnails\"\n            alt=\"Folder thumbnail\"\n        >\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_folder_name %}\n    <template #name=\"{ item, isInlineEdit, startInlineEdit, endInlineEdit }\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_base_item_name %}\n        <sw-text-field\n            v-if=\"!isParent && (isInlineEdit || item.isNew())\"\n            v-autofocus\n            class=\"sw-media-base-item__name-field\"\n            :value=\"item.name\"\n            name=\"media-item-name\"\n            @blur=\"onBlur($event, item, endInlineEdit)\"\n            @click.stop\n            @keydown.enter=\"onBlur($event, item, endInlineEdit)\"\n            @keyup.esc=\"endInlineEdit\"\n        />\n        <div\n            v-else\n            ref=\"itemName\"\n            class=\"sw-media-base-item__name\"\n            :title=\"item.name\"\n        >\n            {{ item.name }}\n        </div>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_folder_meta_data %}\n    <template #metadata=\"{ item }\">\n        <div class=\"sw-media-folder-item__metadata\">\n            {{ dateFilter(item.createdAt) }}\n        </div>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_folder_item_context_menu %}\n    <template #context-menu=\"{ item, startInlineEdit, allowEdit, allowDelete }\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_folder_item_context_item_show_media %}\n        <sw-context-menu-item\n            class=\"sw-media-context-item__show-media-action\"\n            @click=\"navigateToFolder(item.id)\"\n        >\n            {{ $tc('global.sw-media-folder-item.labelContextMenuShowMedia') }}\n        </sw-context-menu-item>\n        {% endblock %}\n\n        <slot>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_folder_item_additional_context_menu_slot %}{% endblock %}\n        </slot>\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_folder_item_context_group_quick_actions %}\n        <div class=\"sw-context-menu__group\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_folder_item_context_item_show_settings %}\n            <sw-context-menu-item\n                class=\"sw-media-context-item__open-settings-action\"\n                @click=\"openSettings\"\n            >\n                {{ $tc('global.sw-media-folder-item.labelContextMenuShowSettings') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_folder_item_context_item_move %}\n            <sw-context-menu-item\n                :disabled=\"!allowEdit\"\n                class=\"sw-media-context-item__move-folder-action\"\n                @click=\"openMoveModal\"\n            >\n                {{ $tc('global.sw-media-folder-item.labelContextMenuMove') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_folder_item_context_item_dissolve %}\n            <sw-context-menu-item\n                :disabled=\"!allowEdit\"\n                class=\"sw-media-context-item__dissolve-folder-action\"\n                @click=\"openDissolveModal\"\n            >\n                {{ $tc('global.sw-media-folder-item.labelContextMenuDissolve') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_folder_item_context_item_rename_item %}\n            <sw-context-menu-item\n                :disabled=\"!allowEdit\"\n                class=\"sw-media-context-item__rename-folder-action\"\n                @click=\"startInlineEdit\"\n            >\n                {{ $tc('global.sw-media-folder-item.labelContextMenuRename') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_folder_item_context_item_delete %}\n            <sw-context-menu-item\n                :disabled=\"!allowDelete\"\n                class=\"sw-media-context-item__delete-folder-action\"\n                variant=\"danger\"\n                @click=\"openDeleteModal\"\n            >\n                {{ $tc('global.default.delete') }}\n            </sw-context-menu-item>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_folder_modal_windows %}\n    <template #modal-windows=\"{ item, allowEdit, allowDelete }\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_folder_settings_modal %}\n        <sw-media-modal-folder-settings\n            v-if=\"showSettings\"\n            :disabled=\"!allowEdit\"\n            :media-folder-id=\"item.id\"\n            @media-settings-modal-save=\"refreshIconConfig\"\n            @media-settings-modal-close=\"closeSettings\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_folder_dissolve_modal %}\n        <sw-media-modal-folder-dissolve\n            v-if=\"showDissolveModal\"\n            :items-to-dissolve=\"[item]\"\n            @media-folder-dissolve-modal-dissolve=\"onFolderDissolved\"\n            @media-folder-dissolve-modal-close=\"closeDissolveModal\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_folder_move_modal %}\n        <sw-media-modal-move\n            v-if=\"showMoveModal\"\n            :items-to-move=\"[item]\"\n            @media-move-modal-close=\"closeMoveModal\"\n            @media-move-modal-items-move=\"onFolderMoved\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_folder_delete_modal %}\n        <sw-media-modal-delete\n            v-if=\"showDeleteModal\"\n            :items-to-delete=\"[item]\"\n            @media-delete-modal-items-delete=\"emitItemDeleted\"\n            @media-delete-modal-close=\"closeDeleteModal\"\n        />\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-media-base-item>\n{% endblock %}\n","import template from './sw-media-folder-item.html.twig';\nimport './sw-media-folder-item.scss';\n\nconst { Application, Mixin, Context } = Cicada;\nconst { warn } = Cicada.Utils.debug;\n\n/**\n * @package content\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inheritAttrs: false,\n\n    inject: ['repositoryFactory'],\n\n    emits: [\n        'media-folder-remove',\n        'media-folder-changed',\n        'media-folder-delete',\n        'media-folder-dissolve',\n        'media-folder-move',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        isParent: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            showSettings: false,\n            showDissolveModal: false,\n            showMoveModal: false,\n            showDeleteModal: false,\n            lastDefaultFolderId: null,\n            iconConfig: {\n                name: '',\n                color: 'inherit',\n            },\n        };\n    },\n\n    computed: {\n        mediaFolderRepository() {\n            return this.repositoryFactory.create('media_folder');\n        },\n\n        mediaDefaultFolderRepository() {\n            return this.repositoryFactory.create('media_default_folder');\n        },\n\n        moduleFactory() {\n            return Application.getContainer('factory').module;\n        },\n\n        mediaFolder() {\n            return this.$attrs.item;\n        },\n\n        iconName() {\n            switch (this.iconConfig.name) {\n                case 'regular-box':\n                    return 'multicolor-folder-thumbnail--green';\n                case 'regular-products':\n                    return 'multicolor-folder-thumbnail--green';\n                case 'regular-database':\n                    return 'multicolor-folder-thumbnail--grey';\n                case 'regular-content':\n                    return 'multicolor-folder-thumbnail--pink';\n                case 'regular-cog':\n                    return 'multicolor-folder-thumbnail--grey';\n                default:\n                    return 'multicolor-folder-thumbnail';\n            }\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n\n        dateFilter() {\n            return Cicada.Filter.getByName('date');\n        },\n\n        listeners() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return this.$listeners;\n            }\n\n            return {};\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.getIconConfigFromFolder();\n        },\n\n        async getIconConfigFromFolder() {\n            const { mediaFolder } = this;\n\n            if (!mediaFolder.defaultFolderId || mediaFolder.defaultFolderId === this.lastDefaultFolderId) {\n                return;\n            }\n\n            this.lastDefaultFolderId = mediaFolder.defaultFolderId;\n\n            const defaultFolder = await this.mediaDefaultFolderRepository.get(mediaFolder.defaultFolderId, Context.api);\n\n            if (!defaultFolder) {\n                return;\n            }\n\n            const module = this.moduleFactory.getModuleByEntityName(defaultFolder.entity);\n\n            if (!module) {\n                warn('Missing module for default folder entity', defaultFolder.entity);\n                return;\n            }\n\n            this.iconConfig.name = module.manifest?.icon ?? '';\n            this.iconConfig.color = module.manifest?.color ?? '#000000';\n        },\n\n        async onChangeName(updatedName, item, endInlineEdit) {\n            if (!updatedName || !updatedName.trim()) {\n                this.rejectRenaming(item, 'empty-name', endInlineEdit);\n                return;\n            }\n\n            if (updatedName.includes('<')) {\n                this.rejectRenaming(item, 'invalid-name', endInlineEdit);\n                return;\n            }\n\n            item.name = updatedName;\n\n            try {\n                await this.mediaFolderRepository.save(item, Context.api);\n                item._isNew = false;\n            } catch (error) {\n                this.rejectRenaming(item, error, endInlineEdit);\n            } finally {\n                endInlineEdit();\n            }\n        },\n\n        onBlur(event, item, endInlineEdit) {\n            const input = event.target.value;\n\n            if (input !== item.name) {\n                this.onChangeName(input, item, endInlineEdit);\n                return;\n            }\n\n            endInlineEdit();\n        },\n\n        rejectRenaming(item, cause, endInlineEdit) {\n            if (cause) {\n                let title = this.$tc('global.default.error');\n                let message = this.$tc('global.sw-media-folder-item.notification.renamingError.message');\n\n                if (cause === 'empty-name') {\n                    title = this.$tc('global.default.error');\n                    message = this.$tc('global.sw-media-folder-item.notification.errorBlankItemName.message');\n                } else if (cause === 'invalid-name') {\n                    title = this.$tc('global.default.error');\n                    message = this.$tc('global.sw-media-folder-item.notification.errorInvalidItemName.message');\n                }\n\n                this.createNotificationError({\n                    title: title,\n                    message: message,\n                });\n            }\n\n            if (item.isNew() === true) {\n                this.$emit('media-folder-remove', [item.id]);\n            }\n            endInlineEdit();\n        },\n\n        navigateToFolder(id) {\n            this.$router.push({\n                name: 'sw.media.index',\n                params: {\n                    folderId: id,\n                },\n            });\n        },\n\n        openSettings() {\n            this.showSettings = true;\n        },\n\n        closeSettings(mediaFolderChanged) {\n            this.showSettings = false;\n\n            // The boolean check if necessary, because sometimes the original html event is passed as an argument\n            if (typeof mediaFolderChanged === 'boolean' && mediaFolderChanged === true) {\n                this.$nextTick(() => {\n                    this.$emit('media-folder-changed');\n                });\n            }\n        },\n\n        openDissolveModal() {\n            this.showDissolveModal = true;\n        },\n\n        closeDissolveModal() {\n            this.showDissolveModal = false;\n        },\n\n        openDeleteModal() {\n            this.showDeleteModal = true;\n        },\n\n        closeDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        emitItemDeleted(ids) {\n            this.closeDeleteModal();\n\n            this.$nextTick(() => {\n                this.$emit('media-folder-delete', ids.folderIds);\n            });\n        },\n\n        onFolderDissolved(ids) {\n            this.closeDissolveModal();\n\n            this.$nextTick(() => {\n                this.$emit('media-folder-dissolve', ids);\n            });\n        },\n\n        onFolderMoved(ids) {\n            this.closeMoveModal();\n\n            this.$nextTick(() => {\n                this.$emit('media-folder-move', ids);\n            });\n        },\n\n        openMoveModal() {\n            this.showMoveModal = true;\n        },\n\n        closeMoveModal() {\n            this.showMoveModal = false;\n        },\n\n        async refreshIconConfig() {\n            await this.getIconConfigFromFolder();\n            this.closeSettings(true);\n        },\n    },\n};\n"],"names":["template","Application","Mixin","Context","warn","index","_a","_b","mediaFolder","defaultFolder","module","updatedName","item","endInlineEdit","error","event","input","cause","title","message","id","mediaFolderChanged","ids"],"mappings":"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"}