const u=`{% block sw_product_variants_configurator_restrictions %} <div class="sw-product-variants-configurator-restrictions"> {% block sw_product_variants_configurator_restrictions_search %} <div class="sw-product-variants-configurator-restrictions__search"> {% block sw_product_variants_configurator_restrictions_search_field %} <sw-simple-search-field v-model:value="term" size="small" variant="form" :placeholder="$tc('sw-product.variations.configuratorModal.searchRestrictions')" /> {% endblock %} {% block sw_product_variants_configurator_restrictions_buttons %} <sw-button variant="ghost" size="small" @click="addEmptyRestrictionCombination" > {{ $tc('sw-product.variations.configuratorModal.addNewRestriction') }} </sw-button> {% endblock %} </div> {% endblock %} {% block sw_product_variants_configurator_restrictions_grid_wrapper %} <div class="sw-product-variants-configurator-restrictions__grid-wrapper"> {% block sw_product_variants_configurator_restrictions_data_grid %} <sw-data-grid v-if="product.variantRestrictions" ref="swDataGrid" :data-source="filteredRestrictions" :columns="restrictionColumns" :show-selection="false" :compact-mode="false" full-page > {% block sw_product_variants_configurator_restrictions_data_grid_column_id %} <template #column-id="{ item, isInlineEdit, compact }" > <template v-for="restriction in getRestrictionsWithNaming(item.id).values" :key="restriction.id" > <span class="sw-product-variants-configurator-restrictions__group-name" > {{ restriction.group }}: </span> <sw-label v-for="option in restriction.options" :key="option.id" ghost > {{ option }} </sw-label> </template> </template> {% endblock %} {% block sw_product_variants_configurator_restrictions_data_grid_actions %} <template #actions="{ item }" > {% block sw_product_variants_configurator_restrictions_data_grid_actions_items %} <sw-context-menu-item @click="editRestrictionCombination(item)"> {{ $tc('sw-product.variations.configuratorModal.editRestriction') }} </sw-context-menu-item> <sw-context-menu-item variant="danger" @click="deleteRestrictionCombination(item)" > {{ $tc('sw-product.variations.configuratorModal.deleteRestriction') }} </sw-context-menu-item> {% endblock %} </template> {% endblock %} </sw-data-grid> {% endblock %} </div> {% endblock %} {% block sw_product_variants_configurator_restrictions_modal %} <sw-modal v-if="restrictionModalIsOpen" :title="$tc('sw-product.variations.configuratorModal.singleRestrictionAddTitle')" class="sw-product-variants-configurator-restrictions__modal" @modal-close="cancelAddRestriction" > {% block sw_product_variants_configurator_restrictions_modal_main %} <div class="sw-product-variants-configurator-restrictions__modal-main"> {% block sw_product_variants_configurator_restrictions_modal_main_restriction_selection %} <sw-product-restriction-selection v-for="(restriction, index) in actualRestriction.values" :key="restriction.id" :groups-with-options="groupsWithOptions" :restriction="restriction" @restriction-delete="deleteRestriction" > <template #contentAfter> <p v-if="index < actualRestrictionValueLength - 1" class="sw-product-variants-configurator-restrictions__seperator" > {{ $tc('sw-product.variations.configuratorModal.singleRestrictionSeperation') }} </p> </template> </sw-product-restriction-selection> {% endblock %} {% block sw_product_variants_configurator_restrictions_modal_main_button_new_restriction %} <sw-button class="sw-product-variants-configurator-restrictions__button-new-restriction" @click="addEmptyRestriction" > {{ $tc('sw-product.variations.configuratorModal.singleRestrictionSeperation') }} </sw-button> {% endblock %} </div> {% endblock %} {% block sw_product_variants_configurator_restrictions_modal_footer %} <template #modal-footer> {% block sw_product_variants_configurator_restrictions_modal_footer_cancel %} <sw-button size="small" @click="cancelAddRestriction" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_product_variants_configurator_restrictions_modal_footer_save_add_restriction %} <sw-button variant="primary" size="small" @click="saveAddRestriction" > {{ $tc('sw-product.variations.configuratorModal.save') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} {% block sw_product_variants_configurator_restrictions_loader %} <sw-loader v-if="isLoading" /> {% endblock %} </div> {% endblock %}`,l={template:u,props:{product:{type:Object,required:!0},selectedGroups:{type:Array,required:!0}},data(){return{term:"",restrictionModalIsOpen:!1,isLoading:!0,groupsWithOptions:[],actualRestriction:{}}},computed:{restrictionColumns(){return[{property:"id",label:"sw-product.variations.configuratorModal.restrictedCombinations",rawData:!0}]},actualRestrictionValueLength(){return this.actualRestriction.values.length},filteredRestrictions(){if(!Array.isArray(this.product.variantRestrictions))return[];if(this.term.length<=0)return this.product.variantRestrictions;const i=this.product.variantRestrictions.map(r=>this.getRestrictionsWithNaming(r.id)).reduce((r,o)=>{let e=!1;return o.values.forEach(s=>{s.group.toLowerCase().includes(this.term.toLowerCase())&&(e=!0),s.options.find(n=>n.toLowerCase().includes(this.term.toLowerCase())?(e=!0,!0):!1)}),e&&r.push(o.id),r},[]);return this.product.variantRestrictions.filter(r=>i.indexOf(r.id)>=0)}},mounted(){this.mountedComponent()},methods:{mountedComponent(){this.filterEmptyValues(),this.groupsWithOptions=this.selectedGroups.map(t=>({group:t,options:this.getOptionsForGroupId(t.id)})),this.isLoading=!1},getOptionsForGroupId(t){return this.product.configuratorSettings.filter(i=>!i.isDeleted&&i.option.groupId===t)},getRestrictionsWithNaming(t){const i=this.product.variantRestrictions.find(r=>r.id===t);return{id:i.id,values:i.values.map(r=>{const o=this.selectedGroups.find(s=>s.id===r.group);if(!o)return{group:"",options:[]};const e=r.options.reduce((s,n)=>{const c=n.optionId?n.optionId:n,a=this.product.configuratorSettings.find(d=>c===d.optionId);return a!=null&&a.option&&s.push(a.option.translated.name),s},[]);return{group:o.translated.name,options:e}})}},filterEmptyValues(){return Array.isArray(this.product.variantRestrictions)?(this.product.variantRestrictions=this.product.variantRestrictions.filter(t=>(t.values=t.values.filter(i=>(i.options=i.options.filter(r=>this.product.configuratorSettings.find(o=>r===o.optionId)),i.options.length>0)),t.values.length>0)),!0):!1},addEmptyRestrictionCombination(){const t=String(new Date().valueOf()).split("").reverse().join("");this.actualRestriction={id:t,values:[]},this.addEmptyRestriction(),this.restrictionModalIsOpen=!0},addEmptyRestriction(){const t=String(new Date().valueOf()).split("").reverse().join(""),i=this.groupsWithOptions[0].group;this.actualRestriction.values.push({id:t,group:i.id,options:[]})},cancelAddRestriction(){this.actualRestriction={},this.restrictionModalIsOpen=!1},saveAddRestriction(){Array.isArray(this.product.variantRestrictions)||(this.product.variantRestrictions=[]),this.product.variantRestrictions.some(i=>i.id===this.actualRestriction.id)||this.product.variantRestrictions.push(this.actualRestriction),this.actualRestriction={},this.restrictionModalIsOpen=!1},editRestrictionCombination(t){this.actualRestriction=t,this.restrictionModalIsOpen=!0},deleteRestrictionCombination(t){this.product.variantRestrictions=this.product.variantRestrictions.filter(i=>i.id!==t.id)},deleteRestriction(t){this.actualRestriction.values=this.actualRestriction.values.filter(i=>i!==t)}}};export{l as default};
