{"version":3,"file":"index-Dptpij6u.js","sources":["../../../app/administration/src/module/sw-cms/elements/youtube-video/config/sw-cms-el-config-youtube-video.html.twig","../../../app/administration/src/module/sw-cms/elements/youtube-video/config/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_cms_element_youtube_video_config %}\n<div class=\"sw-cms-el-config-youtube-video\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_element_youtube_video_config_video_id %}\n    <sw-text-field\n        v-model:value=\"videoID\"\n        class=\"sw-cms-el-config-youtube-video__video-id\"\n        :label=\"$tc('sw-cms.elements.vimeoVideo.config.label.videoId')\"\n        :placeholder=\"$tc('sw-cms.elements.vimeoVideo.config.placeholder.videoId')\"\n    />\n    {% endblock %}\n\n    {% block sw_cms_element_youtube_video_config_title %}\n    <sw-text-field\n        v-model:value=\"element.config.iframeTitle.value\"\n        :label=\"$tc('sw-cms.elements.vimeoVideo.config.label.videoTitle')\"\n        :placeholder=\"$tc('sw-cms.elements.vimeoVideo.config.placeholder.videoTitle')\"\n    />\n    {% endblock %}\n\n    <div class=\"sw-cms-el-config-youtube-video__switches\">\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_element_youtube_video_config_autoplay %}\n        <sw-switch-field\n            v-model:value=\"element.config.autoPlay.value\"\n            :label=\"$tc('sw-cms.elements.vimeoVideo.config.label.autoPlay')\"\n            :help-text=\"$tc('sw-cms.elements.vimeoVideo.config.helpText.autoPlay')\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_element_youtube_video_config_loop %}\n        <sw-switch-field\n            v-model:value=\"element.config.loop.value\"\n            :label=\"$tc('sw-cms.elements.vimeoVideo.config.label.loop')\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_element_youtube_video_config_show_controls %}\n        <sw-switch-field\n            v-model:value=\"element.config.showControls.value\"\n            :label=\"$tc('sw-cms.elements.vimeoVideo.config.label.showControls')\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_element_youtube_video_config_advanced_privacy_mode %}\n        <sw-switch-field\n            v-model:value=\"element.config.advancedPrivacyMode.value\"\n            :label=\"$tc('sw-cms.elements.vimeoVideo.config.label.advancedPrivacy')\"\n            :help-text=\"$tc('sw-cms.elements.vimeoVideo.config.helpText.advancedPrivacy')\"\n        />\n        {% endblock %}\n    </div>\n\n    <div class=\"sw-cms-el-config-youtube-video__start-and-end\">\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_element_youtube_video_config_start %}\n        <sw-text-field\n            :value=\"startValue\"\n            :label=\"$tc('sw-cms.elements.vimeoVideo.config.label.start')\"\n            placeholder=\"0:00\"\n            @update:value=\"setTimeValue($event, 'start')\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_element_youtube_video_config_end %}\n        <sw-text-field\n            :value=\"endValue\"\n            :label=\"$tc('sw-cms.elements.vimeoVideo.config.label.end')\"\n            placeholder=\"0:00\"\n            @update:value=\"setTimeValue($event, 'end')\"\n        />\n        {% endblock %}\n    </div>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_element_youtube_video_config_display_mode %}\n    <sw-select-field\n        v-model:value=\"element.config.displayMode.value\"\n        :placeholder=\"$tc('sw-cms.elements.general.config.label.displayMode')\"\n        :label=\"$tc('sw-cms.elements.general.config.label.displayMode')\"\n    >\n        <option value=\"standard\">\n            {{ $tc('sw-cms.elements.general.config.label.displayModeStandard') }}\n        </option>\n        <option value=\"streched\">\n            {{ $tc('sw-cms.elements.general.config.label.displayModeStretch') }}\n        </option>\n    </sw-select-field>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_element_youtube_video_config_needs_confirmation %}\n    <div class=\"sw-cms-el-config-youtube-video__confirmation\">\n        <sw-switch-field\n            v-model:value=\"element.config.needsConfirmation.value\"\n            :label=\"$tc('sw-cms.elements.vimeoVideo.config.label.needsConfirmation')\"\n        />\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_element_youtube_video_config_preview_media %}\n    <sw-cms-mapping-field\n        v-if=\"element.config.needsConfirmation.value\"\n        v-model:config=\"element.config.previewMedia\"\n        :label=\"$tc('sw-cms.elements.vimeoVideo.config.label.previewImage')\"\n        value-types=\"entity\"\n        entity=\"media\"\n    >\n        <sw-media-upload-v2\n            variant=\"regular\"\n            :upload-tag=\"uploadTag\"\n            :source=\"previewSource\"\n            :allow-multi-select=\"false\"\n            :default-folder=\"cmsPageState.pageEntityName\"\n            :caption=\"$tc('sw-cms.elements.general.config.caption.mediaUpload')\"\n            @media-upload-sidebar-open=\"onOpenMediaModal\"\n            @media-upload-remove-image=\"onImageRemove\"\n        />\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_element_youtube_video_config_preview_media_display %}\n        <template #preview=\"{ demoValue }\">\n            <div class=\"sw-cms-el-config-image__mapping-preview\">\n                <img\n                    v-if=\"demoValue.url\"\n                    :src=\"demoValue.url\"\n                    alt=\"\"\n                >\n                <sw-alert\n                    v-else\n                    class=\"sw-cms-el-config-image__preview-info\"\n                    variant=\"info\"\n                >\n                    {{ $tc('sw-cms.detail.label.mappingEmptyPreview') }}\n                </sw-alert>\n            </div>\n        </template>\n        {% endblock %}\n    </sw-cms-mapping-field>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_element_youtube_video_config_preview_media_upload_listener %}\n    <sw-upload-listener\n        :upload-tag=\"uploadTag\"\n        auto-upload\n        @media-upload-finish=\"onImageUpload\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_element_youtube_video_config_preview_media_modal %}\n    <sw-media-modal-v2\n        v-if=\"mediaModalIsOpen\"\n        variant=\"full\"\n        :caption=\"$tc('sw-cms.elements.general.config.caption.mediaUpload')\"\n        :entity-context=\"cmsPageState.entityName\"\n        :allow-multi-select=\"false\"\n        :initial-folder-id=\"cmsPageState.defaultMediaFolderId\"\n        @media-upload-remove-image=\"onImageRemove\"\n        @media-modal-selection-change=\"onSelectionChanges\"\n        @modal-close=\"onCloseModal\"\n    />\n    {% endblock %}\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-cms-el-config-youtube-video.html.twig';\nimport './sw-cms-el-config-youtube-video.scss';\n\nconst { Mixin } = Cicada;\n\n/**\n * @private\n * @package discovery\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['repositoryFactory'],\n\n    emits: ['element-update'],\n\n    mixins: [\n        Mixin.getByName('cms-element'),\n    ],\n\n    data() {\n        return {\n            mediaModalIsOpen: false,\n            initialFolderId: null,\n        };\n    },\n\n    computed: {\n        startValue() {\n            return this.convertTimeToInputFormat(this.element.config.start.value).string;\n        },\n\n        endValue() {\n            return this.convertTimeToInputFormat(this.element.config.end.value).string;\n        },\n\n        videoID: {\n            get() {\n                return this.element.config.videoID.value;\n            },\n\n            set(link) {\n                this.element.config.videoID.value = this.shortenLink(link);\n            },\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        uploadTag() {\n            return `cms-element-youtube-video-config-${this.element.id}`;\n        },\n\n        previewSource() {\n            if (this.element.data && this.element.data.previewMedia && this.element.data.previewMedia.id) {\n                return this.element.data.previewMedia;\n            }\n\n            return this.element.config.previewMedia.value;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        setTimeValue(value, type) {\n            this.element.config[type].value = this.convertTimeToUrlFormat(value).string;\n        },\n\n        createdComponent() {\n            this.initElementConfig('youtube-video');\n        },\n\n        convertTimeToInputFormat(time) {\n            /* converting the time to a human readable format.\n             * e.g. 1337 (seconds) -> 22:17\n             */\n\n            const returnValues = {};\n            let incomingTime = time;\n\n            const regex = /^[0-9]*$/;\n            const isValidFormat = regex.test(time);\n\n            if (!isValidFormat) {\n                incomingTime = 0;\n            }\n\n            const minutes = Math.floor(incomingTime / 60);\n            let seconds = incomingTime - minutes * 60;\n\n            returnValues.minutes = minutes;\n            returnValues.seconds = seconds;\n\n            if (seconds.toString().length === 1) {\n                seconds = `0${seconds}`;\n            }\n\n            returnValues.string = `${minutes}:${seconds}`;\n\n            return returnValues;\n        },\n\n        convertTimeToUrlFormat(time) {\n            /* converting the time to an url format so the YouTube iFrame-API can read the time.\n             * e.g. 0:42 -> 42 (seconds)\n             */\n\n            const returnValues = {};\n            let incomingTime = time;\n\n            const regex = /[0-9]?[0-9]:[0-9][0-9]/;\n            const isValidFormat = regex.test(incomingTime);\n\n            if (!isValidFormat) {\n                incomingTime = '00:00';\n            }\n\n            const splittedTime = incomingTime.split(':');\n            returnValues.minutes = Number(splittedTime[0]);\n            returnValues.seconds = Number(splittedTime[1]);\n            returnValues.string = returnValues.minutes * 60 + returnValues.seconds;\n\n            return returnValues;\n        },\n\n        shortenLink(link) {\n            /* shareLink is the link you get when you click the share button under a YouTube video.\n             *  e.g. https://youtu.be/bG57TZPYsyw\n             *\n             * urlLink is the link of the YouTube video from the searchbar. e.g. https://www.youtube.com/watch?v=bG57TZPYsyw\n             */\n            const url = new URL(link);\n\n            switch (url.hostname) {\n                case 'www.youtu.be':\n                case 'youtu.be':\n                    return url.pathname.substring(1);\n                case 'www.youtube.com':\n                case 'youtube.com':\n                    return url.searchParams.get('v');\n                default:\n                    return link;\n            }\n        },\n\n        async onImageUpload({ targetId }) {\n            const mediaEntity = await this.mediaRepository.get(targetId);\n\n            this.element.config.previewMedia.value = mediaEntity.id;\n\n            this.updateElementData(mediaEntity);\n\n            this.$emit('element-update', this.element);\n        },\n\n        onImageRemove() {\n            this.element.config.previewMedia.value = null;\n\n            this.updateElementData();\n\n            this.$emit('element-update', this.element);\n        },\n\n        onCloseModal() {\n            this.mediaModalIsOpen = false;\n        },\n\n        onSelectionChanges(mediaEntity) {\n            const media = mediaEntity[0];\n            this.element.config.previewMedia.value = media.id;\n\n            this.updateElementData(media);\n\n            this.$emit('element-update', this.element);\n        },\n\n        updateElementData(media = null) {\n            if (this.isCompatEnabled('INSTANCE_SET')) {\n                this.$set(this.element.data, 'previewMediaId', media === null ? null : media.id);\n                this.$set(this.element.data, 'previewMedia', media);\n            } else {\n                this.element.data.previewMediaId = media === null ? null : media.id;\n                this.element.data.previewMedia = media;\n            }\n        },\n\n        onOpenMediaModal() {\n            this.mediaModalIsOpen = true;\n        },\n    },\n};\n"],"names":["template","Mixin","index","link","value","type","time","returnValues","incomingTime","minutes","seconds","splittedTime","url","targetId","mediaEntity","media"],"mappings":"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"}