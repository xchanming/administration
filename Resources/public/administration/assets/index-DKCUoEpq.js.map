{"version":3,"file":"index-DKCUoEpq.js","sources":["../../../app/administration/src/module/sw-settings-currency/component/sw-settings-currency-country-modal/sw-settings-currency-country-modal.html.twig","../../../app/administration/src/module/sw-settings-currency/component/sw-settings-currency-country-modal/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_currency_country_modal %}\n<sw-modal\n    class=\"sw-settings-currency-country-modal\"\n    :title=\"$tc('sw-settings-currency.currency-country-modal.titleNewCurrencyCountry')\"\n    @modal-close=\"onCancel\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_currency_country_modal_country_select %}\n    <sw-entity-single-select\n        v-model:value=\"currencyCountryRounding.countryId\"\n        required\n        show-clearable-button\n        class=\"sw-settings-currency-country-modal__select-country\"\n        :label=\"$tc('sw-settings-currency.currency-country-modal.labelCountrySelect')\"\n        entity=\"country\"\n        :criteria=\"countryCriteria\"\n        :error=\"currencyCountryRoundingCountryIdError\"\n    >\n        <template #result-item=\"{ item, index, labelProperty, searchTerm, highlightSearchTerm, isSelected, setValue, getKey }\">\n            <sw-select-result\n                v-tooltip=\"{\n                    showDelay: 300,\n                    showOnDisabledElements: true,\n                    message: $tc('sw-settings-currency.currency-country-modal.countryAlreadyAssigned'),\n                    disabled: !shouldDisableCountry(item)\n                }\"\n                :selected=\"isSelected(item)\"\n                :disabled=\"shouldDisableCountry(item)\"\n                v-bind=\"{ item, index }\"\n                @item-select=\"setValue\"\n            >\n                <slot\n                    name=\"result-label-property\"\n                    v-bind=\"{ item, index, labelProperty, searchTerm, highlightSearchTerm, getKey }\"\n                >\n                    <sw-highlight-text\n                        v-if=\"highlightSearchTerm\"\n                        :text=\"getKey(item, labelProperty) || getKey(item, `translated.${labelProperty}`)\"\n                        :search-term=\"searchTerm\"\n                    />\n                    <template v-else>\n                        {{ getKey(item, labelProperty) || getKey(item, `translated.${labelProperty}`) }}\n                    </template>\n                </slot>\n            </sw-select-result>\n        </template>\n    </sw-entity-single-select>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_currency_country_modal_price_rounding %}\n    <sw-settings-price-rounding\n        :item-rounding=\"currencyCountryRounding.itemRounding\"\n        :total-rounding=\"currencyCountryRounding.totalRounding\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_currency_country_modal_footer %}\n    <template #modal-footer>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_currency_country_modal_footer_cancel %}\n        <sw-button\n            size=\"small\"\n            @click=\"onCancel\"\n        >\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_currency_country_modal_footer_save %}\n        <sw-button\n            variant=\"primary\"\n            size=\"small\"\n            class=\"sw-settings-currency-country-modal__button-save\"\n            @click=\"onSave\"\n        >\n            {{ $tc('global.default.save') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n","/**\n * @package buyers-experience\n */\nimport template from './sw-settings-currency-country-modal.html.twig';\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\nconst { mapPropertyErrors } = Cicada.Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['repositoryFactory'],\n\n    emits: [\n        'edit-cancel',\n        'save',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        currencyCountryRounding: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            assignedCountryIds: [],\n        };\n    },\n\n    computed: {\n        countryCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addSorting(Criteria.sort('name', 'ASC'));\n            return criteria;\n        },\n\n        countryRepository() {\n            return this.repositoryFactory.create('country');\n        },\n\n        assignedCountriesCriteria() {\n            const criteria = new Criteria(1, 500);\n            criteria.addAssociation('currencyCountryRoundings');\n            criteria.addFilter(\n                Criteria.equals('currencyCountryRoundings.currencyId', this.currencyCountryRounding.currencyId),\n            );\n\n            return criteria;\n        },\n\n        ...mapPropertyErrors('currencyCountryRounding', ['countryId']),\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.countryRepository.searchIds(this.assignedCountriesCriteria, Cicada.Context.api).then((res) => {\n                this.assignedCountryIds = res.data;\n            });\n        },\n\n        onCancel() {\n            this.$emit('edit-cancel');\n        },\n\n        onSave() {\n            this.$emit('save');\n        },\n\n        shouldDisableCountry(country) {\n            // Do not disable if the country is already selected for this currency country rounding\n            if (this.currencyCountryRounding.countryId === country.id) {\n                return false;\n            }\n\n            return this.assignedCountryIds.includes(country.id);\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","mapPropertyErrors","index","criteria","res","country"],"mappings":"AAAA,MAAeA,EAAA,2uECKT,CAAE,MAAAC,CAAO,EAAG,OACZ,CAAE,SAAAC,CAAQ,EAAK,OAAO,KACtB,CAAE,kBAAAC,CAAiB,EAAK,OAAO,UAAU,mBAAkB,EAGlDC,EAAA,CACX,SAAAJ,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,mBAAmB,EAE5B,MAAO,CACH,cACA,MACH,EAED,OAAQ,CACJC,EAAM,UAAU,cAAc,CACjC,EAED,MAAO,CACH,wBAAyB,CACrB,KAAM,OACN,SAAU,EACb,CACJ,EAED,MAAO,CACH,MAAO,CACH,mBAAoB,CAAE,CAClC,CACK,EAED,SAAU,CACN,iBAAkB,CACd,MAAMI,EAAW,IAAIH,EAAS,EAAG,EAAE,EACnC,OAAAG,EAAS,WAAWH,EAAS,KAAK,OAAQ,KAAK,CAAC,EACzCG,CACV,EAED,mBAAoB,CAChB,OAAO,KAAK,kBAAkB,OAAO,SAAS,CACjD,EAED,2BAA4B,CACxB,MAAMA,EAAW,IAAIH,EAAS,EAAG,GAAG,EACpC,OAAAG,EAAS,eAAe,0BAA0B,EAClDA,EAAS,UACLH,EAAS,OAAO,sCAAuC,KAAK,wBAAwB,UAAU,CAC9G,EAEmBG,CACV,EAED,GAAGF,EAAkB,0BAA2B,CAAC,WAAW,CAAC,CAChE,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,kBAAkB,UAAU,KAAK,0BAA2B,OAAO,QAAQ,GAAG,EAAE,KAAMG,GAAQ,CAC/F,KAAK,mBAAqBA,EAAI,IAC9C,CAAa,CACJ,EAED,UAAW,CACP,KAAK,MAAM,aAAa,CAC3B,EAED,QAAS,CACL,KAAK,MAAM,MAAM,CACpB,EAED,qBAAqBC,EAAS,CAE1B,OAAI,KAAK,wBAAwB,YAAcA,EAAQ,GAC5C,GAGJ,KAAK,mBAAmB,SAASA,EAAQ,EAAE,CACrD,CACJ,CACL"}