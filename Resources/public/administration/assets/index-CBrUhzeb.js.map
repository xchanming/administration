{"version":3,"file":"index-CBrUhzeb.js","sources":["../../../app/administration/src/app/component/extension-api/sw-extension-component-section/sw-extension-component-section.html.twig","../../../app/administration/src/app/component/extension-api/sw-extension-component-section/index.ts"],"sourcesContent":["<div>\n    <template\n        v-for=\"componentSection in componentSections\"\n        :key=\"componentSection.props.locationId\"\n    >\n        {# These components should not contain a position identifier because it is generally rendered #}\n        <sw-card\n            v-if=\"componentSection.component === 'card'\"\n            position-identifier=\"\"\n            :title=\"$tc(componentSection?.props?.title ?? '')\"\n            :subtitle=\"$tc(componentSection?.props?.subtitle ?? '')\"\n            :content-padding=\"componentSection.props?.contentPadding ?? true\"\n        >\n\n            <template\n                v-if=\"componentSection.props?.tabs\"\n                #tabs\n            >\n                <sw-tabs\n                    position-identifier=\"\"\n                    @new-item-active=\"setActiveTab($event.name)\"\n                >\n                    <sw-tabs-item\n                        v-for=\"tab in componentSection.props.tabs\"\n                        :key=\"tab.name\"\n                        :active-tab=\"getActiveTab(componentSection).name\"\n                        :name=\"tab.name\"\n                    >\n                        {{ $tc(tab.label ?? '') }}\n                    </sw-tabs-item>\n                </sw-tabs>\n            </template>\n\n            <sw-iframe-renderer\n                v-if=\"componentSection.props?.tabs && getActiveTab(componentSection)\"\n                :key=\"getActiveTab(componentSection).name\"\n                :src=\"componentSection.src\"\n                :location-id=\"getActiveTab(componentSection)?.locationId\"\n            />\n\n            <sw-iframe-renderer\n                v-if=\"componentSection.props?.locationId && !componentSection.props?.tabs\"\n                :src=\"componentSection.src\"\n                :location-id=\"componentSection.props.locationId\"\n            />\n        </sw-card>\n    </template>\n</div>\n","import type { ComponentSectionEntry } from 'src/app/state/extension-component-sections.store';\nimport template from './sw-extension-component-section.html.twig';\n\n/**\n * @package admin\n *\n * @private\n * @description A card is a flexible and extensible content container.\n * @status ready\n * @example-type dynamic\n * @component-example\n * <sw-extension-component-section positionId=\"my-special-position\" />\n */\nCicada.Component.register('sw-extension-component-section', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    extensionApiDevtoolInformation: {\n        property: 'ui.componentSection',\n        method: 'add',\n        positionId: (currentComponent) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            return currentComponent.positionIdentifier as string;\n        },\n    },\n\n    props: {\n        positionIdentifier: {\n            type: String,\n            required: true,\n        },\n\n        /**\n         * Will mark the component section as deprecated, causing a warning in production and error in dev environments.\n         */\n        deprecated: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        /**\n         * Use this if you need to add additional information to the standard deprecation message.\n         * @example \"Use position identifier XYZ instead.\"\n         */\n        deprecationMessage: {\n            type: String,\n            required: false,\n            default: '',\n        },\n    },\n\n    computed: {\n        componentSections(): ComponentSectionEntry[] {\n            const sections = Cicada.State.get('extensionComponentSections').identifier[this.positionIdentifier] ?? [];\n            if (sections.length && this.deprecated) {\n                sections.forEach((section) => {\n                    const debugArgs = [\n                        'CORE',\n                        // eslint-disable-next-line max-len\n                        `The extension \"${section.extensionName}\" uses a deprecated position identifier \"${this.positionIdentifier}\". ${this.deprecationMessage}`,\n                    ];\n                    // @ts-expect-error\n                    if (process.env !== 'prod') {\n                        Cicada.Utils.debug.error(...debugArgs);\n                    } else {\n                        // eslint-disable-next-line max-len\n                        Cicada.Utils.debug.warn(...debugArgs);\n                    }\n                });\n            }\n\n            return sections;\n        },\n    },\n\n    data() {\n        return {\n            activeTabName: '',\n        };\n    },\n\n    methods: {\n        setActiveTab(name: string) {\n            this.activeTabName = name;\n        },\n\n        getActiveTab(componentSection: ComponentSectionEntry) {\n            return this.activeTabName\n                ? componentSection.props.tabs?.find((tab) => tab.name === this.activeTabName)\n                : componentSection.props.tabs?.[0];\n        },\n    },\n});\n"],"names":["template","currentComponent","sections","section","debugArgs","define_process_env_default","name","componentSection","_a","_b","tab"],"mappings":"AAAA,MAAeA,EAAA,ktCCaf,OAAO,UAAU,SAAS,iCAAkC,CACxD,SAAAA,EAEA,aAAc,OAAO,aAErB,+BAAgC,CAC5B,SAAU,sBACV,OAAQ,MACR,WAAaC,GAEFA,EAAiB,kBAEhC,EAEA,MAAO,CACH,mBAAoB,CAChB,KAAM,OACN,SAAU,EACd,EAKA,WAAY,CACR,KAAM,QACN,SAAU,GACV,QAAS,EACb,EAMA,mBAAoB,CAChB,KAAM,OACN,SAAU,GACV,QAAS,EACb,CACJ,EAEA,SAAU,CACN,mBAA6C,CACnC,MAAAC,EAAW,OAAO,MAAM,IAAI,4BAA4B,EAAE,WAAW,KAAK,kBAAkB,GAAK,GACnG,OAAAA,EAAS,QAAU,KAAK,YACfA,EAAA,QAASC,GAAY,CAC1B,MAAMC,EAAY,CACd,OAEA,kBAAkBD,EAAQ,aAAa,4CAA4C,KAAK,kBAAkB,MAAM,KAAK,kBAAkB,EAAA,EAGvIE,IAAgB,OAChB,OAAO,MAAM,MAAM,MAAM,GAAGD,CAAS,EAGrC,OAAO,MAAM,MAAM,KAAK,GAAGA,CAAS,CACxC,CACH,EAGEF,CACX,CACJ,EAEA,MAAO,CACI,MAAA,CACH,cAAe,EAAA,CAEvB,EAEA,QAAS,CACL,aAAaI,EAAc,CACvB,KAAK,cAAgBA,CACzB,EAEA,aAAaC,EAAyC,CDxF9D,IAAAC,EAAAC,ECyFY,OAAO,KAAK,eACND,EAAAD,EAAiB,MAAM,OAAvB,YAAAC,EAA6B,KAAME,GAAQA,EAAI,OAAS,KAAK,gBAC7DD,EAAAF,EAAiB,MAAM,OAAvB,YAAAE,EAA8B,EACxC,CACJ,CACJ,CAAC"}