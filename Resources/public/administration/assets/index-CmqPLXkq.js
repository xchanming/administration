const r=`{% block sw_media_quickinfo_usage %} <div class="sw-media-quickinfo-usage"> {% block sw_media_quickinfo_usage_loader %} <sw-loader v-if="isLoading" size="30px" class="sw-media-quickinfo-usage__loading-indicator" /> {% endblock %} {% block sw_media_quickinfo_usage_empty_state %} <sw-alert v-else-if="isNotUsed" class="sw-media-quickinfo-usage__info-not-used" variant="info" :title="$tc('sw-media.sidebar.usage.titleMediaNotUsed')" > {{ $tc('sw-media.sidebar.usage.labelMediaNotUsed') }} </sw-alert> {% endblock %} {% block sw_media_quickinfo_usage_list %} <ul v-else class="sw-media-quickinfo-usage__list" > {% block sw_media_quickinfo_usage_item %} <router-link v-for="usage in getUsages" :key="usage.link.id" :to="{ name: usage.link.name, params: { id: usage.link.id } }" :target="routerLinkTarget" > <li v-tooltip="{ showDelay: 300, hideDelay: 5, message: usage.tooltip }" class="sw-media-quickinfo-usage__item" > {% block sw_media_quickinfo_usage_item_icon %} <div class="sw-media-quickinfo-usage__label"> <sw-icon :name="usage.icon.name" :color="usage.icon.color" small /> </div> {% endblock %} {% block sw_media_quickinfo_usage_item_label %} <div class="sw-media-quickinfo-usage__label"> {{ usage.name }} </div> {% endblock %} </li> </router-link> {% endblock %} </ul> {% endblock %} </div> {% endblock %}`,{Application:d}=Cicada,c=Cicada.Utils.types,{Criteria:a}=Cicada.Data,l={template:r,compatConfig:Cicada.compatConfig,inject:["repositoryFactory"],props:{item:{required:!0,type:Object,validator(t){return t.getEntityName()==="media"}},routerLinkTarget:{required:!1,type:String,default:""}},data(){return{products:[],categories:[],manufacturers:[],mailTemplates:[],avatarUsers:[],paymentMethods:[],shippingMethods:[],layouts:[],landingPages:[],isLoading:!1}},computed:{productRepository(){return this.repositoryFactory.create("product")},landingPageRepository(){return this.repositoryFactory.create("landing_page")},categoryRepository(){return this.repositoryFactory.create("category")},cmsPageRepository(){return this.repositoryFactory.create("cms_page")},moduleFactory(){return d.getContainer("factory").module},slotConfigCriteria(){const t=new a;return t.setLimit(5),t.addFilter(a.contains("slotConfig.*.media.value",this.item.id)),t.addFields("name"),t},cmsPageBlockConfigCriteria(){const t=new a;return t.setLimit(5),t.addFilter(a.equals("sections.blocks.slots.config.media.value",this.item.id)),t.addFields("name"),t},getUsages(){const t=[];return this.products.forEach(({product:s})=>{t.push(this.getProductUsage(s))}),this.categories.forEach(s=>{t.push(this.getCategoryUsage(s))}),this.manufacturers.forEach(s=>{t.push(this.getManufacturerUsage(s))}),this.mailTemplates.forEach(({mailTemplate:s})=>{t.some(o=>o.link.id===s.id)||t.push(this.getMailTemplateUsage(s))}),this.paymentMethods.forEach(s=>{t.push(this.getPaymentMethodUsage(s))}),this.shippingMethods.forEach(s=>{t.push(this.getShippingMethodUsage(s))}),this.layouts.forEach(s=>{t.push(this.getLayoutUsage(s))}),c.isEmpty(this.avatarUsers)||this.avatarUsers.forEach(s=>{t.push(this.getAvatarUserUsage(s))}),this.landingPages.forEach(s=>{t.push(this.getLandingPageUsage(s))}),t},isNotUsed(){return this.getUsages.length===0}},watch:{item(){this.createdComponent()}},created(){this.createdComponent()},methods:{async createdComponent(){this.loadProductAssociations(),this.loadCategoryAssociations(),this.loadManufacturerAssociations(),this.loadMailTemplateAssociations(),this.loadDocumentBaseConfigAssociations(),this.loadAvatarUserAssociations(),this.loadPaymentMethodAssociations(),this.loadShippingMethodAssociations(),this.loadLayoutAssociations(),await this.loadSlotConfigAssociations()},async loadSlotConfigAssociations(){this.isLoading=!0;const[t,s,o,n]=await Promise.all([this.productRepository.search(this.slotConfigCriteria),this.landingPageRepository.search(this.slotConfigCriteria),this.categoryRepository.search(this.slotConfigCriteria),this.cmsPageRepository.search(this.cmsPageBlockConfigCriteria)]);t.forEach(i=>{this.products&&!this.products.some(e=>e.product.id===i.id)&&this.products.push({product:i})}),this.landingPages=s,o.forEach(i=>{this.categories&&!this.categories.some(e=>e.id===i.id)&&this.categories.push(i)}),n.forEach(i=>{this.layouts&&!this.layouts.some(e=>e.id===i.id)&&this.layouts.push(i)}),this.isLoading=!1},loadProductAssociations(){this.products=this.item.productMedia},loadCategoryAssociations(){this.categories=this.item.categories},loadManufacturerAssociations(){this.manufacturers=this.item.productManufacturers},loadMailTemplateAssociations(){this.mailTemplates=this.item.mailTemplateMedia},loadAvatarUserAssociations(){this.avatarUsers=this.item.avatarUsers},loadPaymentMethodAssociations(){this.paymentMethods=this.item.paymentMethods},loadShippingMethodAssociations(){this.shippingMethods=this.item.shippingMethods},loadLayoutAssociations(){this.layouts=[],this.item.cmsBlocks.forEach(t=>{this.isExistedCmsMedia(t.section.pageId)||this.layouts.push({id:t.section.pageId,name:t.section.page.translated.name})}),this.item.cmsSections.forEach(t=>{this.isExistedCmsMedia(t.pageId)||this.layouts.push({id:t.pageId,name:t.page.translated.name})}),this.item.cmsPages.forEach(t=>{this.isExistedCmsMedia(t.id)||this.layouts.push({id:t.id,name:t.translated.name})})},isExistedCmsMedia(t){return this.layouts.some(s=>s.id===t)},getProductUsage(t){return{name:t.translated.name,tooltip:this.$tc("sw-media.sidebar.usage.tooltipFoundInProducts"),link:{name:"sw.product.detail",id:t.id},icon:this.getIconForModule("sw-product")}},getCategoryUsage(t){return{name:t.translated.name,tooltip:this.$tc("sw-media.sidebar.usage.tooltipFoundInCategories"),link:{name:"sw.category.detail",id:t.id},icon:this.getIconForModule("sw-category")}},getManufacturerUsage(t){return{name:t.translated.name,tooltip:this.$tc("sw-media.sidebar.usage.tooltipFoundInManufacturers"),link:{name:"sw.manufacturer.detail",id:t.id},icon:this.getIconForModule("sw-manufacturer")}},getMailTemplateUsage(t){return{name:t.translated.description,tooltip:this.$tc("sw-media.sidebar.usage.tooltipFoundInMailTemplate"),link:{name:"sw.mail.template.detail",id:t.id},icon:this.getIconForModule("sw-mail-template")}},getAvatarUserUsage(t){return{name:t.username,tooltip:this.$tc("sw-media.sidebar.usage.tooltipFoundInUser"),link:{name:"sw.users.permissions.user.detail",id:t.id},icon:this.getIconForModule("sw-users-permissions")}},getPaymentMethodUsage(t){return{name:t.translated.distinguishableName,tooltip:this.$tc("sw-media.sidebar.usage.tooltipFoundInPayment"),link:{name:"sw.settings.payment.detail",id:t.id},icon:this.getIconForModule("sw-settings-payment")}},getShippingMethodUsage(t){return{name:t.translated.name,tooltip:this.$tc("sw-media.sidebar.usage.tooltipFoundShipping"),link:{name:"sw.settings.shipping.detail",id:t.id},icon:this.getIconForModule("sw-settings-shipping")}},getLayoutUsage(t){return{name:t.name,tooltip:this.$tc("sw-media.sidebar.usage.tooltipFoundLayout"),link:{name:"sw.cms.detail",id:t.id},icon:this.getIconForModule("sw-cms")}},getLandingPageUsage(t){return{name:t.translated.name,tooltip:this.$tc("sw-media.sidebar.usage.tooltipFoundInLandingPages"),link:{name:"sw.category.landingPageDetail",id:t.id},icon:this.getIconForModule("sw-category")}},getIconForModule(t){const s=this.moduleFactory.getModuleRegistry().get(t);return{name:s.manifest.icon,color:s.manifest.color}}}};export{l as default};
//# sourceMappingURL=index-CmqPLXkq.js.map
