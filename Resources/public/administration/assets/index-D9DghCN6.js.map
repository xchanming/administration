{"version":3,"file":"index-D9DghCN6.js","sources":["../../../app/administration/src/app/asyncComponent/media/sw-media-url-form/sw-media-url-form.html.twig","../../../app/administration/src/app/asyncComponent/media/sw-media-url-form/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_media_url_form %}\n<sw-modal\n    v-if=\"variant === 'modal'\"\n    class=\"sw-media-url-form\"\n    variant=\"small\"\n    :title=\"$tc('global.sw-media-url-form.title')\"\n    v-on=\"listeners\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_url_form_input %}\n    <sw-text-field\n        v-model:value=\"url\"\n        class=\"sw-media-url-form__url-input\"\n        label=\"URL\"\n        :error=\"invalidUrlError\"\n        :placeholder=\"$tc('global.sw-media-url-form.example')\"\n        name=\"sw-field--url\"\n    />\n\n    <sw-text-field\n        v-if=\"missingFileExtension\"\n        v-model:value=\"extensionFromInput\"\n        class=\"sw-media-url-form__extension-input\"\n        :label=\"$tc('global.sw-media-url-form.labelFileExtension')\"\n        validation=\"required\"\n        placeholder=\"jpg\"\n        :help-text=\"$tc('global.sw-media-url-form.missingFileExtension')\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_url_form_footer %}\n    <template #modal-footer>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_url_form_cancel_button %}\n        <sw-button\n            size=\"small\"\n            @click=\"closeModal\"\n        >\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_url_form_submit_button %}\n        <sw-button\n            class=\"sw-media-url-form__submit-button\"\n            variant=\"primary\"\n            size=\"small\"\n            :disabled=\"!isValid\"\n            @click.prevent=\"emitUrl\"\n        >\n\n            {{ $tc('global.sw-media-url-form.upload') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-modal>\n\n<div v-else-if=\"variant === 'inline'\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_url_form_input_inline %}\n    <sw-text-field\n        v-model:value=\"url\"\n        class=\"sw-media-url-form__url-input\"\n        label=\"URL\"\n        :error=\"invalidUrlError\"\n        :placeholder=\"$tc('global.sw-media-url-form.example')\"\n        name=\"sw-field--url\"\n    />\n\n    <sw-text-field\n        v-if=\"missingFileExtension\"\n        v-model:value=\"extensionFromInput\"\n        class=\"sw-media-url-form__extension-input\"\n        :label=\"$tc('global.sw-media-url-form.labelFileExtension')\"\n        validation=\"required\"\n        placeholder=\"jpg\"\n        :help-text=\"$tc('global.sw-media-url-form.missingFileExtension')\"\n    />\n    {% endblock %}\n\n    <sw-button\n        class=\"sw-media-url-form__submit-button\"\n        :disabled=\"!isValid\"\n        size=\"small\"\n        variant=\"primary\"\n        @click=\"emitUrl\"\n    >\n        {{ $tc('global.sw-media-url-form.upload') }}\n    </sw-button>\n</div>\n{% endblock %}\n","import template from './sw-media-url-form.html.twig';\n\n/**\n * @status ready\n * @description The <u>sw-media-url-form</u> component is used to validate urls from the user.\n * @package content\n * @example-type static\n * @component-example\n * <sw-media-url-form variant=\"inline\">\n * </sw-media-url-form>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    emits: [\n        'media-url-form-submit',\n        'modal-close',\n    ],\n\n    props: {\n        variant: {\n            type: String,\n            required: true,\n            validValues: [\n                'modal',\n                'inline',\n            ],\n            validator(value) {\n                return [\n                    'modal',\n                    'inline',\n                ].includes(value);\n            },\n            default: 'inline',\n        },\n    },\n\n    data() {\n        return {\n            url: '',\n            extensionFromUrl: '',\n            extensionFromInput: '',\n        };\n    },\n\n    computed: {\n        urlObject() {\n            try {\n                return new URL(this.url);\n            } catch (e) {\n                // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n                this.extensionFromUrl = '';\n                return null;\n            }\n        },\n\n        hasInvalidInput() {\n            return this.urlObject === null && this.url !== '';\n        },\n\n        invalidUrlError() {\n            if (this.hasInvalidInput) {\n                return { code: 'INVALID_MEDIA_URL' };\n            }\n\n            return null;\n        },\n\n        missingFileExtension() {\n            return this.urlObject !== null && !this.extensionFromUrl;\n        },\n\n        fileExtension() {\n            return this.extensionFromUrl || this.extensionFromInput;\n        },\n\n        isValid() {\n            return this.urlObject !== null && this.fileExtension;\n        },\n\n        listeners() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return this.$listeners;\n            }\n\n            return {};\n        },\n    },\n\n    watch: {\n        urlObject() {\n            if (this.urlObject === null) {\n                this.extensionFromUrl = '';\n                return;\n            }\n\n            const fileName = this.urlObject.pathname.split('/').pop();\n            if (fileName.split('.').length === 1) {\n                this.extensionFromUrl = '';\n                return;\n            }\n\n            this.extensionFromUrl = fileName.split('.').pop();\n        },\n    },\n\n    methods: {\n        emitUrl(originalDomEvent) {\n            if (this.isValid) {\n                this.$emit('media-url-form-submit', {\n                    originalDomEvent,\n                    url: this.urlObject,\n                    fileExtension: this.fileExtension,\n                });\n\n                if (this.variant === 'modal') {\n                    this.closeModal();\n                }\n            }\n        },\n\n        closeModal() {\n            this.$emit('modal-close');\n        },\n    },\n};\n"],"names":["template","index","value","fileName","originalDomEvent"],"mappings":"AAAA,MAAeA,EAAA,k8DCYAC,EAAA,CACX,SAAAD,EAEA,aAAc,OAAO,aAErB,MAAO,CACH,wBACA,aACH,EAED,MAAO,CACH,QAAS,CACL,KAAM,OACN,SAAU,GACV,YAAa,CACT,QACA,QACH,EACD,UAAUE,EAAO,CACb,MAAO,CACH,QACA,QACpB,EAAkB,SAASA,CAAK,CACnB,EACD,QAAS,QACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,IAAK,GACL,iBAAkB,GAClB,mBAAoB,EAChC,CACK,EAED,SAAU,CACN,WAAY,CACR,GAAI,CACA,OAAO,IAAI,IAAI,KAAK,GAAG,CAC1B,MAAW,CAER,YAAK,iBAAmB,GACjB,IACV,CACJ,EAED,iBAAkB,CACd,OAAO,KAAK,YAAc,MAAQ,KAAK,MAAQ,EAClD,EAED,iBAAkB,CACd,OAAI,KAAK,gBACE,CAAE,KAAM,qBAGZ,IACV,EAED,sBAAuB,CACnB,OAAO,KAAK,YAAc,MAAQ,CAAC,KAAK,gBAC3C,EAED,eAAgB,CACZ,OAAO,KAAK,kBAAoB,KAAK,kBACxC,EAED,SAAU,CACN,OAAO,KAAK,YAAc,MAAQ,KAAK,aAC1C,EAED,WAAY,CAER,OAAI,KAAK,gBAAgB,oBAAoB,EAClC,KAAK,WAGT,EACV,CACJ,EAED,MAAO,CACH,WAAY,CACR,GAAI,KAAK,YAAc,KAAM,CACzB,KAAK,iBAAmB,GACxB,MACH,CAED,MAAMC,EAAW,KAAK,UAAU,SAAS,MAAM,GAAG,EAAE,MACpD,GAAIA,EAAS,MAAM,GAAG,EAAE,SAAW,EAAG,CAClC,KAAK,iBAAmB,GACxB,MACH,CAED,KAAK,iBAAmBA,EAAS,MAAM,GAAG,EAAE,KAC/C,CACJ,EAED,QAAS,CACL,QAAQC,EAAkB,CAClB,KAAK,UACL,KAAK,MAAM,wBAAyB,CAChC,iBAAAA,EACA,IAAK,KAAK,UACV,cAAe,KAAK,aACxC,CAAiB,EAEG,KAAK,UAAY,SACjB,KAAK,WAAU,EAG1B,EAED,YAAa,CACT,KAAK,MAAM,aAAa,CAC3B,CACJ,CACL"}