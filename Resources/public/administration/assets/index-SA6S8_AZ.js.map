{"version":3,"file":"index-SA6S8_AZ.js","sources":["../../../app/administration/src/module/sw-cms/page/sw-cms-detail/sw-cms-detail.html.twig","../../../app/administration/src/module/sw-cms/page/sw-cms-detail/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_cms_detail %}\n<sw-page\n    class=\"sw-cms-detail\"\n    :show-search-bar=\"false\"\n    :show-smart-bar=\"false\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_detail_content %}\n    <template #content>\n        <div class=\"sw-cms-detail__content\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_detail_toolbar %}\n            <sw-cms-toolbar>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_detail_toolbar_language_switch %}\n                <template #language-switch>\n                    <sw-language-switch\n                        :disabled=\"isLoading || page.locked || undefined\"\n                        :allow-edit=\"acl.can('cms.editor')\"\n                        :save-changes-function=\"saveOnLanguageChange\"\n                        :abort-change-function=\"abortOnLanguageChange\"\n                        @on-change=\"onChangeLanguage\"\n                    />\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_detail_toolbar_title %}\n                <template #title>\n                    <div class=\"sw-cms-detail__page-info\">\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_detail_toolbar_back_button %}\n                        <a\n                            class=\"sw-cms-detail__back-btn\"\n                            role=\"link\"\n                            tabindex=\"0\"\n                            :aria-label=\"$tc('global.default.back')\"\n                            @click=\"onClickBack\"\n                            @keyup.enter=\"onClickBack\"\n                        >\n                            <sw-icon name=\"regular-times\" />\n                        </a>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_detail_toolbar_page_name %}\n                        <h2 class=\"sw-cms-detail__page-name\">\n                            {{ placeholder(page, 'name') }}\n                        </h2>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_detail_toolbar_page_type %}\n                        <div\n                            v-if=\"page.type\"\n                            class=\"sw-cms-detail__page-type\"\n                        >\n                            {{ $tc(pageType?.title ?? '') }}\n                        </div>\n                        {% endblock %}\n\n                        <div\n                            v-if=\"isDefaultLayout\"\n                            class=\"sw-cms-detail__page-defaults\"\n                        >\n                            {{ $tc('sw-cms.detail.label.defaultLayout') }}\n                        </div>\n                    </div>\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_detail_toolbar_device_actions %}\n                <template #tools>\n                    <div\n                        v-if=\"pageHasSections\"\n                        class=\"sw-cms-detail__device-actions\"\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_detail_toolbar_device_actions_mobile %}\n                        <sw-icon\n                            name=\"regular-mobile\"\n                            :class=\"{ 'is--active': currentDeviceView === 'mobile' }\"\n                            @click=\"onDeviceViewChange('mobile')\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_detail_toolbar_device_actions_tablet_landscape %}\n                        <sw-icon\n                            name=\"regular-tablet\"\n                            :class=\"{ 'is--active': currentDeviceView === 'tablet-landscape' }\"\n                            @click=\"onDeviceViewChange('tablet-landscape')\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_detail_toolbar_device_actions_desktop %}\n                        <sw-icon\n                            name=\"regular-desktop\"\n                            :class=\"{ 'is--active': currentDeviceView === 'desktop' }\"\n                            @click=\"onDeviceViewChange('desktop')\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_detail_toolbar_device_actions_form %}\n                        <sw-icon\n                            name=\"regular-bars-square\"\n                            :class=\"{ 'is--active': currentDeviceView === 'form', 'is--disabled': !acl.can('cms.editor') }\"\n                            @click=\"onDeviceViewChange('form')\"\n                        />\n                        {% endblock %}\n                    </div>\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_detail_toolbar_actions %}\n                <template #actions>\n                    <div class=\"sw-cms-detail__actions\">\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_detail_toolbar_actions_save %}\n                        <sw-button-process\n                            v-tooltip.bottom=\"tooltipSave\"\n                            class=\"sw-cms-detail__save-action\"\n                            :is-loading=\"isLoading\"\n                            :process-success=\"isSaveSuccessful\"\n                            :disabled=\"isLoading || page.locked || !acl.can('cms.editor') || undefined\"\n                            variant=\"primary\"\n                            @update:process-success=\"saveFinish\"\n                            @click=\"onSave\"\n                        >\n                            {{ $tc('sw-cms.detail.label.buttonSave') }}\n                        </sw-button-process>\n                        {% endblock %}\n                    </div>\n                </template>\n                {% endblock %}\n            </sw-cms-toolbar>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_detail_stage_container %}\n            <div class=\"sw-cms-detail__stage-container\">\n                <sw-overlay v-if=\"page.locked\" />\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_detail_loader %}\n                <sw-loader v-if=\"isLoading\" />\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_detail_stage_form_view %}\n                <div\n                    v-if=\"currentDeviceView === 'form'\"\n                    class=\"sw-cms-detail__page-form\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_detail_page_notification %}\n                    <div\n                        v-if=\"page.locked\"\n                        class=\"sw-cms-detail__page-notification\"\n                    >\n                        <sw-alert\n                            class=\"sw-cms-detail__page-notification-alert\"\n                            variant=\"info\"\n                        >\n                            {{ $tc('sw-cms.detail.label.lockedNotification') }}\n                        </sw-alert>\n                    </div>\n                    {% endblock %}\n\n                    <sw-cms-page-form\n                        v-if=\"!isLoading\"\n                        :page=\"page\"\n                    />\n                </div>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_detail_stage_wrapper %}\n                <div\n                    v-else\n                    class=\"sw-cms-detail__stage\"\n                >\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_detail_toolbar_notification %}\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_detail_toolbar_notification_errors %}\n                    <div\n                        v-if=\"hasPageErrors\"\n                        class=\"sw-cms-detail__page-notification\"\n                    >\n                        <sw-alert\n                            class=\"sw-cms-detail__page-notification-alert is--error\"\n                            variant=\"error\"\n                        >\n                            {{ $tc('sw-cms.detail.notification.errorCollectionText') }}\n                            <li\n                                v-for=\"(error, index) in pageErrors\"\n                                :key=\"index\"\n                            >\n                                {{ error.detail }}\n                            </li>\n                        </sw-alert>\n                    </div>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_detail_toolbar_notification_warnings %}\n                    <div\n                        v-if=\"validationWarnings.length > 0\"\n                        class=\"sw-cms-detail__page-notification\"\n                    >\n                        <sw-alert\n                            class=\"sw-cms-detail__page-notification-alert is--warning\"\n                            variant=\"warning\"\n                        >\n                            {{ $tc('sw-cms.detail.notification.warningCollectionText') }}\n                            <li\n                                v-for=\"(warning, index) in validationWarnings\"\n                                :key=\"index\"\n                            >\n                                {{ warning }}\n                            </li>\n                        </sw-alert>\n                    </div>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_detail_toolbar_notification_infos %}\n                    <div\n                        v-if=\"page.locked\"\n                        class=\"sw-cms-detail__page-notification is--info\"\n                    >\n                        <sw-alert\n                            class=\"sw-cms-detail__page-notification-alert\"\n                            variant=\"info\"\n                        >\n                            {{ $tc('sw-cms.detail.label.lockedNotification') }}\n                        </sw-alert>\n                    </div>\n                    {% endblock %}\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_detail_stage_empty_stage %}\n                    <div\n                        v-if=\"!isLoading && !pageHasSections\"\n                        class=\"sw-cms-detail__empty-stage\"\n                    >\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_detail_stage_empty_stade_content %}\n                        <div class=\"sw-cms-detail__empty-stage-content\">\n                            <h2 class=\"sw-cms-detail__empty-stage-headline\">\n                                {{ $tc('sw-cms.detail.label.headlineEmptyState') }}\n                            </h2>\n                            <p class=\"sw-cms-detail__empty-stage-claim\">\n                                {{ $tc('sw-cms.detail.label.claimEmptyState') }}\n                            </p>\n                            <sw-cms-stage-add-section\n                                :key=\"0\"\n                                :disabled=\"!acl.can('cms.editor') || undefined\"\n                                :force-choose=\"true\"\n                                @stage-section-add=\"onAddSection($event, 0, true)\"\n                            />\n                        </div>\n                        {% endblock %}\n                    </div>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_detail_stage %}\n                    <div\n                        v-else\n                        :id=\"`page-${page.id}`\"\n                        class=\"sw-cms-stage\"\n                        :class=\"cmsStageClasses\"\n                    >\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_detail_stage_add_first_section %}\n                        <sw-cms-stage-add-section\n                            :key=\"0\"\n                            :disabled=\"!acl.can('cms.editor') || undefined\"\n                            @stage-section-add=\"onAddSection($event, 0, true)\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_detail_stage_content %}\n                        <template v-if=\"!isLoading\">\n                            <template\n                                v-for=\"(section, index) in page.sections\"\n                                :key=\"section.id\"\n                            >\n\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_cms_detail_stage_content_section %}\n                                <sw-cms-section\n                                    class=\"sw-cms-stage-section\"\n                                    :page=\"page\"\n                                    :section=\"section\"\n                                    :active=\"selectedSection !== null && selectedSection.id === section.id\"\n                                    :disabled=\"!acl.can('cms.editor') || undefined\"\n                                    @page-config-open=\"pageConfigOpen\"\n                                    @block-duplicate=\"onBlockDuplicate\"\n                                />\n                                {% endblock %}\n                            </template>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_detail_stage_add_last_section %}\n                        <sw-cms-stage-add-section\n                            :key=\"page.sections.length + 1\"\n                            :disabled=\"!acl.can('cms.editor') || undefined\"\n                            @stage-section-add=\"onAddSection($event, page.sections.length, true)\"\n                        />\n                        {% endblock %}\n                    </div>\n                    {% endblock %}\n                </div>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_detail_sidebar %}\n                <sw-cms-sidebar\n                    ref=\"cmsSidebar\"\n                    :page=\"page\"\n                    :demo-entity=\"currentMappingEntity\"\n                    :demo-entity-id-prop=\"demoEntityId\"\n                    :disabled=\"!acl.can('cms.editor') || undefined\"\n                    :is-default-layout=\"isDefaultLayout\"\n                    @demo-entity-change=\"onDemoEntityChange\"\n                    @block-duplicate=\"onBlockDuplicate\"\n                    @section-duplicate=\"onSectionDuplicate\"\n                    @block-stage-drop=\"onPageUpdate\"\n                    @page-type-change=\"onPageTypeChange\"\n                    @page-update=\"onPageUpdate\"\n                    @page-save=\"onPageSave\"\n                    @open-layout-assignment=\"onOpenLayoutAssignment\"\n                    @open-layout-set-as-default=\"onOpenLayoutSetAsDefault\"\n                />\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_detail_layout_assignment_modal %}\n                <sw-cms-layout-assignment-modal\n                    v-if=\"showLayoutAssignmentModal\"\n                    :page=\"page\"\n                    @modal-close=\"closeLayoutAssignmentModal\"\n                />\n                {% endblock %}\n\n                <sw-confirm-modal\n                    v-if=\"showLayoutSetAsDefaultModal\"\n                    class=\"sw-cms-detail__confirm-set-as-default-modal\"\n                    :title=\"$tc('sw-cms.components.setDefaultLayoutModal.title')\"\n                    :text=\"$tc('sw-cms.components.setDefaultLayoutModal.infoText', page.type === 'product_detail')\"\n                    @confirm=\"onConfirmLayoutSetAsDefault\"\n                    @cancel=\"onCloseLayoutSetAsDefault\"\n                    @close=\"onCloseLayoutSetAsDefault\"\n                />\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_detail_missing_element_modal %}\n                <sw-cms-missing-element-modal\n                    v-if=\"showMissingElementModal\"\n                    :missing-elements=\"missingElements\"\n                    @modal-close=\"onCloseMissingElementModal\"\n                    @modal-save=\"onSaveMissingElementModal\"\n                    @modal-dont-remind-change=\"onChangeDontRemindCheckbox\"\n                />\n                {% endblock %}\n            </div>\n            {% endblock %}\n        </div>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n","import template from './sw-cms-detail.html.twig';\nimport CMS from '../../constant/sw-cms.constant';\nimport './sw-cms-detail.scss';\n\nconst { Component, Mixin, Utils } = Cicada;\nconst { mapPropertyErrors } = Component.getComponentHelper();\nconst { CicadaError } = Cicada.Classes;\nconst { debounce } = Cicada.Utils;\nconst { cloneDeep, getObjectDiff } = Cicada.Utils.object;\nconst { warn } = Cicada.Utils.debug;\nconst { Criteria } = Cicada.Data;\nconst debounceTimeout = 800;\n\n/**\n * @private\n * @package discovery\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'entityFactory',\n        'entityHydrator',\n        'loginService',\n        'cmsService',\n        'cmsDataResolverService',\n        'acl',\n        'appCmsService',\n        'systemConfigApiService',\n        'cmsPageTypeService',\n    ],\n\n    mixins: [\n        Mixin.getByName('cms-state'),\n        Mixin.getByName('notification'),\n        Mixin.getByName('placeholder'),\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': 'onSave',\n    },\n\n    data() {\n        return {\n            pageId: null,\n            pageOrigin: null,\n            page: {\n                sections: [],\n            },\n            salesChannels: [],\n            isLoading: false,\n            isSaveSuccessful: false,\n            currentSalesChannelKey: null,\n            selectedBlockSectionId: null,\n            currentMappingEntity: null,\n            currentMappingEntityRepo: null,\n            demoEntityId: null,\n            validationWarnings: [],\n            productDetailBlocks: [\n                {\n                    type: 'cross-selling',\n                    elements: [\n                        {\n                            slot: 'content',\n                            type: 'cross-selling',\n                            config: {},\n                        },\n                    ],\n                },\n                {\n                    type: 'product-description-reviews',\n                    elements: [\n                        {\n                            slot: 'content',\n                            type: 'product-description-reviews',\n                            config: {},\n                        },\n                    ],\n                },\n                {\n                    type: 'gallery-buybox',\n                    elements: [\n                        {\n                            slot: 'left',\n                            type: 'image-gallery',\n                            config: {},\n                        },\n                        {\n                            slot: 'right',\n                            type: 'buy-box',\n                            config: {},\n                        },\n                    ],\n                },\n                {\n                    type: 'product-heading',\n                    elements: [\n                        {\n                            slot: 'left',\n                            type: 'product-name',\n                            config: {},\n                        },\n                        {\n                            slot: 'right',\n                            type: 'manufacturer-logo',\n                            config: {},\n                        },\n                    ],\n                },\n            ],\n            showLayoutAssignmentModal: false,\n            showLayoutSetAsDefaultModal: false,\n            isDefaultLayout: false,\n            showMissingElementModal: false,\n            missingElements: [],\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        identifier() {\n            return this.placeholder(this.page, 'name');\n        },\n\n        pageRepository() {\n            return this.repositoryFactory.create('cms_page');\n        },\n\n        sectionRepository() {\n            return this.repositoryFactory.create('cms_section');\n        },\n\n        blockRepository() {\n            return this.repositoryFactory.create('cms_block');\n        },\n\n        slotRepository() {\n            return this.repositoryFactory.create('cms_slot');\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        defaultFolderRepository() {\n            return this.repositoryFactory.create('media_default_folder');\n        },\n\n        cmsBlocks() {\n            return this.cmsService.getCmsBlockRegistry();\n        },\n\n        productRepository() {\n            return this.repositoryFactory.create('product');\n        },\n\n        cmsStageClasses() {\n            return [\n                `is--${this.currentDeviceView}`,\n            ];\n        },\n\n        cmsPageTypeSettings() {\n            const mappingEntity = CMS.TYPE_MAPPING_ENTITIES;\n\n            if (mappingEntity.hasOwnProperty(this.page.type)) {\n                return mappingEntity[this.page.type];\n            }\n\n            return {\n                entity: null,\n                mode: 'static',\n            };\n        },\n\n        blockConfigDefaults() {\n            return {\n                name: null,\n                marginBottom: null,\n                marginTop: null,\n                marginLeft: null,\n                marginRight: null,\n                sizingMode: 'boxed',\n                visibility: {\n                    desktop: true,\n                    tablet: true,\n                    mobile: true,\n                },\n            };\n        },\n\n        tooltipSave() {\n            if (!this.acl.can('cms.editor')) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.acl.can('cms.editor'),\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        addBlockTitle() {\n            if (!this.isSystemDefaultLanguage) {\n                return this.$tc('sw-cms.general.disabledAddingBlocksToolTip');\n            }\n\n            return this.$tc('sw-cms.detail.sidebar.titleBlockOverview');\n        },\n\n        pageHasSections() {\n            return this.page.sections.length > 0;\n        },\n\n        loadPageCriteria() {\n            const criteria = new Criteria(1, 1);\n            const sortCriteria = Criteria.sort('position', 'ASC', true);\n\n            criteria\n                .getAssociation('sections')\n                .addSorting(sortCriteria)\n                .addAssociation('backgroundMedia')\n\n                .getAssociation('blocks')\n                .addSorting(sortCriteria)\n                .addAssociation('backgroundMedia')\n                .addAssociation('slots');\n\n            criteria.getAssociation('categories').setPage(1).setLimit(25);\n            criteria.getAssociation('landingPages').setLimit(25);\n\n            criteria.getAssociation('products').setLimit(25);\n            criteria.getAssociation('products.manufacturer').setLimit(25);\n\n            return criteria;\n        },\n\n        demoProductCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addAssociation('media');\n            criteria.addAssociation('deliveryTime');\n            criteria.addAssociation('manufacturer.media');\n            criteria.addAssociation('cover');\n\n            return criteria;\n        },\n\n        currentDeviceView() {\n            return this.cmsPageState.currentCmsDeviceView;\n        },\n\n        isProductPage() {\n            return this.page.type === CMS.PAGE_TYPES.PRODUCT_DETAIL;\n        },\n\n        requiredFieldErrors() {\n            return [this.pageNameError].filter((error) => !!error);\n        },\n\n        pageErrors() {\n            return [\n                this.requiredFieldErrors.find((error) => !!error),\n                this.pageSectionsError,\n                this.pageBlocksError,\n                this.pageSlotsError,\n                this.pageSlotConfigError,\n            ].filter((error) => !!error);\n        },\n\n        hasPageErrors() {\n            return this.pageErrors.length > 0;\n        },\n\n        pageType() {\n            this.cmsPageTypeService.getType(this.page.type);\n        },\n\n        layoutVersionContext() {\n            return Cicada.Context.api;\n        },\n\n        ...mapPropertyErrors('page', [\n            'name',\n            'sections',\n            'blocks',\n            'slots',\n            'slotConfig',\n        ]),\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    beforeUnmount() {\n        this.beforeDestroyedComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            Cicada.ExtensionAPI.publishData({\n                id: 'sw-cms-detail__page',\n                path: 'page',\n                scope: this,\n            });\n            Cicada.Store.get('adminMenu').collapseSidebar();\n\n            const isSystemDefaultLanguage = Cicada.State.getters['context/isSystemDefaultLanguage'];\n            this.cmsPageState.setIsSystemDefaultLanguage(isSystemDefaultLanguage);\n\n            this.resetCmsPageState();\n\n            if (this.$route.params.id) {\n                this.pageId = this.$route.params.id;\n                this.isLoading = true;\n                const defaultStorefrontId = '8A243080F92E4C719546314B577CF82B';\n\n                Cicada.State.commit('cicadaApps/setSelectedIds', [\n                    this.pageId,\n                ]);\n\n                const criteria = new Criteria(1, 25);\n                criteria.addFilter(Criteria.equals('typeId', defaultStorefrontId));\n\n                this.salesChannelRepository.search(criteria).then((response) => {\n                    this.salesChannels = response;\n\n                    if (this.salesChannels.length > 0) {\n                        this.currentSalesChannelKey = this.salesChannels[0].id;\n                        this.loadPage(this.pageId);\n                    }\n                });\n            }\n\n            this.setPageContext();\n        },\n\n        setPageContext() {\n            this.getDefaultFolderId().then((folderId) => {\n                this.cmsPageState.setDefaultMediaFolderId(folderId);\n            });\n        },\n\n        resetCmsPageState() {\n            this.cmsPageState.resetCmsPageState();\n        },\n\n        getDefaultFolderId() {\n            const criteria = new Criteria(1, 1);\n            criteria.addAssociation('folder');\n            criteria.addFilter(Criteria.equals('entity', this.cmsPageState.pageEntityName));\n\n            return this.defaultFolderRepository.search(criteria).then((searchResult) => {\n                const defaultFolder = searchResult.first();\n                if (defaultFolder.folder?.id) {\n                    return defaultFolder.folder.id;\n                }\n\n                return null;\n            });\n        },\n\n        beforeDestroyedComponent() {\n            const store = this.cmsPageState;\n            store.removeCurrentPage();\n            store.removeSelectedBlock();\n            store.removeSelectedSection();\n        },\n\n        loadPage(pageId) {\n            this.isLoading = true;\n\n            return this.pageRepository\n                .get(pageId, Cicada.Context.api, this.loadPageCriteria)\n                .then((page) => {\n                    this.page = { sections: [] };\n                    this.page = page;\n\n                    this.cmsPageState.setCurrentPageType(page.type);\n\n                    if (this.acl.can('system_config:read')) {\n                        this.setDefaultLayout();\n                    }\n\n                    this.cmsDataResolverService\n                        .resolve(this.page)\n                        .then(() => {\n                            this.updateSectionAndBlockPositions();\n                            this.cmsPageState.setCurrentPage(this.page);\n\n                            this.updateDataMapping();\n                            this.pageOrigin = cloneDeep(this.page);\n\n                            if (this.selectedBlock) {\n                                const blockId = this.selectedBlock.id;\n                                const blockSectionId = this.selectedBlock.sectionId;\n                                this.page.sections.forEach((section) => {\n                                    if (section.id === blockSectionId) {\n                                        section.blocks.forEach((block) => {\n                                            if (block.id === blockId) {\n                                                this.setSelectedBlock(blockSectionId, block);\n                                            }\n                                        });\n                                    }\n                                });\n                            }\n\n                            Cicada.ExtensionAPI.publishData({\n                                id: 'sw-cms-detail__page',\n                                path: 'page',\n                                scope: this,\n                            });\n\n                            this.isLoading = false;\n                        })\n                        .catch((exception) => {\n                            this.isLoading = false;\n                            this.createNotificationError({\n                                title: exception.message,\n                                message: exception.response,\n                            });\n\n                            warn(this._name, exception.message, exception.response);\n                        });\n                })\n                .catch((exception) => {\n                    this.isLoading = false;\n                    this.createNotificationError({\n                        title: exception.message,\n                        message: exception.response.statusText,\n                    });\n\n                    warn(this._name, exception.message, exception.response);\n                });\n        },\n\n        updateDataMapping() {\n            const mappingEntity = this.cmsPageTypeSettings.entity;\n\n            if (!mappingEntity) {\n                this.cmsPageState.removeCurrentMappingEntity();\n                this.cmsPageState.removeCurrentMappingTypes();\n                this.cmsPageState.removeCurrentDemoEntity();\n                this.cmsPageState.removeCurrentDemoProducts();\n\n                this.currentMappingEntity = null;\n                this.currentMappingEntityRepo = null;\n                this.demoEntityId = null;\n                return;\n            }\n\n            if (this.cmsPageState.currentMappingEntity !== mappingEntity) {\n                this.cmsPageState.setCurrentMappingEntity(mappingEntity);\n                this.cmsPageState.setCurrentMappingTypes(this.cmsService.getEntityMappingTypes(mappingEntity));\n\n                this.currentMappingEntity = mappingEntity;\n                this.currentMappingEntityRepo = this.repositoryFactory.create(mappingEntity);\n\n                this.onDemoEntityChange();\n            }\n        },\n\n        onDeviceViewChange(view) {\n            if (view === 'form' && !this.acl.can('cms.editor')) {\n                return;\n            }\n\n            this.cmsPageState.setCurrentCmsDeviceView(view);\n\n            if (view === 'form') {\n                this.setSelectedBlock(null, null);\n            }\n        },\n\n        setSelectedBlock(sectionId, block = null) {\n            this.selectedBlockSectionId = sectionId;\n            this.cmsPageState.setBlock(block);\n        },\n\n        onChangeLanguage() {\n            this.isLoading = true;\n\n            return this.salesChannelRepository.search(new Criteria(1, 25)).then((response) => {\n                this.salesChannels = response;\n                const isSystemDefaultLanguage = Cicada.State.getters['context/isSystemDefaultLanguage'];\n                this.cmsPageState.setIsSystemDefaultLanguage(isSystemDefaultLanguage);\n                return this.loadPage(this.pageId);\n            });\n        },\n\n        abortOnLanguageChange() {\n            return Object.keys(getObjectDiff(this.page, this.pageOrigin)).length > 0;\n        },\n\n        saveOnLanguageChange() {\n            return this.onSave();\n        },\n\n        async loadDemoProduct(entityId) {\n            const criteria = Criteria.fromCriteria(this.demoProductCriteria);\n            criteria.setLimit(1);\n\n            if (entityId) {\n                criteria.setIds([entityId]);\n            }\n\n            const context = { ...Cicada.Context.api, inheritance: true };\n\n            const response = await this.productRepository.search(criteria, context);\n            this.cmsPageState.setCurrentDemoEntity(response[0]);\n        },\n\n        async loadDemoCategory(entityId) {\n            const criteria = new Criteria(1, 1);\n            criteria.addAssociation('media');\n\n            if (entityId) {\n                criteria.setIds([entityId]);\n            }\n\n            const response = await this.repositoryFactory.create('category').search(criteria);\n            const category = response[0];\n\n            this.demoEntityId = category.id;\n            this.cmsPageState.setCurrentDemoEntity(category);\n\n            this.loadDemoCategoryProducts(category);\n        },\n\n        async loadDemoCategoryProducts(entity) {\n            const productCriteria = Criteria.fromCriteria(this.demoProductCriteria);\n            productCriteria.setLimit(8);\n            productCriteria.addFilter(Criteria.equals('categoriesRo.id', entity.id));\n            productCriteria.addFilter(Criteria.equals('parentId', null));\n\n            const products = await this.productRepository.search(productCriteria);\n\n            this.cmsPageState.setCurrentDemoProducts(products);\n        },\n\n        onDemoEntityChange(demoEntityId) {\n            const demoMappingType = this.cmsPageTypeSettings?.entity;\n            const store = this.cmsPageState;\n\n            store.removeCurrentDemoEntity();\n            store.removeCurrentDemoProducts();\n\n            if (demoMappingType === 'product') {\n                if (demoEntityId) {\n                    this.loadDemoProduct(demoEntityId);\n                }\n                return;\n            }\n\n            if (demoMappingType === 'category') {\n                this.loadDemoCategory(demoEntityId);\n            }\n        },\n\n        onAddSection(type, index, persist = false) {\n            if (!type || index === 'undefined') {\n                return;\n            }\n\n            const section = this.sectionRepository.create();\n            section.type = type;\n            section.sizingMode = 'boxed';\n            section.position = index;\n            section.pageId = this.page.id;\n\n            section.visibility = {\n                desktop: true,\n                tablet: true,\n                mobile: true,\n            };\n\n            this.page.sections.splice(index, 0, section);\n            this.updateSectionAndBlockPositions();\n\n            if (persist) {\n                this.onSave();\n            }\n        },\n\n        onCloseBlockConfig() {\n            this.cmsPageState.removeSelectedItem();\n        },\n\n        pageConfigOpen(mode = null) {\n            const sideBarRefs = this.$refs.cmsSidebar.$refs;\n\n            if (mode === 'blocks') {\n                if (!this.isSystemDefaultLanguage) {\n                    return;\n                }\n\n                sideBarRefs.blockSelectionSidebar.openContent();\n                return;\n            }\n\n            if (mode === 'itemConfig') {\n                sideBarRefs.itemConfigSidebar.openContent();\n                return;\n            }\n\n            sideBarRefs.pageConfigSidebar.openContent();\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onPageSave(debounced = false) {\n            this.onPageUpdate();\n\n            if (debounced) {\n                this.debouncedPageSave();\n                return;\n            }\n\n            this.onSave();\n        },\n\n        debouncedPageSave: debounce(function debouncedOnSave() {\n            this.onSave();\n        }, debounceTimeout),\n\n        onSave() {\n            this.isSaveSuccessful = false;\n\n            if (!this.pageIsValid()) {\n                this.createNotificationError({\n                    message: this.$tc('sw-cms.detail.notification.pageInvalid'),\n                });\n\n                return Promise.reject();\n            }\n\n            return this.onSaveEntity();\n        },\n\n        onSaveEntity() {\n            this.isLoading = true;\n            this.deleteEntityAndRequiredConfigKey(this.page.sections);\n\n            return this.pageRepository\n                .save(this.page, Cicada.Context.api, false)\n                .then(() => {\n                    this.isLoading = false;\n                    this.isSaveSuccessful = true;\n\n                    return this.loadPage(this.page.id);\n                })\n                .catch((exception) => {\n                    this.isLoading = false;\n\n                    this.createNotificationError({\n                        message: exception.message,\n                    });\n\n                    return Promise.reject(exception);\n                });\n        },\n\n        addError({ property = null, payload = {}, code = CMS.REQUIRED_FIELD_ERROR_CODE, message = '' } = {}) {\n            const expression = `cms_page.${this.page.id}.${property}`;\n            const error = new CicadaError({\n                code,\n                detail: message,\n                meta: { parameters: payload },\n            });\n\n            Cicada.State.commit('error/addApiError', { expression, error });\n        },\n\n        getError(property) {\n            return Cicada.State.getters['error/getApiError'](this.page, property);\n        },\n\n        getSlotValidations() {\n            const uniqueSlotCount = {};\n            const requiredMissingSlotConfigs = [];\n\n            this.page.sections.forEach((section) => {\n                section.blocks.forEach((block) => {\n                    block.backgroundMedia = null;\n\n                    block.slots.forEach((slot) => {\n                        if (this.page.type === CMS.PAGE_TYPES.PRODUCT_DETAIL && this.isProductPageElement(slot)) {\n                            const camelSlotType = Utils.string.camelCase(slot.type);\n                            if (!uniqueSlotCount.hasOwnProperty(camelSlotType)) {\n                                uniqueSlotCount[camelSlotType] = {\n                                    type: camelSlotType,\n                                    count: 1,\n                                    blockIds: [block.id],\n                                    slotIds: [slot.id],\n                                };\n                            } else {\n                                uniqueSlotCount[camelSlotType].count += 1;\n                                uniqueSlotCount[camelSlotType].blockIds.push(block.id);\n                                uniqueSlotCount[camelSlotType].slotIds.push(slot.id);\n                            }\n\n                            return;\n                        }\n\n                        requiredMissingSlotConfigs.push(...this.checkRequiredSlotConfigField(slot, block));\n                    });\n                });\n            });\n\n            return {\n                requiredMissingSlotConfigs,\n                uniqueSlotCount,\n            };\n        },\n\n        pageIsValid() {\n            if (localStorage.getItem('cmsMissingElementDontRemind') === 'true') {\n                this.cmsMissingElementDontRemind = true;\n            }\n\n            this.validationWarnings = [];\n            Cicada.State.dispatch('error/resetApiErrors');\n\n            const valid = [\n                this.missingFieldsValidation(),\n                this.listingPageValidation(),\n                this.pageSectionCountValidation(),\n                this.slotValidation(),\n            ].every((validation) => validation);\n\n            if (!this.cmsMissingElementDontRemind && valid && this.validationWarnings.length > 0) {\n                this.showMissingElementModal = true;\n            }\n\n            return valid;\n        },\n\n        missingFieldsValidation() {\n            const hasName = !this.isSystemDefaultLanguage || this.page.name;\n            if (hasName && this.page.type) {\n                return true;\n            }\n\n            this.addError({\n                property: 'name',\n                message: this.$tc('sw-cms.detail.notification.messageMissingFields'),\n            });\n\n            return false;\n        },\n\n        listingPageValidation() {\n            if (this.page.type !== CMS.PAGE_TYPES.LISTING) {\n                return true;\n            }\n\n            const foundListingBlock = this.page.sections.some((section) => {\n                return section.blocks.some((block) => {\n                    return block.type === 'product-listing';\n                });\n            });\n\n            if (foundListingBlock) {\n                this.cmsBlocks['product-listing'].hidden = true;\n                return true;\n            }\n\n            this.addError({\n                property: 'blocks',\n                code: 'listingBlockNotFound',\n                message: this.$tc('sw-cms.detail.notification.messageMissingProductListing'),\n            });\n            this.cmsBlocks['product-listing'].hidden = false;\n\n            return false;\n        },\n\n        pageSectionCountValidation() {\n            if (this.page.sections.length >= 1) {\n                return true;\n            }\n\n            this.addError({\n                property: 'sections',\n                code: 'noSectionsFound',\n                message: this.$tc('sw-cms.detail.notification.messageMissingSections'),\n            });\n\n            return false;\n        },\n\n        slotValidation() {\n            let valid = true;\n            const { requiredMissingSlotConfigs, uniqueSlotCount } = this.getSlotValidations();\n            const affectedErrorElements = [];\n            const affectedWarningElements = [];\n\n            if (this.page.type === CMS.PAGE_TYPES.PRODUCT_DETAIL) {\n                CMS.UNIQUE_SLOTS.forEach((index) => {\n                    if (uniqueSlotCount?.[index]?.count > 1) {\n                        uniqueSlotCount[index].label = this.$tc(`sw-cms.elements.${index}.label`);\n                        affectedErrorElements.push({\n                            ...uniqueSlotCount[index],\n                        });\n\n                        valid = false;\n                    } else if (!uniqueSlotCount?.[index]) {\n                        affectedWarningElements.push(this.$tc(`sw-cms.elements.${index}.label`));\n                    }\n                });\n\n                if (affectedErrorElements.length > 0) {\n                    const uniqueSlotString = CMS.UNIQUE_SLOTS.map((slot) => this.$tc(`sw-cms.elements.${slot}.label`)).join(\n                        ', ',\n                    );\n                    const message = this.$tc('sw-cms.detail.notification.messageRedundantElements', 0, {\n                        names: uniqueSlotString,\n                    });\n\n                    this.addError({\n                        property: 'slots',\n                        code: 'uniqueSlotsOnlyOnce',\n                        message,\n                        payload: {\n                            elements: affectedErrorElements,\n                        },\n                    });\n                }\n\n                if (affectedWarningElements.length > 0) {\n                    this.validationWarnings.push(...affectedWarningElements);\n                }\n            }\n\n            if (requiredMissingSlotConfigs.length > 0) {\n                this.addError({\n                    property: 'slotConfig',\n                    code: 'requiredConfigMissing',\n                    message: this.$tc('sw-cms.detail.notification.messageMissingBlockFields'),\n                    payload: {\n                        elements: requiredMissingSlotConfigs,\n                    },\n                });\n\n                valid = false;\n            }\n\n            return valid;\n        },\n\n        deleteEntityAndRequiredConfigKey(sections) {\n            sections.forEach((section) => {\n                section.blocks.forEach((block) => {\n                    block.slots.forEach((slot) => {\n                        Object.values(slot.config).forEach((configField) => {\n                            if (configField.entity) {\n                                delete configField.entity;\n                            }\n                            if (configField.hasOwnProperty('required')) {\n                                delete configField.required;\n                            }\n                        });\n                    });\n                });\n            });\n        },\n\n        checkRequiredSlotConfigField(slot, block) {\n            return Object.keys(slot.config).reduce((accumulator, index) => {\n                const slotConfig = { ...slot.config[index] };\n                if (!!slotConfig.required && (slotConfig.value === null || slotConfig.value.length < 1)) {\n                    slotConfig.name = `${slot.type}.${index}`;\n                    slotConfig.blockId = block.id;\n\n                    accumulator.push(slotConfig);\n                }\n\n                return accumulator;\n            }, []);\n        },\n\n        updateSectionAndBlockPositions() {\n            this.page.sections.forEach((section, index) => {\n                section.position = index;\n                this.updateBlockPositions(section);\n            });\n        },\n\n        updateBlockPositions(section) {\n            section.blocks.forEach((block, index) => {\n                block.position = index;\n            });\n        },\n\n        onPageUpdate() {\n            this.updateSectionAndBlockPositions();\n            this.updateDataMapping();\n        },\n\n        async onBlockDuplicate(block, { position: sectionPosition = 0 }) {\n            const behavior = {\n                overwrites: {\n                    position: block.position + 1,\n                },\n                cloneChildren: true,\n            };\n\n            const { id: clonedBlockID } = await this.blockRepository.clone(block.id, behavior, this.layoutVersionContext);\n            const clonedBlock = await this.blockRepository.get(clonedBlockID, this.layoutVersionContext);\n\n            const section = this.page.sections[sectionPosition];\n\n            section.blocks.splice(clonedBlock.position, 0, clonedBlock);\n            this.updateBlockPositions(section);\n\n            this.onSave();\n        },\n\n        async onSectionDuplicate(section) {\n            const behavior = {\n                overwrites: {\n                    position: section.position + 1,\n                },\n                cloneChildren: true,\n            };\n\n            const { id: clonedSectionID } = await this.sectionRepository.clone(\n                section.id,\n                behavior,\n                this.layoutVersionContext,\n            );\n            const clonedSection = await this.sectionRepository.get(clonedSectionID, this.layoutVersionContext);\n\n            this.page.sections.splice(clonedSection.position, 0, clonedSection);\n            this.updateSectionAndBlockPositions(section);\n\n            this.onSave();\n        },\n\n        onPageTypeChange(pageType) {\n            // if pageType wasn't passed along just assume the page was directly mutated\n            if (typeof pageType === 'string') {\n                this.cmsPageState.setCurrentPageType(pageType);\n                this.page.type = pageType;\n            }\n\n            if (this.page.type === CMS.PAGE_TYPES.LISTING) {\n                this.processProductListingType();\n            } else {\n                this.page.sections.forEach((section) => {\n                    section.blocks.forEach((block) => {\n                        if (block.type === 'product-listing') {\n                            section.blocks.remove(block.id);\n                        }\n                    });\n                });\n            }\n\n            if (this.page.type === CMS.PAGE_TYPES.PRODUCT_DETAIL) {\n                this.processProductDetailType();\n            }\n\n            this.checkSlotMappings();\n            this.onPageUpdate();\n        },\n\n        processProductListingType() {\n            const listingBlock = this.blockRepository.create();\n            const listingElements = [\n                {\n                    blockId: listingBlock.id,\n                    slot: 'content',\n                    type: 'product-listing',\n                    config: {},\n                },\n            ];\n\n            this.processBlock(listingBlock, 'product-listing');\n            this.processElements(listingBlock, listingElements);\n        },\n\n        processProductDetailType() {\n            this.productDetailBlocks.forEach((block) => {\n                const newBlock = this.blockRepository.create();\n\n                block.elements.forEach((el) => {\n                    el.blockId = newBlock.id;\n                });\n\n                this.processBlock(newBlock, block.type);\n                this.processElements(newBlock, block.elements);\n            });\n        },\n\n        processBlock(block, blockType) {\n            const cmsBlock = this.cmsBlocks[blockType];\n            let defaultConfig = cmsBlock.defaultConfig;\n\n            if (this.isProductPage && defaultConfig) {\n                defaultConfig = {\n                    ...defaultConfig,\n                    marginLeft: '0',\n                    marginRight: '0',\n                    marginTop: blockType === 'gallery-buybox' || blockType === 'product-description-reviews' ? '20px' : '0',\n                    marginBottom:\n                        blockType === 'product-heading' || blockType === 'product-description-reviews' ? '20px' : '0',\n                };\n            }\n\n            block.type = blockType;\n            block.position = 0;\n\n            block.sectionId = this.page.sections[0].id;\n            block.sectionPosition = 'main';\n\n            Object.assign(block, cloneDeep(this.blockConfigDefaults), cloneDeep(defaultConfig || {}));\n        },\n\n        processElements(block, elements) {\n            elements.forEach((element) => {\n                const slot = this.slotRepository.create();\n\n                slot.blockId = element.blockId;\n                slot.slot = element.slot;\n                slot.type = element.type;\n                slot.config = element.config;\n\n                block.slots.push(slot);\n            });\n\n            this.page.sections[0].blocks.splice(0, 0, block);\n        },\n\n        checkSlotMappings() {\n            this.page.sections.forEach((sections) => {\n                sections.blocks.forEach((block) => {\n                    block.slots.forEach((slot) => {\n                        Object.keys(slot.config).forEach((key) => {\n                            if (slot.config[key]?.source === 'mapped') {\n                                const mappingPath = slot.config[key].value.split('.');\n\n                                if (mappingPath[0] !== this.demoEntity) {\n                                    slot.config[key].value = null;\n                                    slot.config[key].source = 'static';\n                                }\n                            }\n                        });\n                    });\n                });\n            });\n        },\n\n        isProductPageElement(slot) {\n            return CMS.UNIQUE_SLOTS_KEBAB.includes(slot.type);\n        },\n\n        onOpenLayoutAssignment() {\n            this.openLayoutAssignmentModal();\n        },\n\n        openLayoutAssignmentModal() {\n            this.showLayoutAssignmentModal = true;\n        },\n\n        closeLayoutAssignmentModal(saveAfterClose = false) {\n            this.showLayoutAssignmentModal = false;\n            if (saveAfterClose) {\n                this.$nextTick(() => {\n                    this.onSaveEntity();\n                });\n            }\n        },\n\n        onOpenLayoutSetAsDefault() {\n            this.showLayoutSetAsDefaultModal = true;\n        },\n\n        onCloseLayoutSetAsDefault() {\n            this.showLayoutSetAsDefaultModal = false;\n        },\n\n        async onConfirmLayoutSetAsDefault() {\n            let configKey = 'category_cms_page';\n            if (this.page.type === 'product_detail') {\n                configKey = 'product_cms_page';\n            }\n\n            await this.systemConfigApiService.saveValues({\n                [`core.cms.default_${configKey}`]: this.pageId,\n            });\n\n            this.isDefaultLayout = true;\n            this.showLayoutSetAsDefaultModal = false;\n        },\n\n        async setDefaultLayout() {\n            const response = await this.systemConfigApiService.getValues('core.cms');\n            const productDetailId = response['core.cms.default_category_cms_page'];\n            const productListId = response['core.cms.default_product_cms_page'];\n            const isLiveVersion = this.page.versionId === Cicada.Context.api.liveVersionId;\n\n            if (\n                isLiveVersion &&\n                [\n                    productDetailId,\n                    productListId,\n                ].includes(this.pageId)\n            ) {\n                this.isDefaultLayout = true;\n            }\n        },\n\n        onCloseMissingElementModal() {\n            this.showMissingElementModal = false;\n            this.cmsMissingElementDontRemind = false;\n\n            this.$nextTick(() => {\n                this.loadPage(this.pageId);\n            });\n        },\n\n        onSaveMissingElementModal() {\n            if (this.cmsMissingElementDontRemind) {\n                localStorage.setItem('cmsMissingElementDontRemind', true);\n            }\n\n            this.showMissingElementModal = false;\n\n            this.$nextTick(() => {\n                this.onSaveEntity();\n            });\n        },\n\n        onChangeDontRemindCheckbox() {\n            this.cmsMissingElementDontRemind = !this.cmsMissingElementDontRemind;\n        },\n\n        async onClickBack() {\n            if (window.history.length > 2) {\n                await this.$router.back();\n            } else {\n                await this.$router.push({ name: 'sw.cms.index' });\n            }\n        },\n    },\n};\n"],"names":["template","Component","Mixin","Utils","mapPropertyErrors","CicadaError","debounce","cloneDeep","getObjectDiff","warn","Criteria","debounceTimeout","index","mappingEntity","CMS","criteria","sortCriteria","error","isSystemDefaultLanguage","defaultStorefrontId","response","folderId","searchResult","defaultFolder","_a","store","pageId","page","blockId","blockSectionId","section","block","exception","view","sectionId","entityId","context","category","entity","productCriteria","products","demoEntityId","demoMappingType","type","persist","mode","sideBarRefs","debounced","property","payload","code","message","expression","uniqueSlotCount","requiredMissingSlotConfigs","slot","camelSlotType","valid","validation","affectedErrorElements","affectedWarningElements","uniqueSlotString","sections","configField","accumulator","slotConfig","sectionPosition","behavior","clonedBlockID","clonedBlock","clonedSectionID","clonedSection","pageType","listingBlock","listingElements","newBlock","el","blockType","defaultConfig","elements","element","key","saveAfterClose","configKey","productDetailId","productListId"],"mappings":"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"}