const s='{% block sw_data_grid_select_item_checkbox %} <sw-checkbox-field v-tooltip="getSelectableTooltip(item)" :disabled="!isRecordSelectable(item)" :value="isSelected(item[itemIdentifierProperty])" @update:value="selectItem($event, item)" /> {% endblock %}',{Component:c}=Cicada;c.extend("sw-entity-advanced-selection-modal-grid","sw-entity-listing",{template:s,props:{isRecordSelectable:{type:Function,required:!1,default(t){const l=!this.reachMaximumSelectionExceed||Object.keys(this.selection).includes(t[this.itemIdentifierProperty]);let e=!0;if(this.isRecordSelectableCallback!==null&&this.isRecordSelectableCallback!==void 0){const i=this.isRecordSelectableCallback(t);i.isSelectable!==null&&i.isSelectable!==void 0&&(e=i.isSelectable)}return l&&e}},isRecordSelectableCallback:{type:Function,required:!1,default(){return!0}}},computed:{isSelectAllDisabled(){if(!this.maximumSelectItems||!this.records)return!1;if(!this.records.some(e=>this.isRecordSelectable(e)))return!0;const l=this.records.map(e=>e.id);return this.reachMaximumSelectionExceed&&Object.keys(this.selection).every(e=>!l.includes(e))},allSelectedChecked(){if(this.isSelectAllDisabled)return!1;if(this.reachMaximumSelectionExceed)return!0;if(!this.records||this.records.length===0)return!1;const t=Object.values(this.selection);return this.records.some(e=>this.isRecordSelectable(e))?this.records.every(e=>this.isRecordSelectable(e)?t.some(i=>i[this.itemIdentifierProperty]===e[this.itemIdentifierProperty]):!0):!1}},methods:{getSelectableTooltip(t){if(this.isRecordSelectableCallback===null||this.isRecordSelectableCallback===void 0)return{message:"",disabled:!0};const l=this.isRecordSelectableCallback(t);return l.tooltip?l.tooltip:{message:"",disabled:!0}}}});
//# sourceMappingURL=index-DQLbkoT_.js.map
