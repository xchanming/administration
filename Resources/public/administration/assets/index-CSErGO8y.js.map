{"version":3,"file":"index-CSErGO8y.js","sources":["../../../app/administration/src/module/sw-product/component/sw-product-variants/sw-product-variants-overview/sw-product-variants-overview.html.twig","../../../app/administration/src/module/sw-product/component/sw-product-variants/sw-product-variants-overview/index.js"],"sourcesContent":["<!-- eslint-disable vuejs-accessibility/click-events-have-key-events -->\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_product_variants_overview %}\n<div class=\"sw-product-variants-overview\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variants_overview_option_list_toolbar %}\n    <div class=\"sw-configuration-option-list__toolbar\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_overview_option_list_toolbar_container %}\n        <sw-container\n            columns=\"1fr minmax(min-content, max-content) minmax(min-content, 180px) minmax(min-content, 180px)\"\n            gap=\"0 10px\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_option_list_toolbar_container_search_field %}\n            <sw-simple-search-field\n                v-model:value=\"term\"\n                variant=\"form\"\n                size=\"small\"\n                @search-term-change=\"onSearch\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_option_list_toolbar_container_filter_list %}\n            <div class=\"sw-product-variants-overview__filter-list-button\">\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variants_overview_option_list_toolbar_container_filter_list_button %}\n                <sw-button @click=\"filterWindowOpen = !filterWindowOpen\">\n                    {{ $tc('sw-product.variations.generatedFilterList') }}\n                    <sw-icon name=\"regular-filter\" />\n                </sw-button>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variants_overview_option_list_toolbar_container_filter_context_menu %}\n                <sw-context-menu v-show=\"filterWindowOpen\">\n                    <sw-container\n                        columns=\"1fr\"\n                        gap=\"5px\"\n                    >\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_product_variants_overview_option_list_toolbar_container_filter_tree %}\n                        <sw-tree\n                            v-show=\"filterOptions.length\"\n                            :sortable=\"false\"\n                            :items=\"filterOptions\"\n                            :searchable=\"false\"\n                            :disable-context-menu=\"true\"\n                            bind-items-to-folder\n                        >\n                            <template\n                                #items=\"{ treeItems, sortable, draggedItem, disableContextMenu, onChangeRoute, checkItem }\"\n                            >\n                                <sw-tree-item\n                                    v-for=\"(item, index) in treeItems\"\n                                    :key=\"item.id\"\n                                    :sortable=\"false\"\n                                    :item=\"item\"\n                                    :disable-context-menu=\"true\"\n                                    @check-item=\"filterOptionChecked\"\n                                />\n                            </template>\n                        </sw-tree>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_product_variants_overview_option_list_toolbar_container_filter_buttons %}\n                        <div class=\"sw-product-variants-overview__filter-buttons\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_product_variants_overview_option_list_toolbar_container_button_filter_reset %}\n                            <sw-button @click=\"resetFilterOptions()\">\n                                {{ $tc('sw-product.variations.overview.filterReset') }}\n                            </sw-button>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_product_variants_overview_option_list_toolbar_container_button_update_list %}\n                            <sw-button\n                                variant=\"primary\"\n                                @click=\"getList()\"\n                            >\n                                {{ $tc('sw-product.variations.overview.filter') }}\n                            </sw-button>\n                            {% endblock %}\n                        </div>\n                        {% endblock %}\n\n                    </sw-container>\n                </sw-context-menu>\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_option_list_toolbar_buttons %}\n            <sw-button\n                v-tooltip=\"{\n                    message: $tc('sw-privileges.tooltip.warning'),\n                    disabled: acl.can('product.creator'),\n                    showOnDisabledElements: true\n                }\"\n                variant=\"ghost\"\n                :disabled=\"!acl.can('product.creator')\"\n                class=\"sw-product-variants__generate-action\"\n                @click=\"$emit('generator-open')\"\n            >\n                {{ $tc('sw-product.variations.overview.generateVariants') }}\n            </sw-button>\n\n            <sw-button\n                variant=\"ghost\"\n                class=\"sw-product-variants__configure-storefront-action\"\n                :disabled=\"!acl.can('product.editor')\"\n                @click=\"$emit('delivery-open')\"\n            >\n                {{ $tc('sw-product.variations.overview.storefrontDelivery') }}\n            </sw-button>\n            {% endblock %}\n\n        </sw-container>\n        {% endblock %}\n\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variants_overview_data_grid %}\n    <sw-data-grid\n        ref=\"variantGrid\"\n        class=\"sw-product-variants-overview__data-grid\"\n        :data-source=\"variants\"\n        :columns=\"variantColumns\"\n        :show-settings=\"true\"\n        :show-selection=\"acl.can('product.deleter')\"\n        :sort-by=\"sortBy\"\n        :sort-direction=\"sortDirection\"\n        :is-loading=\"isLoading\"\n        :skeleton-item-amount=\"limit\"\n        :allow-inline-edit=\"acl.can('product.editor')\"\n        identifier=\"product-variants-overview\"\n        @column-sort=\"onSortColumn\"\n        @inline-edit-save=\"onInlineEditSave\"\n        @inline-edit-cancel=\"onInlineEditCancel\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_overview_data_grid_column_name %}\n        <template\n            #column-name=\"{ item }\"\n        >\n            <template v-if=\"item.options\">\n                <router-link\n                    :to=\"{ name: 'sw.product.detail.base', params: { id: item.id } }\"\n                    class=\"sw-product-variants-overview__variation-link\"\n                    @click=\"onOptionEdit(item)\"\n                >\n\n                    <sw-icon name=\"regular-link-xs\" />\n\n                    <span\n                        v-for=\"(singleVariation, index) in item.options\"\n                        :key=\"index\"\n                        class=\"sw-product-variants-overview__single-variation\"\n                    >\n                        {{ singleVariation.translated.name }}\n                    </span>\n                </router-link>\n            </template>\n\n            <sw-label\n                v-if=\"variantIsDigital(item)\"\n                class=\"sw-product-variants-overview__digital-indicator\"\n            >\n                {{ $tc('sw-product.variations.generatedListColumnContentProductState.is-download') }}\n            </sw-label>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_overview_data_grid_column_price %}\n        <template\n            v-for=\"currency in currencies\"\n            :key=\"`switch-${currency.isoCode}`\"\n            #[`column-price.${currency.id}.net`]=\"{ item, compact, isInlineEdit }\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_data_grid_column_price_inline_edit %}\n            <template v-if=\"isInlineEdit\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variants_overview_data_grid_column_price_inline_edit_inherit %}\n                <sw-inheritance-switch\n                    :is-inherited=\"isPriceFieldInherited(item, currency)\"\n                    class=\"sw-product-detail-context-prices__inherited-icon\"\n                    @inheritance-restore=\"onInheritanceRestore(item, currency)\"\n                    @inheritance-remove=\"onInheritanceRemove(item, currency)\"\n                />\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variants_overview_data_grid_column_price_inline_edit_price_field %}\n                <sw-price-field\n                    :value=\"item.price ? item.price : []\"\n                    :default-price=\"getDefaultPriceForVariant(item, currency)\"\n                    :tax-rate=\"productTaxRate\"\n                    :label=\"false\"\n                    :compact=\"compact\"\n                    enable-inheritance\n                    :currency=\"currency\"\n                />\n                {% endblock %}\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_data_grid_column_price_preview %}\n            <template v-else>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variants_overview_data_grid_column_price_preview_inherit %}\n                <sw-inheritance-switch\n                    :key=\"`else-switch-${currency.isoCode}`\"\n                    :is-inherited=\"isPriceFieldInherited(item, currency)\"\n                    class=\"sw-product-detail-context-prices__inherited-icon\"\n                    :disabled=\"true\"\n                />\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variants_overview_data_grid_column_price_preview_price_field %}\n                <sw-price-preview\n                    :key=\"`else-price-field-${currency.isoCode}`\"\n                    :value=\"item.price ? item.price : []\"\n                    :default-price=\"getDefaultPriceForVariant(item, currency)\"\n                    :tax-rate=\"productTaxRate\"\n                    :currency=\"currency\"\n                />\n                {% endblock %}\n            </template>\n            {% endblock %}\n\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_overview_data_grid_column_stock %}\n        <template\n            #column-stock=\"{ item, isInlineEdit, compact }\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_data_grid_column_stock_inline_edit_field %}\n            <sw-number-field\n                v-if=\"isInlineEdit && (!variantIsDigital(item) || item.isCloseout === true)\"\n                v-model:value=\"item.stock\"\n                :size=\"compact ? 'small' : 'default'\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_data_grid_column_stock_preview %}\n            <span v-else>\n                {{ item.stock }}\n            </span>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_overview_data_grid_column_product_number %}\n        <template\n            #column-productNumber=\"{ item, isInlineEdit, compact }\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_data_grid_column_product_number_inline_edit %}\n            <sw-text-field\n                v-if=\"isInlineEdit\"\n                v-model:value=\"item.productNumber\"\n                :size=\"compact ? 'small' : 'default'\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_data_grid_column_product_number_preview %}\n            <span\n                v-else\n                class=\"sw-product-variants-overview_product-number\"\n            >\n                {{ item.productNumber }}\n            </span>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_overview_data_grid_column_media %}\n        <template #column-media=\"{ item, isInlineEdit, compact }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_data_grid_column_media_inline_edit %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_data_grid_column_media_inherit %}\n            <sw-inheritance-switch\n                :is-inherited=\"isMediaFieldInherited(item)\"\n                :disabled=\"!isInlineEdit\"\n                class=\"sw-product-variants-overview_media__inherited-icon\"\n                @inheritance-restore=\"onMediaInheritanceRestore(item, isInlineEdit)\"\n                @inheritance-remove=\"onMediaInheritanceRemove(item, isInlineEdit)\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_data_grid_column_media_content %}\n            <sw-product-variants-media-upload\n                :source=\"item\"\n                :upload-tag=\"item.id\"\n                :is-inherited=\"isMediaFieldInherited(item)\"\n                :disabled=\"isInlineEdit ? isMediaFieldInherited(item) : true\"\n                :parent-product=\"product\"\n            />\n            {% endblock %}\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <template #column-downloads=\"{item, isInlineEdit, compact}\">\n            <sw-upload-listener\n                :upload-tag=\"item.productNumber\"\n                auto-upload\n                @media-upload-finish=\"(event) => successfulUpload(event, item)\"\n            />\n\n            <sw-media-compact-upload-v2\n                v-if=\"productDownloadFolderId\"\n                :upload-tag=\"item.productNumber\"\n                :disabled=\"!isInlineEdit\"\n                private-filesystem\n                allow-multi-select\n                add-files-on-multiselect\n                :disable-deletion-for-last-item=\"{\n                    value: true,\n                    helpText: $tc('sw-product.list.columnDownloadsTooltip')\n                }\"\n                :source-multiselect=\"getDownloadsSource(item)\"\n                :target-folder-id=\"productDownloadFolderId\"\n                file-accept=\"*/*\"\n                @delete-item=\"(file) => removeFile(`${file.fileName}.${file.fileExtension}`, item)\"\n            />\n        </template>\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_overview_data_grid_column_active %}\n        <template\n            #column-active=\"{ item, isInlineEdit }\"\n        >\n            <template v-if=\"isInlineEdit\">\n                <sw-data-grid-column-boolean\n                    v-model:value=\"item.active\"\n                    :is-inline-edit=\"isInlineEdit\"\n                    :disabled=\"isActiveFieldInherited(item)\"\n                />\n\n                <sw-inheritance-switch\n                    :is-inherited=\"isActiveFieldInherited(item)\"\n                    class=\"sw-product-variants-overview__active-inherited-icon\"\n                    @inheritance-restore=\"onActiveInheritanceRestore(item)\"\n                    @inheritance-remove=\"onActiveInheritanceRemove(item)\"\n                />\n            </template>\n\n            <template v-else>\n                <sw-icon\n                    v-if=\"item.active === true\"\n                    name=\"regular-checkmark-xs\"\n                    size=\"12px\"\n                    class=\"is--active\"\n                />\n                <sw-icon\n                    v-else-if=\"item.active === false\"\n                    name=\"regular-times-s\"\n                    size=\"10px\"\n                    class=\"is--inactive\"\n                />\n                <sw-icon\n                    v-else\n                    key=\"inherit-icon\"\n                    name=\"regular-link-horizontal\"\n                    size=\"16px\"\n                />\n            </template>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_overview_actions %}\n        <template\n            #actions=\"{ item }\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_actions_items %}\n            <sw-context-menu-item\n                v-tooltip=\"{\n                    message: $tc('sw-privileges.tooltip.warning'),\n                    disabled: acl.can('product.editor'),\n                    showOnDisabledElements: true\n                }\"\n                :disabled=\"!acl.can('product.editor')\"\n                @click=\"onOptionEdit(item)\"\n            >\n                {{ $tc('sw-product.variations.generatedListContextMenuEdit') }}\n            </sw-context-menu-item>\n\n            <sw-context-menu-item\n                v-tooltip=\"{\n                    message: $tc('sw-privileges.tooltip.warning'),\n                    disabled: acl.can('product.deleter'),\n                    showOnDisabledElements: true\n                }\"\n                variant=\"danger\"\n                :disabled=\"!acl.can('product.deleter')\"\n                @click=\"onVariationDelete(item)\"\n            >\n                {{ $tc('sw-product.variations.generatedListContextMenuDelete') }}\n            </sw-context-menu-item>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_overview_pagination %}\n        <template #pagination>\n            <sw-pagination\n                :page=\"page\"\n                :limit=\"limit\"\n                :total=\"total\"\n                :total-visible=\"7\"\n                @page-change=\"onPageChange\"\n            />\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_overview_bulk %}\n        <template #bulk>\n            {% block sw_product_variants_overview_bulk_edit %}\n            <span\n                v-if=\"acl.can('product.editor')\"\n                class=\"link link-primary\"\n                role=\"link\"\n                tabindex=\"0\"\n                @click=\"toggleBulkEditModal\"\n            >\n                {{ $tc('global.default.bulkEdit') }}\n            </span>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_bulk_delete %}\n            <span\n                v-if=\"acl.can('product.deleter')\"\n                class=\"link link-danger sw-product-variants-overview__bulk-delete-action\"\n                role=\"link\"\n                tabindex=\"0\"\n                @click=\"onClickBulkDelete\"\n            >\n                {{ $tc('global.default.delete') }}\n            </span>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_overview_bulk_edit_modal %}\n        <template #bulk-modals=\"{ selection }\">\n            <sw-bulk-edit-modal\n                v-if=\"showBulkEditModal\"\n                class=\"sw-product-variants-overview__bulk-edit-modal\"\n                :selection=\"selection\"\n                :bulk-grid-edit-columns=\"variantColumns\"\n                @edit-items=\"onEditItems\"\n                @modal-close=\"toggleBulkEditModal\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variants_overview_bulk_edit_modal_column_name %}\n                <template #column-name=\"{ item }\">\n                    <template v-if=\"item.options\">\n                        <router-link\n                            class=\"sw-product-variants-overview__variation-link\"\n                            :to=\"{ name: 'sw.product.detail.base', params: { id: item.id } }\"\n                            @click=\"onOptionEdit(item)\"\n                        >\n                            <sw-icon\n                                class=\"sw-product-variants-overview__variation-link-icon\"\n                                name=\"regular-link-xs\"\n                            />\n                            <span\n                                v-for=\"(singleVariation, index) in item.options\"\n                                :key=\"index\"\n                                class=\"sw-product-variants-overview__variation-link-name\"\n                            >\n                                {{ singleVariation.translated.name }}\n                            </span>\n                        </router-link>\n                    </template>\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variants_overview_bulk_edit_modal_column_price %}\n                <template\n                    v-for=\"currency in currencies\"\n                    :key=\"currency.id\"\n                    #[`column-price.${currency.id}.net`]=\"{ item }\"\n                >\n                    <sw-inheritance-switch\n                        :key=\"`else-switch-${currency.isoCode}`\"\n                        :is-inherited=\"isPriceFieldInherited(item, currency)\"\n                        disabled\n                    />\n                    <sw-price-preview\n                        :key=\"`else-price-field-${currency.isoCode}`\"\n                        :value=\"item.price ? item.price : []\"\n                        :default-price=\"getDefaultPriceForVariant(item, currency)\"\n                        :tax-rate=\"productTaxRate\"\n                        :currency=\"currency\"\n                    />\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variants_overview_bulk_edit_modal_column_media %}\n                <template #column-media=\"{ item }\">\n                    <sw-inheritance-switch\n                        class=\"sw-product-variants-overview_media__inherited-icon\"\n                        :is-inherited=\"isMediaFieldInherited(item)\"\n                        disabled\n                    />\n                    <sw-product-variants-media-upload\n                        :source=\"item\"\n                        :upload-tag=\"item.id\"\n                        :is-inherited=\"isMediaFieldInherited(item)\"\n                        :parent-product=\"product\"\n                        disabled\n                    />\n                </template>\n                {% endblock %}\n\n                <template #column-downloads=\"{item, isInlineEdit, compact}\">\n                    <sw-upload-listener\n                        :upload-tag=\"item.productNumber\"\n                        auto-upload\n                        @media-upload-finish=\"(event) => successfulUpload(event, item)\"\n                    />\n\n                    <sw-media-compact-upload-v2\n                        v-if=\"productDownloadFolderId\"\n                        :upload-tag=\"item.productNumber\"\n                        :disabled=\"!isInlineEdit\"\n                        private-filesystem\n                        allow-multi-select\n                        :disable-deletion-for-last-item=\"{\n                            value: true,\n                            helpText: $tc('sw-product.list.columnDownloadsTooltip')\n                        }\"\n                        :add-files-on-multiselect=\"true\"\n                        :source-multiselect=\"getDownloadsSource(item)\"\n                        :target-folder-id=\"productDownloadFolderId\"\n                        file-accept=\"*/*\"\n                        @delete-item=\"(file) => removeFile(`${file.fileName}.${file.fileExtension}`, item)\"\n                    />\n                </template>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variants_overview_bulk_edit_modal_column_active %}\n                <template #column-active=\"{ item }\">\n                    <sw-icon\n                        v-if=\"item.active === true\"\n                        class=\"is--active\"\n                        name=\"regular-checkmark-xs\"\n                        small\n                    />\n                    <sw-icon\n                        v-else-if=\"item.active === false\"\n                        class=\"is--inactive\"\n                        name=\"regular-times-s\"\n                        small\n                    />\n                    <sw-icon\n                        v-else\n                        key=\"inherit-icon\"\n                        name=\"regular-link-horizontal\"\n                        size=\"16\"\n                    />\n                </template>\n                {% endblock %}\n            </sw-bulk-edit-modal>\n        </template>\n        {% endblock %}\n\n    </sw-data-grid>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variants_overview_data_grid_action_modals %}\n    <sw-modal\n        v-if=\"showDeleteModal\"\n        class=\"sw-product-variants-overview__delete-modal\"\n        :title=\"$tc('global.default.warning')\"\n        variant=\"small\"\n        @modal-close=\"onCloseDeleteModal\"\n    >\n\n        <p\n            class=\"sw-product-variants-overview__modal--confirm-delete-text\"\n        >\n            {{ toBeDeletedVariantIds.length > 1 ? $tc('sw-product.variations.generatedListDeleteModalMessagePlural') : $tc('sw-product.variations.generatedListDeleteModalMessage') }}\n        </p>\n\n        <template #modal-footer>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_overview_data_grid_action_modals_buttons %}\n            <sw-button\n                class=\"sw-product-variants-overview__modal--cancel-button\"\n                size=\"small\"\n                :disabled=\"modalLoading\"\n                @click=\"onCloseDeleteModal\"\n            >\n                {{ $tc('global.default.cancel') }}\n            </sw-button>\n            <sw-button\n                variant=\"danger\"\n                size=\"small\"\n                :disabled=\"modalLoading\"\n                @click=\"onConfirmDelete\"\n            >\n                {{ $tc('sw-product.variations.generatedListDeleteModalButtonDelete') }}\n            </sw-button>\n            {% endblock %}\n        </template>\n    </sw-modal>\n    {% endblock %}\n</div>\n{% endblock %}\n","/*\n * @package inventory\n */\n\nimport template from './sw-product-variants-overview.html.twig';\nimport './sw-products-variants-overview.scss';\n\nconst { Mixin, Context } = Cicada;\nconst { Criteria } = Cicada.Data;\nconst { mapState, mapGetters } = Cicada.Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'feature',\n        'mediaService',\n    ],\n\n    emits: [\n        'generator-open',\n        'delivery-open',\n        'variants-finish-update',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        productEntity: {\n            type: Object,\n            required: true,\n        },\n\n        selectedGroups: {\n            type: Array,\n            required: true,\n        },\n\n        productStates: {\n            type: Array,\n            required: false,\n            default: () => ['all'],\n        },\n    },\n\n    data() {\n        return {\n            sortBy: 'name',\n            sortDirection: 'DESC',\n            showDeleteModal: false,\n            modalLoading: false,\n            priceEdit: false,\n            filterOptions: [],\n            activeFilter: [],\n            includeOptions: [],\n            filterWindowOpen: false,\n            showBulkEditModal: false,\n            toBeDeletedVariantIds: [],\n            productDownloadFolderId: null,\n        };\n    },\n\n    computed: {\n        ...mapState('swProductDetail', [\n            'product',\n            'currencies',\n            'taxes',\n            'variants',\n        ]),\n\n        ...mapGetters('swProductDetail', [\n            'isLoading',\n            'defaultPrice',\n            'defaultCurrency',\n            'productTaxRate',\n        ]),\n\n        productRepository() {\n            return this.repositoryFactory.create('product');\n        },\n\n        productMediaRepository() {\n            return this.repositoryFactory.create(this.product.media.entity);\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        productDownloadRepository() {\n            return this.repositoryFactory.create('product_download');\n        },\n\n        variantColumns() {\n            const columns = [\n                {\n                    property: 'name',\n                    label: this.$tc('sw-product.variations.generatedListColumnVariation'),\n                    allowResize: true,\n                },\n                ...this.currencyColumns,\n                {\n                    property: 'sales',\n                    dataIndex: 'sales',\n                    label: this.$tc('sw-product.list.columnSales'),\n                    allowResize: true,\n                    align: 'right',\n                },\n                {\n                    property: 'stock',\n                    label: this.$tc('sw-product.variations.generatedListColumnStock'),\n                    allowResize: true,\n                    inlineEdit: 'number',\n                    width: '125px',\n                    align: 'right',\n                },\n                {\n                    property: 'productNumber',\n                    label: this.$tc('sw-product.variations.generatedListColumnProductNumber'),\n                    allowResize: true,\n                    inlineEdit: 'string',\n                    width: '150px',\n                },\n                {\n                    property: 'media',\n                    label: this.$tc('sw-product.detailBase.cardTitleMedia'),\n                    allowResize: true,\n                    inlineEdit: true,\n                    sortable: false,\n                },\n                {\n                    property: 'active',\n                    label: this.$tc('sw-product.variations.generatedListColumnActive'),\n                    allowResize: true,\n                    inlineEdit: 'boolean',\n                    align: 'center',\n                },\n            ];\n\n            // adding download files to second last index\n            if (this.productStates.includes('is-download')) {\n                columns.splice(columns.length - 1, 0, {\n                    property: 'downloads',\n                    label: this.$tc('sw-product.variations.generatedListColumnDownload'),\n                    allowResize: true,\n                    inlineEdit: true,\n                    sortable: false,\n                });\n            }\n            return columns;\n        },\n\n        currencyColumns() {\n            // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n            return this.currencies\n                .sort((_a, b) => {\n                    return b.isSystemDefault ? 1 : -1;\n                })\n                .map((currency) => {\n                    return {\n                        property: `price.${currency.id}.net`,\n                        label: currency.translated.name || currency.name,\n                        visible: currency.isSystemDefault,\n                        allowResize: true,\n                        primary: false,\n                        rawData: false,\n                        inlineEdit: 'number',\n                        width: '250px',\n                    };\n                });\n        },\n\n        canBeDeletedCriteria() {\n            const criteria = new Criteria(1, 25);\n            const variantIds = this.toBeDeletedVariantIds.map((variant) => variant.id);\n            criteria.addFilter(Criteria.equalsAny('canonicalProductId', variantIds));\n\n            return criteria;\n        },\n    },\n\n    watch: {\n        selectedGroups: {\n            immediate: true,\n            handler() {\n                if (!this.selectedGroups || this.selectedGroups.length === 0) {\n                    return;\n                }\n\n                this.getFilterOptions();\n            },\n        },\n\n        productStates() {\n            this.getList();\n        },\n\n        'product.id': {\n            handler() {\n                this.getList();\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            this.productDownloadFolderId = await this.mediaService.getDefaultFolderId('product_download');\n        },\n\n        removeFile(fileName, item) {\n            if (item.downloads.length === 1) {\n                return;\n            }\n\n            item.downloads = item.downloads.filter(\n                (download) => `${download.media.fileName}.${download.media.fileExtension}` !== fileName,\n            );\n\n            this.productRepository.save(item);\n        },\n\n        mediaExists(files, targetId) {\n            return files.some(({ id }) => {\n                return id === targetId;\n            });\n        },\n\n        successfulUpload(event, item) {\n            this.mediaRepository.get(event.targetId, Context.api).then((media) => {\n                if (this.mediaExists(this.getDownloadsSource(item), event.targetId)) {\n                    return;\n                }\n\n                const newDownload = this.productDownloadRepository.create(Context.api);\n                newDownload.mediaId = event.targetId;\n                newDownload.productId = item.id;\n                newDownload.media = media;\n\n                Cicada.State.commit(\n                    'swProductDetail/setVariants',\n                    this.variants.map((variant) => {\n                        if (variant.id === item.id) {\n                            variant.downloads.push(newDownload);\n                            this.productRepository.save(variant);\n                        }\n                        return variant;\n                    }),\n                );\n            });\n        },\n\n        getDownloadsSource(item) {\n            if (!item.downloads) {\n                return [];\n            }\n\n            return item.downloads.map((download) => {\n                return download.media;\n            });\n        },\n\n        getList() {\n            // Promise needed for inline edit error handling\n            return new Promise((resolve) => {\n                if (this.product.parentId) {\n                    return;\n                }\n\n                Cicada.State.commit('swProductDetail/setLoading', [\n                    'variants',\n                    true,\n                ]);\n\n                // Get criteria for search and for option sorting\n                const searchCriteria = new Criteria(1, 25);\n\n                const productStates = this.productStates.filter((state) => state !== 'all');\n                const productStatesFilter = productStates.map((productState) => {\n                    return Criteria.equals('states', productState);\n                });\n\n                // Criteria for Search\n                searchCriteria.setTotalCountMode(1);\n                searchCriteria\n                    .setPage(this.page)\n                    .setLimit(this.limit)\n                    .addFilter(Criteria.equals('product.parentId', this.product.id))\n                    .addFilter(Criteria.multi('AND', productStatesFilter));\n\n                searchCriteria.getAssociation('media').addSorting(Criteria.sort('position'));\n                searchCriteria.addAssociation('media.media');\n\n                searchCriteria\n                    .getAssociation('options')\n                    .addSorting(Criteria.sort('groupId'))\n                    .addSorting(Criteria.sort('id'));\n\n                if (productStates.includes('is-download')) {\n                    searchCriteria.addAssociation('downloads.media');\n                }\n\n                // Add search term\n                this.buildSearchQuery(searchCriteria);\n\n                // User selected filters\n                if (this.getFilterCriteria()) {\n                    this.getFilterCriteria().forEach((criteria) => {\n                        searchCriteria.addFilter(criteria);\n                    });\n                }\n\n                // check for other sort values\n                if (this.sortBy === 'name') {\n                    searchCriteria.addSorting(Criteria.sort('product.options.name', this.sortDirection));\n                } else {\n                    searchCriteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection));\n                }\n\n                if (this.sortBy !== 'productNumber') {\n                    searchCriteria.addSorting(Criteria.sort('product.productNumber', this.sortDirection));\n                }\n\n                // Start search\n                this.productRepository.search(searchCriteria).then((res) => {\n                    this.total = res.total;\n                    Cicada.State.commit('swProductDetail/setVariants', res);\n                    Cicada.State.commit('swProductDetail/setLoading', [\n                        'variants',\n                        false,\n                    ]);\n                    this.$emit('variants-finish-update', this.variants);\n                    resolve();\n                });\n            });\n        },\n\n        buildSearchQuery(criteria) {\n            if (!this.term) {\n                return criteria;\n            }\n\n            // Split each word for search\n            const terms = this.term.split(' ');\n\n            // Create query for each single word\n            terms.forEach((term) => {\n                criteria.addQuery(Criteria.equals('product.options.name', term), 3500);\n                criteria.addQuery(Criteria.contains('product.options.name', term), 500);\n            });\n            criteria.addQuery(Criteria.contains('product.productNumber', this.term), 5000);\n\n            // return the input\n            return criteria;\n        },\n\n        getFilterOptions() {\n            // Prepare groups\n            const groups = [...this.selectedGroups]\n                .sort((a, b) => a.position - b.position)\n                .map((group, index) => {\n                    const children = this.getOptionsForGroup(group.id);\n\n                    return {\n                        id: group.id,\n                        name: group.name,\n                        childCount: children.length,\n                        parentId: null,\n                        afterId: index > 0 ? this.selectedGroups[index - 1].id : null,\n                        storeObject: group,\n                    };\n                });\n\n            // Prepare options\n            const children = groups.reduce((result, group) => {\n                const options = this.getOptionsForGroup(group.id);\n\n                // Iterate for each group options\n                const optionsForGroup = options\n                    .sort((elementA, elementB) => {\n                        return elementA.position - elementB.position;\n                    })\n                    .map((element, index) => {\n                        const option = element.option;\n\n                        // Get previous element\n                        let afterId = null;\n                        if (index > 0) {\n                            afterId = options[index - 1].option.id;\n                        }\n\n                        return {\n                            id: option.id,\n                            name: option.name,\n                            childCount: 0,\n                            parentId: option.groupId,\n                            afterId,\n                            storeObject: element,\n                        };\n                    });\n\n                return [\n                    ...result,\n                    ...optionsForGroup,\n                ];\n            }, []);\n\n            // Assign groups and children to order objects\n            this.filterOptions = [\n                ...groups,\n                ...children,\n            ];\n        },\n\n        resetFilterOptions() {\n            this.filterOptions = [];\n            this.includeOptions = [];\n\n            this.$nextTick(() => {\n                this.getFilterOptions();\n                this.getList();\n            });\n        },\n\n        filterOptionChecked(option) {\n            if (option.checked) {\n                // Remove from include list\n                this.includeOptions.push({\n                    id: option.id,\n                    groupId: option.parentId,\n                });\n            } else {\n                // Add to include option list\n                this.includeOptions = this.includeOptions.filter((includeOption) => includeOption.id !== option.id);\n            }\n        },\n\n        getFilterCriteria() {\n            if (this.includeOptions.length <= 0) {\n                return false;\n            }\n\n            // Collect each selected option in a group\n            // [\n            //   {id: 'abc123', options: [...optionIds]},\n            //   {id: 'def456', options: [...optionIds]},\n            // ]\n            const optionInGroups = this.includeOptions.reduce((result, option) => {\n                const parentGroup = result.find((group) => group.id === option.groupId);\n\n                // Push to group when array exists\n                if (parentGroup) {\n                    parentGroup.options.push(option.id);\n                } else {\n                    // otherwise create new group with the option\n                    result.push({\n                        id: option.groupId,\n                        options: [option.id],\n                    });\n                }\n\n                return result;\n            }, []);\n\n            return optionInGroups.map((group) => {\n                return Criteria.equalsAny('product.optionIds', group.options);\n            });\n        },\n\n        getOptionsForGroup(groupId) {\n            return this.product.configuratorSettings.filter((element) => {\n                return !element.isDeleted && element.option.groupId === groupId;\n            });\n        },\n\n        isPriceFieldInherited(variant, currency) {\n            if (!variant.price) {\n                return true;\n            }\n\n            const foundVariant = variant.price.find((price) => {\n                return price.currencyId === currency.id;\n            });\n\n            return !foundVariant;\n        },\n\n        isActiveFieldInherited(variant) {\n            return variant.active === null;\n        },\n\n        isMediaFieldInherited(variant) {\n            if (variant.forceMediaInheritanceRemove) {\n                return false;\n            }\n\n            if (variant.media) {\n                return variant.media.length <= 0;\n            }\n\n            return !!variant.media;\n        },\n\n        onInheritanceRestore(variant, currency) {\n            if (!variant.price) {\n                return;\n            }\n\n            const foundVariantIndex = variant.price.findIndex((price) => {\n                return price.currencyId === currency.id;\n            });\n\n            if (foundVariantIndex >= 0) {\n                if (this.isCompatEnabled('INSTANCE_DELETE')) {\n                    this.$delete(variant.price, foundVariantIndex);\n                } else {\n                    delete variant.price[foundVariantIndex];\n                }\n            }\n\n            if (variant.price.length <= 0 || Object.keys(variant.price).length <= 0) {\n                variant.price = null;\n            }\n        },\n\n        onActiveInheritanceRestore(variant) {\n            variant.active = null;\n        },\n\n        onActiveInheritanceRemove(variant) {\n            variant.active = true;\n        },\n\n        onInheritanceRemove(variant, currency) {\n            if (!variant.price) {\n                variant.price = [];\n            }\n\n            // remove inheritance on default currency variant\n            if (!currency.isSystemDefault) {\n                this.onInheritanceRemove(variant, this.defaultCurrency);\n            }\n\n            // create new price for selected currency\n            const defaultPrice = this.getDefaultPriceForVariant(variant);\n            const newPrice = {\n                currencyId: currency.id,\n                gross: defaultPrice.gross * currency.factor,\n                linked: defaultPrice.linked,\n                net: defaultPrice.net * currency.factor,\n            };\n\n            // add new price currency to variant\n            if (this.isCompatEnabled('INSTANCE_SET')) {\n                this.$set(variant.price, variant.price.length, newPrice);\n            } else {\n                variant.price.push(newPrice);\n            }\n        },\n\n        onMediaInheritanceRestore(variant, isInlineEdit) {\n            if (!isInlineEdit) {\n                return;\n            }\n\n            variant.forceMediaInheritanceRemove = false;\n            variant.coverId = null;\n\n            variant.media.getIds().forEach((mediaId) => {\n                variant.media.remove(mediaId);\n            });\n        },\n\n        onMediaInheritanceRemove(variant, isInlineEdit) {\n            if (!isInlineEdit) {\n                return;\n            }\n\n            variant.forceMediaInheritanceRemove = true;\n            this.product.media.forEach(({ id, mediaId, position }) => {\n                const media = this.productMediaRepository.create(Context.api);\n                Object.assign(media, {\n                    mediaId,\n                    position,\n                    productId: this.product.id,\n                });\n                if (this.product.coverId === id) {\n                    variant.coverId = media.id;\n                }\n\n                variant.media.push(media);\n            });\n        },\n\n        getDefaultPriceForVariant(variant) {\n            if (!variant.price) {\n                return this.defaultPrice;\n            }\n\n            const foundDefaultPrice = variant.price.find((price) => {\n                return price.currencyId === this.defaultCurrency.id;\n            });\n\n            return foundDefaultPrice || this.defaultPrice;\n        },\n\n        onVariationDelete(item) {\n            this.showDeleteModal = true;\n\n            this.toBeDeletedVariantIds.push(item);\n        },\n\n        onInlineEditSave(variation) {\n            // check for changes\n            if (!this.productRepository.hasChanges(variation)) {\n                return;\n            }\n\n            // get product name\n            const productName = variation.options.reduce((acc, option, index) => {\n                return `${acc}${index > 0 ? ' - ' : ''}${option.translated.name}`;\n            }, '');\n\n            this.productRepository\n                .save(variation)\n                .then(() => {\n                    // create success notification\n                    const titleSaveSuccess = this.$tc('global.default.success');\n                    const messageSaveSuccess = this.$tc('sw-product.detail.messageSaveSuccess', 0, {\n                        name: productName,\n                    });\n\n                    this.createNotificationSuccess({\n                        title: titleSaveSuccess,\n                        message: messageSaveSuccess,\n                    });\n\n                    // update items\n                    this.getList();\n                })\n                .catch(() => {\n                    // create error notification\n                    const titleSaveError = this.$tc('global.default.error');\n                    const messageSaveError = this.$tc(\n                        'global.notification.notificationSaveErrorMessageRequiredFieldsInvalid',\n                    );\n\n                    this.createNotificationError({\n                        title: titleSaveError,\n                        message: messageSaveError,\n                    });\n                });\n        },\n\n        onInlineEditCancel() {\n            this.getList();\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n            this.toBeDeletedVariantIds = [];\n        },\n\n        /* eslint-disable no-unused-vars */\n        onConfirmDelete() {\n            this.modalLoading = true;\n            this.showDeleteModal = false;\n            const variantIds = this.toBeDeletedVariantIds.map((variant) => variant.id);\n\n            this.canVariantBeDeleted().then((canBeDeleted) => {\n                if (!canBeDeleted) {\n                    this.modalLoading = false;\n                    this.toBeDeletedVariantIds = [];\n\n                    this.createNotificationError({\n                        message: this.$tc('sw-product.variations.generatedListMessageDeleteErrorCanonicalUrl'),\n                    });\n\n                    return;\n                }\n\n                this.updateVariantListingConfig(variantIds);\n\n                this.productRepository.syncDeleted(variantIds).then(() => {\n                    this.modalLoading = false;\n                    this.toBeDeletedVariantIds = [];\n\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-product.variations.generatedListMessageDeleteSuccess'),\n                    });\n\n                    this.$refs.variantGrid.resetSelection();\n                    this.getList();\n                });\n            });\n        },\n\n        async canVariantBeDeleted() {\n            const products = await this.productRepository.search(this.canBeDeletedCriteria);\n\n            return products.length === 0;\n        },\n\n        onOptionEdit(variant) {\n            if (variant?.id) {\n                this.$router.push({\n                    name: 'sw.product.detail',\n                    params: {\n                        id: variant.id,\n                    },\n                });\n            }\n        },\n\n        isPriceEditing(value) {\n            this.priceEdit = value;\n        },\n\n        toggleBulkEditModal() {\n            this.showBulkEditModal = !this.showBulkEditModal;\n        },\n\n        async onEditItems() {\n            await this.$nextTick();\n\n            let includesDigital = '0';\n            const digital = Object.values(this.$refs.variantGrid.selection).filter((product) =>\n                product.states.includes('is-download'),\n            );\n            if (digital.length > 0) {\n                includesDigital = digital.filter((product) => product.isCloseout).length !== digital.length ? '1' : '2';\n            }\n\n            this.$router.push({\n                name: 'sw.bulk.edit.product',\n                params: {\n                    parentId: this.product.id,\n                    includesDigital,\n                },\n            });\n        },\n\n        onClickBulkDelete() {\n            const gridSelection = this.$refs.variantGrid.selection;\n            this.toBeDeletedVariantIds = Object.values(gridSelection);\n\n            this.showDeleteModal = true;\n        },\n\n        variantIsDigital(variant) {\n            return this.productStates.includes('all') && variant.states && variant.states.includes('is-download');\n        },\n\n        updateVariantListingConfig(variantIds) {\n            if (variantIds.length === this.variants.length) {\n                this.productEntity.variantListingConfig = null;\n            }\n\n            const mainVariantId = this.productEntity.variantListingConfig?.mainVariantId;\n            if (mainVariantId && variantIds.includes(mainVariantId)) {\n                this.productEntity.variantListingConfig.mainVariantId = null;\n\n                const displaySingleProduct = this.productEntity.variantListingConfig?.displayParent !== null;\n\n                if (displaySingleProduct) {\n                    this.productEntity.variantListingConfig.displayParent = true;\n                }\n            }\n\n            this.productRepository.save(this.productEntity);\n        },\n    },\n};\n"],"names":["template","Mixin","Context","Criteria","mapState","mapGetters","index","columns","_a","b","currency","criteria","variantIds","variant","fileName","item","download","files","targetId","id","event","media","newDownload","resolve","searchCriteria","productStates","state","productStatesFilter","productState","res","term","groups","a","group","children","result","options","optionsForGroup","elementA","elementB","element","option","afterId","includeOption","parentGroup","groupId","price","foundVariantIndex","defaultPrice","newPrice","isInlineEdit","mediaId","position","variation","productName","acc","titleSaveSuccess","messageSaveSuccess","titleSaveError","messageSaveError","canBeDeleted","value","includesDigital","digital","product","gridSelection","_b","mainVariantId"],"mappings":"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"}