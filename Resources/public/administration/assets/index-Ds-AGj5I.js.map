{"version":3,"file":"index-Ds-AGj5I.js","sources":["../../../app/administration/src/app/component/extension-api/sw-iframe-renderer/sw-iframe-renderer.html.twig","../../../app/administration/src/app/component/extension-api/sw-iframe-renderer/index.ts"],"sourcesContent":["<div :class=\"classes\">\n    <template v-if=\"componentName\">\n        <component :is=\"componentName\" />\n    </template>\n\n    <template v-else-if=\"extensionIsApp\">\n        <iframe\n            v-if=\"signedIframeSrc\"\n            ref=\"iframe\"\n            :src=\"signedIframeSrc\"\n            :title=\"src\"\n            width=\"100%\"\n            :height=\"iFrameHeight\"\n        ></iframe>\n    </template>\n\n    <iframe\n        v-else\n        ref=\"iframe\"\n        :src=\"iFrameSrc\"\n        :title=\"src\"\n        width=\"100%\"\n        :height=\"iFrameHeight\"\n    ></iframe>\n</div>\n","import type { Extension } from '../../../state/extensions.store';\nimport template from './sw-iframe-renderer.html.twig';\nimport './sw-iframe-renderer.scss';\n\n/**\n * @package admin\n *\n * @private\n * @description This component renders iFrame views for extensions\n * @status ready\n * @example-type static\n * @component-example\n * <sw-iframe-renderer src=\"https://www.my-source.com\" locationId=\"my-special-location\" />\n */\nCicada.Component.register('sw-iframe-renderer', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['extensionSdkService'],\n\n    props: {\n        src: {\n            type: String,\n            required: true,\n        },\n        locationId: {\n            type: String,\n            required: true,\n        },\n        fullScreen: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data(): {\n        heightHandler: null | (() => void);\n        urlHandler: null | (() => void);\n        locationHeight: null | number;\n        signedIframeSrc: null | string;\n    } {\n        return {\n            heightHandler: null,\n            urlHandler: null,\n            locationHeight: null,\n            signedIframeSrc: null,\n        };\n    },\n\n    created() {\n        this.heightHandler = Cicada.ExtensionAPI.handle('locationUpdateHeight', ({ height, locationId }) => {\n            if (locationId === this.locationId) {\n                this.locationHeight = Number(height) ?? null;\n            }\n        });\n\n        this.urlHandler = Cicada.ExtensionAPI.handle(\n            'locationUpdateUrl',\n            async ({ hash, pathname, searchParams, locationId }) => {\n                if (locationId !== this.locationId) {\n                    return;\n                }\n\n                const filteredSearchParams = JSON.stringify(\n                    searchParams.filter(([key]) => {\n                        return ![\n                            'location-id',\n                            'privileges',\n                            'shop-id',\n                            'shop-url',\n                            'timestamp',\n                            'sw-version',\n                            'sw-context-language',\n                            'sw-user-language',\n                            'cicada-shop-signature',\n                        ].includes(key);\n                    }),\n                );\n\n                await this.$router.replace({\n                    query: {\n                        [this.locationIdHashQueryKey]: hash,\n                        [this.locationIdPathnameQueryKey]: pathname,\n                        [this.locationIdSearchParamsQueryKey]: filteredSearchParams,\n                    },\n                });\n            },\n        );\n    },\n\n    beforeUnmount() {\n        if (this.heightHandler) {\n            this.heightHandler();\n        }\n\n        if (this.urlHandler) {\n            this.urlHandler();\n        }\n    },\n\n    computed: {\n        locationIdHashQueryKey(): string {\n            return `locationId_${this.locationId}_hash`;\n        },\n\n        locationIdPathnameQueryKey(): string {\n            return `locationId_${this.locationId}_pathname`;\n        },\n\n        locationIdSearchParamsQueryKey(): string {\n            return `locationId_${this.locationId}_searchParams`;\n        },\n\n        componentName(): string | undefined {\n            return Cicada.State.get('sdkLocation').locations[this.locationId];\n        },\n\n        extension(): Extension | undefined {\n            const extensions = Cicada.State.get('extensions');\n            const srcWithoutSearchParameters = new URL(this.src).origin + new URL(this.src).pathname;\n\n            return Object.values(extensions).find((ext) => {\n                const extensionBaseUrlWithoutSearchParameters = new URL(ext.baseUrl).origin + new URL(ext.baseUrl).pathname;\n                return extensionBaseUrlWithoutSearchParameters === srcWithoutSearchParameters;\n            });\n        },\n\n        extensionIsApp(): boolean {\n            return this.extension?.type === 'app';\n        },\n\n        iFrameSrc(): string {\n            const urlObject = new URL(this.src, window.location.origin);\n            urlObject.searchParams.append('location-id', this.locationId);\n\n            return urlObject.toString();\n        },\n\n        iFrameHeight(): string {\n            if (typeof this.locationHeight === 'number') {\n                return `${this.locationHeight}px`;\n            }\n\n            return '100%';\n        },\n\n        classes(): { [key: string]: boolean } {\n            return {\n                'sw-iframe-renderer': true,\n                'sw-iframe-renderer--full-screen': this.fullScreen,\n            };\n        },\n    },\n\n    watch: {\n        extension: {\n            immediate: true,\n            handler() {\n                this.signIframeSrc();\n            },\n        },\n        locationId() {\n            this.signIframeSrc();\n        },\n    },\n\n    methods: {\n        signIframeSrc() {\n            if (!this.extension || !this.extensionIsApp) {\n                return;\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n            this.extensionSdkService\n                .signIframeSrc(this.extension.name, this.iFrameSrc)\n                .then((response) => {\n                    const uri = (response as { uri?: string })?.uri;\n\n                    if (!uri) {\n                        return;\n                    }\n\n                    // add information from query with hash, pathname and queries\n                    const urlObject = new URL(uri);\n                    const hash = this.$route.query[this.locationIdHashQueryKey];\n                    const pathname = this.$route.query[this.locationIdPathnameQueryKey];\n                    const searchParams = this.$route.query[this.locationIdSearchParamsQueryKey];\n\n                    if (hash) {\n                        urlObject.hash = hash as string;\n                    }\n\n                    if (pathname) {\n                        urlObject.pathname = pathname as string;\n                    }\n\n                    if (searchParams) {\n                        const parsedSearchParams = JSON.parse(searchParams as string) as [string, string][];\n\n                        parsedSearchParams.forEach(\n                            ([\n                                key,\n                                value,\n                            ]) => {\n                                urlObject.searchParams.append(key, value);\n                            },\n                        );\n                    }\n\n                    this.signedIframeSrc = urlObject.toString();\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                })\n                .catch(() => {});\n        },\n    },\n});\n"],"names":["template","height","locationId","hash","pathname","searchParams","filteredSearchParams","key","extensions","srcWithoutSearchParameters","ext","_a","urlObject","response","uri","value"],"mappings":"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"}