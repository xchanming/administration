const r=`{% block sw_multi_select %} <sw-select-base class="sw-multi-select" :is-loading="isLoading" v-bind="$attrs" :label="label" @select-expanded="onSelectExpanded" @select-collapsed="onSelectCollapsed" v-on="listeners" > {% block sw_multi_select_base %} {% block sw_multi_select_base_selection %} <template #sw-select-selection="{ identification, error, disabled, size, expand, collapse }"> {% block sw_multi_select_base_selection_slot %} <sw-select-selection-list ref="selectionList" :selections="visibleValues" :invisible-count="invisibleValueCount" v-bind="{ size, valueProperty, labelProperty, placeholder, searchTerm, disabled: disabled || undefined }" :input-label="label" @total-count-click="expandValueLimit" @item-remove="remove" @last-item-delete="removeLastItem" @search-term-change="onSearchTermChange" > {% block sw_multi_select_base_selection_list %} {% block sw_multi_select_base_selection_list_label %} <template #label-property="{ item, index, labelProperty, valueProperty }"> {% block sw_multi_select_base_selection_list_label_inner %} <slot name="selection-label-property" v-bind="{ item, index, labelProperty, valueProperty}" > {{ getKey(item, labelProperty) }} </slot> {% endblock %} </template> {% endblock %} {% endblock %} </sw-select-selection-list> {% endblock %} </template> {% endblock %} {% block sw_multi_select_base_results %} <template #results-list> {% block sw_multi_select_base_results_slot %} <sw-select-result-list ref="swSelectResultList" :options="visibleResults" :is-loading="isLoading" :empty-message="$tc('global.sw-multi-select.messageNoResults', 0, { term: searchTerm })" :focus-el="$refs.selectionList.getFocusEl()" @paginate="$emit('paginate')" @item-select="addItem" > {% block sw_multi_select_base_results_list %} {% block sw_multi_select_base_results_list_before %} <template #before-item-list> <slot name="before-item-list"></slot> </template> {% endblock %} {% block sw_multi_select_base_results_list_result %} <template #result-item="{ item, index }"> <slot name="result-item" v-bind="{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, isSelected, addItem, getKey }" > <sw-select-result :selected="isSelected(item)" :class="'sw-select-option--' + item.value" v-bind="{ item, index }" :aria-label="getKey(item, labelProperty)" @item-select="addItem" > {% block sw_multi_select_base_results_list_result_label %} <slot name="result-label-property" v-bind="{ item, index, labelProperty, valueProperty, searchTerm, getKey }" > <sw-highlight-text v-if="highlightSearchTerm" :text="getKey(item, labelProperty)" :search-term="searchTerm" /> <template v-else> {{ getKey(item, labelProperty) }} </template> </slot> {% endblock %} </sw-select-result> </slot> </template> {% endblock %} {% block sw_multi_select_base_results_list_after %} <template #after-item-list> <slot name="after-item-list"></slot> </template> {% endblock %} {% endblock %} </sw-select-result-list> {% endblock %} </template> {% endblock %} {% endblock %} <template #label> <slot name="label"></slot> </template> <template #hint> <slot name="hint"></slot> </template> </sw-select-base> {% endblock %}`,{Component:a,Mixin:n}=Cicada,{debounce:o,get:u}=Cicada.Utils;a.register("sw-multi-select",{template:r,compatConfig:Cicada.compatConfig,inheritAttrs:!1,inject:["feature"],emits:["update:value","item-add","item-remove","search-term-change","display-values-expand","paginate"],mixins:[n.getByName("remove-api-error")],props:{options:{type:Array,required:!0},value:{required:!0,validator(e){return Array.isArray(e)||e===null||e===void 0}},labelProperty:{type:String,required:!1,default:"label"},valueProperty:{type:String,required:!1,default:"value"},placeholder:{type:String,required:!1,default:""},valueLimit:{type:Number,required:!1,default:5},isLoading:{type:Boolean,required:!1,default:!1},highlightSearchTerm:{type:Boolean,required:!1,default:!0},searchFunction:{type:Function,required:!1,default({options:e,labelProperty:t,searchTerm:l}){return e.filter(i=>{const s=this.getKey(i,t);return s?s.toLowerCase().includes(l.toLowerCase()):!1})}},label:{type:String,required:!1,default:void 0}},data(){return{searchTerm:"",limit:this.valueLimit}},computed:{visibleValues(){return!this.currentValue||this.currentValue.length<=0?[]:this.options.filter(e=>this.currentValue.includes(this.getKey(e,this.valueProperty))).slice(0,this.limit)},totalValuesCount(){return this.currentValue.length?this.currentValue.length:0},invisibleValueCount(){return this.currentValue?Math.max(0,this.totalValuesCount-this.limit):0},currentValue:{get(){return this.value?this.value:[]},set(e){this.$emit("update:value",e)}},visibleResults(){return this.searchTerm?this.searchFunction({options:this.options,labelProperty:this.labelProperty,valueProperty:this.valueProperty,searchTerm:this.searchTerm}):this.options},listeners(){return this.isCompatEnabled("INSTANCE_LISTENERS")?this.$listeners:{}}},methods:{isSelected(e){return this.currentValue.includes(this.getKey(e,this.valueProperty))},addItem(e){const t=this.getKey(e,this.valueProperty);if(this.isSelected(e)){this.remove(e);return}this.$emit("item-add",e),this.currentValue=[...this.currentValue,t],this.$refs.selectionList.focus(),this.$refs.selectionList.select()},remove(e){this.$emit("item-remove",e),this.currentValue=this.currentValue.filter(t=>t!==this.getKey(e,this.valueProperty))},removeLastItem(){if(!this.visibleValues.length)return;if(this.invisibleValueCount>0){this.expandValueLimit();return}const e=this.visibleValues[this.visibleValues.length-1];this.remove(e)},expandValueLimit(){this.$emit("display-values-expand"),this.limit+=this.limit},onSearchTermChange:o(function(t){this.searchTerm=t,this.$emit("search-term-change",this.searchTerm),this.resetActiveItem()},100),resetActiveItem(){this.$refs.swSelectResultList.setActiveItemIndex(0)},onSelectExpanded(){this.$refs.selectionList.focus()},onSelectCollapsed(){var e,t;this.searchTerm="",this.$refs.selectionList.blur(),(t=(e=this.$refs.selectionList)==null?void 0:e.$refs)!=null&&t.swSelectInput&&this.$refs.selectionList.$refs.swSelectInput.focus()},getKey(e,t,l){return u(e,t,l)}}});
//# sourceMappingURL=index-DJOuJ5_V.js.map
