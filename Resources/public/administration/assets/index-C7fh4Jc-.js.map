{"version":3,"file":"index-C7fh4Jc-.js","sources":["../../../app/administration/src/app/component/meteor-wrapper/mt-tabs/mt-tabs.html.twig","../../../app/administration/src/app/component/meteor-wrapper/mt-tabs/index.ts"],"sourcesContent":["<mt-tabs-original\n    v-bind=\"$attrs\"\n    ref=\"mtTabsOriginal\"\n    :items=\"mergedItems\"\n    v-on=\"listeners\"\n/>\n","import { MtTabs } from '@cicada-ag/meteor-component-library';\nimport type { PropType } from 'vue';\nimport type { TabItem } from '@cicada-ag/meteor-component-library/dist/esm/components/navigation/mt-tabs/mt-tabs';\nimport template from './mt-tabs.html.twig';\nimport type { TabItemEntry } from '../../../state/tabs.store';\n\n// Use the compatConfig from the Cicada object and disable all compatibilities\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nMtTabs.compatConfig = Object.fromEntries(\n    Object.keys(Cicada.compatConfig).map((key) => [\n        key,\n        false,\n    ]),\n);\n\n/**\n * @package admin\n *\n * @private\n * @status ready\n * @description Wrapper component for mt-tabs. Adds the component sections\n *  to the slots. Need to be matched with the original mt-tabs component.\n */\nCicada.Component.register('mt-tabs', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    components: {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        'mt-tabs-original': MtTabs,\n    },\n\n    props: {\n        positionIdentifier: {\n            type: String,\n            required: true,\n            default: null,\n        },\n\n        items: {\n            type: Array as PropType<TabItem[]>,\n            required: true,\n        },\n    },\n\n    computed: {\n        tabExtensions(): TabItemEntry[] {\n            return Cicada.State.get('tabs').tabItems[this.positionIdentifier] ?? [];\n        },\n\n        mergedItems(): TabItem[] {\n            const mergedItems: TabItem[] = [\n                ...this.items,\n                ...this.tabExtensions.map((extension) => ({\n                    label: this.$t(extension.label) ?? '',\n                    name: extension.componentSectionId,\n                    onClick: () => {\n                        // Push route to extension.componentSectionId path\n                        void this.$router.push({\n                            path: extension.componentSectionId,\n                        });\n                    },\n                })),\n            ];\n\n            return mergedItems;\n        },\n\n        listeners() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return this.$listeners;\n            }\n\n            return {};\n        },\n    },\n});\n"],"names":["template","MtTabs","key","extension"],"mappings":"+GAAA,MAAeA,EAAA,kGCQfC,EAAO,aAAe,OAAO,YACzB,OAAO,KAAK,OAAO,YAAY,EAAE,IAAKC,GAAQ,CAC1CA,EACA,EAAA,CACH,CACL,EAUA,OAAO,UAAU,SAAS,UAAW,CACjC,SAAAF,EAEA,aAAc,OAAO,aAErB,WAAY,CAER,mBAAoBC,CACxB,EAEA,MAAO,CACH,mBAAoB,CAChB,KAAM,OACN,SAAU,GACV,QAAS,IACb,EAEA,MAAO,CACH,KAAM,MACN,SAAU,EACd,CACJ,EAEA,SAAU,CACN,eAAgC,CACrB,OAAA,OAAO,MAAM,IAAI,MAAM,EAAE,SAAS,KAAK,kBAAkB,GAAK,EACzE,EAEA,aAAyB,CAed,MAdwB,CAC3B,GAAG,KAAK,MACR,GAAG,KAAK,cAAc,IAAKE,IAAe,CACtC,MAAO,KAAK,GAAGA,EAAU,KAAK,GAAK,GACnC,KAAMA,EAAU,mBAChB,QAAS,IAAM,CAEN,KAAK,QAAQ,KAAK,CACnB,KAAMA,EAAU,kBAAA,CACnB,CACL,CAAA,EACF,CAAA,CAIV,EAEA,WAAY,CAEJ,OAAA,KAAK,gBAAgB,oBAAoB,EAClC,KAAK,WAGT,EACX,CACJ,CACJ,CAAC"}