{"version":3,"file":"index-RgVzk8m9.js","sources":["../../../app/administration/src/app/component/filter/sw-date-filter/sw-date-filter.html.twig","../../../app/administration/src/app/component/filter/sw-date-filter/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_date_filter %}\n<sw-range-filter\n    :class=\"'sw-date-filter' + ((filter.showTimeframe) ? ' --has-timeframe' : '')\"\n    :value=\"dateValue\"\n    :title=\"filter.label\"\n    :active=\"active\"\n    :show-reset-button=\"!!dateValue.from || !!dateValue.to\"\n    :is-show-divider=\"showDivider\"\n    :property=\"filter.property\"\n    @filter-update=\"updateFilter\"\n    @filter-reset=\"resetFilter\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_date_filter_timeframe %}\n    <sw-single-select\n        v-if=\"filter.showTimeframe\"\n        v-model:value=\"dateValue.timeframe\"\n        class=\"sw-date-filter__timeframe\"\n        placeholder=\"Select timeframe\"\n        :options=\"timeframeOptions\"\n        @update:value=\"onTimeframeSelect\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_date_filter_from_field %}\n    <template #from-field>\n        <sw-datepicker\n            v-model:value=\"dateValue.from\"\n            v-bind=\"$attrs\"\n            class=\"sw-date-filter__from\"\n            :date-type=\"dateType\"\n            :placeholder=\"filter.fromPlaceholder\"\n            :label=\"fromToFieldLabel('from')\"\n            @update:value=\"resetTimeframe\"\n        />\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_date_filter_to_field %}\n    <template #to-field>\n        <sw-datepicker\n            v-model:value=\"dateValue.to\"\n            v-bind=\"$attrs\"\n            class=\"sw-date-filter__to\"\n            :date-type=\"dateType\"\n            :placeholder=\"filter.toPlaceholder\"\n            :label=\"fromToFieldLabel('to')\"\n            @update:value=\"resetTimeframe\"\n        />\n    </template>\n    {% endblock %}\n</sw-range-filter>\n{% endblock %}\n","import template from './sw-date-filter.html.twig';\nimport './sw-date-filter.scss';\n\nconst { Component } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n/**\n * @private\n */\nComponent.register('sw-date-filter', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['feature'],\n\n    emits: [\n        'filter-reset',\n        'filter-update',\n    ],\n\n    props: {\n        filter: {\n            type: Object,\n            required: true,\n        },\n\n        active: {\n            type: Boolean,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            dateValue: {\n                from: null,\n                to: null,\n                timeframe: null,\n            },\n            timeframeOptions: [\n                {\n                    label: this.$tc('sw-order.filters.orderDateFilter.options.lastYear'),\n                    value: -365,\n                },\n                {\n                    label: this.$tc('sw-order.filters.orderDateFilter.options.lastQuarter'),\n                    value: 'lastQuarter',\n                },\n                {\n                    label: this.$tc('sw-order.filters.orderDateFilter.options.lastMonth'),\n                    value: -30,\n                },\n                {\n                    label: this.$tc('sw-order.filters.orderDateFilter.options.lastWeek'),\n                    value: -7,\n                },\n                {\n                    label: this.$tc('sw-order.filters.orderDateFilter.options.lastDay'),\n                    value: -1,\n                },\n                {\n                    label: this.$tc('sw-order.filters.orderDateFilter.options.custom'),\n                    value: 'custom',\n                    hidden: true,\n                },\n            ],\n        };\n    },\n\n    computed: {\n        dateType() {\n            if (\n                [\n                    'time',\n                    'date',\n                    'datetime',\n                    'datetime-local',\n                ].includes(this.filter.dateType)\n            ) {\n                return this.filter.dateType;\n            }\n\n            return 'date';\n        },\n\n        isDateTimeType() {\n            return this.dateType === 'datetime' || this.dateType === 'datetime-local';\n        },\n\n        showDivider() {\n            return !this.isDateTimeType && !this.filter.showTimeframe;\n        },\n    },\n\n    watch: {\n        'filter.value': {\n            handler() {\n                if (this.filter.value) {\n                    this.dateValue = { ...this.filter.value };\n                }\n            },\n        },\n    },\n\n    methods: {\n        fromToFieldLabel(type) {\n            const key = `${type}FieldLabel`;\n\n            if (!this.filter.hasOwnProperty(key)) {\n                return this.$tc(`global.default.${type}`);\n            }\n\n            const label = this.filter[key];\n\n            if (!label) {\n                return null;\n            }\n\n            return label;\n        },\n\n        updateFilter(params) {\n            if (!this.dateValue.from && !this.dateValue.to) {\n                this.$emit('filter-reset', this.filter.name);\n                return;\n            }\n\n            const { value } = this.filter;\n            if (value && value.from === this.dateValue.from && value.to === this.dateValue.to) {\n                return;\n            }\n\n            if (this.dateValue.to) {\n                const to = new Date(this.dateValue.to);\n                to.setHours(23, 59, 59);\n                this.dateValue.to = to.toISOString();\n            }\n\n            this.$emit('filter-update', this.filter.name, params, this.dateValue);\n        },\n\n        onTimeframeSelect(timeframe) {\n            if (!timeframe) {\n                return;\n            }\n\n            if (!this.timeframeOptions.some((t) => t.value === timeframe)) {\n                console.error(`Timeframe ${timeframe} is not allowed for sw-date-filter component`);\n                return;\n            }\n\n            this.resetFilter();\n\n            let from = new Date();\n            let to = new Date();\n\n            from.setDate(from.getDate() + timeframe);\n            from.setHours(0, 0, 0);\n\n            if (timeframe === 'lastQuarter') {\n                ({ startDate: from, endDate: to } = this.getPreviousQuarterDates());\n            }\n\n            const params = {\n                gte: from.toISOString(),\n                lte: to.toISOString(),\n            };\n\n            const filterCriteria = [\n                Criteria.range(this.filter.property, params),\n            ];\n\n            this.dateValue = {\n                from: params.gte,\n                to: params.lte,\n                timeframe: timeframe,\n            };\n\n            this.$emit('filter-update', this.filter.name, filterCriteria, this.dateValue);\n        },\n\n        resetFilter() {\n            this.dateValue = { from: null, to: null, timeframe: null };\n            this.$emit('filter-reset', this.filter.name, this.dateValue);\n        },\n\n        resetTimeframe() {\n            this.dateValue.timeframe = 'custom';\n        },\n\n        getPreviousQuarterDates() {\n            const date = new Date();\n            const quarter = Math.floor(date.getMonth() / 3);\n\n            const startDate = new Date(date.getFullYear(), quarter * 3 - 3, 1);\n            const endDate = new Date(date.getFullYear(), startDate.getMonth() + 3, 0, 23, 59, 59);\n\n            return {\n                startDate: startDate,\n                endDate: endDate,\n            };\n        },\n    },\n});\n"],"names":["template","Component","Criteria","type","key","label","params","value","to","timeframe","t","from","filterCriteria","date","quarter","startDate","endDate"],"mappings":"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"}