const{Criteria:p}=Shopware.Data;class a{constructor(t,e,r){this.component=t,this.propertyGroupRepository=e,this.customFieldRepository=r,this.entities={property:[],customField:[]}}fetchPropertyGroupEntities(t){return this._fetchEntities(t,"property","id",this.propertyGroupRepository)}fetchCustomFieldEntities(t){return this._fetchEntities(t,"customField","name",this.customFieldRepository)}_fetchEntities(t,e,r,s){if(!t||t.length<1)return Promise.resolve();const i=t.filter(o=>o.type===e).map(o=>o[r]);if(i.length<1)return Promise.resolve();const n=new p(1,25);return n.addFilter(p.equalsAny(r,i)),s.search(n,Shopware.Context.api).then(o=>{this.entities[e]=o})}getNameTranslation(t){if(t.type==="product")return this.component.$tc(`sw-settings-product-feature-sets.modal.label.${t.name}`);if(t.type==="property")return this.entities.property.filter(e=>e.id===t.id).map(e=>e.translated.name).pop();if(t.type==="customField"){const e=Shopware.Store.get("session").currentLocale,r=Shopware.Context.app.fallbackLocale;return this.entities.customField.filter(s=>s.name===t.name).map(s=>s.config.label[e]||s.config.label[r]).pop()}return t.type==="referencePrice"?this.component.$tc("sw-settings-product-feature-sets.modal.label.referencePrice"):""}getTypeTranslation(t){return t.type==="product"?this.component.$tc("sw-settings-product-feature-sets.modal.textProductInfoLabel"):t.type==="property"?this.component.$tc("sw-settings-product-feature-sets.modal.textPropertyLabel"):t.type==="customField"?this.component.$tc("sw-settings-product-feature-sets.modal.textCustomFieldLabel"):t.type==="referencePrice"?this.component.$tc("sw-settings-product-feature-sets.modal.textReferencePriceLabel"):""}}export{a as F};
