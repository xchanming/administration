{"version":3,"file":"index-B70UiiEi.js","sources":["../../../app/administration/src/module/sw-settings-listing/component/sw-settings-listing-option-criteria-grid/sw-settings-listing-option-criteria-grid.html.twig","../../../app/administration/src/module/sw-settings-listing/component/sw-settings-listing-option-criteria-grid/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_listing_option_criteria_card %}\n<sw-card\n    class=\"sw-settings-listing-option-criteria-grid__criteria-card\"\n    position-identifier=\"sw-settings-listing-option-criteria-grid\"\n    :title=\"$tc('sw-settings-listing.base.criteria.title')\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_listing_option_criteria_card_toolbar %}\n    <template #toolbar>\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_listing_option_criteria_card_toolbar_select %}\n        <sw-single-select\n            :value=\"selectedCriteria\"\n            :options=\"criteriaOptions\"\n            :placeholder=\"$tc('sw-settings-listing.base.criteria.selectPlaceholder')\"\n            value-property=\"value\"\n            label-property=\"label\"\n            show-clearable-button\n            @update:value=\"onAddCriteria\"\n        />\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_listing_option_criteria_card_grid %}\n    <sw-data-grid\n        v-if=\"productSortingEntity && productSortingEntity.fields.length > 0\"\n        ref=\"dataGrid\"\n        :columns=\"productSortingEntityColumns\"\n        :data-source=\"sortedProductSortingFields\"\n        :show-actions=\"true\"\n        :allow-inline-edit=\"true\"\n        :compact-mode=\"false\"\n        :show-selection=\"false\"\n        plain-appearance\n        item-identifier-property=\"field\"\n        @inline-edit-save=\"onSaveInlineEdit\"\n        @inline-edit-cancel=\"onCancelInlineEdit\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_listing_option_criteria_card_grid_column_field %}\n        <template #column-field=\"{item, isInlineEdit}\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_listing_option_criteria_card_grid_column_field_select %}\n            <sw-entity-single-select\n                v-if=\"item.field === 'customField' || (isItemACustomField(item.field) && isInlineEdit)\"\n                ref=\"customFieldSelection\"\n                v-model:value=\"item.name\"\n                :placeholder=\"$tc('global.sw-single-select.valuePlaceholder')\"\n                :criteria=\"customFieldCriteriaSingleSelect(item)\"\n                :label-callback=\"getCustomFieldName\"\n                entity=\"custom_field\"\n                show-clearable-button\n                @update:value=\"changeCustomField\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_listing_option_criteria_card_grid_column_field_custom_field %}\n            <span v-else-if=\"isItemACustomField(item.field)\">\n                {{ getCustomFieldLabelByCriteriaName(item.field) }}\n            </span>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_listing_option_criteria_card_grid_column_field_custom_criteria %}\n            <span v-else>\n                {{ getCriteriaSnippetByFieldName(item.field) }}\n            </span>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_listing_option_criteria_card_grid_column_order %}\n        <template #column-order=\"{item, isInlineEdit}\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_listing_option_criteria_card_grid_column_order_text %}\n            <div v-if=\"!isInlineEdit\">\n                {{ getOrderSnippet(item.order) }}\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_listing_option_criteria_card_grid_column_order_select %}\n            <sw-single-select\n                v-else\n                v-model:value=\"item.order\"\n                :options=\"orderOptions\"\n                value-property=\"value\"\n                label-property=\"label\"\n                :placeholder=\"$tc('global.sw-single-select.valuePlaceholder')\"\n            />\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_listing_option_criteria_card_grid_column_actions %}\n        <template #actions=\"{item}\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_listing_option_criteria_card_grid_column_actions_delete %}\n            <sw-context-menu-item\n                variant=\"danger\"\n                @click=\"onRemoveCriteria(item)\"\n            >\n                {{ $tc('global.default.delete') }}\n            </sw-context-menu-item>\n            {% endblock %}\n        </template>\n        {% endblock %}\n    </sw-data-grid>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_listing_option_criteria_card_empty_state %}\n    <sw-empty-state\n        v-else\n        class=\"sw-settings-listing-option-criteria-grid__criteria-empty-state\"\n        title=\"\"\n        :subline=\"$tc('sw-settings-listing.base.criteria.emptyStateSubline')\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_listing_option_criteria_card_empty_state_icon %}\n        <template #icon>\n            <img\n                :src=\"assetFilter('administration/static/img/empty-states/settings-empty-state.svg')\"\n                alt=\"\"\n            >\n        </template>\n        {% endblock %}\n\n    </sw-empty-state>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n","import template from './sw-settings-listing-option-criteria-grid.html.twig';\nimport './sw-settings-listing-option-criteria-grid.scss';\n\n/**\n * @package inventory\n */\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['repositoryFactory'],\n\n    emits: [\n        'criteria-add',\n        'criteria-delete',\n        'inline-edit-save',\n        'inline-edit-cancel',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet'),\n    ],\n\n    props: {\n        productSortingEntity: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            customFields: [],\n            selectedCriteria: null,\n            customFieldSetIDs: null,\n            notSortableCustomFields: [\n                'price',\n                'json',\n                'text',\n                'html',\n            ],\n        };\n    },\n\n    computed: {\n        customFieldRepository() {\n            return this.repositoryFactory.create('custom_field');\n        },\n\n        customFieldSetRepository() {\n            return this.repositoryFactory.create('custom_field_set');\n        },\n\n        customFieldSetRelationsRepository() {\n            return this.repositoryFactory.create('custom_field_set_relation');\n        },\n\n        customFieldCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(\n                Criteria.not('and', [\n                    Criteria.equalsAny('type', this.notSortableCustomFields),\n                ]),\n            );\n\n            if (this.customFieldSetIDs) {\n                criteria.addFilter(Criteria.equalsAny('customFieldSetId', this.customFieldSetIDs));\n            }\n\n            if (this.getProductSortingFieldsByName().length) {\n                criteria.addFilter(Criteria.equalsAny('id', this.getProductSortingFieldsByName()));\n            }\n\n            return criteria;\n        },\n\n        customFieldsRelationsCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(Criteria.equals('entityName', 'product'));\n\n            return criteria;\n        },\n\n        /**\n         * Sorts custom fields by their priority in an ascending order.\n         * @returns {[]}\n         */\n        sortedProductSortingFields() {\n            // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n            return this.productSortingEntity.fields.sort((a, b) => {\n                if (a.priority === b.priority) {\n                    return 0;\n                }\n\n                return a.priority < b.priority ? 1 : -1;\n            });\n        },\n\n        productSortingEntityColumns() {\n            return [\n                {\n                    property: 'field',\n                    label: this.$tc('sw-settings-listing.general.productSortingCriteriaGrid.header.name'),\n                    inlineEdit: 'string',\n                },\n                {\n                    property: 'order',\n                    label: this.$tc('sw-settings-listing.general.productSortingCriteriaGrid.header.order'),\n                    inlineEdit: 'string',\n                },\n                {\n                    property: 'priority',\n                    label: this.$tc('sw-settings-listing.general.productSortingCriteriaGrid.header.priority'),\n                    inlineEdit: 'number',\n                },\n            ];\n        },\n\n        criteriaOptions() {\n            const criteriaOptions = [\n                {\n                    value: 'product.name',\n                    label: this.$tc('sw-settings-listing.general.productSortingCriteriaGrid.options.label.product.name'),\n                },\n                {\n                    value: 'product.ratingAverage',\n                    label: this.$tc(\n                        'sw-settings-listing.general.productSortingCriteriaGrid.options.label.product.ratingAverage',\n                    ),\n                },\n                {\n                    value: 'product.productNumber',\n                    label: this.$tc(\n                        'sw-settings-listing.general.productSortingCriteriaGrid.options.label.product.productNumber',\n                    ),\n                },\n                {\n                    value: 'product.releaseDate',\n                    label: this.$tc(\n                        'sw-settings-listing.general.productSortingCriteriaGrid.options.label.product.releaseDate',\n                    ),\n                },\n                {\n                    value: 'product.stock',\n                    label: this.$tc('sw-settings-listing.general.productSortingCriteriaGrid.options.label.product.stock'),\n                },\n                {\n                    value: 'product.sales',\n                    label: this.$tc('sw-settings-listing.general.productSortingCriteriaGrid.options.label.product.sales'),\n                },\n                {\n                    value: 'customField',\n                    label: this.$tc('sw-settings-listing.general.productSortingCriteriaGrid.options.label.customField'),\n                },\n                {\n                    value: 'product.cheapestPrice',\n                    label: this.$tc(\n                        'sw-settings-listing.general.productSortingCriteriaGrid.options.label.product.cheapestPrice',\n                    ),\n                },\n                {\n                    value: 'product.price',\n                    label: this.$tc('sw-settings-listing.general.productSortingCriteriaGrid.options.label.product.price'),\n                },\n            ];\n\n            return criteriaOptions.sort((a, b) => {\n                return a.label.localeCompare(b.label);\n            });\n        },\n\n        orderOptions() {\n            return [\n                {\n                    label: this.$tc('global.default.ascending'),\n                    value: 'asc',\n                },\n                {\n                    label: this.$tc('global.default.descending'),\n                    value: 'desc',\n                },\n            ];\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        productSortingEntity: {\n            handler() {\n                if (!this.productSortingEntity || !this.productSortingEntity.fields) {\n                    return;\n                }\n\n                this.productSortingEntity.fields.forEach((field) => {\n                    if (field.field === null) {\n                        field.field = 'customField';\n                    }\n                });\n            },\n            deep: true,\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.fetchCustomFieldSetIds().then(() => {\n                this.fetchCustomFields();\n            });\n        },\n\n        fetchCustomFieldSetIds() {\n            return this.customFieldSetRelationsRepository.search(this.customFieldsRelationsCriteria).then((response) => {\n                this.customFieldSetIDs = response.map((currentField) => {\n                    return currentField.customFieldSetId;\n                });\n            });\n        },\n\n        fetchCustomFields() {\n            this.customFieldRepository.search(this.customFieldCriteria).then((response) => {\n                this.customFields = response;\n            });\n        },\n\n        /**\n         * Checks if the given field is a custom field.\n         * @param {string} fieldName\n         * @returns {boolean}\n         */\n        isItemACustomField(fieldName) {\n            const strippedFieldName = this.stripCustomFieldPath(fieldName);\n\n            return this.customFields.some((currentCustomField) => {\n                return currentCustomField.name === strippedFieldName;\n            });\n        },\n\n        getCustomFieldByName(technicalName) {\n            return this.customFields.find((currentCustomField) => {\n                return currentCustomField.name === technicalName;\n            });\n        },\n\n        /**\n         * First checks if the newly added criteria is already used. If not it emits an 'criteria-add' event.\n         * Otherwise it creates an error notification.\n         * @param {string} fieldName\n         */\n        onAddCriteria(fieldName) {\n            if (!this.criteriaIsAlreadyUsed(fieldName)) {\n                this.$emit('criteria-add', fieldName);\n\n                const record = this.productSortingEntity.fields.find((field) => field.field === fieldName);\n                this.$nextTick().then(() => {\n                    if (record && this.$refs.dataGrid) {\n                        this.$refs.dataGrid.onDbClickCell(record);\n                    }\n                });\n\n                return;\n            }\n\n            const criteriaName = this.getCriteriaSnippetByFieldName(fieldName);\n\n            this.createNotificationError({\n                message: this.$t('sw-settings-listing.general.productSortingCriteriaGrid.options.criteriaAlreadyUsed', {\n                    criteriaName,\n                }),\n            });\n        },\n\n        getOrderSnippet(order) {\n            if (order === 'asc') {\n                return this.$tc('global.default.ascending');\n            }\n\n            return this.$tc('global.default.descending');\n        },\n\n        onRemoveCriteria(item) {\n            this.$emit('criteria-delete', item);\n        },\n\n        getCriteriaTemplate(fieldName) {\n            return {\n                field: fieldName,\n                order: 'asc',\n                priority: 1,\n                naturalSorting: 0,\n            };\n        },\n\n        onSaveInlineEdit(item) {\n            if (item.field === null) {\n                this.createNotificationError({\n                    message: this.$t(\n                        'sw-settings-listing.general.productSortingCriteriaGrid.options.customFieldCriteriaNotNull',\n                    ),\n                });\n\n                return;\n            }\n\n            if (item.field === 'customFields') {\n                item.field = `customFields.${item.field}`;\n            }\n\n            if (item.field === 'customField') {\n                this.createNotificationError({\n                    message: this.$t(\n                        'sw-settings-listing.general.productSortingCriteriaGrid.options.customFieldCriteriaNotNull',\n                    ),\n                });\n\n                this.filterEmptyCustomFields(item);\n                return;\n            }\n\n            this.$emit('inline-edit-save');\n        },\n\n        onCancelInlineEdit(item) {\n            if (item && item.field === 'customField') {\n                this.filterEmptyCustomFields(item);\n            } else {\n                this.$emit('inline-edit-cancel', item);\n            }\n        },\n\n        filterEmptyCustomFields(item) {\n            this.productSortingEntity.fields = this.productSortingEntity.fields.filter((field) => {\n                return field.field !== item.field;\n            });\n        },\n\n        /**\n         * removes the stripCustomFieldPath `customFields.` part of the string.\n         * @param {string} fieldName\n         * @returns {string}\n         */\n        stripCustomFieldPath(fieldName) {\n            return fieldName.replace(/customFields\\./, '');\n        },\n\n        /**\n         * Returns the snippet of the corresponding field.\n         * @param {string} fieldName\n         * @returns {string}\n         */\n        getCriteriaSnippetByFieldName(fieldName) {\n            return this.$tc(`sw-settings-listing.general.productSortingCriteriaGrid.options.label.${fieldName}`);\n        },\n\n        criteriaIsAlreadyUsed(criteriaName) {\n            return this.productSortingEntity.fields.some((currentCriteria) => {\n                return currentCriteria.field === criteriaName;\n            });\n        },\n\n        getCustomFieldLabelByCriteriaName(criteriaName) {\n            const technicalName = this.stripCustomFieldPath(criteriaName);\n            const customField = this.getCustomFieldByName(technicalName);\n\n            return this.getInlineSnippet(customField.config.label) || technicalName;\n        },\n\n        getCustomFieldName(customField) {\n            const inlineSnippet = customField && this.getInlineSnippet(customField.config.label);\n\n            if (!inlineSnippet) {\n                return customField?.name;\n            }\n\n            return inlineSnippet;\n        },\n\n        customFieldCriteriaSingleSelect(customField) {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(\n                Criteria.not('and', [\n                    Criteria.equalsAny('type', this.notSortableCustomFields),\n                ]),\n            );\n\n            if (this.customFieldSetIDs) {\n                criteria.addFilter(Criteria.equalsAny('customFieldSetId', this.customFieldSetIDs));\n            }\n\n            if (this.getProductSortingFieldsByName(customField).length) {\n                criteria.addFilter(\n                    Criteria.not('AND', [\n                        Criteria.equalsAny('id', this.getProductSortingFieldsByName(customField)),\n                    ]),\n                );\n            }\n\n            return criteria;\n        },\n\n        async changeCustomField(key, field) {\n            const customField = this.sortedProductSortingFields.find((item) => {\n                return item.field === 'customField' || item.name === key;\n            });\n\n            customField.field = `customFields.${field.name}`;\n\n            await this.fetchCustomFields();\n\n            this.onSaveInlineEdit(customField.field);\n        },\n\n        getProductSortingFieldsByName(customField = null) {\n            return (\n                this.sortedProductSortingFields\n                    .filter((item) => {\n                        if (customField) {\n                            return /^customFields\\./.test(item.field) && item.field !== customField.field;\n                        }\n\n                        return /^customFields\\./.test(item.field);\n                    })\n                    .map((item) => item.name) || {}\n            );\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","index","criteria","a","b","field","response","currentField","fieldName","strippedFieldName","currentCustomField","technicalName","record","criteriaName","order","item","currentCriteria","customField","inlineSnippet","key"],"mappings":"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"}