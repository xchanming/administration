const i=`{% block sw_product_basic_form %} <div class="product-basic-form"> {% block sw_product_basic_form_title_field %} <sw-inherit-wrapper v-model:value="product.name" :has-parent="!!parentProduct.id" :inherited-value="getInheritValue('translated', 'name')" > <template #content="props"> <sw-text-field :map-inheritance="props" :value="props.currentValue" :disabled="props.isInherited || !allowEdit" :label="$tc('sw-product.basicForm.labelTitle')" :required="isTitleRequired" name="sw-field--product-name" :error="productNameError" :placeholder="placeholder(product, 'name', $tc('sw-product.basicForm.placeholderName'))" @update:value="props.updateCurrentValue" /> </template> </sw-inherit-wrapper> {% endblock %} <sw-container columns="2fr 1fr" gap="0px 30px" > {% block sw_product_basic_form_manufacturer_field %} <sw-inherit-wrapper v-model:value="product.manufacturerId" :has-parent="!!parentProduct.id" :inherited-value="parentProduct.manufacturerId" :label="$tc('sw-product.basicForm.labelManufacturer')" > <template #content="{ currentValue, updateCurrentValue, isInherited }"> <sw-entity-single-select id="manufacturerId" :key="isInherited" :value="currentValue" entity="product_manufacturer" :disabled="isInherited || !allowEdit" class="sw-select-product__select_manufacturer" :error="productManufacturerIdError" :placeholder="$tc('sw-product.basicForm.placeholderManufacturer')" show-clearable-button allow-entity-creation :entity-creation-label="$tc('sw-product.basicForm.labelManufacturerCreation')" @update:value="updateCurrentValue" /> </template> </sw-inherit-wrapper> {% endblock %} {% block sw_product_basic_form_id_field %} <sw-text-field v-model:value="product.productNumber" :error="productProductNumberError" :disabled="!allowEdit" :label="$tc('sw-product.basicForm.labelProductNumber')" :help-text="productNumberHelpText" /> {% endblock %} </sw-container> {% block sw_product_basic_form_description_field %} <sw-inherit-wrapper v-model:value="product.description" class="sw-product-basic-form__inheritance-wrapper-description" :has-parent="!!parentProduct.id" :inherited-value="getInheritValue('translated', 'description')" :label="$tc('sw-product.basicForm.labelDescription')" > <template #content="{ currentValue, updateCurrentValue, isInherited }"> <mt-text-editor :key="isInherited" :placeholder="placeholder(product, 'description', $tc('sw-product.basicForm.placeholderDescriptionLong'))" :error="productDescriptionError" :disabled="isInherited || !allowEdit" :value="currentValue" sanitize-input sanitize-field-name="product_translation.description" @update:value="updateCurrentValue" /> </template> </sw-inherit-wrapper> {% endblock %} <div class="product-basic-form__switches"> {% block sw_product_settings_form_mark_as_topseller_field %} <sw-inherit-wrapper v-show="showSettingsInformation" v-model:value="product.markAsTopseller" class="sw-product-basic-form__promotion-switch" :has-parent="!!parentProduct.id" :inherited-value="parentProduct.markAsTopseller" > <template #content="props"> <sw-switch-field :error="productMarkAsTopsellerError" :map-inheritance="props" :help-text="highlightHelpText" :label="$tc('sw-product.settingsForm.labelMarkAsTopseller')" :disabled="props.isInherited || !allowEdit" :value="props.currentValue" @update:value="props.updateCurrentValue" /> </template> </sw-inherit-wrapper> {% endblock %} <sw-extension-teaser-popover position-identifier="sw-product-generated-description-button" /> </div> </div> {% endblock %}`,{Criteria:a}=Shopware.Data,{Context:n,Mixin:o}=Shopware,{mapPropertyErrors:l}=Shopware.Component.getComponentHelper(),s={template:i,inject:["repositoryFactory"],mixins:[o.getByName("placeholder")],props:{allowEdit:{type:Boolean,required:!1,default:!0},showSettingsInformation:{type:Boolean,required:!1,default:!0}},data(){return{productNumberRangeId:null}},computed:{product(){return Shopware.Store.get("swProductDetail").product},parentProduct(){return Shopware.Store.get("swProductDetail").parentProduct},isLoading(){return Shopware.Store.get("swProductDetail").isLoading},...l("product",["name","description","productNumber","manufacturerId","active","markAsTopseller"]),numberRangeRepository(){return this.repositoryFactory.create("number_range")},isTitleRequired(){return Shopware.Store.get("context").isSystemDefaultLanguage},productNumberRangeLink(){return this.productNumberRangeId?{name:"sw.settings.number.range.detail",params:{id:this.productNumberRangeId}}:{name:"sw.settings.number.range.index"}},productNumberHelpText(){return this.$tc("sw-product.basicForm.productNumberHelpText.label",{link:`<sw-internal-link
                           :router-link=${JSON.stringify(this.productNumberRangeLink)}
                           :inline="true">
                           ${this.$tc("sw-product.basicForm.productNumberHelpText.linkText")}
                       </sw-internal-link>`},0)},highlightHelpText(){const e={name:"sw.theme.manager.index"},t={name:"sw.settings.snippet.detail",params:{key:"listing.boxLabelTopseller"}};return this.$tc("sw-product.basicForm.highlightHelpText.label",{themesLink:`<sw-internal-link
                                 :router-link=${JSON.stringify(e)}
                                 :inline="true">
                                 ${this.$tc("sw-product.basicForm.highlightHelpText.themeLinkText")}
                             </sw-internal-link>`,snippetLink:`<sw-internal-link
                                  :router-link=${JSON.stringify(t)}
                                  :inline="true">
                                  ${this.$tc("sw-product.basicForm.highlightHelpText.snippetLinkText")}
                              </sw-internal-link>`},0)},numberRangeCriteria(){const e=new a(1,25);return e.addFilter(a.equals("type.technicalName","product")),e.addFilter(a.equals("global",!0)),e}},created(){this.createdComponent()},methods:{createdComponent(){this.loadProductNumberRangeId()},updateIsTitleRequired(){this.isTitleRequired=Shopware.Context.api.languageId===Shopware.Context.api.systemLanguageId},getInheritValue(e,t){const r=this.parentProduct;return r[e]?r[e].hasOwnProperty(t)?r[e][t]:r[e]:null},loadProductNumberRangeId(){return this.numberRangeRepository.searchIds(this.numberRangeCriteria,n.api).then(e=>{this.productNumberRangeId=e.data[0]})}}};export{s as default};
