{"version":3,"file":"index-B7oxSTbk.js","sources":["../../../app/administration/src/module/sw-customer/component/sw-customer-card/sw-customer-card.html.twig","../../../app/administration/src/module/sw-customer/component/sw-customer-card/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_customer_card %}\n<sw-card\n    class=\"sw-customer-card\"\n    position-identifier=\"sw-customer\"\n    :title=\"title\"\n    :is-loading=\"isLoading\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_customer_card_header_right %}\n    <template #header-right>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_card_imitate_customer_modal %}\n        <sw-customer-imitate-customer-modal\n            v-if=\"showImitateCustomerModal\"\n            :customer=\"customer\"\n            @modal-close=\"onCloseImitateCustomerModal\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_card_action_customer_impersonation %}\n        <sw-button\n            v-tooltip=\"{\n                message: $tc(customer.guest ? 'sw-customer.card.tooltipImitateCustomerGuest' : 'sw-privileges.tooltip.warning'),\n                disabled: !customer.guest && acl.can('api_proxy_imitate-customer'),\n                showOnDisabledElements: true\n            }\"\n            :disabled=\"!canUseCustomerImitation\"\n            variant=\"action\"\n            @click=\"onImitateCustomer\"\n        >\n            <template v-if=\"hasSingleBoundSalesChannelUrl\">\n                {{ $tc('sw-customer.card.buttonImitateCustomer') }}\n                <sw-icon\n                    name=\"regular-external-link-s\"\n                    size=\"12px\"\n                />\n            </template>\n            <template v-else>\n                {{ $tc('sw-customer.card.buttonImitateCustomer') }}\n            </template>\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_customer_card_rows %}\n    <template #grid>\n        <sw-container rows=\"auto auto\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_customer_card_row_primary %}\n            <sw-card-section divider=\"bottom\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_customer_card_metadata_container %}\n                <sw-container\n                    columns=\"80px 1fr max-content\"\n                    gap=\"0px 30px\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_customer_card_avatar %}\n                    <sw-avatar\n                        size=\"80px\"\n                        :source-context=\"customer\"\n                        :name=\"customer.name\"\n                    />\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_customer_card_metadata %}\n                    <div class=\"sw-customer-card__metadata\">\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_customer_card_metadata_customer_name %}\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_custsomer_card_metadata_customer_name_label %}\n                        <template v-if=\"!editMode\">\n                            <div\n                                v-if=\"customer\"\n                                class=\"sw-customer-card__metadata-customer-name\"\n                            >\n                                {{ fullName }}\n                                <sw-label\n                                    v-if=\"customer.guest\"\n                                    appearance=\"pill\"\n                                    size=\"small\"\n                                    class=\"sw-customer-card__metadata-customer-guest-label\"\n                                >\n                                    {{ $tc('sw-customer.card.labelGuest') }}\n                                </sw-label>\n                            </div>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_customer_card_metadata_customer_name_editor %}\n                        <div v-else>\n                            <sw-container\n                                columns=\"1fr 1fr\"\n                                gap=\"10px\"\n                            >\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_customer_card_account_type_field %}\n                                <sw-single-select\n                                    v-model:value=\"customer.accountType\"\n                                    name=\"sw-field--customer-accountType\"\n                                    class=\"sw-customer-card__account-type-select\"\n                                    :label=\"$tc('sw-customer.customerType.labelAccountType')\"\n                                    :placeholder=\"$tc('sw-customer.customerType.placeholderAccountType')\"\n                                    :options=\"accountTypeOptions\"\n                                />\n                                {% endblock %}\n\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_customer_card_metadata_customer_name_editor_salutation %}\n                                <sw-entity-single-select\n                                    v-model:value=\"customer.salutationId\"\n                                    name=\"sw-field--customer-salutationId\"\n                                    class=\"sw-customer-card__salutation-select\"\n                                    entity=\"salutation\"\n                                    label-property=\"displayName\"\n                                    :label=\"$tc('sw-customer.card.labelSalutation')\"\n                                    :criteria=\"salutationCriteria\"\n                                />\n                                {% endblock %}\n\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_customer_card_metadata_customer_name_editor_title %}\n                                <sw-text-field\n                                    v-model:value=\"customer.title\"\n                                    name=\"sw-field--customer-title\"\n                                    :label=\"$tc('sw-customer.card.labelTitle')\"\n                                    :placeholder=\"$tc('sw-customer.card.placeholderTitle')\"\n                                />\n                                {% endblock %}\n                            </sw-container>\n\n                            <sw-container\n                                columns=\"1fr 1fr\"\n                                gap=\"10px\"\n                            >\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_customer_card_metadata_customer_name_editor_name %}\n                                <sw-text-field\n                                    v-model:value=\"customer.name\"\n                                    name=\"sw-field--customer-name\"\n                                    :label=\"$tc('sw-customer.card.labelName')\"\n                                    validation=\"required\"\n                                    required\n                                    :error=\"customerNameError\"\n                                    :placeholder=\"$tc('sw-customer.card.placeholderName')\"\n                                />\n                                {% endblock %}\n\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_customer_card_metadata_customer_name_editor_company %}\n                                <sw-text-field\n                                    v-model:value=\"customer.company\"\n                                    name=\"sw-field--customer-company\"\n                                    :required=\"isBusinessAccountType\"\n                                    :error=\"customerCompanyError\"\n                                    :label=\"$tc('sw-customer.card.labelCompany')\"\n                                    :placeholder=\"$tc('sw-customer.card.placeholderCompany')\"\n                                />\n                                {% endblock %}\n                            </sw-container>\n                            <sw-container\n                                columns=\"1fr 1fr\"\n                                gap=\"10px\"\n                            >\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_customer_base_form_phone_number_editor %}\n                                <sw-text-field\n                                    v-model:value=\"customer.phoneNumber\"\n                                    name=\"sw-field--customer-phoneNumber\"\n                                    :label=\"$tc('sw-customer.card.labelPhoneNumber')\"\n                                    :placeholder=\"$tc('sw-customer.card.placeholderPhoneNumber')\"\n                                    :error=\"customerPhoneNumberError\"\n                                />\n                            {% endblock %}\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_customer_card_vat_ids %}\n                                <sw-text-field\n                                    v-if=\"editMode && isBusinessAccountType\"\n                                    v-model:value=\"customer.vatIds[0]\"\n                                    name=\"vatId\"\n                                    :label=\"$tc('sw-customer.card.labelVatId')\"\n                                    :placeholder=\"$tc('sw-customer.card.placeholderVatId')\"\n                                    :error=\"customerVatIdsError\"\n                                />\n                            {% endblock %}\n                            </sw-container>\n                        </div>\n                        {% endblock %}\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_customer_card_metadata_customer_email %}\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_customer_card_metadata_customer_email_label %}\n                        <div\n                            v-if=\"customer.email && !editMode\"\n                            class=\"sw-customer-card__metadata-item \"\n                        >\n                            <a\n                                class=\"sw-customer-card-email-link\"\n                                :href=\"getMailTo(customer.email)\"\n                            >{{ emailIdnFilter(customer.email) }}</a>\n                        </div>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_customer_card_metadata_customer_email_editor %}\n                        <sw-email-field\n                            v-else\n                            v-model:value=\"customer.email\"\n                            name=\"sw-field--customer-email\"\n                            validation=\"required\"\n                            required\n                            :label=\"$tc('sw-customer.card.labelEmail')\"\n                            :placeholder=\"$tc('sw-customer.card.placeholderEmail')\"\n                            :error=\"customerEmailError\"\n                        />\n                        {% endblock %}\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_customer_card_password %}\n                        <sw-password-field\n                            v-if=\"editMode\"\n                            v-model:value=\"customer.passwordNew\"\n                            name=\"sw-field--customer-passwordNew\"\n                            autocomplete=\"new-password\"\n                            :disabled=\"customer.guest\"\n                            :label=\"$tc('sw-profile.index.labelNewPassword')\"\n                            :placeholder=\"$tc('sw-customer.card.placeholderNewPassword')\"\n                            :error=\"customerPasswordError\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_customer_card_password_confirm %}\n                        <sw-password-field\n                            v-if=\"editMode\"\n                            v-model:value=\"customer.passwordConfirm\"\n                            name=\"sw-field--customer-passwordConfirm\"\n                            autocomplete=\"new-password\"\n                            :disabled=\"customer.guest\"\n                            :label=\"$tc('sw-profile.index.labelNewPasswordConfirm')\"\n                            :placeholder=\"$tc('sw-customer.card.placeholderNewPasswordConfirm')\"\n                            :error=\"customerPasswordConfirmError\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_customer_card_metadata_customer_tag %}\n                        <sw-entity-tag-select\n                            v-model:entityCollection=\"customer.tags\"\n                            name=\"sw-field--customer-tags\"\n                            :label=\"editMode ? $tc('sw-customer.baseForm.labelTags') : ''\"\n                            class=\"sw-customer-card__tag-select\"\n                            :disabled=\"!editMode\"\n                            :size=\"editMode ? 'default' : 'medium'\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_customer_card_metadata_additional %}\n                        <slot name=\"metadata-additional\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_customer_card_slot_metadata_additional %}{% endblock %}\n                        </slot>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_customer_card_actions %}\n                        <div\n                            v-if=\"hasActionSlot\"\n                            class=\"sw-customer-card__actions\"\n                        >\n                            <slot name=\"actions\">\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_customer_card_slot_actions %}{% endblock %}\n                            </slot>\n                        </div>\n                        {% endblock %}\n                    </div>\n\n                    {% endblock %}\n                </sw-container>\n                {% endblock %}\n            </sw-card-section>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_customer_card_row_secondary %}\n            <sw-card-section\n                secondary\n                slim\n            >\n                <slot name=\"default\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_customer_card_slot_default %}{% endblock %}\n                </slot>\n            </sw-card-section>\n            {% endblock %}\n        </sw-container>\n    </template>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n","import template from './sw-customer-card.html.twig';\nimport './sw-customer-card.scss';\nimport errorConfig from '../../error-config.json';\nimport CUSTOMER from '../../constant/sw-customer.constant';\nimport ApiService from '../../../../core/service/api.service';\n\n/**\n * @package checkout\n */\n\nconst { Mixin, Defaults } = Cicada;\nconst { mapPropertyErrors } = Cicada.Component.getComponentHelper();\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'acl',\n        'contextStoreService',\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('salutation'),\n    ],\n\n    props: {\n        customer: {\n            type: Object,\n            required: true,\n        },\n        title: {\n            type: String,\n            required: true,\n        },\n        editMode: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            showImitateCustomerModal: false,\n        };\n    },\n\n    computed: {\n        hasActionSlot() {\n            return !!this.$slots.actions?.[0];\n        },\n\n        hasAdditionalDataSlot() {\n            return !!this.$slots['data-additional']?.[0];\n        },\n\n        hasSummarySlot() {\n            return !!this.$slots.summary?.[0];\n        },\n\n        moduleColor() {\n            if (!this.$route.meta.$module) {\n                return '';\n            }\n            return this.$route.meta.$module.color;\n        },\n\n        fullName() {\n            const name = {\n                name: this.salutation(this.customer),\n                company: this.customer.company,\n            };\n\n            return Object.values(name)\n                .filter((item) => item !== null)\n                .join(' - ')\n                .trim();\n        },\n\n        salutationCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(\n                Criteria.not('or', [\n                    Criteria.equals('id', Defaults.defaultSalutationId),\n                ]),\n            );\n\n            return criteria;\n        },\n\n        ...mapPropertyErrors('customer', [\n            ...errorConfig['sw.customer.detail.base'].customer,\n        ]),\n\n        accountTypeOptions() {\n            return [\n                {\n                    value: CUSTOMER.ACCOUNT_TYPE_PRIVATE,\n                    label: this.$tc('sw-customer.customerType.labelPrivate'),\n                },\n                {\n                    value: CUSTOMER.ACCOUNT_TYPE_BUSINESS,\n                    label: this.$tc('sw-customer.customerType.labelBusiness'),\n                },\n            ];\n        },\n\n        isBusinessAccountType() {\n            return this.customer?.accountType === CUSTOMER.ACCOUNT_TYPE_BUSINESS;\n        },\n\n        canUseCustomerImitation() {\n            if (this.customer.guest) {\n                return false;\n            }\n\n            if (this.customer.boundSalesChannel) {\n                if (this.customer.boundSalesChannel.typeId !== Defaults.storefrontSalesChannelTypeId) {\n                    return false;\n                }\n\n                if (!this.customer.boundSalesChannel.domains?.length) {\n                    return false;\n                }\n            }\n\n            return this.acl.can('api_proxy_imitate-customer');\n        },\n\n        hasSingleBoundSalesChannelUrl() {\n            return this.customer.boundSalesChannel?.domains?.length === 1;\n        },\n\n        currentUser() {\n            return Cicada.State.get('session').currentUser;\n        },\n\n        emailIdnFilter() {\n            return Cicada.Filter.getByName('decode-idn-email');\n        },\n    },\n\n    watch: {\n        'customer.accountType'(value) {\n            if (value === CUSTOMER.ACCOUNT_TYPE_BUSINESS || !this.customerCompanyError) {\n                return;\n            }\n\n            Cicada.State.dispatch('error/removeApiError', {\n                expression: `customer.${this.customer.id}.company`,\n            });\n        },\n    },\n\n    methods: {\n        getMailTo(mail) {\n            return `mailto:${mail}`;\n        },\n\n        async onImitateCustomer() {\n            if (this.hasSingleBoundSalesChannelUrl) {\n                this.contextStoreService\n                    .generateImitateCustomerToken(this.customer.id, this.customer.boundSalesChannel.id)\n                    .then((response) => {\n                        const handledResponse = ApiService.handleResponse(response);\n\n                        this.contextStoreService.redirectToSalesChannelUrl(\n                            this.customer.boundSalesChannel.domains.first().url,\n                            handledResponse.token,\n                            this.customer.id,\n                            this.currentUser?.id,\n                        );\n                    })\n                    .catch(() => {\n                        this.createNotificationError({\n                            message: this.$tc('sw-customer.detail.notificationImitateCustomerErrorMessage'),\n                        });\n                    });\n                return;\n            }\n\n            this.showImitateCustomerModal = true;\n        },\n\n        onCloseImitateCustomerModal() {\n            this.showImitateCustomerModal = false;\n        },\n    },\n};\n"],"names":["template","Mixin","Defaults","mapPropertyErrors","Criteria","index","_a","name","item","criteria","errorConfig","CUSTOMER","_b","value","mail","response","handledResponse","ApiService"],"mappings":"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"}