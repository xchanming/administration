const i=`{% block sw_settings_search_index %} <sw-page class="sw-settings-search"> {% block sw_settings_search_smart_bar_header %} <template #smart-bar-header> <h2> {% block sw_settings_search_smart_bar_header_title_text %} {{ $tc('sw-settings.index.title') }} <sw-icon name="regular-chevron-right-xs" small /> {{ $tc('sw-settings-search.general.mainMenuItemGeneral') }} {% endblock %} </h2> </template> {% endblock %} {% block sw_settings_search_language_switch %} <template #language-switch> <sw-language-switch @on-change="onChangeLanguage" /> </template> {% endblock %} {% block sw_settings_search_smart_bar_actions %} <template #smart-bar-actions> {% block sw_settings_search_smart_bar_actions_save %} <sw-button-process v-tooltip.bottom="tooltipSave" class="sw-settings-search__button-save" variant="primary" :disabled="!allowSave" :is-loading="isLoading" :process-success="isSaveSuccessful" @update:process-success="saveFinish" @click.prevent="onSaveSearchSettings" > {{ $tc('global.default.save') }} </sw-button-process> {% endblock %} </template> {% endblock %} {% block sw_settings_search_content %} <template #content> <sw-card-view> {% block sw_settings_search_tabs_header %} <sw-tabs position-identifier="sw-settings-search-header"> {% block sw_setting_search_tabs_general %} <sw-tabs-item v-bind="$props" class="sw-settings-search__general-tab" :route="{ name: 'sw.settings.search.index.general' }" @click="onTabChange" > {{ $tc('sw-settings-search.page.generalTab') }} </sw-tabs-item> {% endblock %} {% block sw_setting_search_tabs_live_search %} <sw-tabs-item v-bind="$props" class="sw-settings-search__live-search-tab" :route="{ name: 'sw.settings.search.index.liveSearch' }" > {{ $tc('sw-settings-search.page.liveSearchTab') }} </sw-tabs-item> {% endblock %} {% block sw_setting_search_tabs_after %}{% endblock %} </sw-tabs> {% endblock %} {% block sw_settings_search_tabs_content %} <template v-if="isLoading"> <sw-skeleton /> <sw-skeleton /> </template> {# v-show is used here as underlying components influence the loading state and v-if would destroy this behaviour #} <router-view v-show="!isLoading" v-slot="{ Component }" > <component :is="Component" :is-loading="isLoading" :product-search-configs="productSearchConfigs" :current-sales-channel-id="currentSalesChannelId" :search-terms="searchTerms" :search-results="searchResults" @edit-change="onEditChanged" @sales-channel-change="onSalesChannelChanged" @live-search-results-change="onLiveSearchResultsChanged" @excluded-search-terms-load="getProductSearchConfigs" /> </router-view> {% endblock %} </sw-card-view> {% block sw_settings_search_discard_model %} <sw-confirm-modal v-if="isDisplayingLeavePageWarning" class="sw_settings_search_leave_modal" type="yesno" :text="$tc('sw-settings-search.textLeaveConfirm')" @confirm="onConfirmLeave" @close="onCloseLeaveModal" @cancel="onCancelLeaveModal" /> {% endblock %} </template> {% endblock %} </sw-page> {% endblock %}`,{Mixin:n}=Cicada,{EntityCollection:r,Criteria:a}=Cicada.Data,o={template:i,compatConfig:Cicada.compatConfig,inject:["repositoryFactory","acl"],mixins:[n.getByName("notification")],shortcuts:{"SYSTEMKEY+S":{active(){return this.allowSave},method:"onSaveSearchSettings"},ESCAPE:"onCancel"},data:()=>({productSearchConfigs:{andLogic:!0,minSearchLength:2},isLoading:!1,currentSalesChannelId:null,searchTerms:"",searchResults:null,defaultConfig:null,isSaveSuccessful:!1,nextRoute:null,isDisplayingLeavePageWarning:!1,leaveConfirmation:!1,isEditing:!1}),computed:{productSearchRepository(){return this.repositoryFactory.create("product_search_config")},productSearchFieldRepository(){return this.repositoryFactory.create("product_search_config_field")},productSearchConfigsCriteria(){const e=new a(1,25);return e.addAssociation("configFields"),e.addFilter(a.equals("languageId",Cicada.Context.api.languageId)),e},productDefaultConfigsCriteria(){const e=new a(1,25);return e.addAssociation("configFields"),e.addFilter(a.equals("languageId",Cicada.Context.api.systemLanguageId)),e},allowSave(){return this.acl.can("product_search_config.editor")||this.acl.can("product_search_config.creator")},tooltipSave(){return this.allowSave?{message:`${this.$device.getSystemKey()} + S`,appearance:"light"}:{message:this.$tc("sw-privileges.tooltip.warning"),disabled:this.allowSave,showOnDisabledElements:!0}}},created(){this.createdComponent()},beforeRouteUpdate(e,t,s){this.unsavedDataLeaveHandler(e,t,s)},beforeRouteLeave(e,t,s){this.unsavedDataLeaveHandler(e,t,s)},methods:{createdComponent(){this.getDefaultSearchConfig(),this.getProductSearchConfigs()},getProductSearchConfigs(){this.isLoading=!0,this.productSearchRepository.search(this.productSearchConfigsCriteria).then(e=>{e.total?this.productSearchConfigs=e.first():this.onSaveDefaultSearchConfig()}).catch(e=>{this.createNotificationError({message:e.message})}).finally(()=>{this.isLoading=!1})},getDefaultSearchConfig(){this.productSearchRepository.search(this.productDefaultConfigsCriteria).then(e=>{this.defaultConfig=e.first()}).catch(e=>{this.createNotificationError({message:e.message})})},createDefaultSearchConfig(){const e=this.productSearchRepository.create();return e.andLogic=this.defaultConfig.andLogic,e.minSearchLength=this.defaultConfig.minSearchLength,e.excludedTerms=[],e.languageId=Cicada.Context.api.languageId,e},createConfigFields(){if(!this.defaultConfig||!this.defaultConfig.configFields.length)return null;const e=new r(this.productSearchFieldRepository.route,this.productSearchFieldRepository.entityName,Cicada.Context.api);return this.defaultConfig.configFields.forEach(t=>{const s=this.productSearchFieldRepository.create();s.field=t.field,s.ranking=t.ranking,s.searchable=t.searchable,s.tokenize=t.tokenize,s.customFieldId=null,s.searchConfigId=this.productSearchConfigs.id,e.add(s)}),e},onSaveDefaultSearchConfig(){this.productSearchConfigs=this.createDefaultSearchConfig(),this.productSearchConfigs.configFields=this.createConfigFields(),this.productSearchRepository.save(this.productSearchConfigs).then(()=>{this.getProductSearchConfigs()}).catch(()=>{this.createNotificationError({message:this.$tc("sw-settings-search.notification.saveError")})})},onChangeLanguage(){this.getDefaultSearchConfig(),this.getProductSearchConfigs()},onTabChange(){this.getProductSearchConfigs()},onSaveSearchSettings(){this.isLoading=!0,this.productSearchRepository.save(this.productSearchConfigs).then(()=>{this.createNotificationSuccess({message:this.$tc("sw-settings-search.notification.saveSuccess")}),this.getProductSearchConfigs(),this.isSaveSuccessful=!0}).catch(()=>{this.createNotificationError({message:this.$tc("sw-settings-search.notification.saveError")})}).finally(()=>{this.isLoading=!1,this.isEditing=!1})},saveFinish(){this.isSaveSuccessful=!1},fetchSalesChannels(){this.salesChannelRepository.search(new a(1,25)).then(e=>{this.salesChannels=e})},unsavedDataLeaveHandler(e,t,s){if(this.leaveConfirmation){this.leaveConfirmation=!1,s();return}this.isEditing?(this.isDisplayingLeavePageWarning=!0,this.nextRoute=e,s(!1)):s()},onSalesChannelChanged(e){this.currentSalesChannelId=e},onLiveSearchResultsChanged({searchTerms:e,searchResults:t}){this.searchTerms=e,this.searchResults=t},onEditChanged(e){this.isEditing=e},onConfirmLeave(){this.leaveConfirmation=!0,this.isDisplayingLeavePageWarning=!1,this.isEditing=!1,this.$nextTick(()=>{this.$router.push({name:this.nextRoute.name,params:this.nextRoute.params})})},onCloseLeaveModal(){this.isDisplayingLeavePageWarning=!1},onCancelLeaveModal(){this.isDisplayingLeavePageWarning=!1}}};export{o as default};
//# sourceMappingURL=index-CBDV6d6R.js.map
