{"version":3,"file":"index-BsLs1F2X.js","sources":["../../../app/administration/src/app/asyncComponent/media/sw-media-preview-v2/sw-media-preview-v2.html.twig","../../../app/administration/src/app/asyncComponent/media/sw-media-preview-v2/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_media_preview_v2 %}\n<div\n    v-tooltip.bottom=\"{ message: mediaName, disabled: hideTooltip }\"\n    class=\"sw-media-preview-v2\"\n    :class=\"mediaPreviewClasses\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_preview_v2_no_media %}\n    <template v-if=\"!source\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_preview_v2_no_media_icon %}\n        <sw-icon\n            name=\"regular-image\"\n            size=\"16px\"\n        />\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_preview_v2_file_types %}\n    <template v-else>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_preview_v2_file_type_check %}\n        <template v-if=\"mimeTypeGroup === 'image'\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_preview_v2_file_type_image %}\n            <!-- eslint-disable-next-line vuejs-accessibility/click-events-have-key-events, vuejs-accessibility/no-static-element-interactions -->\n            <img\n                v-if=\"!imagePreviewFailed\"\n                class=\"sw-media-preview-v2__item\"\n                :class=\"transparencyClass\"\n                :src=\"previewUrl\"\n                :alt=\"alt\"\n                :srcset=\"sourceSet\"\n                :sizes=\"`${width}px`\"\n                :draggable=\"false\"\n                @click=\"$emit('click')\"\n                @error=\"showEvent\"\n            >\n            <img\n                v-else\n                class=\"sw-media-preview-v2__item sw-media-preview-v2__placeholder\"\n                :src=\"assetFilter(placeholderIconPath)\"\n                :alt=\"mimeType\"\n            >\n            <sw-icon\n                v-if=\"mediaIsPrivate && lockIsVisible\"\n                class=\"sw-media-preview-v2__locked-icon sw-icon--small\"\n                name=\"regular-lock\"\n            />\n            {% endblock %}\n        </template>\n\n        <template v-else-if=\"isPlayable && mimeTypeGroup === 'video'\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_preview_v2_file_type_video %}\n            <img\n                v-if=\"mediaIsPrivate\"\n                class=\"sw-media-preview-v2__item sw-media-preview-v2__placeholder\"\n                :src=\"assetFilter(placeholderIconPath)\"\n                :alt=\"mimeType\"\n            >\n            <video\n                :controls=\"showControls\"\n                :autoplay=\"autoplay\"\n                controlsList=\"nodownload\"\n                class=\"sw-media-preview-v2__item\"\n            >\n                <source\n                    :src=\"previewUrl\"\n                    :type=\"mimeType\"\n                >\n                {{ $tc('global.sw-media-preview-v2.fallbackVideoTagSupport') }}\n            </video>\n            <button\n                v-if=\"!showControls && !mediaIsPrivate\"\n                class=\"sw-media-preview-v2__play-button\"\n                @click=\"onPlayClick\"\n            >\n                <sw-icon\n                    class=\"sw-media-preview-v2__play-icon\"\n                    name=\"regular-play\"\n                />\n            </button>\n            <sw-icon\n                v-if=\"mediaIsPrivate && lockIsVisible\"\n                class=\"sw-media-preview-v2__locked-icon sw-icon--small\"\n                name=\"regular-lock\"\n            />\n            {% endblock %}\n        </template>\n\n        <template v-else-if=\"isPlayable && mimeTypeGroup === 'audio'\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_preview_v2_file_type_audio %}\n            <img\n                class=\"sw-media-preview-v2__item sw-media-preview-v2__placeholder\"\n                :src=\"assetFilter(placeholderIconPath)\"\n                :alt=\"mimeType\"\n            >\n            <!-- eslint-disable-next-line vuejs-accessibility/media-has-caption -->\n            <audio\n                :controls=\"showControls\"\n                :autoplay=\"autoplay\"\n                controlsList=\"nodownload\"\n                class=\"sw-media-preview-v2__item sw-media-preview-v2__item--audio\"\n            >\n                <source\n                    :src=\"previewUrl\"\n                    :type=\"mimeType\"\n                >\n                {{ $tc('global.sw-media-preview-v2.fallbackAudioTagSupport') }}\n            </audio>\n            <button\n                v-if=\"!showControls\"\n                class=\"sw-media-preview-v2__play-button\"\n                @click=\"onPlayClick\"\n            >\n                <sw-icon\n                    class=\"sw-media-preview-v2__play-icon\"\n                    name=\"regular-play\"\n                />\n            </button>\n            <sw-icon\n                v-if=\"mediaIsPrivate && lockIsVisible\"\n                class=\"sw-media-preview-v2__locked-icon sw-icon--small\"\n                name=\"regular-lock\"\n            />\n            {% endblock %}\n        </template>\n\n        <template v-else-if=\"(isUrl || isRelativePath) && !urlPreviewFailed\">\n            <img\n                :src=\"previewUrl\"\n                class=\"sw-media-preview-v2__item\"\n                :draggable=\"false\"\n                :alt=\"mimeType\"\n                @error=\"removeUrlPreview\"\n            >\n        </template>\n\n        <template v-else>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_preview_v2_file_type_placeholder %}\n            <img\n                class=\"sw-media-preview-v2__item sw-media-preview-v2__placeholder\"\n                :src=\"assetFilter(placeholderIconPath)\"\n                :alt=\"mimeType\"\n            >\n            {% endblock %}\n            <sw-icon\n                v-if=\"mediaIsPrivate && lockIsVisible\"\n                class=\"sw-media-preview-v2__locked-icon sw-icon--small\"\n                name=\"regular-lock\"\n            />\n        </template>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-media-preview-v2.html.twig';\nimport './sw-media-preview-v2.scss';\n\nconst { Context, Filter } = Cicada;\nconst { fileReader } = Cicada.Utils;\n\n/**\n * @status ready\n * @description The <u>sw-media-preview-v2</u> component is used to show a preview of media objects.\n * @package content\n * @example-type code-only\n * @component-example\n * <sw-media-preview-v2\n *      :source=\"item.id\"\n *      :show-controls=\"true\"\n *      :autoplay=\"false\"\n *      :use-thumbnails=\"false\">\n * </sw-media-preview-v2>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'feature',\n    ],\n\n    emits: [\n        'click',\n        'media-preview-play',\n    ],\n\n    playableVideoFormats: [\n        'video/mp4',\n        'video/ogg',\n        'video/webm',\n    ],\n\n    playableAudioFormats: [\n        'audio/mp3',\n        'audio/mpeg',\n        'audio/ogg',\n        'audio/wav',\n    ],\n\n    placeholderThumbnailsBasePath: '/administration/static/img/media-preview/',\n\n    placeHolderThumbnails: {\n        application: {\n            'adobe.illustrator': 'icons-multicolor-file-thumbnail-ai',\n            illustrator: 'icons-multicolor-file-thumbnail-ai',\n            postscript: 'icons-multicolor-file-thumbnail-ai',\n            msword: 'icons-multicolor-file-thumbnail-doc',\n            'vnd.openxmlformats-officedocument.wordprocessingml.document': 'icons-multicolor-file-thumbnail-doc',\n            pdf: 'icons-multicolor-file-thumbnail-pdf',\n            'vnd.ms-excel': 'icons-multicolor-file-thumbnail-xls',\n            'vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'icons-multicolor-file-thumbnail-xls',\n            'vnd.ms-powerpoint': 'icons-multicolor-file-thumbnail-ppt',\n            'vnd.openxmlformats-officedocument.presentationml.presentation': 'icons-multicolor-file-thumbnail-ppt',\n            glb: 'icons-multicolor-file-thumbnail-glb',\n            'octet-stream': 'icons-multicolor-file-thumbnail-glb',\n        },\n        video: {\n            'x-msvideo': 'icons-multicolor-file-thumbnail-avi',\n            quicktime: 'icons-multicolor-file-thumbnail-mov',\n            mp4: 'icons-multicolor-file-thumbnail-mp4',\n        },\n        text: {\n            csv: 'icons-multicolor-file-thumbnail-csv',\n            plain: 'icons-multicolor-file-thumbnail-csv',\n        },\n        image: {\n            gif: 'icons-multicolor-file-thumbnail-gif',\n            jpeg: 'icons-multicolor-file-thumbnail-jpg',\n            'svg+xml': 'icons-multicolor-file-thumbnail-svg',\n        },\n        model: {\n            'gltf-binary': 'icons-multicolor-file-thumbnail-glb',\n        },\n    },\n\n    props: {\n        // eslint-disable-next-line vue/require-prop-types\n        source: {\n            required: true,\n        },\n\n        showControls: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        autoplay: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        transparency: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        useThumbnails: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        hideTooltip: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n\n        mediaIsPrivate: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            trueSource: null,\n            width: 0,\n            dataUrl: '',\n            urlPreviewFailed: false,\n            imagePreviewFailed: false,\n        };\n    },\n\n    computed: {\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        mediaPreviewClasses() {\n            return {\n                'is--icon': this.isIcon,\n                'is--no-media': !this.source,\n            };\n        },\n\n        transparencyClass() {\n            return {\n                'shows--transparency': this.canBeTransparent,\n            };\n        },\n\n        canBeTransparent() {\n            if (!this.transparency) {\n                return false;\n            }\n\n            return this.isIcon || this.mimeTypeGroup === 'image';\n        },\n\n        mimeType() {\n            if (!this.trueSource) {\n                return '';\n            }\n\n            if (this.trueSource instanceof File) {\n                return this.trueSource.type;\n            }\n\n            if (this.trueSource instanceof URL) {\n                return 'application/octet-stream';\n            }\n\n            return this.trueSource.mimeType;\n        },\n\n        mimeTypeGroup() {\n            if (!this.mimeType) {\n                return '';\n            }\n\n            return this.mimeType.split('/')[0];\n        },\n\n        isPlayable() {\n            if (this.$options.playableVideoFormats.includes(this.mimeType)) {\n                return true;\n            }\n\n            return this.$options.playableAudioFormats.includes(this.mimeType);\n        },\n\n        isIcon() {\n            return /.*svg.*/.test(this.mimeType);\n        },\n\n        placeholderIcon() {\n            if (!this.mimeType) {\n                return 'icons-multicolor-file-thumbnail-broken';\n            }\n\n            const mediaTypeIconGroup = this.$options.placeHolderThumbnails[this.mimeTypeGroup];\n            if (mediaTypeIconGroup) {\n                const mediaTypeIcon = mediaTypeIconGroup[`${this.mimeType.split('/')[1]}`];\n                if (mediaTypeIcon) {\n                    return mediaTypeIcon;\n                }\n            }\n\n            return 'icons-multicolor-file-thumbnail-normal';\n        },\n\n        placeholderIconPath() {\n            return `${this.$options.placeholderThumbnailsBasePath}${this.placeholderIcon}.svg`;\n        },\n\n        lockIsVisible() {\n            return this.width > 40;\n        },\n\n        previewUrl() {\n            if (this.isFile) {\n                this.getDataUrlFromFile();\n                return this.dataUrl;\n            }\n\n            if (this.isUrl) {\n                return this.trueSource.href;\n            }\n\n            if (this.isRelativePath) {\n                return this.trueSource;\n            }\n\n            return this.trueSource.url;\n        },\n\n        isUrl() {\n            return this.trueSource instanceof URL;\n        },\n\n        isFile() {\n            return this.trueSource instanceof File;\n        },\n\n        isRelativePath() {\n            return typeof this.trueSource === 'string';\n        },\n\n        alt() {\n            if (this.trueSource.alt) {\n                return this.trueSource.alt;\n            }\n            return this.trueSource.fileName;\n        },\n\n        mediaName() {\n            if (!this.trueSource) {\n                return this.$tc('global.sw-media-preview-v2.textNoMedia');\n            }\n\n            return this.mediaNameFilter(this.trueSource, this.trueSource.fileName);\n        },\n\n        mediaNameFilter() {\n            return Filter.getByName('mediaName');\n        },\n\n        assetFilter() {\n            return Filter.getByName('asset');\n        },\n\n        sourceSet() {\n            if (this.isFile || this.isUrl) {\n                return '';\n            }\n\n            if (this.trueSource.thumbnails.length === 0) {\n                return '';\n            }\n\n            const sources = [];\n            this.trueSource.thumbnails.forEach((thumbnail) => {\n                const url = thumbnail.url;\n\n                const encoded = encodeURI(url);\n                sources.push(`${encoded} ${thumbnail.width}w`);\n            });\n\n            return sources.join(', ');\n        },\n    },\n\n    watch: {\n        source() {\n            this.urlPreviewFailed = false;\n            this.imagePreviewFailed = false;\n            this.fetchSourceIfNecessary();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.fetchSourceIfNecessary();\n        },\n\n        mountedComponent() {\n            this.width = this.$el.offsetWidth;\n        },\n\n        async fetchSourceIfNecessary() {\n            if (!this.source) {\n                return;\n            }\n\n            if (typeof this.source !== 'string') {\n                this.trueSource = this.source[0] ?? this.source;\n\n                return;\n            }\n\n            try {\n                this.trueSource = await this.mediaRepository.get(this.source, Context.api);\n            } catch {\n                this.trueSource = this.source;\n            }\n        },\n\n        onPlayClick(originalDomEvent) {\n            if (!(originalDomEvent.shiftKey || originalDomEvent.ctrlKey)) {\n                originalDomEvent.stopPropagation();\n                this.$emit('media-preview-play', {\n                    originalDomEvent,\n                    item: this.trueSource,\n                });\n            }\n        },\n\n        async getDataUrlFromFile() {\n            if (this.mimeTypeGroup !== 'image') {\n                return;\n            }\n\n            this.dataUrl = await fileReader.readAsDataURL(this.trueSource);\n        },\n\n        removeUrlPreview() {\n            this.urlPreviewFailed = true;\n        },\n\n        showEvent() {\n            if (!this.isFile) {\n                this.imagePreviewFailed = true;\n            }\n        },\n    },\n};\n"],"names":["template","Context","Filter","fileReader","index","mediaTypeIconGroup","mediaTypeIcon","sources","thumbnail","url","encoded","originalDomEvent"],"mappings":"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"}