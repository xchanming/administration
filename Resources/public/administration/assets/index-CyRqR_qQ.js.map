{"version":3,"file":"index-CyRqR_qQ.js","sources":["../../../app/administration/src/module/sw-flow/view/listing/sw-flow-list-flow-templates/sw-flow-list-flow-templates.html.twig","../../../app/administration/src/module/sw-flow/view/listing/sw-flow-list-flow-templates/index.ts"],"sourcesContent":["<sw-card\n    class=\"sw-flow-list-flow-templates-card\"\n    position-identifier=\"sw-flow-list-flow-templates-card\"\n>\n    <div class=\"sw-flow-list-my-templates\">\n        <div class=\"sw-flow-list-my-templates__content\">\n            <sw-entity-listing\n                v-if=\"total\"\n                class=\"sw-flow-list-my-templates__grid\"\n                :show-settings=\"false\"\n                :allow-column-edit=\"false\"\n                :allow-view=\"false\"\n                :allow-edit=\"false\"\n                :allow-delete=\"false\"\n                :allow-bulk-edit=\"false\"\n                :columns=\"flowTemplateColumns\"\n                :sort-by=\"sortBy\"\n                :sort-direction=\"sortDirection\"\n                :repository=\"flowTemplateRepository\"\n                :items=\"flowTemplates\"\n                :is-loading=\"isLoading\"\n                :full-page=\"false\"\n                :show-selection=\"false\"\n                :show-actions=\"false\"\n                :plain-appearance=\"true\"\n                @column-sort=\"onSortColumn\"\n                @page-change=\"onPageChange\"\n            >\n                <template #column-name=\"{ item }\">\n                    <a\n                        class=\"sw-flow-list-my-flows__content__update-flow-template-link\"\n                        role=\"link\"\n                        tabindex=\"0\"\n                        @click=\"onEditFlow(item)\"\n                        @keydown.enter=\"onEditFlow(item)\"\n                    >\n                        {{ item.name }}\n                    </a>\n                </template>\n\n                <template #column-createFlow=\"{ item }\">\n                    <!-- eslint-disable-next-line vuejs-accessibility/click-events-have-key-events -->\n                    <sw-internal-link\n                        :router-link=\"{ name: 'sw.flow.create', params: { flowTemplateId: item.id }}\"\n                        :disabled=\"!acl.can('flow.creator')\"\n                        class=\"sw-flow-list-my-flows__content__create-flow-link\"\n                    >\n                        {{ $tc('sw-flow.template.create') }}\n                    </sw-internal-link>\n                </template>\n            </sw-entity-listing>\n\n            <sw-empty-state\n                v-else\n                class=\"sw-flow-list-my_templates__empty-state\"\n                :title=\"$tc('sw-flow.list.emptyStateTitle')\"\n                :subline=\"$tc('sw-flow.list.emptyStateSubTitle')\"\n            >\n                <template #icon>\n                    <img\n                        :alt=\"$tc('sw-flow.list.emptyStateTitle')\"\n                        :src=\"assetFilter('/administration/static/img/empty-states/settings-empty-state.svg')\"\n                    >\n                </template>\n            </sw-empty-state>\n        </div>\n    </div>\n</sw-card>\n","import type EntityCollection from '@cicada-ag/meteor-admin-sdk/es/_internals/data/EntityCollection';\nimport type { Entity } from '@cicada-ag/meteor-admin-sdk/es/_internals/data/Entity';\nimport type Repository from '../../../../../core/data/repository.data';\nimport type CriteriaType from '../../../../../core/data/criteria.data';\nimport template from './sw-flow-list-flow-templates.html.twig';\nimport './sw-flow-list-flow-templates.scss';\n\ninterface GridColumn {\n    property: string;\n    dataIndex?: string;\n    label: string;\n    allowResize?: boolean;\n    sortable?: boolean;\n    align: string;\n}\n\nconst {\n    Mixin,\n    Data: { Criteria },\n} = Cicada;\n\n/**\n * @private\n * @package services-settings\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default Cicada.Component.wrapComponentConfig({\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'acl',\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        searchTerm: {\n            type: String,\n            required: false,\n            default: '',\n        },\n    },\n\n    data(): {\n        sortBy: string;\n        sortDirection: string;\n        total: number;\n        isLoading: boolean;\n        flowTemplates: EntityCollection<'flow_template'> | [];\n    } {\n        return {\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            total: 0,\n            isLoading: false,\n            flowTemplates: [],\n        };\n    },\n\n    metaInfo() {\n        return {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        flowTemplateRepository(): Repository<'flow_template'> {\n            return this.repositoryFactory.create('flow_template');\n        },\n\n        flowTemplateCriteria(): CriteriaType {\n            const criteria = new Criteria(1, 25);\n\n            if (this.searchTerm) {\n                criteria.setTerm(this.searchTerm);\n            }\n\n            criteria\n                // @ts-expect-error - Mixin methods are not recognized\n                .addSorting(Criteria.sort(this.sortBy, this.sortDirection))\n                .addSorting(Criteria.sort('updatedAt', 'DESC'));\n\n            return criteria;\n        },\n\n        flowTemplateColumns(): GridColumn[] {\n            return [\n                {\n                    property: 'name',\n                    dataIndex: 'name',\n                    label: this.$tc('sw-flow.list.labelColumnName'),\n                    allowResize: false,\n                    align: 'left',\n                },\n                {\n                    property: 'config.description',\n                    label: this.$tc('sw-flow.list.labelColumnDescription'),\n                    allowResize: false,\n                    sortable: false,\n                    align: 'left',\n                },\n                {\n                    property: 'createFlow',\n                    label: '',\n                    allowResize: false,\n                    sortable: false,\n                    align: 'right',\n                },\n            ];\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        searchTerm: {\n            immediate: true,\n            handler(value: string): void {\n                this.onSearch(value);\n            },\n        },\n    },\n\n    created(): void {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        this.createComponent();\n    },\n\n    methods: {\n        createComponent(): void {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            this.getList();\n        },\n\n        getList(): void {\n            this.isLoading = true;\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            void this.flowTemplateRepository\n                .search(this.flowTemplateCriteria)\n                .then((data: EntityCollection<'flow_template'>) => {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                    this.total = data.total as number;\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    this.flowTemplates = data;\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        onEditFlow(item: Entity<'flow_template'>): void {\n            if (!item?.id) {\n                return;\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this.$router.push({\n                name: 'sw.flow.detail',\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params: { id: item.id },\n                query: { type: 'template' },\n            });\n        },\n    },\n});\n"],"names":["template","Mixin","Criteria","index","criteria","value","data","item"],"mappings":"AAAA,MAAeA,EAAA,2mDCgBT,CACF,MAAAC,EACA,KAAM,CAAE,SAAAC,CAAS,CACrB,EAAI,OAOJC,EAAe,OAAO,UAAU,oBAAoB,CAChD,SAAAH,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,MACA,mBACJ,EAEA,OAAQ,CACJC,EAAM,UAAU,SAAS,CAC7B,EAEA,MAAO,CACH,WAAY,CACR,KAAM,OACN,SAAU,GACV,QAAS,EACb,CACJ,EAEA,MAME,CACS,MAAA,CACH,OAAQ,YACR,cAAe,OACf,MAAO,EACP,UAAW,GACX,cAAe,CAAC,CAAA,CAExB,EAEA,UAAW,CACA,MAAA,CAEH,MAAO,KAAK,aAAa,CAAA,CAEjC,EAEA,SAAU,CACN,wBAAsD,CAC3C,OAAA,KAAK,kBAAkB,OAAO,eAAe,CACxD,EAEA,sBAAqC,CACjC,MAAMG,EAAW,IAAIF,EAAS,EAAG,EAAE,EAEnC,OAAI,KAAK,YACIE,EAAA,QAAQ,KAAK,UAAU,EAGpCA,EAEK,WAAWF,EAAS,KAAK,KAAK,OAAQ,KAAK,aAAa,CAAC,EACzD,WAAWA,EAAS,KAAK,YAAa,MAAM,CAAC,EAE3CE,CACX,EAEA,qBAAoC,CACzB,MAAA,CACH,CACI,SAAU,OACV,UAAW,OACX,MAAO,KAAK,IAAI,8BAA8B,EAC9C,YAAa,GACb,MAAO,MACX,EACA,CACI,SAAU,qBACV,MAAO,KAAK,IAAI,qCAAqC,EACrD,YAAa,GACb,SAAU,GACV,MAAO,MACX,EACA,CACI,SAAU,aACV,MAAO,GACP,YAAa,GACb,SAAU,GACV,MAAO,OACX,CAAA,CAER,EAEA,aAAc,CACH,OAAA,OAAO,OAAO,UAAU,OAAO,CAC1C,CACJ,EAEA,MAAO,CACH,WAAY,CACR,UAAW,GACX,QAAQC,EAAqB,CACzB,KAAK,SAASA,CAAK,CACvB,CACJ,CACJ,EAEA,SAAgB,CAEZ,KAAK,gBAAgB,CACzB,EAEA,QAAS,CACL,iBAAwB,CAEpB,KAAK,QAAQ,CACjB,EAEA,SAAgB,CACZ,KAAK,UAAY,GAGZ,KAAK,uBACL,OAAO,KAAK,oBAAoB,EAChC,KAAMC,GAA4C,CAE/C,KAAK,MAAQA,EAAK,MAElB,KAAK,cAAgBA,CAAA,CACxB,EACA,QAAQ,IAAM,CACX,KAAK,UAAY,EAAA,CACpB,CACT,EAEA,WAAWC,EAAqC,CACvCA,GAAA,MAAAA,EAAM,IAKX,KAAK,QAAQ,KAAK,CACd,KAAM,iBAEN,OAAQ,CAAE,GAAIA,EAAK,EAAG,EACtB,MAAO,CAAE,KAAM,UAAW,CAAA,CAC7B,CACL,CACJ,CACJ,CAAC"}