{"version":3,"file":"index-BpkFTyyC.js","sources":["../../../app/administration/src/app/component/base/sw-error-summary/sw-error-summary.html.twig","../../../app/administration/src/app/component/base/sw-error-summary/index.ts"],"sourcesContent":["<sw-alert\n    v-if=\"errorCount > 0\"\n    class=\"sw-error-summary\"\n    variant=\"error\"\n    :title=\"$tc('sw-error-summary.title', errorCount)\"\n    :show-icon=\"true\"\n>\n    <li\n        v-for=\"(entry, index) in errorEntries\"\n        :key=\"index\"\n    >\n        <span class=\"sw-error-summary__quantity\">{{ entry.count }}x</span> \"{{ entry.message }}\"\n    </li>\n</sw-alert>\n","/**\n * @package admin\n */\n\nimport template from './sw-error-summary.html.twig';\nimport './sw-error-summary.scss';\n\nconst { Component } = Cicada;\nconst { hasOwnProperty } = Cicada.Utils.object;\n\ntype error = {\n    _code: string;\n    _detail: string;\n    selfLink: string;\n};\n\n/**\n * @private\n */\nComponent.register('sw-error-summary', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    computed: {\n        errors(): { [key: string]: number } {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            const allErrors = (Cicada.State.getters['error/getAllApiErrors']() || []) as Array<unknown>;\n\n            // Helper function to recursively get all error objects\n            const extractErrorObjects = (errors: Array<unknown>) => {\n                return errors.reduce((acc: Array<unknown>, error: unknown) => {\n                    if (error === null || typeof error !== 'object') {\n                        return acc;\n                    }\n\n                    if (\n                        error.hasOwnProperty('selfLink') &&\n                        error.hasOwnProperty('_code') &&\n                        error.hasOwnProperty('_detail')\n                    ) {\n                        acc.push(error);\n\n                        return acc;\n                    }\n\n                    acc.push(...extractErrorObjects(Object.values(error)));\n\n                    return acc;\n                }, []);\n            };\n\n            // Retrieve all error objects and remap them to objects just containing a message\n            const errorObjects = (extractErrorObjects(allErrors) as Array<error>).map((error): { message: string } => {\n                let message = error._detail;\n\n                if (this.$te(`global.error-codes.${error._code}`)) {\n                    message = this.$tc(`global.error-codes.${error._code}`);\n                }\n\n                return {\n                    message,\n                };\n            });\n\n            // Count the number of errors for each message\n            return errorObjects.reduce((acc: { [key: string]: number }, error: { message: string }) => {\n                if (!hasOwnProperty(acc, error.message)) {\n                    acc[error.message] = 1;\n                } else {\n                    acc[error.message] += 1;\n                }\n\n                return acc;\n            }, {});\n        },\n\n        errorEntries(): Array<{ message: string; count: number }> {\n            return Object.entries(this.errors).map(\n                ([\n                    message,\n                    count,\n                ]) => ({\n                    message,\n                    count,\n                }),\n            );\n        },\n\n        errorCount(): number {\n            return Object.values(this.errors).reduce((accumulator, value) => {\n                return accumulator + value;\n            }, 0);\n        },\n    },\n});\n"],"names":["template","Component","hasOwnProperty","allErrors","extractErrorObjects","errors","acc","error","message","count","accumulator","value"],"mappings":"AAAA,MAAeA,EAAA,uTCOT,CAAE,UAAAC,CAAc,EAAA,OAChB,CAAE,eAAAC,CAAmB,EAAA,OAAO,MAAM,OAWxCD,EAAU,SAAS,mBAAoB,CACnC,SAAAD,EAEA,aAAc,OAAO,aAErB,SAAU,CACN,QAAoC,CAEhC,MAAMG,EAAa,OAAO,MAAM,QAAQ,uBAAuB,KAAO,GAGhEC,EAAuBC,GAClBA,EAAO,OAAO,CAACC,EAAqBC,IACnCA,IAAU,MAAQ,OAAOA,GAAU,SAC5BD,EAIPC,EAAM,eAAe,UAAU,GAC/BA,EAAM,eAAe,OAAO,GAC5BA,EAAM,eAAe,SAAS,GAE9BD,EAAI,KAAKC,CAAK,EAEPD,IAGXA,EAAI,KAAK,GAAGF,EAAoB,OAAO,OAAOG,CAAK,CAAC,CAAC,EAE9CD,GACR,CAAE,CAAA,EAiBT,OAbsBF,EAAoBD,CAAS,EAAmB,IAAKI,GAA+B,CACtG,IAAIC,EAAUD,EAAM,QAEpB,OAAI,KAAK,IAAI,sBAAsBA,EAAM,KAAK,EAAE,IAC5CC,EAAU,KAAK,IAAI,sBAAsBD,EAAM,KAAK,EAAE,GAGnD,CACH,QAAAC,CAAA,CACJ,CACH,EAGmB,OAAO,CAACF,EAAgCC,KACnDL,EAAeI,EAAKC,EAAM,OAAO,EAG9BD,EAAAC,EAAM,OAAO,GAAK,EAFlBD,EAAAC,EAAM,OAAO,EAAI,EAKlBD,GACR,CAAE,CAAA,CACT,EAEA,cAA0D,CACtD,OAAO,OAAO,QAAQ,KAAK,MAAM,EAAE,IAC/B,CAAC,CACGE,EACAC,CAAA,KACG,CACH,QAAAD,EACA,MAAAC,CAAA,EACJ,CAER,EAEA,YAAqB,CACV,OAAA,OAAO,OAAO,KAAK,MAAM,EAAE,OAAO,CAACC,EAAaC,IAC5CD,EAAcC,EACtB,CAAC,CACR,CACJ,CACJ,CAAC"}