{"version":3,"file":"index-Bu_EkwXz.js","sources":["../../../app/administration/src/app/component/structure/sw-search-bar/sw-search-bar.html.twig","../../../app/administration/src/app/component/structure/sw-search-bar/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_search_bar %}\n<div class=\"sw-search-bar\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_search_bar_container %}\n    <div class=\"sw-search-bar__container\">\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_search_bar_mobile_controls %}\n        <div\n            v-if=\"!isSearchBarShown\"\n            class=\"sw-search-bar__mobile-controls\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_button_off_canvas_toggle %}\n            <button\n                class=\"sw-search-bar__button\"\n                @click=\"toggleOffCanvas\"\n            >\n                <sw-icon\n                    v-if=\"isOffCanvasShown\"\n                    name=\"regular-times\"\n                />\n                <sw-icon\n                    v-else\n                    name=\"regular-bars-s\"\n                />\n            </button>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_version_display %}\n            <sw-version />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_button_search %}\n            <button\n                class=\"sw-search-bar__button\"\n                @click=\"showSearchBar\"\n            >\n                <sw-icon name=\"regular-search\" />\n            </button>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_search_bar_field %}\n        <div\n            v-if=\"isSearchBarShown\"\n            class=\"sw-search-bar__field\"\n            :class=\"searchBarFieldClasses\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_type %}\n            <span\n                class=\"sw-search-bar__type--v2\"\n                :style=\"{ 'background-color': getEntityIconColor(currentSearchType) }\"\n                role=\"button\"\n                tabindex=\"0\"\n                @click=\"onOpenModuleFiltersDropDown\"\n                @keydown.enter=\"onOpenModuleFiltersDropDown\"\n            >\n                {{ getLabelSearchType() }}\n                <sw-icon\n                    name=\"regular-chevron-down-xxs\"\n                />\n            </span>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_input %}\n            <slot name=\"search-input\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_search_bar_slot_input %}\n                <input\n                    ref=\"searchInput\"\n                    v-model=\"searchTerm\"\n                    class=\"sw-search-bar__input\"\n                    :placeholder=\"placeholderSearchInput\"\n                    :aria-label=\"placeholderSearchInput\"\n                    role=\"searchbox\"\n                    @input=\"onSearchTermChange\"\n                    @focus=\"onFocusInput\"\n                    @blur=\"onBlur\"\n                    @keydown.delete=\"resetSearchType\"\n                    @keyup.esc=\"clearSearchTerm\"\n                    @keyup.enter.prevent=\"onKeyUpEnter\"\n                    @keydown.up.prevent=\"navigateUpResults\"\n                    @keydown.down.prevent=\"navigateDownResults\"\n                >\n                {% endblock %}\n            </slot>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_icon %}\n            <button\n                class=\"sw-search-bar__field-icon sw-search-bar__field-close\"\n                @click=\"hideSearchBar\"\n            >\n                <sw-icon\n                    name=\"regular-times-s\"\n                    small\n                />\n            </button>\n\n            <span class=\"sw-search-bar__field-icon sw-search-bar__field-search-icon\">\n                <sw-icon\n                    name=\"regular-search-s\"\n                    small\n                />\n            </span>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_search_bar_results %}\n        <div\n            v-if=\"showResultsContainer\"\n            ref=\"resultsContainer\"\n            class=\"sw-search-bar__results sw-search-bar__results--v2\"\n            :class=\"{'is-empty-state': isResultEmpty()}\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_results_content %}\n            <div class=\"sw-search-bar__results-wrapper-content\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_search_bar_results_empty_state %}\n                <sw-loader v-if=\"isLoading\" />\n                {% endblock %}\n\n                <!-- eslint-disable sw-deprecation-rules/no-twigjs-blocks -->\n                <template\n                    v-for=\"(entity, column) in results\"\n                    v-else-if=\"!isResultEmpty()\"\n                    :key=\"entity.entity\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_search_bar_results_list %}\n                    <div\n                        class=\"sw-search-bar__results-column\"\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_search_bar_results_list_column %}\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_search_bar_results_list_column_header %}\n                        <div class=\"sw-search-bar__results-column-header\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_search_bar_results_list_column_header_title %}\n                            <span\n                                class=\"sw-search-bar__types-header-entity\"\n                            >\n                                {{ $tc(`global.entities.${entity.entity}`, entity.total) }}\n                            </span>\n                            {% endblock %}\n\n                        </div>\n                        {% endblock %}\n\n                        {# \"34\" below is the <sw-search-bar-item />'s height #}\n                        <ul\n                            class=\"sw-search-bar__results-list\"\n                            :style=\"{ minHeight: `${34 * entity.entities.length}px` }\"\n                        >\n                            <sw-search-bar-item\n                                v-for=\"(item, index) in entity.entities\"\n                                :key=\"item.id\"\n                                :item=\"item\"\n                                :type=\"entity.entity\"\n                                :search-term=\"searchTerm\"\n                                :column=\"column\"\n                                :index=\"index\"\n                                :entity-icon-color=\"getEntityIconColor(entity.entity)\"\n                                :entity-icon-name=\"getEntityIconName(entity.entity)\"\n                            />\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_search_bar_results_list_bar_item %}\n                            <li\n                                v-if=\"entity.entity !== 'module'\"\n                                class=\"sw-search-bar-item sw-search-bar-item--v2\"\n                            >\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_search_bar_results_list_bar_item_icon %}\n                                <sw-icon\n                                    name=\"regular-double-chevron-right-s\"\n                                    color=\"rgb(179, 191, 204)\"\n                                />\n                                {% endblock %}\n\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_search_bar_results_list_bar_item_more_results %}\n                                <sw-search-more-results\n                                    :entity=\"entity.entity\"\n                                    :term=\"searchTerm\"\n                                />\n                                {% endblock %}\n                            </li>\n                            {% endblock %}\n                        </ul>\n                        {% endblock %}\n                    </div>\n                    {% endblock %}\n                </template>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_search_bar_results_empty %}\n                <div\n                    v-else\n                    class=\"sw-search-bar__results-empty-message sw-search-bar__results-empty-message--v2\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_search_bar_results_empty_content %}\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_search_bar_results_empty_text %}\n                    <div class=\"sw-search-bar__results-empty-text\">\n                        {{ $tc('global.sw-search-bar.messageNoResultsV2', 0, { term: searchTerm }) }}\n                    </div>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_search_bar_results_empty_detail %}\n                    <div class=\"sw-search-bar__results-empty-detail\">\n                        {{ $tc('global.sw-search-bar.messageNoResultsDetailV2') }}\n                    </div>\n                    {% endblock %}\n                    {% endblock %}\n                </div>\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_results_footer %}\n            <div\n                v-if=\"showSearchTipForEsSearch\"\n                class=\"sw-search-bar__footer\"\n            >\n                <p\n                    class=\"sw-search-bar__shortcut-tip\"\n                    v-html=\"$tc('global.sw-search-bar.placeholderESSearchShortcutInfo')\"\n                ></p>\n            </div>\n            <div\n                v-else\n                class=\"sw-search-bar__footer\"\n            >\n                <p\n                    class=\"sw-search-bar__shortcut-tip\"\n                    v-html=\"$tc('global.sw-search-bar.placeholderSearchShortcutInfo')\"\n                ></p>\n\n                <sw-icon\n                    small\n                    name=\"regular-cog\"\n                    class=\"sw-search-bar__footer-action-setting\"\n                    :style=\"{ 'color': '#7d8c9b' }\"\n                    @click=\"toggleSearchPreferencesModal\"\n                />\n            </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_search_bar_types_container %}\n        <div\n            v-if=\"showTypeSelectContainer\"\n            class=\"sw-search-bar__types_container--v2\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_types_container_header %}\n            <div\n                class=\"sw-search-bar__header\"\n            >\n                <p class=\"sw-search-bar__header-title\">\n                    {{ $tc('global.sw-search-bar.moduleFiltersHeadline') }}\n                </p>\n            </div>\n            {% endblock %}\n            <!-- eslint-disable-next-line vuejs-accessibility/click-events-have-key-events vuejs-accessibility/mouse-events-have-key-events -->\n            <div\n                v-for=\"(type, index) in typeSelectResults\"\n                :key=\"index\"\n                class=\"sw-search-bar__type-item\"\n                :class=\"{ 'is--active': activeTypeListIndex === index }\"\n                role=\"row\"\n                tabindex=\"0\"\n                @mouseenter=\"onMouseEnterSearchType(index)\"\n                @click=\"onClickType(type.entityName)\"\n            >\n                <span\n                    class=\"sw-search-bar__type-item-name\"\n                >\n                    <sw-icon\n                        class=\"sw-search-bar__type-item-icon\"\n                        :style=\"{ 'color': getEntityIconColor(type.entityName) }\"\n                        :name=\"type.entityName ? getEntityIcon(type.entityName) : 'regular-circle'\"\n                    />\n\n                    {{ type.entityName ? getLabelSearchType(type.entityName) : $tc('global.sw-search-bar.searchTypeAll') }}\n                </span>\n\n                <p\n                    class=\"sw-search-bar__type--filter\"\n                >\n                    {{ $tc('global.sw-search-bar.moduleFilter') }}\n                </p>\n            </div>\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_types_container_empty %}\n            <div\n                v-if=\"typeSelectResults.length < 1\"\n                class=\"sw-search-bar__type-results-empty-message\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_search_bar_types_container_empty_text %}\n                {{ $tc('global.sw-search-bar.messageNoTypeResults') }}\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_types_container_footer %}\n            <div\n                class=\"sw-search-bar__footer\"\n            >\n                <p\n                    class=\"sw-search-bar__shortcut-tip\"\n                    v-html=\"$tc('global.sw-search-bar.placeholderSearchShortcutInfo')\"\n                ></p>\n\n                <sw-icon\n                    small\n                    name=\"regular-cog\"\n                    class=\"sw-search-bar__footer-action-setting\"\n                    :style=\"{ 'color': '#7d8c9b' }\"\n                    @click=\"toggleSearchPreferencesModal\"\n                />\n            </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_search_bar_types_module_filters_container %}\n        <div\n            v-if=\"showModuleFiltersContainer\"\n            class=\"sw-search-bar__types_module-filters-container sw-search-bar__types_container--v2\"\n        >\n            <!-- eslint-disable-next-line vuejs-accessibility/click-events-have-key-events vuejs-accessibility/mouse-events-have-key-events -->\n            <div\n                v-for=\"(type, index) in typeSelectResults\"\n                :key=\"index\"\n                class=\"sw-search-bar__type-item\"\n                :class=\"{ 'is--active': activeTypeListIndex === index }\"\n                role=\"row\"\n                tabindex=\"0\"\n                @mouseenter=\"onMouseEnterSearchType(index)\"\n                @click=\"onClickType(type.entityName)\"\n            >\n                <span\n                    class=\"sw-search-bar__type-item-name\"\n                >\n                    <sw-icon\n                        class=\"sw-search-bar__type-item-icon\"\n                        :style=\"{ 'color': getEntityIconColor(type.entityName) }\"\n                        :name=\"type.entityName ? getEntityIcon(type.entityName) : 'regular-circle'\"\n                    />\n                    {{ type.entityName ? getLabelSearchType(type.entityName) : $tc('global.sw-search-bar.searchTypeAll') }}\n                </span>\n            </div>\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_types_module_filters_container_empty %}\n            <div\n                v-if=\"typeSelectResults.length < 1\"\n                class=\"sw-search-bar__type-results-empty-message\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_search_bar_types_module_filters_container_empty_text %}\n                {{ $tc('global.sw-search-bar.messageNoTypeResults') }}\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_types_module_filters_container_footer %}\n            <div class=\"sw-search-bar__footer\">\n                <p\n                    class=\"sw-search-bar__shortcut-tip\"\n                    v-html=\"$tc('global.sw-search-bar.placeholderFilterShortcutInfo')\"\n                ></p>\n            </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_search_bar_trends_results %}\n        <div\n            v-if=\"showResultsSearchTrends && !showResultsContainer\"\n            class=\"sw-search-bar__results sw-search-bar__results--v2\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_trends_results_content %}\n            <div class=\"sw-search-bar__results-wrapper-content\">\n                <template\n                    v-for=\"(entity, column) in resultsSearchTrends\"\n                    :key=\"entity.entity\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_search_bar_trends_results_list %}\n                    <div\n                        class=\"sw-search-bar__results-column\"\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_search_bar_trends_results_list_column %}\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_search_bar_trends_results_list_column_header %}\n                        <div class=\"sw-search-bar__results-column-header\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_search_bar_trends_results_list_column_header_title %}\n                            <span class=\"sw-search-bar__types-header-entity\">\n                                {{ $tc(`global.entities.${entity.entity}`, entity.total) }}\n                            </span>\n                            {% endblock %}\n                        </div>\n                        {% endblock %}\n                        <ul class=\"sw-search-bar__results-list\">\n                            <sw-search-bar-item\n                                v-for=\"(item, index) in entity.entities\"\n                                :key=\"index\"\n                                :item=\"entity.entity === 'frequently_used' ? item : item.item\"\n                                :type=\"entity.entity === 'frequently_used' ? entity.entity : item.entity\"\n                                :search-term=\"searchTerm\"\n                                :column=\"column\"\n                                :index=\"index\"\n                                :entity-icon-color=\"getEntityIconColor(item.entity)\"\n                                :entity-icon-name=\"getEntityIconName(item.entity)\"\n                            />\n                        </ul>\n                        {% endblock %}\n                    </div>\n                    {% endblock %}\n                </template>\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_trends_results_empty_content %}{% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_bar_trends_results_footer %}\n            <div class=\"sw-search-bar__footer\">\n                <p\n                    class=\"sw-search-bar__shortcut-tip\"\n                    v-html=\"$tc('global.sw-search-bar.placeholderSearchShortcutInfo')\"\n                ></p>\n\n                <sw-icon\n                    :style=\"{ 'color': '#7d8c9b' }\"\n                    name=\"regular-cog\"\n                    small\n                    class=\"sw-search-bar__footer-action-setting\"\n                    @click=\"toggleSearchPreferencesModal\"\n                />\n            </div>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_search_bar_search_preferences_modal %}\n    <sw-search-preferences-modal\n        v-if=\"showSearchPreferencesModal\"\n        @modal-close=\"toggleSearchPreferencesModal\"\n    />\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-search-bar.html.twig';\nimport './sw-search-bar.scss';\n\nconst { Component, Application, Context } = Cicada;\nconst { Criteria } = Cicada.Data;\nconst utils = Cicada.Utils;\nconst { cloneDeep } = utils.object;\n\n/**\n * @package admin\n *\n * @private\n * @description\n * Renders the search bar. This component uses the search service to find entities in the administration.\n * @status ready\n * @example-type code-only\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nComponent.register('sw-search-bar', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'searchService',\n        'searchTypeService',\n        'repositoryFactory',\n        'acl',\n        'feature',\n        'searchRankingService',\n        'userActivityApiService',\n        'recentlySearchService',\n    ],\n\n    provide() {\n        return {\n            searchBarOnMouseOver: this.onMouseOver,\n            searchBarRegisterActiveItemIndexSelectHandler: this.registerActiveItemIndexSelectHandler,\n            searchBarUnregisterActiveItemIndexSelectHandler: this.unregisterActiveItemIndexSelectHandler,\n            searchBarRegisterKeyupEnterHandler: this.registerKeyupEnterHandler,\n            searchBarUnregisterKeyupEnterHandler: this.unregisterKeyupEnterHandler,\n        };\n    },\n\n    emits: [\n        'search',\n        'active-item-index-select',\n        'keyup-enter',\n    ],\n\n    shortcuts: {\n        f: 'setFocus',\n    },\n\n    props: {\n        /**\n         * Determines if the initial search entity, e.g. for a search only in products, when entering its list\n         */\n        initialSearchType: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        /**\n         * Forbids to search outside the defined search entity\n         */\n        typeSearchAlwaysInContainer: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: Context.app.adminEsEnable ?? false,\n        },\n        /**\n         * Search bar placeholder\n         */\n        placeholder: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        /**\n         * Preset search term\n         */\n        initialSearch: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        /**\n         * Color of the entity tag in the search bar\n         */\n        entitySearchColor: {\n            type: String,\n            required: false,\n            default: '',\n        },\n    },\n\n    data() {\n        return {\n            currentSearchType: this.initialSearchType,\n            showResultsContainer: false,\n            showModuleFiltersContainer: false,\n            searchTerm: this.initialSearch,\n            results: [],\n            isActive: false,\n            isOffCanvasShown: false,\n            isSearchBarShown: false,\n            activeResultIndex: 0,\n            activeResultColumn: 0,\n            activeTypeListIndex: 0,\n            isLoading: false,\n            searchTypes: null,\n            showTypeSelectContainer: false,\n            typeSelectResults: [],\n            salesChannelTypes: [],\n            moduleFactory: Application.getContainer('factory').module || {},\n            showResultsSearchTrends: false,\n            resultsSearchTrends: [],\n            showSearchPreferencesModal: false,\n            searchLimit: 10,\n            userSearchPreference: null,\n            isComponentMounted: true,\n            activeItemIndexSelectHandler: [],\n            keyupEnterHandler: [],\n        };\n    },\n\n    computed: {\n        searchBarFieldClasses() {\n            return {\n                'is--active': this.isActive,\n            };\n        },\n\n        placeholderSearchInput() {\n            let placeholder = this.$tc('global.sw-search-bar.placeholderSearchField');\n\n            if (this.currentSearchType) {\n                if (this.placeholder !== '') {\n                    placeholder = this.placeholder;\n                } else if (Object.keys(this.searchTypes).includes(this.currentSearchType)) {\n                    placeholder = this.$tc(this.searchTypes[this.currentSearchType].placeholderSnippet);\n                }\n            }\n\n            return placeholder;\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        salesChannelTypeRepository() {\n            return this.repositoryFactory.create('sales_channel_type');\n        },\n\n        salesChannelCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addAssociation('type');\n\n            return criteria;\n        },\n\n        canCreateSalesChannels() {\n            return this.acl.can('sales_channel.creator');\n        },\n\n        moduleRegistry() {\n            return this.moduleFactory.getModuleRegistry();\n        },\n\n        searchableModules() {\n            const modules = [];\n\n            this.moduleRegistry.forEach((module) => {\n                const privilege = module.manifest.routes?.index?.meta?.privilege;\n\n                if (!module.manifest?.title || (privilege && !this.acl.can(privilege))) {\n                    return;\n                }\n\n                modules.push(module);\n            });\n\n            modules.sort((a, b) => a.manifest.name?.localeCompare(b.manifest.name));\n\n            return modules;\n        },\n\n        criteriaCollection() {\n            return {\n                product: new Criteria(1, this.searchLimit + 1).addAssociation('options.group'),\n            };\n        },\n\n        currentUser() {\n            return Cicada.State.get('session').currentUser;\n        },\n\n        showSearchTipForEsSearch() {\n            if (!this.adminEsEnable) {\n                return false;\n            }\n\n            // This Regex matches the first word and space in the search term\n            return this.searchTerm.match(/^[\\w]+\\s/);\n        },\n\n        adminEsEnable() {\n            return Context.app.adminEsEnable ?? false;\n        },\n    },\n\n    watch: {\n        // Watch for changes in query parameters\n        $route(newValue) {\n            // Use type search again when route changes and the term is undefined\n            if (this.isComponentMounted === true && newValue.query.term === undefined && this.initialSearchType) {\n                this.currentSearchType = this.initialSearchType;\n            }\n\n            // Do not modify the search term when the user is currently typing\n            if (this.isActive) {\n                return;\n            }\n\n            this.searchTerm = newValue.query.term ? newValue.query.term : '';\n        },\n\n        '$route.name': {\n            handler(to, from) {\n                if (from === undefined || to === from) {\n                    return;\n                }\n\n                this.resultsSearchTrends = [];\n            },\n            immediate: true,\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    unmounted() {\n        this.destroyedComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            const that = this;\n\n            this.showSearchFieldOnLargerViewports();\n\n            this.$device.onResize({\n                listener() {\n                    that.showSearchFieldOnLargerViewports();\n                },\n                component: this,\n            });\n\n            if (this.$route.query.term) {\n                this.searchTerm = this.$route.query.term;\n            }\n\n            this.searchTypes = this.searchTypeService.getTypes();\n            this.typeSelectResults = Object.values(this.searchTypes).filter(\n                (searchType) => !searchType.hideOnGlobalSearchBar,\n            );\n            this.registerListener();\n\n            this.userSearchPreference = await this.searchRankingService.getUserSearchPreference();\n\n            if (this.canCreateSalesChannels) {\n                await this.loadSalesChannelType();\n            }\n        },\n\n        destroyedComponent() {\n            document.removeEventListener('click', this.closeOnClickOutside);\n        },\n\n        registerListener() {\n            document.addEventListener('click', this.closeOnClickOutside);\n\n            if (this.isCompatEnabled('INSTANCE_EVENT_EMITTER')) {\n                // eslint-disable-next-line vue/no-deprecated-events-api\n                this.$on('mouse-over', this.setActiveResultPosition);\n            }\n        },\n\n        onMouseOver(index, column) {\n            this.setActiveResultPosition({ index, column });\n        },\n\n        registerActiveItemIndexSelectHandler(handler) {\n            this.activeItemIndexSelectHandler.push(handler);\n        },\n\n        unregisterActiveItemIndexSelectHandler(handler) {\n            this.activeItemIndexSelectHandler = this.activeItemIndexSelectHandler.filter((h) => h !== handler);\n        },\n\n        registerKeyupEnterHandler(handler) {\n            this.keyupEnterHandler.push(handler);\n        },\n\n        unregisterKeyupEnterHandler(handler) {\n            this.keyupEnterHandler = this.keyupEnterHandler.filter((h) => h !== handler);\n        },\n\n        getLabelSearchType(type) {\n            if (!type && !this.currentSearchType) {\n                type = 'all';\n            }\n\n            if (!type && this.currentSearchType) {\n                type = this.currentSearchType;\n            }\n\n            if (type.startsWith('custom_entity_') || type.startsWith('ce_')) {\n                const snippetKey = `${type}.moduleTitle`;\n                return this.$te(snippetKey) ? this.$tc(snippetKey) : type;\n            }\n\n            if (!this.$te(`global.entities.${type}`)) {\n                return this.currentSearchType;\n            }\n\n            return this.$tc(`global.entities.${type}`, 2);\n        },\n\n        setFocus() {\n            this.$refs.searchInput.focus();\n        },\n\n        closeOnClickOutside(event) {\n            const target = event.target;\n\n            if (!target.closest('.sw-search-bar')) {\n                this.clearSearchTerm();\n                this.showTypeSelectContainer = false;\n                this.showModuleFiltersContainer = false;\n            }\n        },\n\n        clearSearchTerm() {\n            this.showResultsContainer = false;\n            this.showResultsSearchTrends = false;\n            this.activeResultPosition = 0;\n        },\n\n        onFocusInput() {\n            this.isActive = true;\n\n            if (this.searchTerm === '#') {\n                this.showTypeContainer();\n            }\n\n            if (this.resultsSearchTrends?.length) {\n                this.showModuleFiltersContainer = false;\n                this.showResultsSearchTrends = true;\n                return;\n            }\n\n            this.loadSearchTrends().then((response) => {\n                this.resultsSearchTrends = response;\n\n                this.showResultsSearchTrends = !!response?.length;\n            });\n        },\n\n        onBlur() {\n            this.isActive = false;\n        },\n\n        showSearchBar() {\n            this.isSearchBarShown = true;\n            this.isActive = true;\n            this.isOffCanvasShown = false;\n\n            if (this.isCompatEnabled('INSTANCE_EVENT_EMITTER')) {\n                this.$root.$emit('toggle-offcanvas', this.isOffCanvasShown);\n            } else {\n                Cicada.Utils.EventBus.emit('sw-admin-menu/toggle-offcanvas', this.isOffCanvasShown);\n            }\n        },\n\n        hideSearchBar() {\n            this.isSearchBarShown = false;\n            this.isActive = false;\n            this.showResultsContainer = false;\n        },\n\n        showSearchFieldOnLargerViewports() {\n            if (this.$device.getViewportWidth() > 500) {\n                this.isSearchBarShown = true;\n            }\n        },\n\n        onSearchTermChange() {\n            const match = this.searchTerm.match(/^#(.*)/);\n            if (match !== null) {\n                this.showTypeContainer();\n                this.filterTypeSelectResults(match[1]);\n\n                return;\n            }\n\n            if (this.searchTerm.trim().length > 155) {\n                return;\n            }\n\n            this.showTypeSelectContainer = false;\n            this.showResultsSearchTrends = false;\n\n            if (this.typeSearchAlwaysInContainer && this.currentSearchType && this.searchTypes[this.currentSearchType]) {\n                this.doListSearchWithContainer();\n                return;\n            }\n\n            if (!this.initialSearchType && this.currentSearchType) {\n                this.doListSearchWithContainer();\n                return;\n            }\n\n            if (this.initialSearchType && this.currentSearchType && this.initialSearchType !== this.currentSearchType) {\n                this.doListSearchWithContainer();\n                return;\n            }\n\n            if (this.currentSearchType) {\n                this.doListSearch();\n                return;\n            }\n\n            this.doGlobalSearch();\n        },\n\n        showTypeContainer() {\n            this.showTypeSelectContainer = true;\n            this.showModuleFiltersContainer = false;\n            this.showResultsContainer = false;\n            this.showResultsSearchTrends = false;\n            this.activeTypeListIndex = 0;\n        },\n\n        filterTypeSelectResults(term) {\n            this.typeSelectResults = [];\n\n            Object.keys(this.searchTypes).forEach((key) => {\n                const snippet = this.$tc(`global.entities.${this.searchTypes[key].entityName}`, 2);\n                if (snippet.toLowerCase().includes(term.toLowerCase()) || term === '') {\n                    this.typeSelectResults.push(this.searchTypes[key]);\n                }\n            });\n        },\n\n        onClickType(type) {\n            this.setSearchType(type);\n            this.$refs.searchInput.focus();\n        },\n\n        setSearchType(type) {\n            this.currentSearchType = type;\n            this.showTypeSelectContainer = false;\n            this.showModuleFiltersContainer = false;\n            this.showResultsSearchTrends = false;\n            this.searchTerm = '';\n        },\n\n        toggleOffCanvas() {\n            this.isOffCanvasShown = !this.isOffCanvasShown;\n\n            if (this.isCompatEnabled('INSTANCE_EVENT_EMITTER')) {\n                this.$root.$emit('toggle-offcanvas', this.isOffCanvasShown);\n            } else {\n                Cicada.Utils.EventBus.emit('sw-admin-menu/toggle-offcanvas', this.isOffCanvasShown);\n            }\n        },\n\n        resetSearchType() {\n            if (this.searchTerm.length === 0) {\n                this.isComponentMounted = false;\n                this.currentSearchType = null;\n            }\n        },\n\n        doListSearch: utils.debounce(function debouncedSearch() {\n            const searchTerm = this.searchTerm.trim();\n            this.$emit('search', searchTerm);\n        }, 750),\n\n        doListSearchWithContainer: utils.debounce(\n            function debouncedSearch() {\n                const searchTerm = this.searchTerm.trim();\n\n                if (searchTerm && searchTerm.length > 0) {\n                    this.loadTypeSearchResults(searchTerm);\n                } else {\n                    this.showResultsContainer = false;\n                }\n            },\n            Context.app.adminEsEnable ? 30 : 750,\n        ),\n\n        doGlobalSearch: utils.debounce(\n            function debouncedSearch() {\n                const searchTerm = this.searchTerm.trim();\n                if (searchTerm && searchTerm.length > 0) {\n                    this.loadResults(searchTerm);\n                } else {\n                    this.showResultsContainer = false;\n                    this.showResultsSearchTrends = false;\n                }\n            },\n            Context.app.adminEsEnable ? 30 : 750,\n        ),\n\n        async loadResults(searchTerm) {\n            this.isLoading = true;\n            this.results = [];\n\n            const entities = this.getModuleEntities(searchTerm);\n\n            // eslint-disable-next-line no-unused-expressions\n            entities?.length &&\n                this.results.unshift({\n                    entity: 'module',\n                    total: entities.length,\n                    entities,\n                });\n\n            if (!this.userSearchPreference || Object.keys(this.userSearchPreference).length < 1) {\n                this.activeResultColumn = 0;\n                this.activeResultIndex = 0;\n                this.isLoading = false;\n\n                if (!this.showTypeSelectContainer) {\n                    this.showResultsContainer = true;\n                }\n\n                return;\n            }\n\n            let response;\n            if (this.adminEsEnable) {\n                const names = [];\n                Object.keys(this.userSearchPreference).forEach((key) => {\n                    if (utils.types.isEmpty(this.userSearchPreference[key])) {\n                        return;\n                    }\n                    names.push(key);\n                });\n\n                response = await this.searchService.elastic(searchTerm, names, this.searchLimit + 1, {\n                    'sw-inheritance': true,\n                });\n            } else {\n                // Set limit as `searchLimit + 1` to check if more than `searchLimit` results are returned\n                const queries = this.searchRankingService.buildGlobalSearchQueries(\n                    this.userSearchPreference,\n                    searchTerm,\n                    this.criteriaCollection,\n                    this.searchLimit + 1,\n                    0,\n                );\n                response = await this.searchService.searchQuery(queries, {\n                    'sw-inheritance': true,\n                });\n            }\n\n            const data = response.data;\n\n            if (!data) {\n                return;\n            }\n\n            Object.keys(data).forEach((entity) => {\n                if (data[entity].total > 0) {\n                    const item = data[entity];\n\n                    item.entities = Object.values(item.data).slice(0, this.searchLimit);\n                    item.entity = entity;\n\n                    this.results = this.results.filter((result) => entity !== result.entity);\n\n                    this.results = [\n                        ...this.results,\n                        item,\n                    ];\n                }\n            });\n\n            this.activeResultColumn = 0;\n            this.activeResultIndex = 0;\n            this.isLoading = false;\n\n            if (!this.showTypeSelectContainer) {\n                this.showResultsContainer = true;\n            }\n        },\n\n        async loadTypeSearchResults(searchTerm) {\n            // If searchType has an \"entityService\" load by service, otherwise load by entity\n            if (this.searchTypes[this.currentSearchType]?.entityService) {\n                this.loadTypeSearchResultsByService(searchTerm);\n                return;\n            }\n\n            this.isLoading = true;\n            this.results = [];\n            const entityResults = {\n                entity: this.currentSearchType,\n                total: 0,\n            };\n\n            const entityName = this.searchTypes[this.currentSearchType].entityName;\n            if (this.adminEsEnable) {\n                const response = await this.searchService.elastic(searchTerm, [entityName], this.searchLimit + 1, {\n                    'sw-inheritance': true,\n                });\n\n                const data = response?.data[this.currentSearchType] ?? {\n                    total: 0,\n                    data: {},\n                };\n\n                entityResults.total = data.total;\n                entityResults.entities = Object.values(data.data).slice(0, this.searchLimit);\n            } else {\n                const repository = this.repositoryFactory.create(entityName);\n\n                let criteria = this.criteriaCollection.hasOwnProperty(entityName)\n                    ? this.criteriaCollection[entityName]\n                    : new Criteria(1, this.searchLimit + 1);\n\n                criteria.setTerm(searchTerm);\n                // Set limit as `searchLimit + 1` to check if more than `searchLimit` results are returned\n                criteria.setLimit(this.searchLimit + 1);\n                criteria.setTotalCountMode(0);\n                const searchRankingFields = await this.searchRankingService.getSearchFieldsByEntity(entityName);\n                if (!searchRankingFields || Object.keys(searchRankingFields).length < 1) {\n                    entityResults.total = 0;\n\n                    this.results.push(entityResults);\n                    this.isLoading = false;\n                    if (!this.showTypeSelectContainer) {\n                        this.showResultsContainer = true;\n                    }\n\n                    return;\n                }\n\n                criteria = this.searchRankingService.buildSearchQueriesForEntity(searchRankingFields, searchTerm, criteria);\n\n                const response = await repository.search(criteria, {\n                    ...Cicada.Context.api,\n                    inheritance: true,\n                });\n\n                entityResults.total = response.total;\n                entityResults.entities = response.slice(0, this.searchLimit);\n            }\n\n            if (entityResults.total > 0) {\n                this.results = this.results.filter((result) => this.currentSearchType !== result.entity);\n\n                this.results = [\n                    ...this.results,\n                    entityResults,\n                ];\n            }\n\n            this.isLoading = false;\n\n            if (!this.showTypeSelectContainer) {\n                this.showResultsContainer = true;\n            }\n        },\n\n        loadTypeSearchResultsByService(searchTerm) {\n            this.isLoading = true;\n            const params = {\n                limit: 25,\n                term: searchTerm,\n            };\n            this.results = [];\n            const entityResults = {};\n            const apiServiceName = this.searchTypes[this.currentSearchType].entityService;\n            if (!Application.getContainer('factory').apiService.has(apiServiceName)) {\n                throw new Error(`sw-search-bar - Api service ${apiServiceName} not found`);\n            }\n\n            const apiService = Application.getContainer('factory').apiService.getByName(apiServiceName);\n\n            apiService.getList(params).then((response) => {\n                entityResults.total = response.meta.total;\n                entityResults.entity = this.currentSearchType;\n                entityResults.entities = response.data;\n\n                this.results.push(entityResults);\n\n                this.isLoading = false;\n            });\n            if (!this.showTypeSelectContainer) {\n                this.showResultsContainer = true;\n            }\n        },\n\n        setActiveResultPosition({ index, column }) {\n            this.activeResultIndex = index;\n            this.activeResultColumn = column;\n            this.emitActiveResultPosition();\n        },\n\n        emitActiveResultPosition() {\n            this.$emit('active-item-index-select', {\n                index: this.activeResultIndex,\n                column: this.activeResultColumn,\n            });\n        },\n\n        navigateUpResults() {\n            if (this.showTypeSelectContainer) {\n                if (this.activeTypeListIndex !== 0) {\n                    this.activeTypeListIndex -= 1;\n                }\n            }\n\n            if (!this.showResultsContainer) {\n                return;\n            }\n\n            if (this.activeResultIndex === 0) {\n                if (this.activeResultColumn > 0) {\n                    this.activeResultColumn -= 1;\n                    const itemsInNewColumn = Object.keys(this.results[this.activeResultColumn].entities).length;\n                    this.activeResultIndex = itemsInNewColumn - 1;\n                }\n            } else {\n                this.activeResultIndex -= 1;\n            }\n\n            this.setActiveResultPosition({\n                index: this.activeResultIndex,\n                column: this.activeResultColumn,\n            });\n            this.checkScrollPosition();\n        },\n\n        navigateDownResults() {\n            if (this.showTypeSelectContainer) {\n                if (this.activeTypeListIndex !== this.typeSelectResults.length - 1) {\n                    this.activeTypeListIndex += 1;\n                }\n            }\n\n            if (!this.showResultsContainer) {\n                return;\n            }\n\n            const itemsInActualColumn = this.results[this.activeResultColumn].entities.length;\n\n            if (this.activeResultIndex === itemsInActualColumn - 1 || itemsInActualColumn < 1) {\n                if (this.activeResultColumn < this.results.length - 1) {\n                    // Move to the next column if it exists\n                    if (this.results[this.activeResultColumn + 1]) {\n                        this.activeResultColumn += 1;\n                        this.activeResultIndex = 0;\n                    } else {\n                        return;\n                    }\n                }\n            } else {\n                this.activeResultIndex += 1;\n            }\n            this.setActiveResultPosition({\n                index: this.activeResultIndex,\n                column: this.activeResultColumn,\n            });\n            this.checkScrollPosition();\n        },\n\n        checkScrollPosition() {\n            // Wait for the next render tick because we need the new active item\n            this.$nextTick(() => {\n                const resultsContainer = this.$refs.resultsContainer;\n                const activeItem = resultsContainer.querySelector('.is--active');\n                const itemHeight = resultsContainer.querySelector('.sw-search-bar-item').offsetHeight;\n\n                const resultContainerHeight = resultsContainer.offsetHeight;\n                const activeItemPosition = activeItem.offsetTop + itemHeight;\n\n                if (activeItemPosition + itemHeight * 2 > resultContainerHeight + resultsContainer.scrollTop) {\n                    resultsContainer.scrollTop = activeItemPosition + itemHeight * 2 - resultContainerHeight;\n                } else if (activeItemPosition - itemHeight * 3 < resultsContainer.scrollTop) {\n                    resultsContainer.scrollTop = activeItemPosition - itemHeight * 3;\n                }\n            });\n        },\n\n        onKeyUpEnter() {\n            this.$emit('keyup-enter', this.activeResultIndex, this.activeResultColumn);\n\n            if (this.showTypeSelectContainer) {\n                if (this.typeSelectResults.length > 0) {\n                    this.setSearchType(this.typeSelectResults[this.activeTypeListIndex].entityName);\n                }\n            }\n        },\n\n        getSearchTypeProperty(entityName, propertyName) {\n            if (!this.searchTypes[entityName] || !this.searchTypes[entityName].hasOwnProperty(propertyName)) {\n                return '';\n            }\n            return this.searchTypes[entityName][propertyName];\n        },\n\n        getEntityIconName(entityName) {\n            const module = this.moduleFactory.getModuleByEntityName(entityName);\n\n            return module?.manifest?.icon ?? 'regular-books';\n        },\n\n        getEntityIconColor(entityName) {\n            if (this.entitySearchColor !== '') {\n                return this.entitySearchColor;\n            }\n\n            const module = this.moduleFactory.getModuleByEntityName(entityName);\n\n            if (!module) {\n                return '#5C738A';\n            }\n\n            return module.manifest.color || '#5C738A';\n        },\n\n        getEntityIcon(entityName) {\n            const module = this.moduleFactory.getModuleByEntityName(entityName);\n\n            return module?.manifest?.icon ?? 'regular-books';\n        },\n\n        isResultEmpty() {\n            return !this.results.some((result) => result.total !== 0);\n        },\n\n        onMouseEnterSearchType(index) {\n            this.activeTypeListIndex = index;\n        },\n\n        onOpenModuleFiltersDropDown() {\n            this.isActive = true;\n            this.showModuleFiltersContainer = true;\n            this.showTypeSelectContainer = false;\n            this.showResultsSearchTrends = false;\n        },\n\n        loadSalesChannelType() {\n            return new Promise((resolve) => {\n                this.salesChannelTypeRepository.search(new Criteria(1, 25)).then((response) => {\n                    this.salesChannelTypes = response;\n                    resolve(response);\n                });\n            });\n        },\n\n        getModuleEntities(searchTerm, limit = 5) {\n            const minSearch = 3;\n            const regex = new RegExp(`^${searchTerm.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&').toLowerCase()}(.*)`);\n\n            if (!searchTerm || searchTerm.length < minSearch) {\n                return [];\n            }\n\n            const moduleEntities = [];\n\n            this.searchableModules.forEach((module) => {\n                const matcher =\n                    typeof module.manifest.searchMatcher === 'function'\n                        ? module.manifest.searchMatcher\n                        : this.getDefaultMatchSearchableModules;\n\n                const moduleType = this.$te(`${module.manifest.title}`) && this.$tc(`${module.manifest.title}`, 2);\n\n                if (!moduleType) {\n                    return;\n                }\n\n                const matches = matcher(regex, moduleType, module.manifest);\n\n                if (!matches || matches.length === 0) {\n                    return;\n                }\n\n                moduleEntities.push(...matches.filter((item) => !item.privilege || this.acl.can(item.privilege)));\n            });\n\n            moduleEntities.push(...this.getSalesChannelTypesBySearchTerm(regex));\n\n            return moduleEntities.slice(0, limit);\n        },\n\n        getDefaultMatchSearchableModules(regex, label, manifest) {\n            const match = label.toLowerCase().match(regex);\n            const matchAddNew = `${this.$tc('global.sw-search-bar.addNew')} ${label}`.toLowerCase().match(regex);\n\n            if ((!match && !matchAddNew) || (!manifest?.routes?.index && !manifest?.routes?.list)) {\n                return false;\n            }\n\n            const route = manifest?.routes?.index || manifest?.routes?.list;\n\n            const { name, icon, color, entity, routes } = manifest;\n            const entities = [];\n\n            if (match && routes.index) {\n                entities.push({\n                    name,\n                    icon,\n                    color,\n                    label,\n                    entity,\n                    route: route,\n                    privilege: routes.index?.meta?.privilege,\n                });\n            }\n\n            if (routes.create) {\n                entities.push({\n                    name,\n                    icon,\n                    color,\n                    entity,\n                    route: routes.create,\n                    privilege: routes.create?.meta?.privilege,\n                    action: true,\n                });\n            }\n\n            return entities;\n        },\n\n        getSalesChannelTypesBySearchTerm(regex) {\n            return this.salesChannelTypes.reduce((salesChannelTypes, saleChannelType) => {\n                if (!saleChannelType?.translated.name.toLowerCase().match(regex)) {\n                    return salesChannelTypes;\n                }\n\n                return [\n                    {\n                        name: 'sales-channel',\n                        icon: saleChannelType?.iconName ?? 'regular-server',\n                        color: '#14D7A5',\n                        entity: 'sales_channel',\n                        label: saleChannelType?.translated.name,\n                        route: {\n                            name: 'sw.sales.channel.create',\n                            params: { typeId: saleChannelType.id },\n                        },\n                        action: true,\n                    },\n                ];\n            }, []);\n        },\n\n        toggleSearchPreferencesModal() {\n            this.showSearchPreferencesModal = !this.showSearchPreferencesModal;\n\n            // Clear search term, turn off search results\n            this.searchTerm = null;\n            this.showResultsContainer = false;\n            this.showTypeSelectContainer = false;\n            this.showResultsSearchTrends = false;\n        },\n\n        loadSearchTrends() {\n            return Promise.all([\n                this.getFrequentlyUsedModules(),\n                this.getRecentlySearch(),\n            ]).then((response) => response.filter((item) => item?.total));\n        },\n\n        getFrequentlyUsedModules() {\n            return this.userActivityApiService\n                .getIncrement({ cluster: this.currentUser.id })\n                .then((response) => {\n                    const entities = Object.keys(response);\n\n                    return {\n                        entity: 'frequently_used',\n                        total: entities.length,\n                        entities: entities?.map((item) => this.getInfoModuleFrequentlyUsed(item)),\n                    };\n                })\n                .catch(() => {});\n        },\n\n        getRecentlySearch() {\n            return new Promise((resolve) => {\n                const items = this.recentlySearchService.get(this.currentUser.id);\n\n                const queries = {};\n\n                items.forEach((item) => {\n                    if (!this.acl.can(`${item.entity}:read`)) {\n                        return;\n                    }\n\n                    if (!queries.hasOwnProperty(item.entity)) {\n                        queries[item.entity] = this.criteriaCollection.hasOwnProperty(item.entity)\n                            ? cloneDeep(this.criteriaCollection[item.entity])\n                            : new Criteria(1, 25);\n                    }\n\n                    const ids = [\n                        item.id,\n                        ...queries[item.entity].ids,\n                    ];\n                    queries[item.entity].setIds(ids);\n                });\n\n                if (Object.keys(queries).length === 0) {\n                    resolve();\n                    return;\n                }\n\n                this.searchService.searchQuery(queries, { 'sw-inheritance': true }).then((searchResult) => {\n                    if (!searchResult.data) {\n                        resolve();\n                        return;\n                    }\n\n                    const mapResult = [];\n\n                    items.forEach((item) => {\n                        const entities = searchResult.data[item.entity] ? searchResult.data[item.entity].data : {};\n\n                        const foundEntity = entities[item.id];\n\n                        if (foundEntity) {\n                            mapResult.push({\n                                item: foundEntity,\n                                entity: item.entity,\n                            });\n                        }\n                    });\n\n                    resolve({\n                        entity: 'recently_searched',\n                        total: mapResult.length,\n                        entities: mapResult,\n                    });\n                });\n            });\n        },\n\n        getInfoModuleFrequentlyUsed(key) {\n            const [\n                moduleName,\n                routeName,\n            ] = key.split('@');\n            const module = this.moduleFactory.getModuleByKey('name', moduleName);\n\n            if (!module) {\n                return {};\n            }\n\n            const { routes, ...manifest } = module.manifest;\n\n            if (typeof manifest.searchMatcher === 'function') {\n                // get metadata in searchMatcher\n                const metadata = manifest.searchMatcher(\n                    new RegExp(`^${this.$tc(manifest.title).toLowerCase()}(.*)`),\n                    this.$tc(manifest.title, 2),\n                    module.manifest,\n                );\n\n                return metadata.find((item) => item.route.name === routeName);\n            }\n\n            const route = Object.values(routes).find((item) => item.name === routeName);\n\n            return {\n                ...manifest,\n                route,\n                privilege: route?.meta?.privilege,\n                action: route.routeKey === 'create',\n            };\n        },\n    },\n});\n"],"names":["template","Component","Application","Context","Criteria","utils","cloneDeep","placeholder","criteria","modules","module","_a","_b","_c","_d","privilege","a","b","newValue","to","from","that","searchType","index","column","handler","h","type","snippetKey","event","response","match","term","key","searchTerm","entities","names","queries","data","entity","item","result","entityResults","entityName","repository","searchRankingFields","params","apiServiceName","itemsInNewColumn","itemsInActualColumn","resultsContainer","activeItem","itemHeight","resultContainerHeight","activeItemPosition","propertyName","resolve","limit","regex","moduleEntities","matcher","moduleType","matches","label","manifest","_e","_f","_g","_h","matchAddNew","route","name","icon","color","routes","salesChannelTypes","saleChannelType","items","ids","searchResult","mapResult","foundEntity","moduleName","routeName"],"mappings":"AAAA,MAAeA,EAAA,4gUCGT,CAAE,UAAAC,EAAW,YAAAC,EAAa,QAAAC,CAAO,EAAK,OACtC,CAAE,SAAAC,CAAQ,EAAK,OAAO,KACtBC,EAAQ,OAAO,MACf,CAAE,UAAAC,CAAS,EAAKD,EAAM,OAY5BJ,EAAU,SAAS,gBAAiB,CAChC,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,gBACA,oBACA,oBACA,MACA,UACA,uBACA,yBACA,uBACH,EAED,SAAU,CACN,MAAO,CACH,qBAAsB,KAAK,YAC3B,8CAA+C,KAAK,qCACpD,gDAAiD,KAAK,uCACtD,mCAAoC,KAAK,0BACzC,qCAAsC,KAAK,2BACvD,CACK,EAED,MAAO,CACH,SACA,2BACA,aACH,EAED,UAAW,CACP,EAAG,UACN,EAED,MAAO,CAIH,kBAAmB,CACf,KAAM,OACN,SAAU,GACV,QAAS,EACZ,EAID,4BAA6B,CACzB,KAAM,QACN,SAAU,GAEV,QAASG,EAAQ,IAAI,eAAiB,EACzC,EAID,YAAa,CACT,KAAM,OACN,SAAU,GACV,QAAS,EACZ,EAID,cAAe,CACX,KAAM,OACN,SAAU,GACV,QAAS,EACZ,EAID,kBAAmB,CACf,KAAM,OACN,SAAU,GACV,QAAS,EACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,kBAAmB,KAAK,kBACxB,qBAAsB,GACtB,2BAA4B,GAC5B,WAAY,KAAK,cACjB,QAAS,CAAE,EACX,SAAU,GACV,iBAAkB,GAClB,iBAAkB,GAClB,kBAAmB,EACnB,mBAAoB,EACpB,oBAAqB,EACrB,UAAW,GACX,YAAa,KACb,wBAAyB,GACzB,kBAAmB,CAAE,EACrB,kBAAmB,CAAE,EACrB,cAAeD,EAAY,aAAa,SAAS,EAAE,QAAU,CAAE,EAC/D,wBAAyB,GACzB,oBAAqB,CAAE,EACvB,2BAA4B,GAC5B,YAAa,GACb,qBAAsB,KACtB,mBAAoB,GACpB,6BAA8B,CAAE,EAChC,kBAAmB,CAAE,CACjC,CACK,EAED,SAAU,CACN,uBAAwB,CACpB,MAAO,CACH,aAAc,KAAK,QACnC,CACS,EAED,wBAAyB,CACrB,IAAIK,EAAc,KAAK,IAAI,6CAA6C,EAExE,OAAI,KAAK,oBACD,KAAK,cAAgB,GACrBA,EAAc,KAAK,YACZ,OAAO,KAAK,KAAK,WAAW,EAAE,SAAS,KAAK,iBAAiB,IACpEA,EAAc,KAAK,IAAI,KAAK,YAAY,KAAK,iBAAiB,EAAE,kBAAkB,IAInFA,CACV,EAED,wBAAyB,CACrB,OAAO,KAAK,kBAAkB,OAAO,eAAe,CACvD,EAED,4BAA6B,CACzB,OAAO,KAAK,kBAAkB,OAAO,oBAAoB,CAC5D,EAED,sBAAuB,CACnB,MAAMC,EAAW,IAAIJ,EAAS,EAAG,EAAE,EACnC,OAAAI,EAAS,eAAe,MAAM,EAEvBA,CACV,EAED,wBAAyB,CACrB,OAAO,KAAK,IAAI,IAAI,uBAAuB,CAC9C,EAED,gBAAiB,CACb,OAAO,KAAK,cAAc,mBAC7B,EAED,mBAAoB,CAChB,MAAMC,EAAU,CAAA,EAEhB,YAAK,eAAe,QAASC,GAAW,CD/KpD,IAAAC,EAAAC,EAAAC,EAAAC,ECgLgB,MAAMC,GAAYF,GAAAD,GAAAD,EAAAD,EAAO,SAAS,SAAhB,YAAAC,EAAwB,QAAxB,YAAAC,EAA+B,OAA/B,YAAAC,EAAqC,UAEnD,GAACC,EAAAJ,EAAO,WAAP,MAAAI,EAAiB,QAAUC,GAAa,CAAC,KAAK,IAAI,IAAIA,CAAS,GAIpEN,EAAQ,KAAKC,CAAM,CACnC,CAAa,EAEDD,EAAQ,KAAK,CAACO,EAAGC,IAAM,CDzLnC,IAAAN,ECyLmC,OAAAA,EAAAK,EAAE,SAAS,OAAX,YAAAL,EAAiB,cAAcM,EAAE,SAAS,MAAK,EAE/DR,CACV,EAED,oBAAqB,CACjB,MAAO,CACH,QAAS,IAAIL,EAAS,EAAG,KAAK,YAAc,CAAC,EAAE,eAAe,eAAe,CAC7F,CACS,EAED,aAAc,CACV,OAAO,OAAO,MAAM,IAAI,SAAS,EAAE,WACtC,EAED,0BAA2B,CACvB,OAAK,KAAK,cAKH,KAAK,WAAW,MAAM,UAAU,EAJ5B,EAKd,EAED,eAAgB,CACZ,OAAOD,EAAQ,IAAI,eAAiB,EACvC,CACJ,EAED,MAAO,CAEH,OAAOe,EAAU,CAET,KAAK,qBAAuB,IAAQA,EAAS,MAAM,OAAS,QAAa,KAAK,oBAC9E,KAAK,kBAAoB,KAAK,mBAI9B,MAAK,WAIT,KAAK,WAAaA,EAAS,MAAM,KAAOA,EAAS,MAAM,KAAO,GACjE,EAED,cAAe,CACX,QAAQC,EAAIC,EAAM,CACVA,IAAS,QAAaD,IAAOC,IAIjC,KAAK,oBAAsB,GAC9B,EACD,UAAW,EACd,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,WAAY,CACR,KAAK,mBAAkB,CAC1B,EAED,QAAS,CACL,MAAM,kBAAmB,CACrB,MAAMC,EAAO,KAEb,KAAK,iCAAgC,EAErC,KAAK,QAAQ,SAAS,CAClB,UAAW,CACPA,EAAK,iCAAgC,CACxC,EACD,UAAW,IAC3B,CAAa,EAEG,KAAK,OAAO,MAAM,OAClB,KAAK,WAAa,KAAK,OAAO,MAAM,MAGxC,KAAK,YAAc,KAAK,kBAAkB,SAAQ,EAClD,KAAK,kBAAoB,OAAO,OAAO,KAAK,WAAW,EAAE,OACpDC,GAAe,CAACA,EAAW,qBAC5C,EACY,KAAK,iBAAgB,EAErB,KAAK,qBAAuB,MAAM,KAAK,qBAAqB,wBAAuB,EAE/E,KAAK,wBACL,MAAM,KAAK,sBAElB,EAED,oBAAqB,CACjB,SAAS,oBAAoB,QAAS,KAAK,mBAAmB,CACjE,EAED,kBAAmB,CACf,SAAS,iBAAiB,QAAS,KAAK,mBAAmB,EAEvD,KAAK,gBAAgB,wBAAwB,GAE7C,KAAK,IAAI,aAAc,KAAK,uBAAuB,CAE1D,EAED,YAAYC,EAAOC,EAAQ,CACvB,KAAK,wBAAwB,CAAE,MAAAD,EAAO,OAAAC,CAAQ,CAAA,CACjD,EAED,qCAAqCC,EAAS,CAC1C,KAAK,6BAA6B,KAAKA,CAAO,CACjD,EAED,uCAAuCA,EAAS,CAC5C,KAAK,6BAA+B,KAAK,6BAA6B,OAAQC,GAAMA,IAAMD,CAAO,CACpG,EAED,0BAA0BA,EAAS,CAC/B,KAAK,kBAAkB,KAAKA,CAAO,CACtC,EAED,4BAA4BA,EAAS,CACjC,KAAK,kBAAoB,KAAK,kBAAkB,OAAQC,GAAMA,IAAMD,CAAO,CAC9E,EAED,mBAAmBE,EAAM,CASrB,GARI,CAACA,GAAQ,CAAC,KAAK,oBACfA,EAAO,OAGP,CAACA,GAAQ,KAAK,oBACdA,EAAO,KAAK,mBAGZA,EAAK,WAAW,gBAAgB,GAAKA,EAAK,WAAW,KAAK,EAAG,CAC7D,MAAMC,EAAa,GAAGD,CAAI,eAC1B,OAAO,KAAK,IAAIC,CAAU,EAAI,KAAK,IAAIA,CAAU,EAAID,CACxD,CAED,OAAK,KAAK,IAAI,mBAAmBA,CAAI,EAAE,EAIhC,KAAK,IAAI,mBAAmBA,CAAI,GAAI,CAAC,EAHjC,KAAK,iBAInB,EAED,UAAW,CACP,KAAK,MAAM,YAAY,OAC1B,EAED,oBAAoBE,EAAO,CACRA,EAAM,OAET,QAAQ,gBAAgB,IAChC,KAAK,gBAAe,EACpB,KAAK,wBAA0B,GAC/B,KAAK,2BAA6B,GAEzC,EAED,iBAAkB,CACd,KAAK,qBAAuB,GAC5B,KAAK,wBAA0B,GAC/B,KAAK,qBAAuB,CAC/B,EAED,cAAe,CDlWvB,IAAAlB,ECyWY,GANA,KAAK,SAAW,GAEZ,KAAK,aAAe,KACpB,KAAK,kBAAiB,GAGtBA,EAAA,KAAK,sBAAL,MAAAA,EAA0B,OAAQ,CAClC,KAAK,2BAA6B,GAClC,KAAK,wBAA0B,GAC/B,MACH,CAED,KAAK,iBAAgB,EAAG,KAAMmB,GAAa,CACvC,KAAK,oBAAsBA,EAE3B,KAAK,wBAA0B,CAAC,EAACA,GAAA,MAAAA,EAAU,OAC3D,CAAa,CACJ,EAED,QAAS,CACL,KAAK,SAAW,EACnB,EAED,eAAgB,CACZ,KAAK,iBAAmB,GACxB,KAAK,SAAW,GAChB,KAAK,iBAAmB,GAEpB,KAAK,gBAAgB,wBAAwB,EAC7C,KAAK,MAAM,MAAM,mBAAoB,KAAK,gBAAgB,EAE1D,OAAO,MAAM,SAAS,KAAK,iCAAkC,KAAK,gBAAgB,CAEzF,EAED,eAAgB,CACZ,KAAK,iBAAmB,GACxB,KAAK,SAAW,GAChB,KAAK,qBAAuB,EAC/B,EAED,kCAAmC,CAC3B,KAAK,QAAQ,iBAAgB,EAAK,MAClC,KAAK,iBAAmB,GAE/B,EAED,oBAAqB,CACjB,MAAMC,EAAQ,KAAK,WAAW,MAAM,QAAQ,EAC5C,GAAIA,IAAU,KAAM,CAChB,KAAK,kBAAiB,EACtB,KAAK,wBAAwBA,EAAM,CAAC,CAAC,EAErC,MACH,CAED,GAAI,OAAK,WAAW,KAAI,EAAG,OAAS,KAOpC,IAHA,KAAK,wBAA0B,GAC/B,KAAK,wBAA0B,GAE3B,KAAK,6BAA+B,KAAK,mBAAqB,KAAK,YAAY,KAAK,iBAAiB,EAAG,CACxG,KAAK,0BAAyB,EAC9B,MACH,CAED,GAAI,CAAC,KAAK,mBAAqB,KAAK,kBAAmB,CACnD,KAAK,0BAAyB,EAC9B,MACH,CAED,GAAI,KAAK,mBAAqB,KAAK,mBAAqB,KAAK,oBAAsB,KAAK,kBAAmB,CACvG,KAAK,0BAAyB,EAC9B,MACH,CAED,GAAI,KAAK,kBAAmB,CACxB,KAAK,aAAY,EACjB,MACH,CAED,KAAK,eAAc,EACtB,EAED,mBAAoB,CAChB,KAAK,wBAA0B,GAC/B,KAAK,2BAA6B,GAClC,KAAK,qBAAuB,GAC5B,KAAK,wBAA0B,GAC/B,KAAK,oBAAsB,CAC9B,EAED,wBAAwBC,EAAM,CAC1B,KAAK,kBAAoB,GAEzB,OAAO,KAAK,KAAK,WAAW,EAAE,QAASC,GAAQ,EAC3B,KAAK,IAAI,mBAAmB,KAAK,YAAYA,CAAG,EAAE,UAAU,GAAI,CAAC,EACrE,YAAW,EAAG,SAASD,EAAK,YAAa,CAAA,GAAKA,IAAS,KAC/D,KAAK,kBAAkB,KAAK,KAAK,YAAYC,CAAG,CAAC,CAErE,CAAa,CACJ,EAED,YAAYN,EAAM,CACd,KAAK,cAAcA,CAAI,EACvB,KAAK,MAAM,YAAY,OAC1B,EAED,cAAcA,EAAM,CAChB,KAAK,kBAAoBA,EACzB,KAAK,wBAA0B,GAC/B,KAAK,2BAA6B,GAClC,KAAK,wBAA0B,GAC/B,KAAK,WAAa,EACrB,EAED,iBAAkB,CACd,KAAK,iBAAmB,CAAC,KAAK,iBAE1B,KAAK,gBAAgB,wBAAwB,EAC7C,KAAK,MAAM,MAAM,mBAAoB,KAAK,gBAAgB,EAE1D,OAAO,MAAM,SAAS,KAAK,iCAAkC,KAAK,gBAAgB,CAEzF,EAED,iBAAkB,CACV,KAAK,WAAW,SAAW,IAC3B,KAAK,mBAAqB,GAC1B,KAAK,kBAAoB,KAEhC,EAED,aAActB,EAAM,SAAS,UAA2B,CACpD,MAAM6B,EAAa,KAAK,WAAW,KAAI,EACvC,KAAK,MAAM,SAAUA,CAAU,CAClC,EAAE,GAAG,EAEN,0BAA2B7B,EAAM,SAC7B,UAA2B,CACvB,MAAM6B,EAAa,KAAK,WAAW,KAAI,EAEnCA,GAAcA,EAAW,OAAS,EAClC,KAAK,sBAAsBA,CAAU,EAErC,KAAK,qBAAuB,EAEnC,EACD/B,EAAQ,IAAI,cAAgB,GAAK,GACpC,EAED,eAAgBE,EAAM,SAClB,UAA2B,CACvB,MAAM6B,EAAa,KAAK,WAAW,KAAI,EACnCA,GAAcA,EAAW,OAAS,EAClC,KAAK,YAAYA,CAAU,GAE3B,KAAK,qBAAuB,GAC5B,KAAK,wBAA0B,GAEtC,EACD/B,EAAQ,IAAI,cAAgB,GAAK,GACpC,EAED,MAAM,YAAY+B,EAAY,CAC1B,KAAK,UAAY,GACjB,KAAK,QAAU,GAEf,MAAMC,EAAW,KAAK,kBAAkBD,CAAU,EAUlD,GAPAC,GAAA,MAAAA,EAAU,QACN,KAAK,QAAQ,QAAQ,CACjB,OAAQ,SACR,MAAOA,EAAS,OAChB,SAAAA,CACpB,CAAiB,EAED,CAAC,KAAK,sBAAwB,OAAO,KAAK,KAAK,oBAAoB,EAAE,OAAS,EAAG,CACjF,KAAK,mBAAqB,EAC1B,KAAK,kBAAoB,EACzB,KAAK,UAAY,GAEZ,KAAK,0BACN,KAAK,qBAAuB,IAGhC,MACH,CAED,IAAIL,EACJ,GAAI,KAAK,cAAe,CACpB,MAAMM,EAAQ,CAAA,EACd,OAAO,KAAK,KAAK,oBAAoB,EAAE,QAASH,GAAQ,CAChD5B,EAAM,MAAM,QAAQ,KAAK,qBAAqB4B,CAAG,CAAC,GAGtDG,EAAM,KAAKH,CAAG,CAClC,CAAiB,EAEDH,EAAW,MAAM,KAAK,cAAc,QAAQI,EAAYE,EAAO,KAAK,YAAc,EAAG,CACjF,iBAAkB,EACtC,CAAiB,CACjB,KAAmB,CAEH,MAAMC,EAAU,KAAK,qBAAqB,yBACtC,KAAK,qBACLH,EACA,KAAK,mBACL,KAAK,YAAc,EACnB,CACpB,EACgBJ,EAAW,MAAM,KAAK,cAAc,YAAYO,EAAS,CACrD,iBAAkB,EACtC,CAAiB,CACJ,CAED,MAAMC,EAAOR,EAAS,KAEjBQ,IAIL,OAAO,KAAKA,CAAI,EAAE,QAASC,GAAW,CAClC,GAAID,EAAKC,CAAM,EAAE,MAAQ,EAAG,CACxB,MAAMC,EAAOF,EAAKC,CAAM,EAExBC,EAAK,SAAW,OAAO,OAAOA,EAAK,IAAI,EAAE,MAAM,EAAG,KAAK,WAAW,EAClEA,EAAK,OAASD,EAEd,KAAK,QAAU,KAAK,QAAQ,OAAQE,GAAWF,IAAWE,EAAO,MAAM,EAEvE,KAAK,QAAU,CACX,GAAG,KAAK,QACRD,CACxB,CACiB,CACjB,CAAa,EAED,KAAK,mBAAqB,EAC1B,KAAK,kBAAoB,EACzB,KAAK,UAAY,GAEZ,KAAK,0BACN,KAAK,qBAAuB,IAEnC,EAED,MAAM,sBAAsBN,EAAY,CD7lBhD,IAAAvB,EC+lBY,IAAIA,EAAA,KAAK,YAAY,KAAK,iBAAiB,IAAvC,MAAAA,EAA0C,cAAe,CACzD,KAAK,+BAA+BuB,CAAU,EAC9C,MACH,CAED,KAAK,UAAY,GACjB,KAAK,QAAU,GACf,MAAMQ,EAAgB,CAClB,OAAQ,KAAK,kBACb,MAAO,CACvB,EAEkBC,EAAa,KAAK,YAAY,KAAK,iBAAiB,EAAE,WAC5D,GAAI,KAAK,cAAe,CACpB,MAAMb,EAAW,MAAM,KAAK,cAAc,QAAQI,EAAY,CAACS,CAAU,EAAG,KAAK,YAAc,EAAG,CAC9F,iBAAkB,EACtC,CAAiB,EAEKL,GAAOR,GAAA,YAAAA,EAAU,KAAK,KAAK,qBAAsB,CACnD,MAAO,EACP,KAAM,CAAE,CAC5B,EAEgBY,EAAc,MAAQJ,EAAK,MAC3BI,EAAc,SAAW,OAAO,OAAOJ,EAAK,IAAI,EAAE,MAAM,EAAG,KAAK,WAAW,CAC3F,KAAmB,CACH,MAAMM,EAAa,KAAK,kBAAkB,OAAOD,CAAU,EAE3D,IAAInC,EAAW,KAAK,mBAAmB,eAAemC,CAAU,EAC1D,KAAK,mBAAmBA,CAAU,EAClC,IAAIvC,EAAS,EAAG,KAAK,YAAc,CAAC,EAE1CI,EAAS,QAAQ0B,CAAU,EAE3B1B,EAAS,SAAS,KAAK,YAAc,CAAC,EACtCA,EAAS,kBAAkB,CAAC,EAC5B,MAAMqC,EAAsB,MAAM,KAAK,qBAAqB,wBAAwBF,CAAU,EAC9F,GAAI,CAACE,GAAuB,OAAO,KAAKA,CAAmB,EAAE,OAAS,EAAG,CACrEH,EAAc,MAAQ,EAEtB,KAAK,QAAQ,KAAKA,CAAa,EAC/B,KAAK,UAAY,GACZ,KAAK,0BACN,KAAK,qBAAuB,IAGhC,MACH,CAEDlC,EAAW,KAAK,qBAAqB,4BAA4BqC,EAAqBX,EAAY1B,CAAQ,EAE1G,MAAMsB,EAAW,MAAMc,EAAW,OAAOpC,EAAU,CAC/C,GAAG,OAAO,QAAQ,IAClB,YAAa,EACjC,CAAiB,EAEDkC,EAAc,MAAQZ,EAAS,MAC/BY,EAAc,SAAWZ,EAAS,MAAM,EAAG,KAAK,WAAW,CAC9D,CAEGY,EAAc,MAAQ,IACtB,KAAK,QAAU,KAAK,QAAQ,OAAQD,GAAW,KAAK,oBAAsBA,EAAO,MAAM,EAEvF,KAAK,QAAU,CACX,GAAG,KAAK,QACRC,CACpB,GAGY,KAAK,UAAY,GAEZ,KAAK,0BACN,KAAK,qBAAuB,GAEnC,EAED,+BAA+BR,EAAY,CACvC,KAAK,UAAY,GACjB,MAAMY,EAAS,CACX,MAAO,GACP,KAAMZ,CACtB,EACY,KAAK,QAAU,GACf,MAAMQ,EAAgB,CAAA,EAChBK,EAAiB,KAAK,YAAY,KAAK,iBAAiB,EAAE,cAChE,GAAI,CAAC7C,EAAY,aAAa,SAAS,EAAE,WAAW,IAAI6C,CAAc,EAClE,MAAM,IAAI,MAAM,+BAA+BA,CAAc,YAAY,EAG1D7C,EAAY,aAAa,SAAS,EAAE,WAAW,UAAU6C,CAAc,EAE/E,QAAQD,CAAM,EAAE,KAAMhB,GAAa,CAC1CY,EAAc,MAAQZ,EAAS,KAAK,MACpCY,EAAc,OAAS,KAAK,kBAC5BA,EAAc,SAAWZ,EAAS,KAElC,KAAK,QAAQ,KAAKY,CAAa,EAE/B,KAAK,UAAY,EACjC,CAAa,EACI,KAAK,0BACN,KAAK,qBAAuB,GAEnC,EAED,wBAAwB,CAAE,MAAAnB,EAAO,OAAAC,GAAU,CACvC,KAAK,kBAAoBD,EACzB,KAAK,mBAAqBC,EAC1B,KAAK,yBAAwB,CAChC,EAED,0BAA2B,CACvB,KAAK,MAAM,2BAA4B,CACnC,MAAO,KAAK,kBACZ,OAAQ,KAAK,kBAC7B,CAAa,CACJ,EAED,mBAAoB,CAOhB,GANI,KAAK,yBACD,KAAK,sBAAwB,IAC7B,KAAK,qBAAuB,GAIhC,EAAC,KAAK,qBAIV,IAAI,KAAK,oBAAsB,GAC3B,GAAI,KAAK,mBAAqB,EAAG,CAC7B,KAAK,oBAAsB,EAC3B,MAAMwB,EAAmB,OAAO,KAAK,KAAK,QAAQ,KAAK,kBAAkB,EAAE,QAAQ,EAAE,OACrF,KAAK,kBAAoBA,EAAmB,CAC/C,OAED,KAAK,mBAAqB,EAG9B,KAAK,wBAAwB,CACzB,MAAO,KAAK,kBACZ,OAAQ,KAAK,kBAC7B,CAAa,EACD,KAAK,oBAAmB,EAC3B,EAED,qBAAsB,CAOlB,GANI,KAAK,yBACD,KAAK,sBAAwB,KAAK,kBAAkB,OAAS,IAC7D,KAAK,qBAAuB,GAIhC,CAAC,KAAK,qBACN,OAGJ,MAAMC,EAAsB,KAAK,QAAQ,KAAK,kBAAkB,EAAE,SAAS,OAE3E,GAAI,KAAK,oBAAsBA,EAAsB,GAAKA,EAAsB,GAC5E,GAAI,KAAK,mBAAqB,KAAK,QAAQ,OAAS,EAEhD,GAAI,KAAK,QAAQ,KAAK,mBAAqB,CAAC,EACxC,KAAK,oBAAsB,EAC3B,KAAK,kBAAoB,MAEzB,aAIR,KAAK,mBAAqB,EAE9B,KAAK,wBAAwB,CACzB,MAAO,KAAK,kBACZ,OAAQ,KAAK,kBAC7B,CAAa,EACD,KAAK,oBAAmB,CAC3B,EAED,qBAAsB,CAElB,KAAK,UAAU,IAAM,CACjB,MAAMC,EAAmB,KAAK,MAAM,iBAC9BC,EAAaD,EAAiB,cAAc,aAAa,EACzDE,EAAaF,EAAiB,cAAc,qBAAqB,EAAE,aAEnEG,EAAwBH,EAAiB,aACzCI,EAAqBH,EAAW,UAAYC,EAE9CE,EAAqBF,EAAa,EAAIC,EAAwBH,EAAiB,UAC/EA,EAAiB,UAAYI,EAAqBF,EAAa,EAAIC,EAC5DC,EAAqBF,EAAa,EAAIF,EAAiB,YAC9DA,EAAiB,UAAYI,EAAqBF,EAAa,EAEnF,CAAa,CACJ,EAED,cAAe,CACX,KAAK,MAAM,cAAe,KAAK,kBAAmB,KAAK,kBAAkB,EAErE,KAAK,yBACD,KAAK,kBAAkB,OAAS,GAChC,KAAK,cAAc,KAAK,kBAAkB,KAAK,mBAAmB,EAAE,UAAU,CAGzF,EAED,sBAAsBT,EAAYY,EAAc,CAC5C,MAAI,CAAC,KAAK,YAAYZ,CAAU,GAAK,CAAC,KAAK,YAAYA,CAAU,EAAE,eAAeY,CAAY,EACnF,GAEJ,KAAK,YAAYZ,CAAU,EAAEY,CAAY,CACnD,EAED,kBAAkBZ,EAAY,CDrzBtC,IAAAhC,ECszBY,MAAMD,EAAS,KAAK,cAAc,sBAAsBiC,CAAU,EAElE,QAAOhC,EAAAD,GAAA,YAAAA,EAAQ,WAAR,YAAAC,EAAkB,OAAQ,eACpC,EAED,mBAAmBgC,EAAY,CAC3B,GAAI,KAAK,oBAAsB,GAC3B,OAAO,KAAK,kBAGhB,MAAMjC,EAAS,KAAK,cAAc,sBAAsBiC,CAAU,EAElE,OAAKjC,GAIEA,EAAO,SAAS,OAAS,SACnC,EAED,cAAciC,EAAY,CDz0BlC,IAAAhC,EC00BY,MAAMD,EAAS,KAAK,cAAc,sBAAsBiC,CAAU,EAElE,QAAOhC,EAAAD,GAAA,YAAAA,EAAQ,WAAR,YAAAC,EAAkB,OAAQ,eACpC,EAED,eAAgB,CACZ,MAAO,CAAC,KAAK,QAAQ,KAAM8B,GAAWA,EAAO,QAAU,CAAC,CAC3D,EAED,uBAAuBlB,EAAO,CAC1B,KAAK,oBAAsBA,CAC9B,EAED,6BAA8B,CAC1B,KAAK,SAAW,GAChB,KAAK,2BAA6B,GAClC,KAAK,wBAA0B,GAC/B,KAAK,wBAA0B,EAClC,EAED,sBAAuB,CACnB,OAAO,IAAI,QAASiC,GAAY,CAC5B,KAAK,2BAA2B,OAAO,IAAIpD,EAAS,EAAG,EAAE,CAAC,EAAE,KAAM0B,GAAa,CAC3E,KAAK,kBAAoBA,EACzB0B,EAAQ1B,CAAQ,CACpC,CAAiB,CACjB,CAAa,CACJ,EAED,kBAAkBI,EAAYuB,EAAQ,EAAG,CAErC,MAAMC,EAAQ,IAAI,OAAO,IAAIxB,EAAW,QAAQ,2BAA4B,MAAM,EAAE,aAAa,MAAM,EAEvG,GAAI,CAACA,GAAcA,EAAW,OAAS,EACnC,MAAO,GAGX,MAAMyB,EAAiB,CAAA,EAEvB,YAAK,kBAAkB,QAASjD,GAAW,CACvC,MAAMkD,EACF,OAAOlD,EAAO,SAAS,eAAkB,WACnCA,EAAO,SAAS,cAChB,KAAK,iCAETmD,EAAa,KAAK,IAAI,GAAGnD,EAAO,SAAS,KAAK,EAAE,GAAK,KAAK,IAAI,GAAGA,EAAO,SAAS,KAAK,GAAI,CAAC,EAEjG,GAAI,CAACmD,EACD,OAGJ,MAAMC,EAAUF,EAAQF,EAAOG,EAAYnD,EAAO,QAAQ,EAEtD,CAACoD,GAAWA,EAAQ,SAAW,GAInCH,EAAe,KAAK,GAAGG,EAAQ,OAAQtB,GAAS,CAACA,EAAK,WAAa,KAAK,IAAI,IAAIA,EAAK,SAAS,CAAC,CAAC,CAChH,CAAa,EAEDmB,EAAe,KAAK,GAAG,KAAK,iCAAiCD,CAAK,CAAC,EAE5DC,EAAe,MAAM,EAAGF,CAAK,CACvC,EAED,iCAAiCC,EAAOK,EAAOC,EAAU,CD34BjE,IAAArD,EAAAC,EAAAC,EAAAC,EAAAmD,EAAAC,EAAAC,EAAAC,EC44BY,MAAMrC,EAAQgC,EAAM,YAAa,EAAC,MAAML,CAAK,EACvCW,EAAc,GAAG,KAAK,IAAI,6BAA6B,CAAC,IAAIN,CAAK,GAAG,YAAa,EAAC,MAAML,CAAK,EAEnG,GAAK,CAAC3B,GAAS,CAACsC,GAAiB,GAAC1D,EAAAqD,GAAA,YAAAA,EAAU,SAAV,MAAArD,EAAkB,QAAS,GAACC,EAAAoD,GAAA,YAAAA,EAAU,SAAV,MAAApD,EAAkB,MAC5E,MAAO,GAGX,MAAM0D,IAAQzD,EAAAmD,GAAA,YAAAA,EAAU,SAAV,YAAAnD,EAAkB,UAASC,EAAAkD,GAAA,YAAAA,EAAU,SAAV,YAAAlD,EAAkB,MAErD,CAAE,KAAAyD,EAAM,KAAAC,EAAM,MAAAC,EAAO,OAAAlC,EAAQ,OAAAmC,CAAQ,EAAGV,EACxC7B,EAAW,CAAA,EAEjB,OAAIJ,GAAS2C,EAAO,OAChBvC,EAAS,KAAK,CACV,KAAAoC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAV,EACA,OAAAxB,EACA,MAAO+B,EACP,WAAWJ,GAAAD,EAAAS,EAAO,QAAP,YAAAT,EAAc,OAAd,YAAAC,EAAoB,SACnD,CAAiB,EAGDQ,EAAO,QACPvC,EAAS,KAAK,CACV,KAAAoC,EACA,KAAAC,EACA,MAAAC,EACA,OAAAlC,EACA,MAAOmC,EAAO,OACd,WAAWN,GAAAD,EAAAO,EAAO,SAAP,YAAAP,EAAe,OAAf,YAAAC,EAAqB,UAChC,OAAQ,EAC5B,CAAiB,EAGEjC,CACV,EAED,iCAAiCuB,EAAO,CACpC,OAAO,KAAK,kBAAkB,OAAO,CAACiB,EAAmBC,IAChDA,GAAA,MAAAA,EAAiB,WAAW,KAAK,cAAc,MAAMlB,GAInD,CACH,CACI,KAAM,gBACN,MAAMkB,GAAA,YAAAA,EAAiB,WAAY,iBACnC,MAAO,UACP,OAAQ,gBACR,MAAOA,GAAA,YAAAA,EAAiB,WAAW,KACnC,MAAO,CACH,KAAM,0BACN,OAAQ,CAAE,OAAQA,EAAgB,EAAI,CACzC,EACD,OAAQ,EACX,CACrB,EAhB2BD,EAiBZ,CAAE,CAAA,CACR,EAED,8BAA+B,CAC3B,KAAK,2BAA6B,CAAC,KAAK,2BAGxC,KAAK,WAAa,KAClB,KAAK,qBAAuB,GAC5B,KAAK,wBAA0B,GAC/B,KAAK,wBAA0B,EAClC,EAED,kBAAmB,CACf,OAAO,QAAQ,IAAI,CACf,KAAK,yBAA0B,EAC/B,KAAK,kBAAmB,CACxC,CAAa,EAAE,KAAM7C,GAAaA,EAAS,OAAQU,GAASA,GAAA,YAAAA,EAAM,KAAK,CAAC,CAC/D,EAED,0BAA2B,CACvB,OAAO,KAAK,uBACP,aAAa,CAAE,QAAS,KAAK,YAAY,EAAE,CAAE,EAC7C,KAAMV,GAAa,CAChB,MAAMK,EAAW,OAAO,KAAKL,CAAQ,EAErC,MAAO,CACH,OAAQ,kBACR,MAAOK,EAAS,OAChB,SAAUA,GAAA,YAAAA,EAAU,IAAKK,GAAS,KAAK,4BAA4BA,CAAI,EAC/F,CACA,CAAiB,EACA,MAAM,IAAM,CAAA,CAAE,CACtB,EAED,mBAAoB,CAChB,OAAO,IAAI,QAASgB,GAAY,CAC5B,MAAMqB,EAAQ,KAAK,sBAAsB,IAAI,KAAK,YAAY,EAAE,EAE1DxC,EAAU,CAAA,EAoBhB,GAlBAwC,EAAM,QAASrC,GAAS,CACpB,GAAI,CAAC,KAAK,IAAI,IAAI,GAAGA,EAAK,MAAM,OAAO,EACnC,OAGCH,EAAQ,eAAeG,EAAK,MAAM,IACnCH,EAAQG,EAAK,MAAM,EAAI,KAAK,mBAAmB,eAAeA,EAAK,MAAM,EACnElC,EAAU,KAAK,mBAAmBkC,EAAK,MAAM,CAAC,EAC9C,IAAIpC,EAAS,EAAG,EAAE,GAG5B,MAAM0E,EAAM,CACRtC,EAAK,GACL,GAAGH,EAAQG,EAAK,MAAM,EAAE,GAChD,EACoBH,EAAQG,EAAK,MAAM,EAAE,OAAOsC,CAAG,CACnD,CAAiB,EAEG,OAAO,KAAKzC,CAAO,EAAE,SAAW,EAAG,CACnCmB,IACA,MACH,CAED,KAAK,cAAc,YAAYnB,EAAS,CAAE,iBAAkB,GAAM,EAAE,KAAM0C,GAAiB,CACvF,GAAI,CAACA,EAAa,KAAM,CACpBvB,IACA,MACH,CAED,MAAMwB,EAAY,CAAA,EAElBH,EAAM,QAASrC,GAAS,CAGpB,MAAMyC,GAFWF,EAAa,KAAKvC,EAAK,MAAM,EAAIuC,EAAa,KAAKvC,EAAK,MAAM,EAAE,KAAO,CAAA,GAE3DA,EAAK,EAAE,EAEhCyC,GACAD,EAAU,KAAK,CACX,KAAMC,EACN,OAAQzC,EAAK,MAC7C,CAA6B,CAE7B,CAAqB,EAEDgB,EAAQ,CACJ,OAAQ,oBACR,MAAOwB,EAAU,OACjB,SAAUA,CAClC,CAAqB,CACrB,CAAiB,CACjB,CAAa,CACJ,EAED,4BAA4B/C,EAAK,CDriCzC,IAAAtB,ECsiCY,KAAM,CACFuE,EACAC,CAChB,EAAgBlD,EAAI,MAAM,GAAG,EACXvB,EAAS,KAAK,cAAc,eAAe,OAAQwE,CAAU,EAEnE,GAAI,CAACxE,EACD,MAAO,GAGX,KAAM,CAAE,OAAAgE,EAAQ,GAAGV,CAAQ,EAAKtD,EAAO,SAEvC,GAAI,OAAOsD,EAAS,eAAkB,WAQlC,OANiBA,EAAS,cACtB,IAAI,OAAO,IAAI,KAAK,IAAIA,EAAS,KAAK,EAAE,aAAa,MAAM,EAC3D,KAAK,IAAIA,EAAS,MAAO,CAAC,EAC1BtD,EAAO,QAC3B,EAEgC,KAAM8B,GAASA,EAAK,MAAM,OAAS2C,CAAS,EAGhE,MAAMb,EAAQ,OAAO,OAAOI,CAAM,EAAE,KAAMlC,GAASA,EAAK,OAAS2C,CAAS,EAE1E,MAAO,CACH,GAAGnB,EACH,MAAAM,EACA,WAAW3D,EAAA2D,GAAA,YAAAA,EAAO,OAAP,YAAA3D,EAAa,UACxB,OAAQ2D,EAAM,WAAa,QAC3C,CACS,CACJ,CACL,CAAC"}