{"version":3,"file":"index-Dlg2l93J.js","sources":["../../../app/administration/src/module/sw-newsletter-recipient/page/sw-newsletter-recipient-list/sw-newsletter-recipient-list.html.twig","../../../app/administration/src/module/sw-newsletter-recipient/page/sw-newsletter-recipient-list/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_newsletter_recipient_list %}\n<sw-page class=\"sw-newsletter-recipient-list\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_newsletter_recipient_list_search_bar %}\n    <template #search-bar>\n        <sw-search-bar\n            initial-search-type=\"newsletter_recipient\"\n            :placeholder=\"$tc('sw-newsletter-recipient.general.placeholderSearchBarSnippets')\"\n            :initial-search=\"term\"\n            @search=\"onSearch\"\n        />\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_newsletter_recipient_list_smart_bar_header %}\n    <template #smart-bar-header>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_newsletter_recipient_list_smart_bar_header_title %}\n        <h2>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_newsletter_recipientlist_list_smart_bar_header_title_text %}\n            {{ $tc('global.sw-admin-menu.navigation.mainMenuItemMarketing') }}\n            <sw-icon name=\"regular-chevron-right-xs\" />\n            {{ $tc('sw-newsletter-recipient.list.textHeadline') }}\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_newsletter_recipient_list_smart_bar_header_amount %}\n            <span\n                v-if=\"!isLoading\"\n                class=\"sw-page__smart-bar-amount\"\n            >\n                ({{ total }})\n            </span>\n            {% endblock %}\n        </h2>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_newsletter_recipientlist_list_content %}\n    <template #content>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_newsletter_recipientlist_list_content_card %}\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_newsletter_recipientlist_list_grid %}\n        <sw-entity-listing\n            v-if=\"items && entitySearchable\"\n            ref=\"swNewsletterRecipientGrid\"\n            class=\"sw-newsletter-recipient-list__grid\"\n            :is-loading=\"isLoading\"\n            identifier=\"sw-newsletter-recipient\"\n            :show-selection=\"false\"\n            :items=\"items\"\n            :columns=\"columns\"\n            :repository=\"repository\"\n            detail-route=\"sw.newsletter.recipient.detail\"\n            :sort-by=\"currentSortBy\"\n            :sort-direction=\"sortDirection\"\n            :disable-data-fetching=\"true\"\n            :allow-view=\"acl.can('newsletter_recipient.viewer')\"\n            :allow-edit=\"acl.can('newsletter_recipient.editor')\"\n            :allow-inline-edit=\"acl.can('newsletter_recipient.editor')\"\n            :allow-delete=\"acl.can('newsletter_recipient.deleter')\"\n            @page-change=\"onPageChange\"\n            @column-sort=\"onSortColumn\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_newsletter_recipientlist_list_grid_email %}\n            <template #column-email=\"{ item }\">\n                <p>{{ emailIdnFilter(item.email) }}</p>\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_newsletter_recipientlist_list_grid_name %}\n            <template\n                #column-name=\"{ item, compact, isInlineEdit }\"\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_newsletter_recipientlist_list_grid_inline_edit_name %}\n                <template v-if=\"isInlineEdit\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_newsletter_recipientlist_list_grid_inline_edit_name %}\n                    <sw-text-field\n                        v-model:value=\"item.name\"\n                        class=\"sw-newsletter-recipient-list__inline-edit-name\"\n                        :size=\"compact ? 'small' : 'default'\"\n                    />\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_newsletter_recipientlist_list_grid_name_link %}\n                <template v-else>\n                    {{ item.name }}\n                </template>\n                {% endblock %}\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_newsletter_recipientlist_list_grid_status %}\n            <template\n                #column-status=\"{ item, compact, isInlineEdit }\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_newsletter_recipientlist_list_grid_status_notSet %}\n                <template v-if=\"item.status === 'notSet'\">\n                    <sw-label\n                        size=\"medium\"\n                        appearance=\"pill\"\n                    >\n                        {{ $tc('sw-newsletter-recipient.list.notSet') }}\n                    </sw-label>\n                </template>\n                {% endblock %}\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_newsletter_recipientlist_list_grid_status_optIn %}\n                <template v-else-if=\"item.status === 'optIn'\">\n                    <sw-label\n                        size=\"medium\"\n                        appearance=\"pill\"\n                    >\n                        {{ $tc('sw-newsletter-recipient.list.optIn') }}\n                    </sw-label>\n                </template>\n                {% endblock %}\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_newsletter_recipientlist_list_grid_status_optOut %}\n                <template v-else-if=\"item.status === 'optOut'\">\n                    <sw-label\n                        size=\"medium\"\n                        appearance=\"pill\"\n                    >\n                        {{ $tc('sw-newsletter-recipient.list.optOut') }}\n                    </sw-label>\n                </template>\n                {% endblock %}\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_newsletter_recipientlist_list_grid_status_direct %}\n                <template v-else-if=\"item.status === 'direct'\">\n                    <sw-label\n                        size=\"medium\"\n                        appearance=\"pill\"\n                    >\n                        {{ $tc('sw-newsletter-recipient.list.direct') }}\n                    </sw-label>\n                </template>\n                {% endblock %}\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_newsletter_recipientlist_list_grid_updated_at %}\n            <template\n                #column-updatedAt=\"{ item }\"\n            >\n                {{ dateFilter(item.updatedAt) }}\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_newsletter_recipientlist_list_grid_created_at %}\n            <template\n                #column-createdAt=\"{ item }\"\n            >\n                {{ dateFilter(item.createdAt) }}\n            </template>\n            {% endblock %}\n\n        </sw-entity-listing>\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_newsletter_recipient_list_empty_state %}\n        <template v-if=\"!isLoading && !total\">\n            <sw-empty-state\n                v-if=\"isValidTerm(term)\"\n                :title=\"$tc('sw-empty-state.messageNoResultTitle')\"\n            >\n                <template #default>\n                    {{ $tc('sw-empty-state.messageNoResultSublineBefore') }}\n                    <router-link\n                        class=\"sw-empty-state__description-link\"\n                        :to=\"{ name: 'sw.profile.index.searchPreferences' }\"\n                    >\n                        {{ $tc('sw-empty-state.messageNoResultSublineLink') }}\n                    </router-link>\n                    {{ $tc('sw-empty-state.messageNoResultSublineAfter') }}\n                </template>\n            </sw-empty-state>\n\n            <sw-empty-state\n                v-else\n                :title=\"$tc('sw-newsletter-recipient.list.messageEmpty')\"\n            />\n        </template>\n        {% endblock %}\n        {% endblock %}\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_newsletter_recipient_list_sidebar %}\n    <template #sidebar>\n        <sw-sidebar>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_newsletter_recipient_list_sidebar_refresh %}\n            <sw-sidebar-item\n                icon=\"regular-undo\"\n                :title=\"$tc('sw-newsletter-recipient.list.titleSidebarItemRefresh')\"\n                @click=\"onRefresh\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_newsletter_recipient_list_sidebar_filter %}\n            <sw-sidebar-item\n                ref=\"filterSideBar\"\n                icon=\"regular-filter\"\n                :title=\"$tc('sw-newsletter-recipient.list.titleSidebarItemFilter')\"\n                @sw-sidebar-item-close-content=\"closeContent\"\n                @click=\"closeContent\"\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_newsletter_recipient_list_sidebar_filter_status %}\n                <sw-sidebar-collapse>\n                    <template #header>\n                        {{ $tc('sw-newsletter-recipient.list.status') }}\n                    </template>\n                    <template #content>\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_newsletter_recipient_list_sidebar_filter_status_not_set %}\n                        <sw-newsletter-recipient-filter-switch\n                            id=\"notSet\"\n                            group=\"status\"\n                            :label=\"$tc('sw-newsletter-recipient.list.notSet')\"\n                            @update:value=\"onChange\"\n                        />\n                        {% endblock %}\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_newsletter_recipient_list_sidebar_filter_status_direct %}\n                        <sw-newsletter-recipient-filter-switch\n                            id=\"direct\"\n                            group=\"status\"\n                            :label=\"$tc('sw-newsletter-recipient.list.direct')\"\n                            @update:value=\"onChange\"\n                        />\n                        {% endblock %}\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_newsletter_recipient_list_sidebar_filter_status_opt_in %}\n                        <sw-newsletter-recipient-filter-switch\n                            id=\"optIn\"\n                            group=\"status\"\n                            :label=\"$tc('sw-newsletter-recipient.list.optIn')\"\n                            @update:value=\"onChange\"\n                        />\n                        {% endblock %}\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_newsletter_recipient_list_sidebar_filter_status_opt_out %}\n                        <sw-newsletter-recipient-filter-switch\n                            id=\"optOut\"\n                            group=\"status\"\n                            :label=\"$tc('sw-newsletter-recipient.list.optOut')\"\n                            @update:value=\"onChange\"\n                        />\n                        {% endblock %}\n                    </template>\n                </sw-sidebar-collapse>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_newsletter_recipient_list_sidebar_filter_language %}\n                <sw-sidebar-collapse>\n                    <template #header>\n                        {{ $tc('sw-newsletter-recipient.general.language') }}\n                    </template>\n                    <template #content>\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_newsletter_recipient_list_sidebar_filter_language_items %}\n                        <div\n                            v-for=\"(item, index) in languageFilters\"\n                            :key=\"index\"\n                        >\n                            <sw-newsletter-recipient-filter-switch\n                                :id=\"item.id\"\n                                group=\"languageId\"\n                                :label=\"item.name\"\n                                @update:value=\"onChange\"\n                            />\n                        </div>\n                        {% endblock %}\n                    </template>\n                </sw-sidebar-collapse>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_newsletter_recipient_list_sidebar_filter_sales_channel %}\n                <sw-sidebar-collapse>\n                    <template #header>\n                        {{ $tc('sw-newsletter-recipient.general.salesChannel') }}\n                    </template>\n                    <template #content>\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_newsletter_recipient_list_sidebar_filter_sales_channel_items %}\n                        <div\n                            v-for=\"(item, index) in salesChannelFilters\"\n                            :key=\"index\"\n                        >\n                            <sw-newsletter-recipient-filter-switch\n                                :id=\"item.id\"\n                                group=\"salesChannelId\"\n                                :label=\"item.translated.name\"\n                                @update:value=\"onChange\"\n                            />\n                        </div>\n                        {% endblock %}\n                    </template>\n                </sw-sidebar-collapse>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_newsletter_recipient_list_sidebar_filter_sales_tags %}\n                <sw-sidebar-collapse>\n                    <template #header>\n                        {{ $tc('sw-newsletter-recipient.general.tags') }}\n                    </template>\n                    <template #content>\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_newsletter_recipient_list_sidebar_filter_sales_tags_select %}\n                        <sw-entity-multi-select\n                            v-model:entityCollection=\"tagCollection\"\n                            @update:entity-collection=\"onChange\"\n                        />\n                        {% endblock %}\n                    </template>\n                </sw-sidebar-collapse>\n                {% endblock %}\n            </sw-sidebar-item>\n            {% endblock %}\n\n        </sw-sidebar>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n","import template from './sw-newsletter-recipient-list.html.twig';\nimport './sw-newsletter-recipient-list.scss';\n\n/**\n * @package buyers-experience\n */\n\nconst {\n    Mixin,\n    Data: { Criteria, EntityCollection },\n} = Cicada;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            items: null,\n            total: 0,\n            repository: null,\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            filterSidebarIsOpen: false,\n            languageFilters: [],\n            salesChannelFilters: [],\n            tagFilters: [],\n            internalFilters: {},\n            tagCollection: null,\n            searchConfigEntity: 'newsletter_recipient',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        columns() {\n            return this.getColumns();\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        tagRepository() {\n            return this.repositoryFactory.create('tag');\n        },\n\n        dateFilter() {\n            return Cicada.Filter.getByName('date');\n        },\n\n        emailIdnFilter() {\n            return Cicada.Filter.getByName('decode-idn-email');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.tagCollection = new EntityCollection('/tag', 'tag', Cicada.Context.api, new Criteria(1, 25));\n\n            const criteria = new Criteria(1, 100);\n            this.repositoryFactory\n                .create('language')\n                .search(criteria, Cicada.Context.api)\n                .then((items) => {\n                    this.languageFilters = items;\n                });\n\n            this.salesChannelRepository.search(new Criteria(1, 100)).then((salesChannels) => {\n                this.salesChannelFilters = salesChannels;\n            });\n\n            this.getList();\n        },\n\n        async getList() {\n            this.isLoading = true;\n            let criteria = new Criteria(this.page, this.limit);\n            criteria.setTerm(this.term);\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection));\n            criteria.addAssociation('salesChannel');\n\n            Object.values(this.internalFilters).forEach((item) => {\n                criteria.addFilter(item);\n            });\n\n            criteria = await this.addQueryScores(this.term, criteria);\n            if (!this.entitySearchable) {\n                this.isLoading = false;\n                this.total = 0;\n\n                return;\n            }\n\n            if (this.freshSearchTerm) {\n                criteria.resetSorting();\n            }\n\n            this.repository = this.repositoryFactory.create('newsletter_recipient');\n            this.repository\n                .search(criteria)\n                .then((searchResult) => {\n                    this.items = searchResult;\n                    this.total = searchResult.total;\n\n                    this.isLoading = false;\n                })\n                .catch(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        handleTagFilter(filter) {\n            if (filter.length === 0) {\n                delete this.internalFilters.tags;\n                return;\n            }\n\n            const ids = filter.map((item) => {\n                return item.id;\n            });\n\n            this.internalFilters.tags = Criteria.equalsAny('tags.id', ids);\n        },\n\n        handleBooleanFilter(filter) {\n            if (!Array.isArray(this[filter.group])) {\n                this[filter.group] = [];\n            }\n\n            if (!filter.value) {\n                this[filter.group] = this[filter.group].filter((x) => {\n                    return x !== filter.id;\n                });\n\n                if (this[filter.group].length > 0) {\n                    this.internalFilters[filter.group] = Criteria.equalsAny(filter.group, this[filter.group]);\n                } else {\n                    delete this.internalFilters[filter.group];\n                }\n\n                return;\n            }\n\n            this[filter.group].push(filter.id);\n            this.internalFilters[filter.group] = Criteria.equalsAny(filter.group, this[filter.group]);\n        },\n\n        onChange(filter) {\n            if (filter === null) {\n                filter = [];\n            }\n\n            if (Array.isArray(filter)) {\n                this.handleTagFilter(filter);\n                this.getList();\n                return;\n            }\n\n            this.handleBooleanFilter(filter);\n            this.getList();\n        },\n\n        closeContent() {\n            if (this.filterSidebarIsOpen) {\n                this.$refs.filterSideBar.closeContent();\n                this.filterSidebarIsOpen = false;\n                return;\n            }\n\n            this.$refs.filterSideBar.openContent();\n            this.filterSidebarIsOpen = true;\n        },\n\n        getColumns() {\n            return [\n                {\n                    property: 'email',\n                    label: 'sw-newsletter-recipient.list.email',\n                    routerLink: 'sw.newsletter.recipient.detail',\n                    allowResize: true,\n                    inlineEdit: 'string',\n                },\n                {\n                    property: 'name',\n                    inlineEdit: 'string',\n                    label: 'sw-newsletter-recipient.list.name',\n                    allowResize: true,\n                    primary: true,\n                },\n                {\n                    property: 'salesChannel.name',\n                    label: 'sw-newsletter-recipient.list.salesChannel',\n                    allowResize: true,\n                    primary: false,\n                    visible: true,\n                },\n                {\n                    property: 'status',\n                    label: 'sw-newsletter-recipient.list.status',\n                    allowResize: true,\n                },\n                {\n                    property: 'zipCode',\n                    label: 'sw-newsletter-recipient.list.zipCode',\n                    allowResize: true,\n                    align: 'right',\n                    visible: false,\n                },\n                {\n                    property: 'city',\n                    label: 'sw-newsletter-recipient.list.city',\n                    allowResize: true,\n                    visible: false,\n                },\n                {\n                    property: 'street',\n                    label: 'sw-newsletter-recipient.list.street',\n                    allowResize: true,\n                    visible: false,\n                },\n                {\n                    property: 'updatedAt',\n                    label: 'sw-newsletter-recipient.list.updatedAt',\n                    allowResize: true,\n                    visible: true,\n                },\n                {\n                    property: 'createdAt',\n                    label: 'sw-newsletter-recipient.list.createdAt',\n                    allowResize: true,\n                    visible: true,\n                },\n            ];\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","EntityCollection","index","criteria","items","salesChannels","item","searchResult","filter","ids","x"],"mappings":"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"}