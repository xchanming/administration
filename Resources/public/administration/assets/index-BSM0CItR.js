const e=`{% block sw_users_permissions %} <sw-page class="sw-users-permissions"> {% block sw_users_permissions_smart_bar_header %} <template #smart-bar-header> <h2> {% block sw_users_permissions_smart_bar_header_title_text %} {{ $tc('sw-settings.index.title') }} <sw-icon name="regular-chevron-right-xs" small /> {{ $tc('sw-users-permissions.general.label') }} {% endblock %} </h2> </template> {% endblock %} {% block sw_users_permissions_smart_bar_actions %} <template #smart-bar-actions> <sw-button-process variant="primary" :is-loading="isLoading" :process-success="isSaveSuccessful" :disabled="!acl.can('users_and_permissions.editor')" @click="onSave" @update:process-success="onSaveFinish" > {{ $tc('global.default.save') }} </sw-button-process> </template> {% endblock %} {% block sw_users_permissions_content %} <template #content> <sw-card-view> {% block sw_users_permissions_content_user_list %} <sw-users-permissions-user-listing ref="userListing" /> <sw-users-permissions-role-listing ref="roleListing" @get-list="reloadUserListing" /> <sw-users-permissions-configuration ref="configuration" @loading-change="onChangeLoading" /> {% endblock %} </sw-card-view> </template> {% endblock %} </sw-page> {% endblock %}`,{Mixin:i}=Shopware,t={template:e,inject:["feature","acl"],mixins:[i.getByName("notification")],data(){return{isLoading:!0,isSaveSuccessful:!1}},metaInfo(){return{title:this.$createTitle()}},methods:{reloadUserListing(){this.$refs.userListing&&this.$refs.userListing.getList(),this.$refs.roleListing&&this.$refs.roleListing.getList()},onChangeLoading(s){this.isLoading=s},async onSave(){this.isLoading=!0,this.isSaveSuccessful=!1;try{await this.$refs.configuration.$refs.systemConfig.saveAll(),this.isLoading=!1,this.isSaveSuccessful=!0}catch(s){this.isLoading=!1,this.createNotificationError({message:s.message})}},onSaveFinish(){this.isSaveSuccessful=!1}}};export{t as default};
