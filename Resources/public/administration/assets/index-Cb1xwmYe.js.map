{"version":3,"file":"index-Cb1xwmYe.js","sources":["../../../app/administration/src/module/sw-product/component/sw-product-variants/sw-product-variants-configurator/sw-product-variants-configurator-restrictions/sw-product-variants-configurator-restrictions.html.twig","../../../app/administration/src/module/sw-product/component/sw-product-variants/sw-product-variants-configurator/sw-product-variants-configurator-restrictions/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_product_variants_configurator_restrictions %}\n<div class=\"sw-product-variants-configurator-restrictions\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variants_configurator_restrictions_search %}\n    <div class=\"sw-product-variants-configurator-restrictions__search\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_configurator_restrictions_search_field %}\n        <sw-simple-search-field\n            v-model:value=\"term\"\n            size=\"small\"\n            variant=\"form\"\n            :placeholder=\"$tc('sw-product.variations.configuratorModal.searchRestrictions')\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_configurator_restrictions_buttons %}\n        <sw-button\n            variant=\"ghost\"\n            size=\"small\"\n            @click=\"addEmptyRestrictionCombination\"\n        >\n            {{ $tc('sw-product.variations.configuratorModal.addNewRestriction') }}\n        </sw-button>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variants_configurator_restrictions_grid_wrapper %}\n    <div class=\"sw-product-variants-configurator-restrictions__grid-wrapper\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_configurator_restrictions_data_grid %}\n        <sw-data-grid\n            v-if=\"product.variantRestrictions\"\n            ref=\"swDataGrid\"\n            :data-source=\"filteredRestrictions\"\n            :columns=\"restrictionColumns\"\n            :show-selection=\"false\"\n            :compact-mode=\"false\"\n            full-page\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_configurator_restrictions_data_grid_column_id %}\n            <template\n                #column-id=\"{ item, isInlineEdit, compact }\"\n            >\n                <template\n                    v-for=\"restriction in getRestrictionsWithNaming(item.id).values\"\n                    :key=\"restriction.id\"\n                >\n                    <span\n                        class=\"sw-product-variants-configurator-restrictions__group-name\"\n                    >\n                        {{ restriction.group }}:\n                    </span>\n                    <sw-label\n                        v-for=\"option in restriction.options\"\n                        :key=\"option.id\"\n                        ghost\n                    >\n                        {{ option }}\n                    </sw-label>\n                </template>\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_configurator_restrictions_data_grid_actions %}\n            <template\n                #actions=\"{ item }\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variants_configurator_restrictions_data_grid_actions_items %}\n                <sw-context-menu-item @click=\"editRestrictionCombination(item)\">\n                    {{ $tc('sw-product.variations.configuratorModal.editRestriction') }}\n                </sw-context-menu-item>\n\n                <sw-context-menu-item\n                    variant=\"danger\"\n                    @click=\"deleteRestrictionCombination(item)\"\n                >\n                    {{ $tc('sw-product.variations.configuratorModal.deleteRestriction') }}\n                </sw-context-menu-item>\n                {% endblock %}\n            </template>\n            {% endblock %}\n        </sw-data-grid>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variants_configurator_restrictions_modal %}\n    <sw-modal\n        v-if=\"restrictionModalIsOpen\"\n        :title=\"$tc('sw-product.variations.configuratorModal.singleRestrictionAddTitle')\"\n        class=\"sw-product-variants-configurator-restrictions__modal\"\n        @modal-close=\"cancelAddRestriction\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_configurator_restrictions_modal_main %}\n        <div class=\"sw-product-variants-configurator-restrictions__modal-main\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_configurator_restrictions_modal_main_restriction_selection %}\n            <sw-product-restriction-selection\n                v-for=\"(restriction, index) in actualRestriction.values\"\n                :key=\"restriction.id\"\n                :groups-with-options=\"groupsWithOptions\"\n                :restriction=\"restriction\"\n                @restriction-delete=\"deleteRestriction\"\n            >\n\n                <template #contentAfter>\n                    <p\n                        v-if=\"index < actualRestrictionValueLength - 1\"\n                        class=\"sw-product-variants-configurator-restrictions__seperator\"\n                    >\n                        {{ $tc('sw-product.variations.configuratorModal.singleRestrictionSeperation') }}\n                    </p>\n                </template>\n            </sw-product-restriction-selection>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_configurator_restrictions_modal_main_button_new_restriction %}\n            <sw-button\n                class=\"sw-product-variants-configurator-restrictions__button-new-restriction\"\n                @click=\"addEmptyRestriction\"\n            >\n                {{ $tc('sw-product.variations.configuratorModal.singleRestrictionSeperation') }}\n            </sw-button>\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variants_configurator_restrictions_modal_footer %}\n        <template #modal-footer>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_configurator_restrictions_modal_footer_cancel %}\n            <sw-button\n                size=\"small\"\n                @click=\"cancelAddRestriction\"\n            >\n                {{ $tc('global.default.cancel') }}\n            </sw-button>\n            {% endblock %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variants_configurator_restrictions_modal_footer_save_add_restriction %}\n            <sw-button\n                variant=\"primary\"\n                size=\"small\"\n                @click=\"saveAddRestriction\"\n            >\n                {{ $tc('sw-product.variations.configuratorModal.save') }}\n            </sw-button>\n            {% endblock %}\n        </template>\n        {% endblock %}\n    </sw-modal>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variants_configurator_restrictions_loader %}\n    <sw-loader v-if=\"isLoading\" />\n    {% endblock %}\n\n</div>\n{% endblock %}\n","/*\n * @package inventory\n */\n\nimport template from './sw-product-variants-configurator-restrictions.html.twig';\nimport './sw-product-variants-configurator-restrictions.scss';\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    props: {\n        product: {\n            type: Object,\n            required: true,\n        },\n\n        selectedGroups: {\n            type: Array,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            term: '',\n            restrictionModalIsOpen: false,\n            isLoading: true,\n            groupsWithOptions: [],\n            actualRestriction: {},\n        };\n    },\n\n    computed: {\n        restrictionColumns() {\n            return [\n                {\n                    property: 'id',\n                    label: 'sw-product.variations.configuratorModal.restrictedCombinations',\n                    rawData: true,\n                },\n            ];\n        },\n\n        actualRestrictionValueLength() {\n            return this.actualRestriction.values.length;\n        },\n\n        filteredRestrictions() {\n            if (!Array.isArray(this.product.variantRestrictions)) {\n                return [];\n            }\n            if (this.term.length <= 0) {\n                return this.product.variantRestrictions;\n            }\n\n            // get restriction names for ids\n            const namedRestriction = this.product.variantRestrictions.map((restriction) => {\n                return this.getRestrictionsWithNaming(restriction.id);\n            });\n\n            // search for matching content\n            const matchingIds = namedRestriction.reduce((acc, restriction) => {\n                let termMatched = false;\n\n                restriction.values.forEach((value) => {\n                    if (value.group.toLowerCase().includes(this.term.toLowerCase())) {\n                        termMatched = true;\n                    }\n\n                    value.options.find((option) => {\n                        if (option.toLowerCase().includes(this.term.toLowerCase())) {\n                            termMatched = true;\n                            return true;\n                        }\n                        return false;\n                    });\n                });\n\n                if (termMatched) {\n                    acc.push(restriction.id);\n                }\n                return acc;\n            }, []);\n\n            // return only the restrictions with matching id\n            return this.product.variantRestrictions.filter((restriction) => matchingIds.indexOf(restriction.id) >= 0);\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.filterEmptyValues();\n\n            // Load the groups with the related options\n            this.groupsWithOptions = this.selectedGroups.map((group) => {\n                return {\n                    group: group,\n                    options: this.getOptionsForGroupId(group.id),\n                };\n            });\n\n            this.isLoading = false;\n        },\n\n        getOptionsForGroupId(groupId) {\n            return this.product.configuratorSettings.filter((element) => {\n                return !element.isDeleted && element.option.groupId === groupId;\n            });\n        },\n\n        getRestrictionsWithNaming(restrictionId) {\n            // get the restriction from the param\n            const cRestriction = this.product.variantRestrictions.find((actRestriction) => {\n                return actRestriction.id === restrictionId;\n            });\n\n            // return the restriction with names\n            return {\n                id: cRestriction.id,\n                values: cRestriction.values.map((value) => {\n                    const actualGroup = this.selectedGroups.find((group) => {\n                        return group.id === value.group;\n                    });\n\n                    // When no group was found\n                    if (!actualGroup) {\n                        return {\n                            group: '',\n                            options: [],\n                        };\n                    }\n\n                    const optionNames = value.options.reduce((acc, optionId) => {\n                        const idOfOption = optionId.optionId ? optionId.optionId : optionId;\n\n                        const actualOption = this.product.configuratorSettings.find((sOption) => {\n                            return idOfOption === sOption.optionId;\n                        });\n\n                        if (actualOption?.option) {\n                            acc.push(actualOption.option.translated.name);\n                        }\n                        return acc;\n                    }, []);\n\n                    return {\n                        group: actualGroup.translated.name,\n                        options: optionNames,\n                    };\n                }),\n            };\n        },\n\n        filterEmptyValues() {\n            if (!Array.isArray(this.product.variantRestrictions)) {\n                return false;\n            }\n            this.product.variantRestrictions = this.product.variantRestrictions.filter((restriction) => {\n                restriction.values = restriction.values.filter((value) => {\n                    value.options = value.options.filter((option) => {\n                        return this.product.configuratorSettings.find((sOption) => {\n                            return option === sOption.optionId;\n                        });\n                    });\n                    return value.options.length > 0;\n                });\n                return restriction.values.length > 0;\n            });\n            return true;\n        },\n\n        addEmptyRestrictionCombination() {\n            const uniqueId = String(new Date().valueOf()).split('').reverse().join('');\n            this.actualRestriction = {\n                id: uniqueId,\n                values: [],\n            };\n            this.addEmptyRestriction();\n            this.restrictionModalIsOpen = true;\n        },\n\n        addEmptyRestriction() {\n            const uniqueId = String(new Date().valueOf()).split('').reverse().join('');\n            const firstGroup = this.groupsWithOptions[0].group;\n            this.actualRestriction.values.push({\n                id: uniqueId,\n                group: firstGroup.id,\n                options: [],\n            });\n        },\n\n        cancelAddRestriction() {\n            this.actualRestriction = {};\n            this.restrictionModalIsOpen = false;\n        },\n\n        saveAddRestriction() {\n            if (!Array.isArray(this.product.variantRestrictions)) {\n                this.product.variantRestrictions = [];\n            }\n\n            const exists = this.product.variantRestrictions.some((restriction) => {\n                return restriction.id === this.actualRestriction.id;\n            });\n\n            if (!exists) {\n                this.product.variantRestrictions.push(this.actualRestriction);\n            }\n\n            this.actualRestriction = {};\n            this.restrictionModalIsOpen = false;\n        },\n\n        editRestrictionCombination(restriction) {\n            this.actualRestriction = restriction;\n            this.restrictionModalIsOpen = true;\n        },\n\n        deleteRestrictionCombination(deleteRestriction) {\n            this.product.variantRestrictions = this.product.variantRestrictions.filter((restriction) => {\n                return restriction.id !== deleteRestriction.id;\n            });\n        },\n\n        deleteRestriction(deleteRestriction) {\n            this.actualRestriction.values = this.actualRestriction.values.filter((restriction) => {\n                return restriction !== deleteRestriction;\n            });\n        },\n    },\n};\n"],"names":["template","index","matchingIds","restriction","acc","termMatched","value","option","group","groupId","element","restrictionId","cRestriction","actRestriction","actualGroup","optionNames","optionId","idOfOption","actualOption","sOption","uniqueId","firstGroup","deleteRestriction"],"mappings":"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"}