const d=`{% block sw_media_list_selection_v2 %} <div class="sw-media-list-selection-v2"> {% block sw_media_list_selection_v2_upload %} <sw-upload-listener :upload-tag="uploadId" @media-upload-add="onUploadsAdded" @media-upload-finish="successfulUpload" @media-upload-fail="onUploadFailed" /> <sw-media-upload-v2 :upload-tag="uploadId" variant="regular" :default-folder="defaultFolderName" @media-upload-sidebar-open="onMediaUploadButtonOpenSidebar" /> {% endblock %} {% block sw_media_list_selection_v2_grid %} <div ref="grid" class="sw-media-list-selection-v2__grid" :style="gridAutoRows" > <sw-loader v-if="entity.isLoading" /> {% block sw_media_list_selection_v2_grid_items %} <sw-media-list-selection-item-v2 v-for="(mediaItem, i) in mediaItems" :key="mediaItem?.url" v-draggable="{ dragGroup: 'media-items', data: mediaItem, onDragEnter: onDeboundDragDrop }" v-droppable="{ dragGroup: 'media-items', data: mediaItem }" :item="mediaItem" @item-remove="removeItem(mediaItem, i)" /> {% endblock %} </div> {% endblock %} </div> {% endblock %}`,{Mixin:a,Context:n}=Shopware,s=Shopware.Utils,r={template:d,inject:["repositoryFactory","mediaService"],emits:["open-sidebar","upload-finish","item-sort","item-remove"],mixins:[a.getByName("notification")],props:{entity:{type:Object,required:!0},entityMediaItems:{type:Array,required:!0},uploadTag:{type:String,required:!1,default:null},defaultFolderName:{type:String,required:!1,default:null}},data(){return{columnCount:8,columnWidth:"90px"}},computed:{mediaRepository(){return this.repositoryFactory.create("media")},currentCount(){return this.entityMediaItems.length},mediaItems(){const e=this.columnCount*2;if(this.currentCount>=e)return this.entityMediaItems;const t=[...this.entityMediaItems];return t.splice(this.currentCount,0,...this.createPlaceholders(e-this.currentCount)),t.forEach((i,o)=>{i.position=o}),t},gridAutoRows(){return`grid-auto-rows: ${this.columnWidth}`},uploadId(){return this.uploadTag||this.entity.id},defaultFolder(){return this.defaultFolderName||this.entity.getEntityName()}},mounted(){this.mountedComponent()},methods:{mountedComponent(){this.$device.onResize({listener:this.updateColumnCount,component:this}),this.updateColumnCount()},updateColumnCount(){this.$nextTick(()=>{const e=window.getComputedStyle(this.$refs.grid,null).getPropertyValue("grid-template-columns").split(" ");this.columnCount=e.length,this.columnWidth=e[0]})},createPlaceholders(e){return new Array(e).fill({isPlaceholder:!0,media:{isPlaceholder:!0,name:""},mediaId:this.currentCount})},async onUploadsAdded({data:e}){e.length!==0&&(this.entity.isLoading=!0,await this.mediaService.runUploads(this.uploadId),this.entity.isLoading=!1)},onMediaUploadButtonOpenSidebar(){this.$emit("open-sidebar")},async successfulUpload({targetId:e}){const t=await this.mediaRepository.get(e,n.api);this.$forceUpdate(),this.$emit("upload-finish",t)},onUploadFailed(e){const t=this.mediaItems.find(i=>i.mediaId===e.targetId);t&&this.removeItem(t),this.entity.isLoading=!1},onMediaItemDragSort(e,t,i){i!==!0||t.position>this.currentCount||e.position>this.currentCount||this.$emit("item-sort",e,t)},onDeboundDragDrop:s.debounce(function(t,i,o){this.onMediaItemDragSort(t,i,o)},500),removeItem(e,t){this.$emit("item-remove",e,t)}}};export{r as default};
