{"version":3,"file":"index-be6vzoob.js","sources":["../../../app/administration/src/module/sw-product/component/sw-product-media-form/sw-product-media-form.html.twig","../../../app/administration/src/module/sw-product/component/sw-product-media-form/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_product_media_form %}\n<div\n    class=\"sw-product-media-form\"\n    :class=\"{ 'is--disabled': disabled }\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_media_form_upload %}\n    <sw-upload-listener\n        v-if=\"!isLoading\"\n        :upload-tag=\"product.id\"\n        auto-upload\n        @media-upload-finish=\"successfulUpload\"\n        @media-upload-fail=\"onUploadFailed\"\n    />\n\n    <sw-media-upload-v2\n        v-if=\"!isLoading && acl.can('product.editor')\"\n        variant=\"regular\"\n        :upload-tag=\"product.id\"\n        :scroll-target=\"$parent.$el\"\n        :default-folder=\"product.getEntityName()\"\n        :file-accept=\"fileAccept\"\n        @media-upload-sidebar-open=\"onOpenMedia\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_media_form_grid %}\n    <div class=\"sw-product-media-form__previews\">\n        <div class=\"sw-product-media-form__cover-container sw-product-media-form__column\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_media_form_cover_preview %}\n            <div\n                v-if=\"product.cover || cover\"\n                class=\"sw-product-media-form__preview-cover\"\n            >\n                <div class=\"preview-cover\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_media_form_cover_image %}\n                    <sw-media-preview-v2\n                        :key=\"cover ? cover.media?.url : product.cover.media?.url\"\n                        class=\"sw-product-media-form__cover-image\"\n                        :source=\"cover ? cover.mediaId : product.cover.mediaId\"\n                    />\n                    {% endblock %}\n                    <span>{{ $tc('sw-product.mediaForm.coverSubline') }}</span>\n                </div>\n            </div>\n            <div\n                v-else\n                class=\"sw-product-media-form__cover-image is--placeholder\"\n            >\n                {{ $tc('sw-product.mediaForm.coverSubline') }}\n            </div>\n            {% endblock %}\n        </div>\n\n        <div\n            v-if=\"!isLoading\"\n            class=\"sw-product-media-form__grid sw-product-media-form__column\"\n            :style=\"gridAutoRows\"\n        >\n            {%  block sw_product_media_form_grid_items %}\n            <sw-product-image\n                v-for=\"mediaItem in mediaItems\"\n                :key=\"mediaItem.id\"\n                v-draggable=\"{ dragGroup: 'product-media', data: mediaItem, onDragEnter: onMediaItemDragSort }\"\n                v-droppable=\"{ dragGroup: 'product-media', data: mediaItem }\"\n                :is-cover=\"isCover(mediaItem)\"\n                :is-spatial=\"isSpatial(mediaItem)\"\n                :is-ar-ready=\"isArReady(mediaItem)\"\n                :is-placeholder=\"mediaItem.isPlaceholder\"\n                :media-id=\"mediaItem.mediaId\"\n                :show-cover-label=\"showCoverLabel\"\n                @sw-product-image-delete=\"removeFile(mediaItem)\"\n                @sw-product-image-cover=\"markMediaAsCover(mediaItem)\"\n            />\n            {% endblock %}\n        </div>\n        <sw-loader v-else />\n    </div>\n    {% endblock %}\n</div>\n{% endblock %}\n","/*\n * @package inventory\n */\n\nimport template from './sw-product-media-form.html.twig';\nimport './sw-product-media-form.scss';\n\nconst { Component, Mixin } = Cicada;\nconst { mapGetters } = Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'systemConfigApiService',\n    ],\n\n    emits: ['media-open'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        isInherited: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        fileAccept: {\n            type: String,\n            required: false,\n            default: '*/*',\n        },\n    },\n\n    data() {\n        return {\n            showCoverLabel: true,\n            isMediaLoading: false,\n            columnCount: 5,\n            columnWidth: 90,\n            globalIsArReady: false,\n        };\n    },\n\n    computed: {\n        product() {\n            const state = Cicada.State.get('swProductDetail');\n\n            if (this.isInherited) {\n                return state.parentProduct;\n            }\n\n            return state.product;\n        },\n\n        mediaItems() {\n            const mediaItems = this.productMedia.slice();\n            const placeholderCount = this.getPlaceholderCount(this.columnCount);\n\n            if (placeholderCount === 0) {\n                return mediaItems;\n            }\n\n            for (let i = 0; i < placeholderCount; i += 1) {\n                mediaItems.push(this.createPlaceholderMedia(mediaItems));\n            }\n            return mediaItems;\n        },\n\n        cover() {\n            if (!this.product) {\n                return null;\n            }\n            const coverId = this.product.cover ? this.product.cover.mediaId : this.product.coverId;\n            return this.product.media.find((media) => media.id === coverId);\n        },\n\n        ...mapGetters('swProductDetail', {\n            isStoreLoading: 'isLoading',\n        }),\n\n        isLoading() {\n            return this.isMediaLoading || this.isStoreLoading;\n        },\n\n        productMediaRepository() {\n            return this.repositoryFactory.create('product_media');\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        productMedia() {\n            if (!this.product) {\n                return [];\n            }\n            return this.product.media;\n        },\n\n        productMediaStore() {\n            return this.product.getAssociation('media');\n        },\n\n        gridAutoRows() {\n            return `grid-auto-rows: ${this.columnWidth}`;\n        },\n\n        currentCoverID() {\n            const coverMediaItem = this.productMedia.find((coverMedium) => coverMedium.media.id === this.product.coverId);\n\n            return coverMediaItem.id;\n        },\n    },\n\n    created() {\n        this.onCreated();\n    },\n\n    methods: {\n        onCreated() {\n            this.systemConfigApiService\n                .getValues('core.media')\n                .then((response) => {\n                    this.globalIsArReady = response['core.media.defaultEnableAugmentedReality'];\n                })\n                .catch((error) => {\n                    throw error;\n                });\n        },\n\n        onOpenMedia() {\n            this.$emit('media-open');\n        },\n\n        updateColumnCount() {\n            this.$nextTick(() => {\n                if (this.isLoading) {\n                    return false;\n                }\n\n                const cssColumns = window\n                    .getComputedStyle(this.$refs.grid, null)\n                    .getPropertyValue('grid-template-columns')\n                    .split(' ');\n                this.columnCount = cssColumns.length;\n                this.columnWidth = cssColumns[0];\n\n                return true;\n            });\n        },\n\n        getPlaceholderCount(columnCount) {\n            if (this.productMedia.length + 3 < columnCount * 2) {\n                columnCount *= 2;\n            }\n\n            let placeholderCount = columnCount;\n\n            if (this.productMedia.length !== 0) {\n                placeholderCount = columnCount - (this.productMedia.length % columnCount);\n                if (placeholderCount === columnCount) {\n                    return 0;\n                }\n            }\n\n            return placeholderCount;\n        },\n\n        createPlaceholderMedia(mediaItems) {\n            return {\n                isPlaceholder: true,\n                isCover: mediaItems.length === 0,\n                media: {\n                    isPlaceholder: true,\n                    name: '',\n                },\n                mediaId: mediaItems.length.toString(),\n            };\n        },\n\n        buildProductMedia(mediaId) {\n            this.isLoading = true;\n\n            const productMedia = this.productMediaStore.create();\n            productMedia.mediaId = mediaId;\n\n            if (this.productMedia.length === 0) {\n                productMedia.position = 0;\n                this.product.cover = productMedia;\n                this.product.coverId = productMedia.id;\n            } else {\n                productMedia.position = this.productMedia.length + 1;\n            }\n            this.isLoading = false;\n\n            return productMedia;\n        },\n\n        async successfulUpload({ targetId }) {\n            const existingMedia = this.product.media.find((productMedia) => productMedia.mediaId === targetId);\n\n            // on replace\n            if (existingMedia) {\n                const mediaItem = await this.mediaRepository.get(targetId);\n\n                const productMedia = this.createMediaAssociation(targetId);\n                productMedia.media = mediaItem;\n\n                const existingMediaWasCover = this.product.cover?.id === existingMedia.id;\n\n                // replace the media item\n                this.product.media.remove(existingMedia.id);\n                this.product.media.add(productMedia);\n\n                if (existingMediaWasCover) {\n                    this.product.coverId = productMedia.id;\n                    this.product.cover = productMedia;\n                }\n\n                return;\n            }\n\n            const productMedia = this.createMediaAssociation(targetId);\n            this.product.media.add(productMedia);\n        },\n\n        createMediaAssociation(targetId) {\n            const productMedia = this.productMediaRepository.create();\n\n            productMedia.productId = this.product.id;\n            productMedia.mediaId = targetId;\n\n            if (this.product.media.length <= 0) {\n                productMedia.position = 0;\n                this.product.coverId = productMedia.id;\n            } else {\n                productMedia.position = this.product.media.length;\n            }\n            return productMedia;\n        },\n\n        onUploadFailed(uploadTask) {\n            const toRemove = this.product.media.find((productMedia) => {\n                return productMedia.mediaId === uploadTask.targetId;\n            });\n            if (toRemove) {\n                if (this.product.coverId === toRemove.id) {\n                    this.product.coverId = null;\n                }\n                this.product.media.remove(toRemove.id);\n            }\n            this.product.isLoading = false;\n        },\n\n        removeCover() {\n            this.product.cover = null;\n            this.product.coverId = null;\n        },\n\n        isCover(productMedia) {\n            const coverId = this.product.cover ? this.product.cover.id : this.product.coverId;\n\n            if (this.product.media.length === 0 || productMedia.isPlaceholder) {\n                return false;\n            }\n\n            return productMedia.id === coverId;\n        },\n\n        /**\n         * @experimental stableVersion:v6.7.0 feature:SPATIAL_BASES\n         */\n        isSpatial(productMedia) {\n            // we need to check the media url since media.fileExtension is set directly after upload\n            return productMedia.media?.fileExtension === 'glb' || !!productMedia.media?.url?.endsWith('.glb');\n        },\n\n        /**\n         * @experimental stableVersion:v6.7.0 feature:SPATIAL_BASES\n         */\n        isArReady(productMedia) {\n            return productMedia.media?.config?.spatial?.arReady ?? this.globalIsArReady;\n        },\n\n        removeFile(productMedia) {\n            // remove cover id if mediaId matches\n            if (this.product.coverId === productMedia.id) {\n                this.product.cover = null;\n                this.product.coverId = null;\n            }\n\n            if (this.product.coverId === null && this.product.media.length > 0) {\n                this.product.coverId = this.product.media.first().id;\n            }\n\n            this.product.media.remove(productMedia.id);\n        },\n\n        markMediaAsCover(productMedia) {\n            this.product.cover = productMedia;\n            this.product.coverId = productMedia.id;\n\n            this.product.media.moveItem(productMedia.position, 0);\n            this.updateMediaItemPositions();\n        },\n\n        onDropMedia(dragData) {\n            if (this.product.media.find((productMedia) => productMedia.mediaId === dragData.id)) {\n                return;\n            }\n\n            const productMedia = this.createMediaAssociation(dragData.mediaItem.id);\n            if (this.product.media.length === 0) {\n                // set media item as cover\n                productMedia.position = 0;\n                this.product.cover = productMedia;\n                this.product.coverId = productMedia.id;\n            }\n\n            this.product.media.add(productMedia);\n        },\n\n        onMediaItemDragSort(dragData, dropData, validDrop) {\n            if (\n                validDrop !== true ||\n                (dragData.id === this.product.coverId && dragData.position === 0) ||\n                (dropData.id === this.product.coverId && dropData.position === 0)\n            ) {\n                return;\n            }\n\n            this.product.media.moveItem(dragData.position, dropData.position);\n\n            this.updateMediaItemPositions();\n        },\n\n        updateMediaItemPositions() {\n            this.productMedia.forEach((medium, index) => {\n                medium.position = index;\n            });\n        },\n    },\n};\n"],"names":["template","Component","Mixin","mapGetters","index","state","mediaItems","placeholderCount","i","coverId","media","coverMedium","response","error","cssColumns","columnCount","mediaId","productMedia","targetId","_a","existingMedia","mediaItem","existingMediaWasCover","uploadTask","toRemove","_b","_c","dragData","dropData","validDrop","medium"],"mappings":"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"}