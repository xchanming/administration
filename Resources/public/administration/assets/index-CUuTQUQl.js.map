{"version":3,"file":"index-CUuTQUQl.js","sources":["../../../app/administration/src/app/component/form/sw-tagged-field/sw-tagged-field.html.twig","../../../app/administration/src/app/component/form/sw-tagged-field/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_tagged_field %}\n<sw-block-field\n    class=\"sw-tagged-field\"\n    :class=\"taggedFieldClasses\"\n    v-bind=\"$attrs\"\n    v-on=\"listeners\"\n>\n    <template #sw-field-input=\"{ identification, error, disabled, size, setFocusClass, removeFocusClass }\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_tagged_field_inner %}\n        <!-- eslint-disable-next-line vuejs-accessibility/click-events-have-key-events, vuejs-accessibility/no-static-element-interactions -->\n        <ul\n            class=\"sw-tagged-field__tag-list\"\n            @click=\"setFocus(true)\"\n        >\n            <li\n                v-for=\"(tag, index) in value\"\n                :key=\"`sw-tagged-field-value--${index}`\"\n            >\n                <sw-label\n                    :dismissable=\"!disabled\"\n                    :size=\"size\"\n                    @selected=\"setFocus(true)\"\n                    @dismiss=\"dismissTag(index)\"\n                >\n                    {{ tag }}\n                </sw-label>\n            </li>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_tagged_field_item_input %}\n            <li class=\"sw-tagged-field__input-list-entry\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_tagged_field_input %}\n                <!-- eslint-disable-next-line vuejs-accessibility/form-control-has-label -->\n                <input\n                    ref=\"taggedFieldInput\"\n                    v-model=\"newTagName\"\n                    type=\"text\"\n                    class=\"sw-tagged-field__input\"\n                    :class=\"taggedFieldInputClasses\"\n                    :disabled=\"disabled\"\n                    :placeholder=\"placeholder\"\n                    @focus=\"setFocus(true)\"\n                    @blur=\"setFocus(false)\"\n                    @keydown=\"performAddTag\"\n                    @keydown.delete=\"dismissLastTag\"\n                >\n                {% endblock %}\n            </li>\n            {% endblock %}\n        </ul>\n        {% endblock %}\n    </template>\n\n    <template #label>\n        <slot name=\"label\"></slot>\n    </template>\n\n    <template #hint>\n        <slot name=\"hint\"></slot>\n    </template>\n</sw-block-field>\n{% endblock %}\n","import template from './sw-tagged-field.html.twig';\nimport './sw-tagged-field.scss';\n\nconst { Component } = Cicada;\n\n/**\n * @package admin\n *\n * @private\n * @status deprecated\n * @example-type code-only\n * @component-example\n * <sw-tagged-field label=\"Label\" :addOnKey=\"['enter', ',']\">\n * </sw-tagged-field>\n */\nComponent.register('sw-tagged-field', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['feature'],\n\n    emits: ['update:value'],\n\n    props: {\n        value: {\n            type: Array,\n            required: false,\n            default: () => [],\n        },\n\n        placeholder: {\n            type: String,\n            required: false,\n            default() {\n                return Cicada.Snippet.tc('global.sw-tagged-field.text-default-placeholder');\n            },\n        },\n\n        addOnKey: {\n            type: Array,\n            required: false,\n            default: () => ['enter'],\n        },\n    },\n\n    data() {\n        return {\n            newTagName: '',\n            hasFocus: false,\n        };\n    },\n\n    computed: {\n        hasValues() {\n            return this.value.length > 0;\n        },\n\n        taggedFieldClasses() {\n            return {\n                'has--focus': this.hasFocus,\n            };\n        },\n\n        taggedFieldInputClasses() {\n            return {\n                'sw-tagged-field__input--full-width': !this.hasValues,\n                'sw-tagged-field__input--hidden': this.hasValues && !this.hasFocus,\n            };\n        },\n\n        /**\n         * @deprecated tag:v6.7.0 - Will be removed\n         */\n        listeners() {\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return this.$listeners;\n            }\n\n            return {};\n        },\n    },\n\n    methods: {\n        dismissLastTag() {\n            if (typeof this.newTagName === 'string' && this.newTagName.length > 0) {\n                return;\n            }\n\n            this.$emit('update:value', this.value.slice(0, this.value.length - 1));\n        },\n\n        dismissTag(index) {\n            this.$emit(\n                'update:value',\n                this.value.filter((item, itemIndex) => itemIndex !== index),\n            );\n        },\n\n        performAddTag(event) {\n            if (this.disabled || this.noTriggerKey(event)) {\n                return;\n            }\n\n            if (typeof this.newTagName !== 'string' || this.newTagName === '') {\n                return;\n            }\n\n            this.$emit('update:value', [\n                ...this.value,\n                this.newTagName,\n            ]);\n            this.newTagName = '';\n        },\n\n        setFocus(hasFocus) {\n            this.hasFocus = hasFocus;\n            if (hasFocus) {\n                this.$refs.taggedFieldInput.focus();\n            }\n        },\n\n        noTriggerKey(event) {\n            const keyIndex = this.addOnKey.findIndex((eventKey) => {\n                return eventKey.toLowerCase() === event.key.toLowerCase();\n            });\n\n            if (keyIndex === -1) {\n                return true;\n            }\n\n            event.preventDefault();\n            return false;\n        },\n    },\n});\n"],"names":["template","Component","index","item","itemIndex","event","hasFocus","eventKey"],"mappings":"AAAA,MAAeA,EAAA,2oCCGT,CAAE,UAAAC,CAAW,EAAG,OAYtBA,EAAU,SAAS,kBAAmB,CAClC,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,SAAS,EAElB,MAAO,CAAC,cAAc,EAEtB,MAAO,CACH,MAAO,CACH,KAAM,MACN,SAAU,GACV,QAAS,IAAM,CAAE,CACpB,EAED,YAAa,CACT,KAAM,OACN,SAAU,GACV,SAAU,CACN,OAAO,OAAO,QAAQ,GAAG,iDAAiD,CAC7E,CACJ,EAED,SAAU,CACN,KAAM,MACN,SAAU,GACV,QAAS,IAAM,CAAC,OAAO,CAC1B,CACJ,EAED,MAAO,CACH,MAAO,CACH,WAAY,GACZ,SAAU,EACtB,CACK,EAED,SAAU,CACN,WAAY,CACR,OAAO,KAAK,MAAM,OAAS,CAC9B,EAED,oBAAqB,CACjB,MAAO,CACH,aAAc,KAAK,QACnC,CACS,EAED,yBAA0B,CACtB,MAAO,CACH,qCAAsC,CAAC,KAAK,UAC5C,iCAAkC,KAAK,WAAa,CAAC,KAAK,QAC1E,CACS,EAKD,WAAY,CACR,OAAI,KAAK,gBAAgB,oBAAoB,EAClC,KAAK,WAGT,EACV,CACJ,EAED,QAAS,CACL,gBAAiB,CACT,OAAO,KAAK,YAAe,UAAY,KAAK,WAAW,OAAS,GAIpE,KAAK,MAAM,eAAgB,KAAK,MAAM,MAAM,EAAG,KAAK,MAAM,OAAS,CAAC,CAAC,CACxE,EAED,WAAWE,EAAO,CACd,KAAK,MACD,eACA,KAAK,MAAM,OAAO,CAACC,EAAMC,IAAcA,IAAcF,CAAK,CAC1E,CACS,EAED,cAAcG,EAAO,CACb,KAAK,UAAY,KAAK,aAAaA,CAAK,GAIxC,OAAO,KAAK,YAAe,UAAY,KAAK,aAAe,KAI/D,KAAK,MAAM,eAAgB,CACvB,GAAG,KAAK,MACR,KAAK,UACrB,CAAa,EACD,KAAK,WAAa,GACrB,EAED,SAASC,EAAU,CACf,KAAK,SAAWA,EACZA,GACA,KAAK,MAAM,iBAAiB,OAEnC,EAED,aAAaD,EAAO,CAKhB,OAJiB,KAAK,SAAS,UAAWE,GAC/BA,EAAS,YAAa,IAAKF,EAAM,IAAI,YAAW,CAC1D,IAEgB,GACN,IAGXA,EAAM,eAAc,EACb,GACV,CACJ,CACL,CAAC"}