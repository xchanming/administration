{"version":3,"file":"index-PvFcrsoL.js","sources":["../../../app/administration/src/module/sw-settings-tax/page/sw-settings-tax-detail/sw-settings-tax-detail.html.twig","../../../app/administration/src/module/sw-settings-tax/page/sw-settings-tax-detail/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_tax_detail %}\n<sw-page class=\"sw-settings-tax-detail\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_tax_detail_header %}\n    <template #smart-bar-header>\n        <h2 v-if=\"label\">\n            {{ label }}\n        </h2>\n        <h2 v-else>\n            {{ $tc('sw-settings-tax.detail.textHeadline') }}\n        </h2>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_tax_detail_actions %}\n    <template #smart-bar-actions>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_tax_detail_actions_abort %}\n        <sw-button\n            v-tooltip.bottom=\"{ message: 'ESC', appearance: 'light' }\"\n            :disabled=\"isLoading\"\n            @click=\"onCancel\"\n        >\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_tax_detail_actions_save %}\n        <sw-button-process\n            v-model:processSuccess=\"isSaveSuccessful\"\n            v-tooltip.bottom=\"tooltipSave\"\n            class=\"sw-settings-tax-detail__save-action\"\n            variant=\"primary\"\n            :is-loading=\"isLoading\"\n            :disabled=\"isLoading || !allowSave || undefined\"\n            @click.prevent=\"onSave\"\n        >\n            {{ $tc('sw-settings-tax.detail.buttonSave') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <template #language-switch>\n        <sw-language-switch\n            :save-changes-function=\"saveOnLanguageChange\"\n            :abort-change-function=\"abortOnLanguageChange\"\n            @on-change=\"onChangeLanguage\"\n        />\n    </template>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_tax_detail_content %}\n    <template #content>\n        <sw-card-view>\n            <template v-if=\"isLoading\">\n                <sw-skeleton />\n                <sw-skeleton />\n            </template>\n\n            <template v-else>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_tax_detail_content_card %}\n                <sw-card\n                    :title=\"$tc('sw-settings-tax.detail.titleCard')\"\n                    position-identifier=\"sw-settings-tax-detail-content\"\n                >\n                    <sw-container\n                        columns=\"repeat(auto-fit, minmax(250px, 1fr))\"\n                        gap=\"0px 30px\"\n                    >\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_tax_detail_content_field_name %}\n                        <sw-text-field\n                            id=\"sw-field--tax-name\"\n                            :value=\"label\"\n                            required\n                            name=\"sw-field--tax-name\"\n                            :disabled=\"!acl.can('tax.editor') || isCicadaDefaultTax || undefined\"\n                            :label=\"$tc('sw-settings-tax.detail.labelName')\"\n                            :placeholder=\"$tc('sw-settings-tax.detail.placeholderName')\"\n                            :error=\"taxNameError\"\n                            @update:value=\"changeName\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_tax_detail_content_field_tax_rate %}\n                        <sw-number-field\n                            v-model:value=\"tax.taxRate\"\n                            name=\"sw-field--tax-taxRate\"\n                            required\n                            :digits=\"3\"\n                            :disabled=\"!acl.can('tax.editor') || undefined\"\n                            :label=\"$tc('sw-settings-tax.detail.labelDefaultTaxRate')\"\n                            :placeholder=\"$tc('sw-settings-tax.detail.placeholderDefaultTaxRate')\"\n                            :error=\"taxTaxRateError\"\n                        >\n                            <template #suffix>\n                                <span>\n                                    <span v-html=\"$sanitize($tc('sw-settings-tax.general.taxRateSymbol'))\"></span>\n                                </span>\n                            </template>\n                        </sw-number-field>\n                        {% endblock %}\n\n                        <div class=\"sw-settings-tax-detail__switches\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_tax_detail_content_field_default_tax_rate %}\n                            <sw-switch-field\n                                :key=\"isDefault\"\n                                class=\"sw-settings-tax-detail__default-tax-rate\"\n                                :label=\"$tc('sw-settings-tax.detail.defaultTaxLabel')\"\n                                :help-text=\"$tc('sw-settings-tax.detail.defaultTaxHelpText')\"\n                                :value=\"isDefault\"\n                                name=\"sw-field--isDefault\"\n                                @update:value=\"onChangeDefaultTaxRate\"\n                            />\n                        {% endblock %}\n                        </div>\n                    </sw-container>\n                </sw-card>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_tax_detail_rule_card %}\n                <sw-tax-rule-card\n                    v-if=\"tax.id\"\n                    :disabled=\"!taxId\"\n                    class=\"sw-settings-tax-detail__tax-rule-grid\"\n                    :tax=\"tax\"\n                    :is-loading=\"isLoading\"\n                />\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_tax_detail_custom_field_sets %}\n                <sw-card\n                    v-if=\"showCustomFields\"\n                    position-identifier=\"sw-settings-tax-detail-custom-field-sets\"\n                    :title=\"$tc('sw-settings-custom-field.general.mainMenuItemGeneral')\"\n                    :is-loading=\"isLoading\"\n                >\n                    <sw-custom-field-set-renderer\n                        :entity=\"tax\"\n                        :disabled=\"!acl.can('tax.editor')\"\n                        :sets=\"customFieldSets\"\n                    />\n                </sw-card>\n                {% endblock %}\n            </template>\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n","import template from './sw-settings-tax-detail.html.twig';\nimport './sw-settings-tax-detail.scss';\n\n/**\n * @package checkout\n */\n\nconst { Mixin } = Cicada;\nconst { mapPropertyErrors } = Cicada.Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'customFieldDataProviderService',\n        'systemConfigApiService',\n        'feature',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    shortcuts: {\n        'SYSTEMKEY+S': {\n            active() {\n                return this.allowSave;\n            },\n            method: 'onSave',\n        },\n        ESCAPE: 'onCancel',\n    },\n\n    props: {\n        taxId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            tax: {},\n            isLoading: false,\n            isSaveSuccessful: false,\n            customFieldSets: null,\n            defaultTaxRateId: null,\n            changeDefaultTaxRate: false,\n            formerDefaultTaxName: '',\n            config: {},\n            isDefault: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier),\n        };\n    },\n\n    computed: {\n        identifier() {\n            return this.tax.name || '';\n        },\n\n        taxRepository() {\n            return this.repositoryFactory.create('tax');\n        },\n\n        ...mapPropertyErrors('tax', [\n            'name',\n            'taxRate',\n        ]),\n\n        isNewTax() {\n            return this.tax.isNew === 'function' ? this.tax.isNew() : false;\n        },\n\n        allowSave() {\n            return this.isNewTax ? this.acl.can('tax.creator') : this.acl.can('tax.editor');\n        },\n\n        tooltipSave() {\n            if (!this.allowSave) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.allowSave,\n                    showOnDisabledElements: true,\n                };\n            }\n\n            const systemKey = this.$device.getSystemKey();\n\n            return {\n                message: `${systemKey} + S`,\n                appearance: 'light',\n            };\n        },\n\n        isCicadaDefaultTax() {\n            return this.$te(`global.tax-rates.${this.tax.name}`, 'en-GB');\n        },\n\n        label() {\n            return this.isCicadaDefaultTax ? this.$tc(`global.tax-rates.${this.tax.name}`) : this.tax.name;\n        },\n\n        showCustomFields() {\n            return this.customFieldSets && this.customFieldSets.length > 0;\n        },\n\n        isDefaultTaxRate() {\n            if (!this.defaultTaxRateId) {\n                return false;\n            }\n            return this.taxId === this.defaultTaxRateId;\n        },\n    },\n\n    watch: {\n        taxId() {\n            if (!this.taxId) {\n                this.createdComponent();\n            }\n        },\n        isDefaultTaxRate() {\n            this.isDefault = this.isDefaultTaxRate;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n            if (this.taxId) {\n                this.taxRepository.get(this.taxId).then((tax) => {\n                    this.tax = tax;\n                    this.isLoading = false;\n                });\n                this.loadCustomFieldSets();\n                this.reloadDefaultTaxRate();\n\n                return;\n            }\n\n            this.tax = this.taxRepository.create();\n            this.isLoading = false;\n        },\n\n        loadCustomFieldSets() {\n            this.customFieldDataProviderService.getCustomFieldSets('tax').then((sets) => {\n                this.customFieldSets = sets;\n            });\n        },\n\n        onSave() {\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            return this.taxRepository\n                .save(this.tax)\n                .then(() => {\n                    this.isSaveSuccessful = true;\n                    if (!this.taxId) {\n                        this.$router.push({\n                            name: 'sw.settings.tax.detail',\n                            params: { id: this.tax.id },\n                        });\n                    }\n\n                    this.taxRepository\n                        .get(this.tax.id)\n                        .then((updatedTax) => {\n                            this.tax = updatedTax;\n                        })\n                        .then(() => {\n                            return this.systemConfigApiService.saveValues(this.config).then(() => {\n                                this.defaultTaxRateId = this.tax.id;\n                                this.reloadDefaultTaxRate();\n                                this.isLoading = false;\n                            });\n                        });\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-tax.detail.messageSaveError'),\n                    });\n                    this.isLoading = false;\n                });\n        },\n\n        onCancel() {\n            this.$router.push({ name: 'sw.settings.tax.index' });\n        },\n\n        abortOnLanguageChange() {\n            return this.taxRepository.hasChanges(this.tax);\n        },\n\n        saveOnLanguageChange() {\n            return this.onSave();\n        },\n\n        onChangeLanguage(languageId) {\n            Cicada.State.commit('context/setApiLanguageId', languageId);\n            this.createdComponent();\n        },\n\n        changeName(name) {\n            this.tax.name = name;\n        },\n\n        reloadDefaultTaxRate() {\n            this.systemConfigApiService\n                .getValues('core.tax')\n                .then((response) => {\n                    this.defaultTaxRateId = response['core.tax.defaultTaxRate'] ?? null;\n                })\n                .then(() => {\n                    if (this.defaultTaxRateId) {\n                        this.taxRepository.get(this.defaultTaxRateId).then((tax) => {\n                            this.formerDefaultTaxName = tax.name;\n                        });\n                    }\n                })\n                .catch(() => {\n                    this.defaultTaxRateId = null;\n                });\n        },\n\n        onChangeDefaultTaxRate() {\n            const newDefaultTax = !this.isDefaultTaxRate ? this.taxId : '';\n\n            this.$set(this.config, 'core.tax.defaultTaxRate', newDefaultTax);\n            this.changeDefaultTaxRate = false;\n        },\n    },\n};\n"],"names":["template","Mixin","mapPropertyErrors","index","tax","sets","updatedTax","languageId","name","response","newDefaultTax"],"mappings":"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"}