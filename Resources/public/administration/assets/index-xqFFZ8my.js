const a=`<div class="sw-product-detail-reviews"> {% block sw_product_detail_reviews %} <div v-if="isLoading"> <sw-skeleton /> <sw-skeleton /> </div> <sw-card v-if="!isLoading" class="sw-product-detail-reviews__list" position-identifier="sw-product-detail-reviews" :title="cardTitle" > {% block sw_product_detail_reviews_data %} <template v-if="total" #grid > <sw-data-grid ref="gridReview" :data-source="dataSource" :columns="reviewColumns" :is-loading="isLoading" :show-selection="false" :show-actions="true" > {% block sw_product_detail_reviews_data_stars %} <template #column-points="{ item }"> {% block sw_product_detail_reviews_data_stars_content %} <sw-rating-stars :value="item.points" /> {% endblock %} </template> {% endblock %} {% block sw_product_detail_reviews_data_status %} <template #column-status="{ item }"> <sw-data-grid-column-boolean v-model:value="item.status" :is-inline-edit="false" /> </template> {% endblock %} {% block sw_product_detail_reviews_data_created_at %} <template #column-createdAt="{ item }"> {{ dateFilter(item.createdAt, { hour: '2-digit', minute: '2-digit', second: '2-digit' }) }} </template> {% endblock %} {% block sw_product_detail_reviews_data_action %} <template #actions="{ item }"> {% block sw_product_detail_reviews_data_action_edit %} <sw-context-menu-item class="sw-product-detail-reviews__action-edit" :disabled="!acl.can('product.editor') || undefined" :router-link="{ name: 'sw.review.detail', params: { id: item.id } }" > {{ $tc('sw-product.reviewForm.contextMenuEdit') }} </sw-context-menu-item> {% endblock %} {% block sw_product_detail_reviews_data_action_delete %} <sw-context-menu-item class="sw-product-detail-reviews__action-delete" variant="danger" :disabled="!acl.can('product.editor') || undefined" @click="onStartReviewDelete(item)" > {{ $tc('sw-product.reviewForm.contextMenuDelete') }} </sw-context-menu-item> {% endblock %} </template> {% endblock %} {% block sw_product_detail_reviews_data_pagination %} <template #pagination> <sw-pagination :total="total" :limit="limit" :page="page" :total-visible="7" :steps="[10]" @page-change="onChangePage" /> </template> {% endblock %} </sw-data-grid> </template> {% endblock %} {% block sw_product_detail_reviews_empty_state %} <sw-empty-state v-if="!total" :title="$tc('sw-product.reviewForm.messageEmptyTitle')" :subline="$tc('sw-product.reviewForm.messageEmptySubline')" :absolute="false" empty-module > <template #icon> <img :src="assetFilter('/administration/static/img/empty-states/products-empty-state.svg')" :alt="$tc('sw-product.reviewForm.messageEmptyTitle')" > </template> <template #actions> {% block sw_product_detail_reviews_empty_state_button %} <sw-button variant="ghost" :router-link="{ name: 'sw.review.index' }" > {{ $tc('sw-product.reviewForm.emptyStateButton') }} </sw-button> {% endblock %} </template> </sw-empty-state> {% endblock %} {% block sw_product_detail_reviews_modal_delete %} <sw-modal v-if="showReviewDeleteModal" variant="small" :title="$tc('sw-product.reviewForm.modal.confirmTitle')" @modal-close="onCancelReviewDelete" > {% block sw_product_detail_reviews_modal_delete_body %} <p>{{ $tc('sw-product.reviewForm.modal.confirmText') }}</p> {% endblock %} {% block sw_product_detail_reviews_modal_delete_footer %} <template #modal-footer> {% block sw_product_detail_reviews_modal_delete_button_cancel %} <sw-button size="small" @click="onCancelReviewDelete" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_product_detail_reviews_modal_delete_button_confirm %} <sw-button size="small" variant="danger" @click="onConfirmReviewDelete" > {{ $tc('sw-product.reviewForm.modal.buttonDelete') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} </sw-card> {% endblock %} </div>`,{Component:o,Data:l,Context:t}=Cicada,{Criteria:i}=l,{mapState:s,mapGetters:d}=o.getComponentHelper(),r={template:a,compatConfig:Cicada.compatConfig,inject:["repositoryFactory","acl"],data(){return{showReviewDeleteModal:!1,deleteReviewId:null,dataSource:[],page:1,limit:10,total:0}},computed:{...s("swProductDetail",["product"]),...d("swProductDetail",["isLoading"]),cardTitle(){return this.total?this.$tc("sw-product.reviews.cardTitleReviews"):null},reviewRepository(){return this.repositoryFactory.create("product_review")},reviewCriteria(){const e=new i(this.page,this.limit);return e.addFilter(i.equals("productId",this.product.id)),e.setTotalCountMode(1),e},reviewColumns(){return[{property:"points",dataIndex:"points",label:this.$tc("sw-product.reviewForm.labelPoints")},{property:"status",dataIndex:"status",label:this.$tc("sw-product.reviewForm.labelStatus"),align:"center"},{property:"createdAt",dataIndex:"createdAt",label:this.$tc("sw-product.reviewForm.labelCreatedAt")},{property:"title",dataIndex:"title",label:this.$tc("sw-product.reviewForm.labelTitle"),routerLink:"sw.review.detail"}]},assetFilter(){return Cicada.Filter.getByName("asset")},dateFilter(){return Cicada.Filter.getByName("date")}},watch:{"product.id":{immediate:!0,handler(e){e&&this.getReviews()}}},created(){this.createdComponent()},methods:{createdComponent(){this.getReviews()},getReviews(){!this.product||!this.product.id||this.reviewRepository.search(this.reviewCriteria,t.api).then(e=>{this.total=e.total,this.dataSource=e,this.total>0&&this.dataSource.length<=0&&(this.page=this.page===1?1:this.page-1,this.getReviews())})},onStartReviewDelete(e){this.deleteReviewId=e.id,this.onShowReviewDeleteModal()},onCancelReviewDelete(){this.deleteReviewId=null,this.onCloseReviewDeleteModal()},onShowReviewDeleteModal(){this.showReviewDeleteModal=!0},onCloseReviewDeleteModal(){this.showReviewDeleteModal=!1},onConfirmReviewDelete(){this.onCloseReviewDeleteModal(),this.reviewRepository.delete(this.deleteReviewId,t.api).then(()=>{this.deleteReviewId=null,this.getReviews()})},onChangePage(e){this.page=e.page,this.limit=e.limit,this.getReviews()}}};export{r as default};
//# sourceMappingURL=index-xqFFZ8my.js.map
