{"version":3,"file":"index-aGnm0Ioz.js","sources":["../../../app/administration/src/app/component/form/sw-confirm-field/sw-confirm-field.html.twig","../../../app/administration/src/app/component/form/sw-confirm-field/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_confirm_field %}\n<div\n    class=\"sw-confirm-field\"\n    :class=\"confirmFieldClasses\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_confirm_field_input_field %}\n    <sw-text-field\n        v-model:value=\"draft\"\n        v-bind=\"$attrs\"\n        :required=\"required\"\n        :disabled=\"disabled\"\n        :error=\"error\"\n        validation=\"required\"\n        @focus=\"onStartEditing\"\n        @blur=\"onBlurField\"\n        @keyup.enter=\"onSubmitFromKey\"\n        @keyup.esc=\"onCancelFromKey\"\n        @update:value=\"onInput\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_confirm_field_button_list %}\n    <span\n        v-show=\"isEditing\"\n        class=\"sw-confirm-field__button-list\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_confirm_field_cancel_button %}\n        <sw-button\n            :disabled=\"disabled\"\n            class=\"sw-confirm-field__button sw-confirm-field__button--cancel\"\n            square\n            size=\"x-small\"\n            tabindex=\"-1\"\n            @click=\"onCancelSubmit\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_field_inline_cancel_submit_button_icon %}\n            <mt-icon\n                size=\"10px\"\n                name=\"regular-times-xs\"\n            />\n            {% endblock %}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_confirm_field_confirm_button %}\n        <sw-button\n            class=\"sw-confirm-field__button sw-confirm-field__button--submit\"\n            :disabled=\"preventEmptySubmit && !draft || disabled\"\n            square\n            size=\"x-small\"\n            variant=\"primary\"\n            tabindex=\"-1\"\n            @click=\"onSubmitValue\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_field_inline_submit_button_icon %}\n            <mt-icon\n                size=\"10px\"\n                name=\"regular-checkmark-xxs\"\n            />\n            {% endblock %}\n        </sw-button>\n        {% endblock %}\n    </span>\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-confirm-field.html.twig';\nimport './sw-confirm-field.scss';\n\nconst { Component } = Cicada;\n\n/**\n * @package admin\n *\n * @private\n * @description Text field with additional confirmation buttons inlined in the field itself.\n * @status ready\n * @example-type static\n * @component-example\n * <sw-confirm-field placeholder=\"Enter value...\"></sw-confirm-field>\n */\nComponent.register('sw-confirm-field', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    emits: [\n        'remove-error',\n        'blur',\n        'submit-cancel',\n        'input',\n    ],\n\n    props: {\n        value: {\n            type: String,\n            required: false,\n            default: '',\n        },\n\n        compact: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        preventEmptySubmit: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        required: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        error: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            hasSubmittedFromKey: false,\n            isEditing: false,\n            draft: this.value,\n            event: null,\n        };\n    },\n\n    computed: {\n        confirmFieldClasses() {\n            return {\n                'sw-confirm-field--compact': this.compact,\n                'sw-confirm-field--editing': this.isEditing,\n                'has--error': !!this.error,\n            };\n        },\n    },\n\n    watch: {\n        value() {\n            this.draft = this.value;\n        },\n    },\n\n    beforeUnmount() {\n        this.$emit('remove-error');\n    },\n\n    methods: {\n        removeActionButtons() {\n            this.isEditing = false;\n        },\n\n        onStartEditing() {\n            this.isEditing = true;\n        },\n\n        onBlurField(event) {\n            if (event?.relatedTarget?.classList.contains('sw-confirm-field__button') || this.hasSubmittedFromKey) {\n                this.hasSubmittedFromKey = false;\n                return;\n            }\n            this.$emit('blur');\n            this.cancelSubmit();\n        },\n\n        cancelSubmit() {\n            this.removeActionButtons();\n            this.draft = this.value;\n        },\n\n        onCancelFromKey({ target }) {\n            this.cancelSubmit();\n            target.blur();\n        },\n\n        onCancelSubmit() {\n            this.$emit('submit-cancel');\n            this.cancelSubmit();\n            this.isEditing = false;\n        },\n\n        submitValue() {\n            if (this.draft !== this.value) {\n                this.$emit('input', this.draft, this.event);\n            }\n        },\n\n        onSubmitFromKey() {\n            this.hasSubmittedFromKey = true;\n            this.event = 'key';\n            this.submitValue();\n            this.isEditing = false;\n        },\n\n        onSubmitValue() {\n            this.event = 'click';\n            this.submitValue();\n            this.isEditing = false;\n        },\n\n        onInput() {\n            this.$emit('remove-error');\n        },\n    },\n});\n"],"names":["template","Component","event","_a","target"],"mappings":"AAAA,MAAeA,EAAA,0xCCGT,CAAE,UAAAC,CAAW,EAAG,OAYtBA,EAAU,SAAS,mBAAoB,CACnC,SAAAD,EAEA,aAAc,OAAO,aAErB,MAAO,CACH,eACA,OACA,gBACA,OACH,EAED,MAAO,CACH,MAAO,CACH,KAAM,OACN,SAAU,GACV,QAAS,EACZ,EAED,QAAS,CACL,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EAED,mBAAoB,CAChB,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EAED,SAAU,CACN,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EAED,SAAU,CACN,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EAED,MAAO,CACH,KAAM,OACN,SAAU,GACV,QAAS,IACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,oBAAqB,GACrB,UAAW,GACX,MAAO,KAAK,MACZ,MAAO,IACnB,CACK,EAED,SAAU,CACN,qBAAsB,CAClB,MAAO,CACH,4BAA6B,KAAK,QAClC,4BAA6B,KAAK,UAClC,aAAc,CAAC,CAAC,KAAK,KACrC,CACS,CACJ,EAED,MAAO,CACH,OAAQ,CACJ,KAAK,MAAQ,KAAK,KACrB,CACJ,EAED,eAAgB,CACZ,KAAK,MAAM,cAAc,CAC5B,EAED,QAAS,CACL,qBAAsB,CAClB,KAAK,UAAY,EACpB,EAED,gBAAiB,CACb,KAAK,UAAY,EACpB,EAED,YAAYE,EAAO,CDvG3B,IAAAC,ECwGY,IAAIA,EAAAD,GAAA,YAAAA,EAAO,gBAAP,MAAAC,EAAsB,UAAU,SAAS,6BAA+B,KAAK,oBAAqB,CAClG,KAAK,oBAAsB,GAC3B,MACH,CACD,KAAK,MAAM,MAAM,EACjB,KAAK,aAAY,CACpB,EAED,cAAe,CACX,KAAK,oBAAmB,EACxB,KAAK,MAAQ,KAAK,KACrB,EAED,gBAAgB,CAAE,OAAAC,GAAU,CACxB,KAAK,aAAY,EACjBA,EAAO,KAAI,CACd,EAED,gBAAiB,CACb,KAAK,MAAM,eAAe,EAC1B,KAAK,aAAY,EACjB,KAAK,UAAY,EACpB,EAED,aAAc,CACN,KAAK,QAAU,KAAK,OACpB,KAAK,MAAM,QAAS,KAAK,MAAO,KAAK,KAAK,CAEjD,EAED,iBAAkB,CACd,KAAK,oBAAsB,GAC3B,KAAK,MAAQ,MACb,KAAK,YAAW,EAChB,KAAK,UAAY,EACpB,EAED,eAAgB,CACZ,KAAK,MAAQ,QACb,KAAK,YAAW,EAChB,KAAK,UAAY,EACpB,EAED,SAAU,CACN,KAAK,MAAM,cAAc,CAC5B,CACJ,CACL,CAAC"}