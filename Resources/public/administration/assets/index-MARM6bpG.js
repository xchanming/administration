const s=`{% block sw_settings_tax_rule_type_individual_states_cell %} <span> {{ taxRule.type.typeName }}: <template v-if="individualStates"> {{ individualStates.join(', ') }} </template> <template v-else> - </template> </span> {% endblock %}`,{Context:i}=Cicada,{Criteria:o}=Cicada.Data,d={template:s,compatConfig:Cicada.compatConfig,inject:["repositoryFactory"],props:{taxRule:{type:Object,required:!0}},data(){return{individualStates:null}},computed:{stateRepository(){return this.repositoryFactory.create("country_state")}},watch:{"taxRule.data.states"(){this.loadStates()}},created(){this.createdComponent()},methods:{createdComponent(){this.loadStates()},loadStates(){if(!this.taxRule.data||!this.taxRule.data.states||!this.taxRule.data.states.length){this.individualStates=[];return}const t=new o(1,25);t.setIds(this.taxRule.data.states),this.stateRepository.search(t,i.api).then(e=>{this.individualStates=e.map(a=>a.name)})}}};export{d as default};
//# sourceMappingURL=index-MARM6bpG.js.map
