const s=`{% block sw_settings_newsletter_index %} <sw-page class="sw-settings-newsletter"> {% block sw_settings_newsletter_search_bar %} <template #search-bar> <sw-search-bar /> </template> {% endblock %} {% block sw_settings_newsletter_smart_bar_header %} <template #smart-bar-header> {% block sw_settings_newsletter_smart_bar_header_title %} <h2> {% block sw_settings_newsletter_smart_bar_header_title_text %} {{ $tc('sw-settings.index.title') }} <sw-icon name="regular-chevron-right-xs" small /> {{ $tc('sw-settings-newsletter.general.textHeadline') }} {% endblock %} {% block sw_settings_newsletter_smart_bar_header_amount %} <span v-if="false" class="sw-page__smart-bar-amount" > ({{ total }}) </span> {% endblock %} </h2> {% endblock %} </template> {% endblock %} {% block sw_settings_newsletter_smart_bar_actions %} <template #smart-bar-actions> {% block sw_settings_newsletter_actions_save %} <sw-button-process class="sw-settings-newsletter__save-action" :is-loading="isLoading" :process-success="isSaveSuccessful" :disabled="isLoading" variant="primary" @update:process-success="saveFinish" @click="onSave" > {{ $tc('sw-settings-newsletter.general.buttonSave') }} </sw-button-process> {% endblock %} </template> {% endblock %} {% block sw_settings_newsletter_content %} <template #content> <sw-card-view> <sw-skeleton v-if="isLoading" /> {% block sw_setting_newsletter_system_config %} {# v-show is used here as underlying components influence the loading state and v-if would destroy this behaviour #} <sw-system-config v-show="!isLoading" ref="systemConfig" sales-channel-switchable domain="core.newsletter" @loading-changed="onLoadingChanged" /> {% endblock %} </sw-card-view> </template> {% endblock %} </sw-page> {% endblock %}`,{Mixin:t}=Cicada,a={template:s,compatConfig:Cicada.compatConfig,mixins:[t.getByName("notification")],data(){return{isLoading:!1,isSaveSuccessful:!1}},metaInfo(){return{title:this.$createTitle()}},methods:{saveFinish(){this.isSaveSuccessful=!1},onSave(){this.isSaveSuccessful=!1,this.isLoading=!0,Promise.all([this.$refs.systemConfig.saveAll()]).then(()=>{this.isLoading=!1,this.isSaveSuccessful=!0}).catch(e=>{this.isLoading=!1,this.createNotificationError({message:e})})},onLoadingChanged(e){this.isLoading=e}}};export{a as default};
//# sourceMappingURL=index-D_iBZR_x.js.map
