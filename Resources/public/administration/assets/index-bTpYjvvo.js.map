{"version":3,"file":"index-bTpYjvvo.js","sources":["../../../app/administration/src/app/asyncComponent/media/sw-media-modal-replace/sw-media-modal-replace.html.twig","../../../app/administration/src/app/asyncComponent/media/sw-media-modal-replace/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_media_modal_replace %}\n<sw-modal\n    class=\"sw-media-modal-replace\"\n    size=\"420px\"\n    :title=\"$tc('global.sw-media-modal-replace.titleModal')\"\n    @modal-close=\"emitCloseReplaceModal\"\n>\n\n    <sw-upload-listener\n        :upload-tag=\"itemToReplace.id\"\n        @media-upload-add=\"onNewUpload\"\n    />\n\n    <sw-media-replace\n        class=\"sw-media-modal-replace__upload\"\n        :item-to-replace=\"itemToReplace\"\n        :upload-tag=\"itemToReplace.id\"\n        variant=\"regular\"\n    />\n\n    <sw-alert\n        v-if=\"newFileExtension\"\n        class=\"sw-media-modal-replace__file-extension-warning\"\n        variant=\"warning\"\n    >\n        {{ $tc('global.sw-media-modal-replace.warningFileExtension', 0, { extension: newFileExtension }) }}\n    </sw-alert>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_modal_replace_modal_footer %}\n    <template #modal-footer>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_modal_replace_cancel_button %}\n        <sw-button\n            size=\"small\"\n            @click=\"emitCloseReplaceModal\"\n        >\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_modal_replace_replace_button %}\n        <sw-button\n            class=\"sw-media-replace__replace-media-action\"\n            size=\"small\"\n            variant=\"primary\"\n            :disabled=\"!isUploadDataSet\"\n            @click=\"replaceMediaItem\"\n        >\n            {{ $tc('global.sw-media-modal-replace.buttonReplace') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n","import template from './sw-media-modal-replace.html.twig';\nimport './sw-media-modal-replace.scss';\n\nconst { Mixin } = Cicada;\n\n/**\n * @status ready\n * @description The <u>sw-media-modal-replace</u> component is used to let the user upload a new image for an\n * existing media object.\n * @package content\n * @example-type code-only\n * @component-example\n * <sw-media-modal-replace itemToReplace=\"item\">\n * </sw-media-modal-replace>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'mediaService',\n        'repositoryFactory',\n    ],\n\n    emits: [\n        'media-replace-modal-close',\n        'media-replace-modal-item-replaced',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        itemToReplace: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            uploadTag: null,\n            isUploadDataSet: false,\n            newFileExtension: '',\n        };\n    },\n\n    methods: {\n        onNewUpload({ data }) {\n            this.isUploadDataSet = true;\n\n            const newFileExtension = data[0].extension;\n            const oldFileExtension = this.itemToReplace.fileExtension;\n\n            if (newFileExtension !== oldFileExtension) {\n                this.newFileExtension = newFileExtension;\n            }\n        },\n\n        emitCloseReplaceModal() {\n            this.$emit('media-replace-modal-close');\n        },\n\n        async replaceMediaItem() {\n            this.itemToReplace.isLoading = true;\n            const previousName = this.itemToReplace.fileName;\n\n            await this.mediaService.runUploads(this.itemToReplace.id);\n            await this.mediaService.renameMedia(this.itemToReplace.id, previousName);\n\n            this.itemToReplace.isLoading = false;\n            this.$emit('media-replace-modal-item-replaced');\n        },\n    },\n};\n"],"names":["template","Mixin","index","data","newFileExtension","oldFileExtension","previousName"],"mappings":"AAAA,MAAeA,EAAA,6rCCGT,CAAE,MAAAC,CAAO,EAAG,OAaHC,EAAA,CACX,SAAAF,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,eACA,mBACH,EAED,MAAO,CACH,4BACA,mCACH,EAED,OAAQ,CACJC,EAAM,UAAU,cAAc,CACjC,EAED,MAAO,CACH,cAAe,CACX,KAAM,OACN,SAAU,GACV,QAAS,IACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,UAAW,KACX,gBAAiB,GACjB,iBAAkB,EAC9B,CACK,EAED,QAAS,CACL,YAAY,CAAE,KAAAE,GAAQ,CAClB,KAAK,gBAAkB,GAEvB,MAAMC,EAAmBD,EAAK,CAAC,EAAE,UAC3BE,EAAmB,KAAK,cAAc,cAExCD,IAAqBC,IACrB,KAAK,iBAAmBD,EAE/B,EAED,uBAAwB,CACpB,KAAK,MAAM,2BAA2B,CACzC,EAED,MAAM,kBAAmB,CACrB,KAAK,cAAc,UAAY,GAC/B,MAAME,EAAe,KAAK,cAAc,SAExC,MAAM,KAAK,aAAa,WAAW,KAAK,cAAc,EAAE,EACxD,MAAM,KAAK,aAAa,YAAY,KAAK,cAAc,GAAIA,CAAY,EAEvE,KAAK,cAAc,UAAY,GAC/B,KAAK,MAAM,mCAAmC,CACjD,CACJ,CACL"}