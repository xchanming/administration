{"version":3,"file":"index-CImCDEoT.js","sources":["../../../app/administration/src/app/component/modal/sw-search-preferences-modal/sw-search-preferences-modal.html.twig","../../../app/administration/src/app/component/modal/sw-search-preferences-modal/index.js"],"sourcesContent":["<!-- eslint-disable vuejs-accessibility/click-events-have-key-events -->\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_search_preferences_modal %}\n<sw-modal\n    class=\"sw-search-preferences-modal\"\n    :title=\"$tc('global.sw-search-preferences-modal.title')\"\n    :is-loading=\"isLoading\"\n    @modal-close=\"onClose\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_search_preferences_modal_description %}\n    <p\n        class=\"sw-search-preferences-modal__description\"\n        v-html=\"$tc('global.sw-search-preferences-modal.description')\"\n    >\n    </p>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_search_preferences_modal_grid %}\n    <sw-data-grid\n        :show-selection=\"false\"\n        :show-actions=\"false\"\n        :plain-appearance=\"true\"\n        :data-source=\"searchPreferences\"\n        :columns=\"searchPreferencesColumns\"\n    >\n        <template #column-active=\"{ item }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_preferences_modal_grid_column_active %}\n            <sw-checkbox-field\n                v-model:value=\"item._searchable\"\n                @update:value=\"onChangeSearchPreference(item)\"\n            />\n            {% endblock %}\n        </template>\n\n        <template #column-moduleName=\"{ item }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_search_preferences_modal_grid_column_module_name %}\n            <span>{{ getModuleName(item.entityName) }}</span>\n            {% endblock %}\n        </template>\n    </sw-data-grid>\n    {% endblock %}\n\n    <template #modal-footer>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_search_preferences_modal_button_cancel %}\n        <sw-button\n            size=\"small\"\n            class=\"sw-search-preferences-modal__button-cancel\"\n            @click=\"onCancel\"\n        >\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_search_preferences_modal_button_save %}\n        <sw-button\n            variant=\"primary\"\n            size=\"small\"\n            class=\"sw-search-preferences-modal__button-save\"\n            :disabled=\"isLoading\"\n            @click=\"onSave\"\n        >\n            {{ $tc('global.default.save') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n</sw-modal>\n{% endblock %}\n","/**\n * @package admin\n */\n\nimport { KEY_USER_SEARCH_PREFERENCE } from 'src/app/service/search-ranking.service';\nimport template from './sw-search-preferences-modal.html.twig';\nimport './sw-search-preferences-modal.scss';\n\nconst { Component, Mixin, Module } = Cicada;\n\n/**\n * @private\n */\nComponent.register('sw-search-preferences-modal', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'searchPreferencesService',\n        'searchRankingService',\n        'userConfigService',\n    ],\n\n    emits: ['modal-close'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            searchPreferences: [],\n            userSearchPreferences: null,\n        };\n    },\n\n    computed: {\n        defaultSearchPreferences() {\n            const defaultSearchPreferences = this.searchPreferencesService.getDefaultSearchPreferences();\n\n            if (this.userSearchPreferences === null) {\n                return defaultSearchPreferences;\n            }\n\n            return defaultSearchPreferences.reduce((accumulator, currentValue) => {\n                const value = this.userSearchPreferences.find((item) => {\n                    return Object.keys(item)[0] === Object.keys(currentValue)[0];\n                });\n\n                accumulator.push(value || currentValue);\n\n                return accumulator;\n            }, []);\n        },\n\n        searchPreferencesColumns() {\n            return [\n                {\n                    property: 'active',\n                    label: this.$tc('global.sw-search-preferences-modal.columnActive'),\n                    sortable: false,\n                    width: '100px',\n                    align: 'center',\n                },\n                {\n                    property: 'moduleName',\n                    label: this.$tc('global.sw-search-preferences-modal.columnModuleName'),\n                    sortable: false,\n                },\n            ];\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    beforeUnmount() {\n        this.beforeDestroyComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.getDataSource();\n        },\n\n        mountedComponent() {\n            this.addEventListeners();\n        },\n\n        beforeDestroyComponent() {\n            this.removeEventListeners();\n        },\n\n        async getDataSource() {\n            this.isLoading = true;\n\n            try {\n                this.userSearchPreferences = await this.searchPreferencesService.getUserSearchPreferences();\n                this.searchPreferences = this.searchPreferencesService.processSearchPreferences(\n                    this.defaultSearchPreferences,\n                );\n            } catch (error) {\n                this.createNotificationError({ message: error.message });\n                this.searchPreferences = [];\n                this.userSearchPreferences = null;\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        addEventListeners() {\n            document\n                .getElementById('sw-search-preferences-modal-link')\n                ?.addEventListener('click', this.onOpenSearchSettings);\n        },\n\n        removeEventListeners() {\n            document\n                .getElementById('sw-search-preferences-modal-link')\n                ?.removeEventListener('click', this.onOpenSearchSettings);\n        },\n\n        getModuleName(entityName) {\n            const module = Module.getModuleByEntityName(entityName);\n\n            return this.$tc(module?.manifest.title);\n        },\n\n        onChangeSearchPreference(searchPreference) {\n            if (searchPreference._searchable && searchPreference.fields.every((field) => !field._searchable)) {\n                searchPreference.fields.forEach((field) => {\n                    field._searchable = true;\n                });\n            }\n        },\n\n        onClose() {\n            this.$emit('modal-close');\n        },\n\n        onOpenSearchSettings() {\n            this.$emit('modal-close');\n            this.$nextTick(() => {\n                this.$router.push({\n                    name: 'sw.profile.index.searchPreferences',\n                });\n            });\n        },\n\n        onCancel() {\n            this.$emit('modal-close');\n        },\n\n        onSave() {\n            // eslint-disable-next-line max-len\n            this.userSearchPreferences =\n                this.userSearchPreferences ?? this.searchPreferencesService.createUserSearchPreferences();\n            this.userSearchPreferences.value = this.searchPreferences.map(({ entityName, _searchable, fields }) => {\n                return {\n                    [entityName]: {\n                        _searchable,\n                        ...this.searchPreferencesService.processSearchPreferencesFields(fields),\n                    },\n                };\n            });\n\n            this.searchRankingService.clearCacheUserSearchConfiguration();\n\n            this.isLoading = true;\n            return this.userConfigService\n                .upsert({\n                    [KEY_USER_SEARCH_PREFERENCE]: this.userSearchPreferences.value,\n                })\n                .then(() => {\n                    this.isLoading = false;\n                    this.$emit('modal-close');\n                    if (this.isCompatEnabled('INSTANCE_EVENT_EMITTER')) {\n                        this.$root.$emit('sw-search-preferences-modal-close');\n                    } else {\n                        Cicada.Utils.EventBus.emit('sw-search-preferences-modal-close');\n                    }\n                })\n                .catch((error) => {\n                    this.isLoading = false;\n                    this.createNotificationError({ message: error.message });\n                });\n        },\n    },\n});\n"],"names":["template","Component","Mixin","Module","defaultSearchPreferences","accumulator","currentValue","value","item","error","_a","entityName","module","searchPreference","field","_searchable","fields","KEY_USER_SEARCH_PREFERENCE"],"mappings":"+GAAA,MAAeA,EAAA,sgDCQT,CAAE,UAAAC,EAAW,MAAAC,EAAO,OAAAC,CAAM,EAAK,OAKrCF,EAAU,SAAS,8BAA+B,CAC9C,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,2BACA,uBACA,mBACH,EAED,MAAO,CAAC,aAAa,EAErB,OAAQ,CACJE,EAAM,UAAU,cAAc,CACjC,EAED,MAAO,CACH,MAAO,CACH,UAAW,GACX,kBAAmB,CAAE,EACrB,sBAAuB,IACnC,CACK,EAED,SAAU,CACN,0BAA2B,CACvB,MAAME,EAA2B,KAAK,yBAAyB,4BAA2B,EAE1F,OAAI,KAAK,wBAA0B,KACxBA,EAGJA,EAAyB,OAAO,CAACC,EAAaC,IAAiB,CAClE,MAAMC,EAAQ,KAAK,sBAAsB,KAAMC,GACpC,OAAO,KAAKA,CAAI,EAAE,CAAC,IAAM,OAAO,KAAKF,CAAY,EAAE,CAAC,CAC9D,EAED,OAAAD,EAAY,KAAKE,GAASD,CAAY,EAE/BD,CACV,EAAE,CAAE,CAAA,CACR,EAED,0BAA2B,CACvB,MAAO,CACH,CACI,SAAU,SACV,MAAO,KAAK,IAAI,iDAAiD,EACjE,SAAU,GACV,MAAO,QACP,MAAO,QACV,EACD,CACI,SAAU,aACV,MAAO,KAAK,IAAI,qDAAqD,EACrE,SAAU,EACb,CACjB,CACS,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,eAAgB,CACZ,KAAK,uBAAsB,CAC9B,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,cAAa,CACrB,EAED,kBAAmB,CACf,KAAK,kBAAiB,CACzB,EAED,wBAAyB,CACrB,KAAK,qBAAoB,CAC5B,EAED,MAAM,eAAgB,CAClB,KAAK,UAAY,GAEjB,GAAI,CACA,KAAK,sBAAwB,MAAM,KAAK,yBAAyB,yBAAwB,EACzF,KAAK,kBAAoB,KAAK,yBAAyB,yBACnD,KAAK,wBACzB,CACa,OAAQI,EAAO,CACZ,KAAK,wBAAwB,CAAE,QAASA,EAAM,OAAS,CAAA,EACvD,KAAK,kBAAoB,GACzB,KAAK,sBAAwB,IAC7C,QAAsB,CACN,KAAK,UAAY,EACpB,CACJ,EAED,mBAAoB,QAChBC,EAAA,SACK,eAAe,kCAAkC,IADtD,MAAAA,EAEM,iBAAiB,QAAS,KAAK,qBACxC,EAED,sBAAuB,QACnBA,EAAA,SACK,eAAe,kCAAkC,IADtD,MAAAA,EAEM,oBAAoB,QAAS,KAAK,qBAC3C,EAED,cAAcC,EAAY,CACtB,MAAMC,EAAST,EAAO,sBAAsBQ,CAAU,EAEtD,OAAO,KAAK,IAAIC,GAAA,YAAAA,EAAQ,SAAS,KAAK,CACzC,EAED,yBAAyBC,EAAkB,CACnCA,EAAiB,aAAeA,EAAiB,OAAO,MAAOC,GAAU,CAACA,EAAM,WAAW,GAC3FD,EAAiB,OAAO,QAASC,GAAU,CACvCA,EAAM,YAAc,EACxC,CAAiB,CAER,EAED,SAAU,CACN,KAAK,MAAM,aAAa,CAC3B,EAED,sBAAuB,CACnB,KAAK,MAAM,aAAa,EACxB,KAAK,UAAU,IAAM,CACjB,KAAK,QAAQ,KAAK,CACd,KAAM,oCAC1B,CAAiB,CACjB,CAAa,CACJ,EAED,UAAW,CACP,KAAK,MAAM,aAAa,CAC3B,EAED,QAAS,CAEL,YAAK,sBACD,KAAK,uBAAyB,KAAK,yBAAyB,4BAA2B,EAC3F,KAAK,sBAAsB,MAAQ,KAAK,kBAAkB,IAAI,CAAC,CAAE,WAAAH,EAAY,YAAAI,EAAa,OAAAC,MAC/E,CACH,CAACL,CAAU,EAAG,CACV,YAAAI,EACA,GAAG,KAAK,yBAAyB,+BAA+BC,CAAM,CACzE,CACrB,EACa,EAED,KAAK,qBAAqB,oCAE1B,KAAK,UAAY,GACV,KAAK,kBACP,OAAO,CACJ,CAACC,CAA0B,EAAG,KAAK,sBAAsB,KAC7E,CAAiB,EACA,KAAK,IAAM,CACR,KAAK,UAAY,GACjB,KAAK,MAAM,aAAa,EACpB,KAAK,gBAAgB,wBAAwB,EAC7C,KAAK,MAAM,MAAM,mCAAmC,EAEpD,OAAO,MAAM,SAAS,KAAK,mCAAmC,CAEtF,CAAiB,EACA,MAAOR,GAAU,CACd,KAAK,UAAY,GACjB,KAAK,wBAAwB,CAAE,QAASA,EAAM,OAAS,CAAA,CAC3E,CAAiB,CACR,CACJ,CACL,CAAC"}