{"version":3,"file":"index-Cp9MUhkw.js","sources":["../../../app/administration/src/module/sw-settings-seo/component/sw-seo-url-template-card/sw-seo-url-template-card.html.twig","../../../app/administration/src/module/sw-settings-seo/component/sw-seo-url-template-card/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_seo_url_template_card %}\n<sw-card\n    class=\"sw-seo-url-template-card\"\n    position-identifier=\"sw-seo-url-template-card\"\n    :title=\"$tc('sw-seo-url-template-card.general.titleCard')\"\n    :is-loading=\"isLoading\"\n>\n    <template #toolbar>\n        <sw-sales-channel-switch\n            :label=\"$tc('sw-seo-url-template-card.general.labelSalesChannelSelect')\"\n            @change-sales-channel-id=\"onSalesChannelChanged\"\n        />\n    </template>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_seo_url_template_card_info_box %}\n    <sw-alert\n        :title=\"$tc('sw-seo-url-template-card.general.headlineInfoMessageBoxEmptyProperties')\"\n    >\n        <span>{{ $tc('sw-seo-url-template-card.general.textInfoMessageBoxEmptyProperties') }}</span>\n    </sw-alert>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_seo_url_template_card_entries %}\n    <template v-if=\"!isLoading && !salesChannelIsHeadless\">\n        <div\n            v-for=\"(seoUrlTemplate, index) in getTemplatesForSalesChannel(salesChannelId)\"\n            :key=\"index\"\n            class=\"sw-seo-url-template-card__seo-url\"\n        >\n            <sw-container\n                columns=\"3fr 1fr\"\n                gap=\"5px\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_seo_url_template_card_entries_input_wrapper %}\n                <sw-inherit-wrapper\n                    v-model:value=\"seoUrlTemplate.template\"\n                    :has-parent=\"seoUrlTemplate.salesChannelId !== null\"\n                    :inherited-value=\"getPlaceholder(seoUrlTemplate)\"\n                    @update:value=\"onInput(seoUrlTemplate)\"\n                >\n\n                    <template #content=\"props\">\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_seo_url_template_card_entries_input %}\n                        <sw-text-field\n                            :map-inheritance=\"props\"\n                            :value=\"props.currentValue\"\n                            :disabled=\"props.isInherited\"\n                            :error=\"seoUrlTemplatesTemplateError[index]\"\n                            :name=\"`sw-field--seo-url-template-${seoUrlTemplate.entity}`\"\n                            :label=\"getLabel(seoUrlTemplate)\"\n                            :placeholder=\"getPlaceholder(seoUrlTemplate)\"\n                            @update:value=\"props.updateCurrentValue\"\n                        >\n\n                            <template #suffix>\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_seo_url_template_card_entries_input_suffix %}\n                                <sw-loader\n                                    v-if=\"previewLoadingStates[seoUrlTemplate.id]\"\n                                    size=\"16px\"\n                                />\n                                <sw-icon\n                                    v-else-if=\"errorMessages[seoUrlTemplate.id]\"\n                                    v-tooltip=\"$tc('sw-seo-url-template-card.general.tooltipInvalidTemplate')\"\n                                    name=\"regular-times\"\n                                />\n                                <sw-icon\n                                    v-else-if=\"noEntityError.includes(seoUrlTemplate.id)\"\n                                    v-tooltip=\"$tc('sw-seo-url-template-card.general.textUrlNoEntitiesForPreview', 0, {\n                                        entity: $tc(`global.entities.${seoUrlTemplate.entityName}`, 0)\n                                    })\"\n                                    name=\"regular-exclamation-triangle\"\n                                />\n                                <sw-icon\n                                    v-else-if=\"!props.currentValue\"\n                                    v-tooltip=\"$tc('sw-seo-url-template-card.general.textUrlPreviewEmptyTemplate', 1, {\n                                        entity: $tc(`global.entities.${seoUrlTemplate.entityName}`, 0)\n                                    })\"\n                                    name=\"regular-exclamation-triangle\"\n                                />\n                                <sw-icon\n                                    v-else\n                                    v-tooltip=\"$tc('sw-seo-url-template-card.general.tooltipValidTemplate')\"\n                                    name=\"regular-checkmark\"\n                                />\n                                {% endblock %}\n                            </template>\n\n                        </sw-text-field>\n                        {% endblock %}\n                    </template>\n                </sw-inherit-wrapper>\n                {% endblock %}\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_seo_url_template_card_entries_variables %}\n                <sw-single-select\n                    v-if=\"getVariableOptions(seoUrlTemplate.id) && !noEntityError.includes(seoUrlTemplate.id)\"\n                    :value=\"selectedProperty\"\n                    value-property=\"name\"\n                    label-property=\"name\"\n                    show-clearable-button\n                    :options=\"getVariableOptions(seoUrlTemplate.id)\"\n                    :placeholder=\"$tc('sw-seo-url-template-card.general.placeholderSelectVariables')\"\n                    :label=\"$tc('sw-seo-url-template-card.general.labelPossibleValues')\"\n                    @update:value=\"(propertyName) => onSelectInput(propertyName, seoUrlTemplate)\"\n                />\n                {% endblock %}\n            </sw-container>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_seo_url_template_card_entries_preview %}\n            <div\n                v-if=\"seoUrlTemplate.template\"\n                class=\"sw-seo-url-template-card__preview\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_seo_url_template_card_entries_preview_label %}\n                <span class=\"sw-seo-url-template-card__preview-label\">\n                    {{ $tc('sw-seo-url-template-card.general.preview') }}\n                </span>\n                {% endblock %}\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_seo_url_template_card_entries_preview_item %}\n                <div class=\"sw-seo-url-template-card__preview-item\">\n                    <span v-if=\"previews[seoUrlTemplate.id] && previews[seoUrlTemplate.id].length > 0\">\n                        {{ previews[seoUrlTemplate.id][0].seoPathInfo }}\n                    </span>\n                    <span v-else>\n                        {{ $tc('sw-seo-url-template-card.general.textUrlPreviewNotPossible') }}\n                    </span>\n                    <span v-if=\"noEntityError.includes(seoUrlTemplate.id)\">\n                        {{ $tc('sw-seo-url-template-card.general.textUrlNoEntitiesForPreview', 0, { entity: $tc(`global.entities.${seoUrlTemplate.entityName}`, 0) }) }}\n                    </span>\n                </div>\n                {% endblock %}\n            </div>\n            {% endblock %}\n        </div>\n    </template>\n    <div v-if=\"salesChannelIsHeadless && !isLoading\">\n        {{ $tc('sw-seo-url.textSeoUrlsDisallowedForHeadless') }}\n    </div>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n","/**\n * @package buyers-experience\n */\n\nimport template from './sw-seo-url-template-card.html.twig';\nimport './sw-seo-url-template-card.scss';\n\nconst { Mixin } = Cicada;\nconst { mapCollectionPropertyErrors } = Cicada.Component.getComponentHelper();\nconst EntityCollection = Cicada.Data.EntityCollection;\nconst Criteria = Cicada.Data.Criteria;\nconst utils = Cicada.Utils;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'seoUrlTemplateService',\n        'repositoryFactory',\n    ],\n\n    mixins: [Mixin.getByName('notification')],\n\n    data() {\n        return {\n            defaultSeoUrlTemplates: null,\n            seoUrlTemplates: null,\n            seoUrlPreviewCriteria: {},\n            isLoading: true,\n            debouncedPreviews: {},\n            previewLoadingStates: {},\n            errorMessages: {},\n            previews: {},\n            noEntityError: [],\n            variableStores: {},\n            seoUrlTemplateRepository: {},\n            salesChannelId: null,\n            salesChannels: [],\n            selectedProperty: null,\n        };\n    },\n\n    computed: {\n        ...mapCollectionPropertyErrors('seoUrlTemplates', ['template']),\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        salesChannelIsHeadless() {\n            const currentSalesChannel = this.salesChannels.find((entity) => {\n                return entity.id === this.salesChannelId;\n            });\n\n            if (!currentSalesChannel) {\n                return false;\n            }\n\n            // from Defaults.php\n            return currentSalesChannel.typeId === 'f183ee5650cf4bdb8a774337575067a6';\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.seoUrlTemplateRepository = this.repositoryFactory.create('seo_url_template');\n            this.seoUrlTemplates = new EntityCollection(\n                this.seoUrlTemplateRepository.route,\n                this.seoUrlTemplateRepository.schema.entity,\n                Cicada.Context.api,\n                new Criteria(1, 25),\n            );\n\n            this.defaultSeoUrlTemplates = new EntityCollection(\n                this.seoUrlTemplateRepository.route,\n                this.seoUrlTemplateRepository.schema.entity,\n                Cicada.Context.api,\n                new Criteria(1, 25),\n            );\n\n            this.seoUrlPreviewCriteria['frontend.navigation.page'] = new Criteria(1, 25).addFilter(\n                Criteria.not('and', [Criteria.equals('path', null)]),\n            );\n\n            this.fetchSalesChannels();\n            this.fetchSeoUrlTemplates();\n        },\n        fetchSeoUrlTemplates(salesChannelId = null) {\n            const criteria = new Criteria(1, 25);\n\n            if (!salesChannelId) {\n                salesChannelId = null;\n            }\n            criteria.addFilter(Criteria.equals('salesChannelId', salesChannelId));\n\n            this.isLoading = true;\n\n            this.seoUrlTemplateRepository.search(criteria).then((response) => {\n                response.forEach((entity) => {\n                    if (!this.seoUrlTemplates.has(entity.id)) {\n                        this.seoUrlTemplates.add(entity);\n                    }\n                });\n\n                if (!salesChannelId) {\n                    // Save the defaults as blueprint for creating dynamically new entities\n                    response.forEach((entity) => {\n                        if (!this.defaultSeoUrlTemplates.has(entity)) {\n                            this.defaultSeoUrlTemplates.add(entity);\n                        }\n                    });\n                } else {\n                    this.createSeoUrlTemplatesFromDefaultRoutes(salesChannelId);\n                }\n                this.isLoading = false;\n\n                this.seoUrlTemplates.forEach((seoUrlTemplate) => {\n                    // Fetch preview / validate seo url template\n                    this.fetchSeoUrlPreview(seoUrlTemplate);\n\n                    // Create stores for the possible variables\n                    if (!this.variableStores.hasOwnProperty(seoUrlTemplate.id)) {\n                        this.seoUrlTemplateService.getContext(seoUrlTemplate).then((data) => {\n                            this.createVariableOptions(seoUrlTemplate.id, data);\n                        });\n                    }\n                });\n            });\n        },\n        createSeoUrlTemplatesFromDefaultRoutes(salesChannelId) {\n            // Iterate over the default seo url templates and create new entities for the actual sales channel\n            // if they do not exist\n            this.defaultSeoUrlTemplates.forEach((defaultEntity) => {\n                const entityAlreadyExists = this.seoUrlTemplates.some((entity) => {\n                    return entity.routeName === defaultEntity.routeName && entity.salesChannelId === salesChannelId;\n                });\n\n                if (!entityAlreadyExists) {\n                    const entity = this.seoUrlTemplateRepository.create();\n                    entity.routeName = defaultEntity.routeName;\n                    entity.salesChannelId = salesChannelId;\n                    entity.entityName = defaultEntity.entityName;\n                    entity.template = null;\n                    this.seoUrlTemplates.add(entity);\n                }\n            });\n        },\n        createVariableOptions(id, data) {\n            const storeOptions = [];\n\n            Object.entries(data).forEach(\n                ([\n                    property,\n                    value,\n                ]) => {\n                    storeOptions.push({ name: `${property}` });\n\n                    if (value instanceof Object) {\n                        Object.keys(value).forEach((innerProperty) => {\n                            storeOptions.push({\n                                name: `${property}.${innerProperty}`,\n                            });\n                        });\n                    }\n                },\n            );\n\n            if (this.isCompatEnabled('INSTANCE_SET')) {\n                this.$set(this.variableStores, id, storeOptions);\n            } else {\n                this.variableStores.id = storeOptions;\n            }\n        },\n        getVariableOptions(id) {\n            if (this.variableStores.hasOwnProperty(id)) {\n                return this.variableStores[id];\n            }\n            return false;\n        },\n        getLabel(seoUrlTemplate) {\n            const routeName = seoUrlTemplate.routeName.replace(/\\./g, '-');\n            if (this.$tc(`sw-seo-url-template-card.routeNames.${routeName}`)) {\n                return this.$tc(`sw-seo-url-template-card.routeNames.${routeName}`);\n            }\n\n            return seoUrlTemplate.routeName;\n        },\n        getPlaceholder(seoUrlTemplate) {\n            if (!seoUrlTemplate.salesChannelId) {\n                return null;\n            }\n\n            const defaultEntity = Object.values(this.defaultSeoUrlTemplates).find((entity) => {\n                return entity.routeName === seoUrlTemplate.routeName;\n            });\n\n            return defaultEntity.template;\n        },\n        onClickSave() {\n            const hasError = Object.keys(this.errorMessages).some((key) => {\n                return this.errorMessages[key] !== null;\n            });\n\n            if (hasError) {\n                this.createSaveErrorNotification();\n                return;\n            }\n\n            this.seoUrlTemplates.forEach((entry) => {\n                if (entry.template === null) {\n                    this.seoUrlTemplates.remove(entry.id);\n                }\n            });\n\n            this.seoUrlTemplateRepository\n                .sync(this.seoUrlTemplates)\n                .then(() => {\n                    this.seoUrlTemplates = new EntityCollection(\n                        this.seoUrlTemplateRepository.route,\n                        this.seoUrlTemplateRepository.schema.entity,\n                        Cicada.Context.api,\n                        new Criteria(1, 25),\n                    );\n                    this.fetchSeoUrlTemplates(this.salesChannelId);\n                    this.createSaveSuccessNotification();\n                })\n                .catch(() => {\n                    this.createSaveErrorNotification();\n                });\n        },\n        createSaveErrorNotification() {\n            const titleSaveSuccess = this.$tc('global.default.error');\n            const messageSaveSuccess = this.$tc('sw-seo-url-template-card.general.messageSaveError');\n\n            this.createNotificationError({\n                title: titleSaveSuccess,\n                message: messageSaveSuccess,\n            });\n        },\n        createSaveSuccessNotification() {\n            const titleSaveSuccess = this.$tc('global.default.success');\n            const messageSaveSuccess = this.$tc('sw-seo-url-template-card.general.messageSaveSuccess');\n\n            this.createNotificationSuccess({\n                title: titleSaveSuccess,\n                message: messageSaveSuccess,\n            });\n        },\n\n        onSelectInput(propertyName, entity) {\n            if (propertyName === null) {\n                return;\n            }\n            const templateValue = entity.template ? `${entity.template}/` : '';\n            entity.template = `${templateValue}{{ ${propertyName} }}`;\n            this.fetchSeoUrlPreview(entity);\n        },\n        onInput(entity) {\n            this.debouncedPreviewSeoUrlTemplate(entity);\n        },\n        debouncedPreviewSeoUrlTemplate(entity) {\n            if (!this.debouncedPreviews[entity.id]) {\n                this.debouncedPreviews[entity.id] = utils.debounce(() => {\n                    if (entity.template && entity.template !== '') {\n                        this.fetchSeoUrlPreview(entity);\n                    } else {\n                        this.setErrorMessagesForEntity(entity);\n                    }\n                }, 400);\n            } else {\n                this.setErrorMessagesForEntity(entity);\n            }\n\n            this.debouncedPreviews[entity.id]();\n        },\n        setErrorMessagesForEntity(entity, value = null) {\n            // eslint-disable-next-line no-lonely-if\n            if (this.isCompatEnabled('INSTANCE_SET')) {\n                this.$set(this.errorMessages, entity.id, value);\n            } else {\n                this.errorMessages[entity.id] = value;\n            }\n        },\n        fetchSeoUrlPreview(entity) {\n            if (this.isCompatEnabled('INSTANCE_SET')) {\n                this.$set(this.previewLoadingStates, entity.id, true);\n            } else {\n                this.previewLoadingStates[entity.id] = true;\n            }\n\n            const criteria = this.seoUrlPreviewCriteria[entity.routeName]\n                ? this.seoUrlPreviewCriteria[entity.routeName]\n                : new Criteria(1, 25);\n            entity.criteria = criteria.parse();\n            this.seoUrlTemplateService\n                .preview(entity)\n                .then((response) => {\n                    this.noEntityError = this.noEntityError.filter((elem) => {\n                        return elem !== entity.id;\n                    });\n\n                    if (this.isCompatEnabled('INSTANCE_SET')) {\n                        this.$set(this.previews, entity.id, response);\n                    } else {\n                        this.previews[entity.id] = response;\n                    }\n\n                    if (response === null) {\n                        this.noEntityError.push(entity.id);\n                    } else {\n                        this.setErrorMessagesForEntity(entity);\n                    }\n                    this.previewLoadingStates[entity.id] = false;\n                })\n                .catch((err) => {\n                    this.setErrorMessagesForEntity(entity, err.response.data.errors[0].detail);\n\n                    if (this.isCompatEnabled('INSTANCE_SET')) {\n                        this.$set(this.previews, entity.id, []);\n                    } else {\n                        this.previews[entity.id] = [];\n                    }\n\n                    this.previewLoadingStates[entity.id] = false;\n                });\n        },\n        fetchSalesChannels() {\n            this.salesChannelRepository.search(new Criteria(1, 25)).then((response) => {\n                this.salesChannels = response;\n            });\n        },\n        onSalesChannelChanged(salesChannelId) {\n            this.salesChannelId = salesChannelId;\n            this.fetchSeoUrlTemplates(salesChannelId);\n        },\n        getTemplatesForSalesChannel(salesChannelId) {\n            return this.seoUrlTemplates.filter((templateEntity) => {\n                return templateEntity.salesChannelId === salesChannelId;\n            });\n        },\n    },\n};\n"],"names":["template","Mixin","mapCollectionPropertyErrors","EntityCollection","Criteria","utils","index","currentSalesChannel","entity","salesChannelId","criteria","response","seoUrlTemplate","data","defaultEntity","id","storeOptions","property","value","innerProperty","routeName","key","entry","titleSaveSuccess","messageSaveSuccess","propertyName","templateValue","elem","err","templateEntity"],"mappings":"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"}