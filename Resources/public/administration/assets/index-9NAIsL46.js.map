{"version":3,"file":"index-9NAIsL46.js","sources":["../../../app/administration/src/module/sw-product/component/sw-product-variant-modal/sw-product-variant-modal.html.twig","../../../app/administration/src/module/sw-product/component/sw-product-variant-modal/index.js"],"sourcesContent":["<!-- eslint-disable vuejs-accessibility/click-events-have-key-events -->\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_product_variant_modal %}\n<sw-modal\n    class=\"sw-product-variant-modal\"\n    :title=\"modalTitle\"\n    variant=\"full\"\n    @modal-close=\"$emit('modal-close')\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variant_modal_body %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variant_modal_toolbar %}\n    <div class=\"sw-configuration-option-list__toolbar\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_toolbar_container %}\n        <sw-container\n            columns=\"1fr minmax(50px, max-content)\"\n            gap=\"0 16px\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_label_search %}\n            <sw-simple-search-field\n                v-model:value=\"searchTerm\"\n                class=\"sw-product-variant-modal__search\"\n                size=\"small\"\n                variant=\"form\"\n                @search-term-change=\"onSearchTermChange\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_option_list_toolbar_container_filter_list %}\n            <div class=\"sw-product-variant-modal__filter-list-button\">\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variant_modal_option_list_toolbar_container_filter_list_button %}\n                <sw-button\n                    class=\"sw-product-variant-modal__button-filter\"\n                    @click=\"toggleFilterMenu\"\n                >\n                    {{ $tc('sw-product.variations.generatedFilterList') }}\n                    <sw-icon name=\"regular-filter\" />\n                </sw-button>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variant_modal_option_list_toolbar_container_filter_context_menu %}\n                <sw-context-menu\n                    v-show=\"filterWindowOpen\"\n                    class=\"sw-product-variant-modal__filter-context-menu\"\n                >\n                    <sw-container\n                        columns=\"1fr\"\n                        gap=\"5px\"\n                    >\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_product_variant_modal_option_list_toolbar_container_filter_tree %}\n                        <sw-tree\n                            v-show=\"filterOptions.length\"\n                            :sortable=\"false\"\n                            :items=\"filterOptions\"\n                            :searchable=\"false\"\n                            disable-context-menu\n                            bind-items-to-folder\n                        >\n                            <template #items=\"{ treeItems, sortable, draggedItem, disableContextMenu, onChangeRoute, checkItem}\">\n                                <sw-tree-item\n                                    v-for=\"(item, index) in treeItems\"\n                                    :key=\"item.id\"\n                                    :sortable=\"false\"\n                                    :item=\"item\"\n                                    disable-context-menu\n                                    @check-item=\"filterOptionChecked\"\n                                />\n                            </template>\n                        </sw-tree>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_product_variant_modal_option_list_toolbar_container_filter_buttons %}\n                        <div class=\"sw-product-variant-modal__filter-buttons\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_product_variant_modal_option_list_toolbar_container_button_filter_reset %}\n                            <sw-button\n                                class=\"sw-product-variant-modal__reset-filter\"\n                                @click=\"resetFilterOptions\"\n                            >\n                                {{ $tc('sw-product.variations.overview.filterReset') }}\n                            </sw-button>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_product_variant_modal_option_list_toolbar_container_button_update_list %}\n                            <sw-button\n                                variant=\"primary\"\n                                @click=\"fetchProductVariants\"\n                            >\n                                {{ $tc('sw-product.variations.overview.filter') }}\n                            </sw-button>\n                            {% endblock %}\n                        </div>\n                        {% endblock %}\n\n                    </sw-container>\n                </sw-context-menu>\n                {% endblock %}\n            </div>\n            {% endblock %}\n        </sw-container>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variant_modal_body_grid %}\n    <sw-data-grid\n        v-if=\"productVariants.length > 0\"\n        ref=\"variantGrid\"\n        :is-loading=\"isLoading\"\n        :columns=\"gridColumns\"\n        :data-source=\"productVariants\"\n        :sort-by=\"sortBy\"\n        :sort-direction=\"sortDirection\"\n        :allow-inline-edit=\"acl.can('product.editor')\"\n        show-settings\n        @column-sort=\"onSortColumn\"\n        @inline-edit-save=\"onInlineEditSave\"\n        @inline-edit-cancel=\"onInlineEditCancel\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_body_grid_bulk %}\n        <template #bulk>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_grid_bulk_edit %}\n            <span\n                v-if=\"acl.can('product.editor')\"\n                class=\"link link-primary sw-product-variant-modal__bulk-edit-action\"\n                role=\"link\"\n                tabindex=\"0\"\n                @click=\"toggleBulkEditModal\"\n            >\n                {{ $tc('global.default.bulkEdit') }}\n            </span>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_grid_bulk_delete %}\n            <span\n                v-if=\"acl.can('product.deleter')\"\n                class=\"link link-danger sw-product-variant-modal__bulk-delete-action\"\n                role=\"link\"\n                tabindex=\"0\"\n                @click=\"onClickBulkDelete\"\n            >\n                {{ $tc('global.default.delete') }}\n            </span>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_bulk_edit_modal %}\n        <template #bulk-modals=\"{ selection }\">\n            <sw-bulk-edit-modal\n                v-if=\"showBulkEditModal\"\n                class=\"sw-product-variant-modal__bulk-edit-modal\"\n                :selection=\"selection\"\n                :bulk-grid-edit-columns=\"gridColumns\"\n                @edit-items=\"onEditItems\"\n                @modal-close=\"toggleBulkEditModal\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variant_modal_bulk_edit_modal_column_name %}\n                <template #column-name=\"{ item }\">\n                    <sw-media-preview-v2 :source=\"getItemMedia(item)\" />\n                    <router-link :to=\"{ name: 'sw.product.detail', params: { id: item.id } }\">\n                        <span\n                            v-if=\"item.translated.name\"\n                            class=\"sw-product-variant-modal__variant-name\"\n                        >\n                            {{ item.translated.name }}\n                        </span>\n                        <sw-product-variant-info\n                            v-else\n                            class=\"sw-product-variant-modal__variant-options\"\n                            :variations=\"item.variation\"\n                            :show-tooltip=\"false\"\n                            :ommit-parenthesis=\"true\"\n                            seperator=\", \"\n                        />\n                    </router-link>\n                    <sw-product-variant-info\n                        v-if=\"item.translated.name\"\n                        :variations=\"item.variation\"\n                        :show-tooltip=\"false\"\n                    />\n                    <sw-label\n                        v-if=\"variantIsDigital(item)\"\n                        class=\"sw-product-variant-modal__digital-indicator\"\n                    >\n                        {{ $tc('sw-product.variations.generatedListColumnContentProductState.is-download') }}\n                    </sw-label>\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variant_modal_bulk_edit_modal_column_price %}\n                <template #column-price=\"{ item }\">\n                    <sw-inheritance-switch\n                        class=\"sw-product-variant-modal__price-inheritance-switch\"\n                        :is-inherited=\"item.price === null\"\n                        disabled\n                    />\n                    <sw-price-preview\n                        :value=\"item.price ? item.price : []\"\n                        :default-price=\"productEntity.price[0]\"\n                        :tax-rate=\"productEntity.tax\"\n                        :currency=\"currency\"\n                    />\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variant_modal_bulk_edit_modal_column_stock %}\n                <template #column-stock=\"{ item }\">\n                    {{ item.stock }}\n                    <sw-color-badge :variant=\"stockColorVariant(item.stock)\" />\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variant_modal_bulk_edit_modal_column_active %}\n                <template #column-active=\"{ item }\">\n                    <sw-icon\n                        v-if=\"item.active === true\"\n                        class=\"sw-icon--product-status is--active\"\n                        name=\"regular-checkmark-xs\"\n                        small\n                    />\n                    <sw-icon\n                        v-else-if=\"item.active === false\"\n                        class=\"sw-icon--product-status is--inactive\"\n                        name=\"regular-times-s\"\n                        small\n                    />\n                    <sw-icon\n                        v-else\n                        key=\"inherit-icon\"\n                        name=\"regular-link-horizontal\"\n                        size=\"16\"\n                    />\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variant_modal_bulk_edit_modal_column_media %}\n                <template #column-media=\"{ item }\">\n                    <sw-inheritance-switch\n                        class=\"sw-product-variant-modal__media-inherited-icon\"\n                        :is-inherited=\"isMediaFieldInherited(item)\"\n                        disabled\n                    />\n                    <sw-product-variants-media-upload\n                        :source=\"item\"\n                        :upload-tag=\"item.id\"\n                        :is-inherited=\"isMediaFieldInherited(item)\"\n                        :parent-product=\"productEntity\"\n                        disabled\n                    />\n                </template>\n                {% endblock %}\n            </sw-bulk-edit-modal>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_body_grid_column_name %}\n        <template #column-name=\"{item, isInlineEdit}\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_grid_column_name_inline_edit %}\n            <sw-text-field\n                v-if=\"isInlineEdit\"\n                v-model:value=\"item.name\"\n                :placeholder=\"$tc('sw-product.list.variantModalInlineEditProductNamePlaceholder')\"\n                size=\"small\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_grid_column_name_content %}\n            <template v-else>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variant_modal_body_grid_column_name_content_media_preview %}\n                <sw-media-preview-v2 :source=\"getItemMedia(item)\" />\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variant_modal_body_grid_column_name_content_name %}\n                <router-link :to=\"{ name: 'sw.product.detail', params: { id: item.id } }\">\n                    <span\n                        v-if=\"item.translated.name\"\n                        class=\"sw-product-variant-modal__variant-name\"\n                    >\n                        {{ item.translated.name }}\n                    </span>\n\n                    <sw-product-variant-info\n                        v-else\n                        class=\"sw-product-variant-modal__variant-options\"\n                        :variations=\"item.variation\"\n                        :show-tooltip=\"false\"\n                        :ommit-parenthesis=\"true\"\n                        seperator=\", \"\n                    />\n                </router-link>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variant_modal_body_grid_column_name_content_options %}\n                <sw-product-variant-info\n                    v-if=\"item.translated.name\"\n                    :variations=\"item.variation\"\n                    :show-tooltip=\"false\"\n                />\n                {% endblock %}\n\n                <sw-label\n                    v-if=\"variantIsDigital(item)\"\n                    class=\"sw-product-variant-modal__digital-indicator\"\n                >\n                    {{ $tc('sw-product.variations.generatedListColumnContentProductState.is-download') }}\n                </sw-label>\n            </template>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_body_grid_column_price %}\n        <template #column-price=\"{item, isInlineEdit}\">\n            <template v-if=\"isInlineEdit\">\n                <sw-inheritance-switch\n                    :is-inherited=\"item.price === null\"\n                    class=\"sw-product-variant-modal__price-inheritance-switch\"\n                    @inheritance-restore=\"onInheritanceRestore(item, currency)\"\n                    @inheritance-remove=\"onInheritanceRemove(item, currency)\"\n                />\n\n                <sw-price-field\n                    :value=\"item.price ? item.price : []\"\n                    :default-price=\"productEntity.price[0]\"\n                    :tax-rate=\"productEntity.tax\"\n                    :label=\"false\"\n                    :compact=\"true\"\n                    :disable-suffix=\"true\"\n                    enable-inheritance\n                    :currency=\"currency\"\n                />\n            </template>\n\n            <template v-else>\n                <sw-inheritance-switch\n                    :is-inherited=\"item.price === null\"\n                    class=\"sw-product-variant-modal__price-inheritance-switch\"\n                    disabled\n                />\n\n                <sw-price-preview\n                    :value=\"item.price ? item.price : []\"\n                    :default-price=\"productEntity.price[0]\"\n                    :tax-rate=\"productEntity.tax\"\n                    :currency=\"currency\"\n                />\n            </template>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_body_grid_column_stock %}\n        <template #column-stock=\"{item, isInlineEdit}\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_grid_column_stock_inline_edit %}\n            <sw-number-field\n                v-if=\"isInlineEdit\"\n                v-model:value=\"item.stock\"\n                :placeholder=\"$tc('sw-product.list.variantModalInlineEditStockPlaceholder')\"\n                size=\"small\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_grid_column_stock_content %}\n            <template v-else>\n                {{ item.stock }}\n                <sw-color-badge :variant=\"stockColorVariantFilter(item.stock)\" />\n            </template>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_body_grid_column_active %}\n        <template #column-active=\"{item, isInlineEdit}\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_grid_column_active_inline_edit %}\n            <template v-if=\"isInlineEdit\">\n                <sw-checkbox-field\n                    v-model:value=\"item.active\"\n                    :disabled=\"item.active === null\"\n                />\n\n                <sw-inheritance-switch\n                    :is-inherited=\"item.active === null\"\n                    class=\"sw-product-variant-modal__active-inheritance-switch\"\n                    @inheritance-restore=\"item.active = null\"\n                    @inheritance-remove=\"item.active = true\"\n                />\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_grid_column_active_content %}\n            <template v-else>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variant_modal_body_grid_column_active_content_icon_active %}\n                <sw-icon\n                    v-if=\"item.active === true\"\n                    name=\"regular-checkmark-xs\"\n                    small\n                    class=\"sw-icon--product-status is--active\"\n                />\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_variant_modal_body_grid_column_active_content_icon_not_active %}\n                <sw-icon\n                    v-else-if=\"item.active === false\"\n                    name=\"regular-times-s\"\n                    small\n                    class=\"sw-icon--product-status is--inactive\"\n                />\n                {% endblock %}\n\n                <sw-icon\n                    v-else\n                    key=\"inherit-icon\"\n                    name=\"regular-link-horizontal\"\n                    size=\"16\"\n                />\n            </template>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_body_grid_column_media %}\n        <template\n            #column-media=\"{ item, isInlineEdit, compact }\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_grid_column_media_inline_edit %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_grid_column_media_inherit %}\n            <sw-inheritance-switch\n                :is-inherited=\"isMediaFieldInherited(item)\"\n                :disabled=\"!isInlineEdit\"\n                class=\"sw-product-variant-modal__media-inherited-icon\"\n                @inheritance-restore=\"onMediaInheritanceRestore(item, isInlineEdit)\"\n                @inheritance-remove=\"onMediaInheritanceRemove(item, isInlineEdit)\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_grid_column_media_content %}\n            <sw-product-variants-media-upload\n                :source=\"item\"\n                :upload-tag=\"item.id\"\n                :is-inherited=\"isMediaFieldInherited(item)\"\n                :disabled=\"isInlineEdit ? isMediaFieldInherited(item) : true\"\n                :parent-product=\"productEntity\"\n            />\n            {% endblock %}\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_body_grid_actions %}\n        <template #actions=\"{item}\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_grid_actions_edit %}\n            <sw-context-menu-item @click=\"visitProduct(item.id)\">\n                {{ contextMenuEditText }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_grid_actions_delete %}\n            <sw-context-menu-item\n                v-tooltip.left=\"getNoPermissionsTooltip('product.deleter')\"\n                variant=\"danger\"\n                :disabled=\"!acl.can('product.deleter')\"\n                @click=\"onDeleteVariant(item)\"\n            >\n                {{ $tc('global.default.delete') }}\n            </sw-context-menu-item>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_body_grid_pagination %}\n        <template #pagination>\n            <sw-pagination\n                v-if=\"productVariants.length !== 0\"\n                ref=\"pagination\"\n                :page=\"paginationPage\"\n                :limit=\"paginationLimit\"\n                :total=\"productVariants.total\"\n                @page-change=\"onPageChange\"\n            />\n        </template>\n        {% endblock %}\n    </sw-data-grid>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variant_modal_body_empty_state %}\n    <sw-empty-state\n        v-else\n        title=\"\"\n        :subline=\"$tc('sw-product.list.variantGridEmptyStateSubline')\"\n        :absolute=\"false\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variant_modal_body_delete_modal %}\n    <sw-modal\n        v-if=\"showDeleteModal\"\n        class=\"sw-product-variant-modal__delete-modal\"\n        :title=\"$tc('sw-product.list.variantDeleteModalTitle')\"\n        variant=\"small\"\n        @modal-close=\"closeDeleteModal\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_body_delete_modal_body_multiple %}\n        <template v-if=\"toBeDeletedVariants.length > 1\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_delete_modal_body_multiple_text %}\n            <p>{{ $t('sw-product.list.multipleVariantsDeleteModalText', { amount: toBeDeletedVariants.length }) }}</p>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_delete_modal_body_multiple_subline %}\n            <p class=\"sw-product-variant-modal__delete-modal-subline\">\n                ({{ $tc('sw-product.list.multipleVariantsDeleteModalSubline') }})\n            </p>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_body_delete_modal_body_single %}\n        <p v-else>\n            {{ $t('sw-product.list.variantDeleteModalText', { variantName: buildVariantName(toBeDeletedVariants[0]) }) }}\n        </p>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_body_delete_modal_footer %}\n        <template #modal-footer>\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_delete_modal_footer_close %}\n            <sw-button\n                size=\"small\"\n                @click=\"closeDeleteModal\"\n            >\n                {{ $tc('global.default.cancel') }}\n            </sw-button>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_variant_modal_body_delete_modal_footer_confirm %}\n            <sw-button-process\n                variant=\"danger\"\n                size=\"small\"\n                :animation-timeout=\"750\"\n                :process-success=\"isDeletionOver\"\n                :is-loading=\"isDeleteButtonLoading\"\n                @click=\"deleteVariants\"\n                @update:process-success=\"closeDeleteModal\"\n            >\n                {{ $tc('global.default.delete') }}\n            </sw-button-process>\n            {% endblock %}\n        </template>\n        {% endblock %}\n    </sw-modal>\n    {% endblock %}\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_variant_modal_footer %}\n    <template #modal-footer>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_footer_visit_main_product %}\n        <div\n            class=\"sw-product-variant-modal__main-product-link\"\n            role=\"button\"\n            tabindex=\"0\"\n            @click=\"visitProduct(productEntity.id)\"\n        >\n            {{ openMainProductText }}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_variant_modal_footer_close_button %}\n        <sw-button\n            size=\"small\"\n            @click=\"$emit('modal-close')\"\n        >\n            {{ $tc('global.sw-modal.labelClose') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n","/*\n * @package inventory\n */\n\nimport template from './sw-product-variant-modal.html.twig';\nimport './sw-product-variant-modal.scss';\n\nconst { Mixin, Context } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    emits: ['modal-close'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        // this is the parent product entity from wich we will get all the variants\n        productEntity: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            productVariants: [],\n            currency: null,\n            paginationLimit: 25,\n            paginationPage: 1,\n            toBeDeletedVariants: [],\n            showDeleteModal: false,\n            searchTerm: '',\n            isDeleteButtonLoading: false,\n            isDeletionOver: false,\n            sortDirection: 'ASC',\n            sortBy: 'productNumber',\n            isLoading: false,\n            groups: [],\n            filterOptions: [],\n            includeOptions: [],\n            filterWindowOpen: false,\n            showBulkEditModal: false,\n        };\n    },\n\n    computed: {\n        modalTitle() {\n            return this.$t('sw-product.list.variantModalTitle', {\n                productName: this.productEntity.translated.name,\n            });\n        },\n\n        openMainProductText() {\n            return this.$t('sw-product.list.openMainProduct', {\n                productName: this.productEntity.translated.name,\n            });\n        },\n\n        productRepository() {\n            return this.repositoryFactory.create('product');\n        },\n\n        productMediaRepository() {\n            return this.repositoryFactory.create('product_media');\n        },\n\n        productConfigurationRepository() {\n            return this.repositoryFactory.create('product_configurator_setting');\n        },\n\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n\n        groupRepository() {\n            return this.repositoryFactory.create('property_group');\n        },\n\n        contextMenuEditText() {\n            return this.acl.can('product.editor') ? this.$tc('global.default.edit') : this.$tc('global.default.view');\n        },\n\n        filterCriteria() {\n            if (this.includeOptions.length <= 0) {\n                return [];\n            }\n\n            // Collect each selected option in a group\n            // [\n            //   {id: 'abc123', options: [...optionIds]},\n            //   {id: 'def456', options: [...optionIds]},\n            // ]\n            const optionInGroups = this.includeOptions.reduce((result, option) => {\n                const parentGroup = result.find((group) => group.id === option.groupId);\n\n                // Push to group when array exists\n                if (parentGroup) {\n                    parentGroup.options.push(option.id);\n                } else {\n                    // otherwise create new group with the option\n                    result.push({\n                        id: option.groupId,\n                        options: [option.id],\n                    });\n                }\n\n                return result;\n            }, []);\n\n            return optionInGroups.map((group) => {\n                return Criteria.equalsAny('product.optionIds', group.options);\n            });\n        },\n\n        productVariantCriteria() {\n            const criteria = new Criteria(this.paginationPage, this.paginationLimit);\n\n            // this is the id of the main product.\n            const productEntityId = this.productEntity.id;\n            criteria.addFilter(Criteria.equals('parentId', productEntityId));\n\n            if (this.searchTerm) {\n                criteria.setTerm(this.searchTerm);\n            }\n\n            criteria.getAssociation('options').addAssociation('group');\n            criteria.addAssociation('cover.media');\n            criteria.addAssociation('media.media');\n            criteria.addAssociation('tax');\n\n            if (this.searchTerm) {\n                // Split each word for search\n                const terms = this.searchTerm.split(' ');\n\n                // Create query for each single word\n                terms.forEach((term) => {\n                    criteria.addQuery(Criteria.equals('product.options.name', term), 3500);\n                    criteria.addQuery(Criteria.contains('product.options.name', term), 500);\n                });\n            }\n\n            // User selected filters\n            if (this.filterCriteria) {\n                this.filterCriteria.forEach((cri) => {\n                    criteria.addFilter(cri);\n                });\n            }\n\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, true));\n\n            return criteria;\n        },\n\n        gridColumns() {\n            return [\n                {\n                    property: 'name',\n                    dataIndex: 'name',\n                    label: this.$tc('sw-product.list.columnName'),\n                    routerLink: 'sw.product.detail',\n                    inlineEdit: 'string',\n                    allowResize: true,\n                },\n                {\n                    property: 'sales',\n                    dataIndex: 'sales',\n                    label: this.$tc('sw-product.list.columnSales'),\n                    allowResize: true,\n                    align: 'right',\n                },\n                {\n                    property: 'price',\n                    dataIndex: `price.${this.currency?.id || ''}.net`,\n                    label: 'sw-product.list.columnPrice',\n                    allowResize: true,\n                    width: '250px',\n                    inlineEdit: 'number',\n                    align: 'right',\n                },\n                {\n                    property: 'stock',\n                    dataIndex: 'stock',\n                    label: 'sw-product.list.columnInStock',\n                    allowResize: true,\n                    inlineEdit: 'number',\n                    align: 'right',\n                },\n                {\n                    property: 'active',\n                    dataIndex: 'active',\n                    label: 'sw-product.list.columnActive',\n                    allowResize: true,\n                    inlineEdit: 'boolean',\n                    align: 'center',\n                },\n                {\n                    property: 'productNumber',\n                    dataIndex: 'productNumber',\n                    label: 'sw-product.list.columnProductNumber',\n                    allowResize: true,\n                    align: 'right',\n                },\n                {\n                    property: 'media',\n                    dataIndex: 'media',\n                    label: this.$tc('sw-product.list.columnMedia'),\n                    allowResize: true,\n                    inlineEdit: true,\n                    sortable: false,\n                    visible: false,\n                },\n            ];\n        },\n\n        canBeDeletedCriteria() {\n            const criteria = new Criteria(1, 25);\n            const variantIds = this.toBeDeletedVariants.map((variant) => variant.id);\n            criteria.addFilter(Criteria.equalsAny('canonicalProductId', variantIds));\n\n            return criteria;\n        },\n\n        groupCriteria() {\n            return new Criteria(1, 100);\n        },\n\n        selectedGroups() {\n            // get groups for selected options\n            const groupIds = this.productEntity?.configuratorSettings.reduce((result, element) => {\n                if (result.indexOf(element.option.groupId) < 0) {\n                    result.push(element.option.groupId);\n                }\n\n                return result;\n            }, []);\n\n            return this.groups?.filter((group) => {\n                return groupIds.indexOf(group.id) >= 0;\n            });\n        },\n\n        filterOptionsListing() {\n            // Prepare groups\n            const groups = [...this.selectedGroups]\n                .sort((a, b) => a.position - b.position)\n                .map((group, index) => {\n                    const children = this.getOptionsForGroup(group.id);\n\n                    return {\n                        id: group.id,\n                        name: group.name,\n                        childCount: children.length,\n                        parentId: null,\n                        afterId: index > 0 ? this.selectedGroups[index - 1].id : null,\n                        storeObject: group,\n                    };\n                });\n\n            // Prepare options\n            const children = groups.reduce((result, group) => {\n                const options = this.getOptionsForGroup(group.id);\n\n                // Iterate for each group options\n                const optionsForGroup = options\n                    .sort((elementA, elementB) => {\n                        return elementA.position - elementB.position;\n                    })\n                    .map((element, index) => {\n                        const option = element.option;\n\n                        // Get previous element\n                        let afterId = null;\n                        if (index > 0) {\n                            afterId = options[index - 1].option.id;\n                        }\n\n                        return {\n                            id: option.id,\n                            name: option.name,\n                            childCount: 0,\n                            parentId: option.groupId,\n                            afterId,\n                            storeObject: element,\n                        };\n                    });\n\n                return [\n                    ...result,\n                    ...optionsForGroup,\n                ];\n            }, []);\n\n            // Assign groups and children to order objects\n            return [\n                ...groups,\n                ...children,\n            ];\n        },\n\n        stockColorVariantFilter() {\n            return Cicada.Filter.getByName('stockColorVariant');\n        },\n    },\n\n    watch: {\n        selectedGroups() {\n            this.filterOptions = this.filterOptionsListing;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n\n            return Promise.all([\n                this.fetchProductMedias(),\n                this.fetchProductConfiguration(),\n                this.fetchProductVariants(),\n                this.fetchSystemCurrency(),\n                this.loadGroups(),\n            ]).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        fetchProductMedias() {\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equals('productId', this.productEntity.id));\n\n            return this.productMediaRepository.search(criteria).then((response) => {\n                this.productEntity.media = response;\n            });\n        },\n\n        fetchProductConfiguration() {\n            const criteria = new Criteria();\n            criteria.addAssociation('option');\n            criteria.addFilter(Criteria.equals('productId', this.productEntity.id));\n\n            return this.productConfigurationRepository.search(criteria).then((response) => {\n                this.productEntity.configuratorSettings = response;\n            });\n        },\n\n        fetchSystemCurrency() {\n            const systemCurrencyId = Cicada.Context.app.systemCurrencyId;\n\n            return this.currencyRepository.get(systemCurrencyId).then((response) => {\n                this.currency = response;\n            });\n        },\n\n        fetchProductVariants() {\n            this.isLoading = true;\n\n            return this.productRepository\n                .search(this.productVariantCriteria)\n                .then((response) => {\n                    this.productVariants = response;\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        getDefaultPriceForVariant(variant) {\n            if (!variant.price) {\n                return this.defaultPrice;\n            }\n\n            const foundDefaultPrice = variant.price.find((price) => {\n                return price.currencyId === this.defaultCurrency.id;\n            });\n\n            return foundDefaultPrice || this.defaultPrice;\n        },\n\n        onInheritanceRestore(variant, currency) {\n            if (!variant.price) {\n                return;\n            }\n\n            const foundVariantIndex = variant.price.findIndex((price) => {\n                return price.currencyId === currency.id;\n            });\n\n            if (foundVariantIndex >= 0) {\n                if (this.isCompatEnabled('INSTANCE_DELETE')) {\n                    this.$delete(variant.price, foundVariantIndex);\n                } else {\n                    delete variant.price[foundVariantIndex];\n                }\n            }\n\n            if (variant.price.length <= 0) {\n                variant.price = null;\n            }\n        },\n\n        onInheritanceRemove(variant, currency) {\n            if (!variant.price) {\n                variant.price = [];\n            }\n\n            // create new price for selected currency\n            const defaultPrice = this.productEntity.price[0];\n            const newPrice = {\n                currencyId: currency.id,\n                gross: defaultPrice.gross * currency.factor,\n                linked: defaultPrice.linked,\n                net: defaultPrice.net * currency.factor,\n            };\n\n            // add new price currency to variant\n            if (this.isCompatEnabled('INSTANCE_SET')) {\n                this.$set(variant.price, variant.price.length, newPrice);\n            } else {\n                variant.price.push(newPrice);\n            }\n        },\n\n        /**\n         * Sorts variant options by their position. If the position is the same it sorts them by their name.\n         * @param {Array} options\n         * @return {Array}\n         */\n        sortOptions(options) {\n            // making a local copy because using .sort directly on `option` causes an infinite loop\n            const localOptions = [...options];\n\n            return localOptions.sort((a, b) => {\n                if (a.position === b.position) {\n                    return a.name > b.name ? 1 : -1;\n                }\n\n                return a.position > b.position ? 1 : -1;\n            });\n        },\n\n        /**\n         * Returns a string with all options of an variant: \"(color: black, size: xl)\"\n         * @param {object} variant\n         * @returns {string}\n         */\n        buildVariantOptions(variant, seperator = ', ', ommitParenthesis = false, ommitOptionGroupName = false) {\n            const options = variant.options;\n\n            const sortedOptions = this.sortOptions(options);\n\n            /* Creates following string: \"color: black, size: xl\".\n             * The slice method removes the last two chars from the string wich are: \", \".\n             */\n            const formattedOptions = sortedOptions\n                .reduce((accumulator, currentOption) => {\n                    const optionValue = currentOption.translated.name;\n                    const optionGroupName = currentOption.group.translated.name;\n\n                    return accumulator.concat(\n                        !ommitOptionGroupName ? optionGroupName : '',\n                        !ommitOptionGroupName ? ': ' : '',\n                        optionValue,\n                        seperator,\n                    );\n                }, '')\n                .slice(0, -seperator.length);\n\n            return ommitParenthesis ? formattedOptions : `(${formattedOptions})`;\n        },\n\n        /**\n         * Returns a string with the name of the variant and the options: T-Shirt (black, xl)\n         * @param {object} variant\n         * @returns {string}\n         */\n        buildVariantName(variant) {\n            const options = this.buildVariantOptions(variant);\n            const variantName = variant.translated.name || this.productEntity.translated.name;\n\n            return `${variantName} ${options}`;\n        },\n\n        /**\n         * Returns the price of a variant. If the variant has no price it gets the price of the parent product.\n         * @param {object} variant\n         * @returns {number}\n         */\n        getVariantPrice(variant) {\n            const variantPrice = variant.price;\n\n            return variantPrice ? variantPrice[0] : this.productEntity.price[0];\n        },\n\n        onPageChange({ limit = 25, page = 1 }) {\n            this.paginationLimit = limit;\n            this.paginationPage = page;\n\n            this.fetchProductVariants();\n        },\n\n        visitProduct(productId) {\n            this.$emit('modal-close');\n\n            // using $nextTick to wait unit the dom has updated and the modal is closed\n            this.$nextTick().then(() => {\n                this.$router.push({\n                    name: 'sw.product.detail',\n                    params: {\n                        id: productId,\n                    },\n                });\n            });\n        },\n\n        getItemMedia(item) {\n            if (item.cover) {\n                return item.cover.media;\n            }\n\n            if (this.productEntity.cover) {\n                return this.productEntity.cover.media;\n            }\n\n            return null;\n        },\n\n        deleteVariants() {\n            this.isDeleteButtonLoading = true;\n\n            const variantIds = this.toBeDeletedVariants.map((variant) => variant.id);\n            const variantName = this.toBeDeletedVariants[0].translated.name || this.productEntity.translated.name;\n            const amount = variantIds.length;\n\n            this.canVariantsBeDeleted().then((canBeDeleted) => {\n                if (!canBeDeleted) {\n                    this.isDeleteButtonLoading = false;\n                    this.isDeletionOver = true;\n\n                    this.createNotificationError({\n                        message: this.$tc('sw-product.list.notificationVariantDeleteErrorCanonicalUrl', amount, {\n                            variantName,\n                        }),\n                    });\n\n                    return;\n                }\n\n                this.productRepository\n                    .syncDeleted(variantIds)\n                    .then(() => {\n                        this.createNotificationSuccess({\n                            message: this.$tc('sw-product.list.notificationVariantDeleteSuccess', amount, {\n                                variantName,\n                                amount,\n                            }),\n                        });\n\n                        this.$refs.variantGrid.resetSelection();\n\n                        this.fetchProductVariants();\n                    })\n                    .catch(() => {\n                        this.createNotificationError({\n                            message: this.$tc('sw-product.list.notificationVariantDeleteError', amount, {\n                                variantName,\n                                amount,\n                            }),\n                        });\n                    })\n                    .finally(() => {\n                        this.isDeleteButtonLoading = false;\n                        this.isDeletionOver = true;\n                    });\n            });\n        },\n\n        async canVariantsBeDeleted() {\n            const products = await this.productRepository.search(this.canBeDeletedCriteria);\n\n            return products.length === 0;\n        },\n\n        onInlineEditSave(editedVariant) {\n            const variantName = this.buildVariantName(editedVariant);\n\n            this.productRepository.save(editedVariant).then(() => {\n                this.createNotificationSuccess({\n                    message: this.$t('sw-product.list.notificationVariantSaveSuccess', { variantName }),\n                });\n\n                this.fetchProductVariants();\n            });\n        },\n\n        onInlineEditCancel() {\n            this.fetchProductVariants();\n        },\n\n        onClickBulkDelete() {\n            const gridSelection = this.$refs.variantGrid.selection;\n            this.toBeDeletedVariants = Object.values(gridSelection);\n\n            this.showDeleteModal = true;\n        },\n\n        closeDeleteModal() {\n            this.showDeleteModal = false;\n            this.toBeDeletedVariants = [];\n            this.isDeletionOver = false;\n        },\n\n        onDeleteVariant(variant) {\n            this.toBeDeletedVariants.push(variant);\n\n            this.showDeleteModal = true;\n        },\n\n        onSearchTermChange() {\n            this.fetchProductVariants();\n        },\n\n        onSortColumn(column) {\n            if (this.sortBy === column.dataIndex) {\n                this.sortDirection = this.sortDirection === 'ASC' ? 'DESC' : 'ASC';\n            } else {\n                this.sortBy = column.dataIndex;\n            }\n\n            this.fetchProductVariants();\n        },\n\n        getNoPermissionsTooltip(role, showOnDisabledElements = true) {\n            return {\n                showDelay: 300,\n                message: this.$tc('sw-privileges.tooltip.warning'),\n                appearance: 'dark',\n                showOnDisabledElements,\n                disabled: this.acl.can(role),\n            };\n        },\n\n        isMediaFieldInherited(variant) {\n            if (variant.forceMediaInheritanceRemove) {\n                return false;\n            }\n\n            if (variant.media) {\n                return variant.media.length <= 0;\n            }\n\n            return !!variant.media;\n        },\n\n        onMediaInheritanceRestore(variant, isInlineEdit) {\n            if (!isInlineEdit) {\n                return;\n            }\n\n            variant.forceMediaInheritanceRemove = false;\n            variant.coverId = null;\n\n            variant.media.getIds().forEach((mediaId) => {\n                variant.media.remove(mediaId);\n            });\n        },\n\n        onMediaInheritanceRemove(variant, isInlineEdit) {\n            if (!isInlineEdit) {\n                return;\n            }\n\n            variant.forceMediaInheritanceRemove = true;\n            this.productEntity.media.forEach(({ id, mediaId, position, media }) => {\n                const mediaItem = this.productMediaRepository.create(Context.api);\n                Object.assign(mediaItem, {\n                    mediaId,\n                    position,\n                    productId: this.productEntity.id,\n                    media,\n                });\n\n                if (this.productEntity.coverId === id) {\n                    variant.coverId = mediaItem.id;\n                }\n\n                variant.media.push(mediaItem);\n            });\n        },\n\n        loadGroups() {\n            return this.groupRepository.search(this.groupCriteria).then((searchResult) => {\n                this.groups = searchResult;\n            });\n        },\n\n        resetFilterOptions() {\n            this.filterOptions = [];\n            this.includeOptions = [];\n\n            this.$nextTick(() => {\n                this.filterOptions = this.filterOptionsListing;\n                this.fetchProductVariants();\n            });\n        },\n\n        filterOptionChecked(option) {\n            if (option.checked) {\n                // Remove from include list\n                this.includeOptions.push({\n                    id: option.id,\n                    groupId: option.parentId,\n                });\n                return;\n            }\n            // Remove option from option list which is unchecked\n            this.includeOptions = this.includeOptions.filter((includeOption) => includeOption.id !== option.id);\n        },\n\n        getOptionsForGroup(groupId) {\n            return this.productEntity?.configuratorSettings.filter((element) => {\n                return !element.isDeleted && element.option.groupId === groupId;\n            });\n        },\n\n        toggleFilterMenu() {\n            this.filterWindowOpen = !this.filterWindowOpen;\n        },\n\n        toggleBulkEditModal() {\n            this.showBulkEditModal = !this.showBulkEditModal;\n        },\n\n        async onEditItems() {\n            await this.$nextTick();\n\n            let includesDigital = '0';\n            const digital = Object.values(this.$refs.variantGrid.selection).filter((product) =>\n                product.states.includes('is-download'),\n            );\n            if (digital.length > 0) {\n                includesDigital = digital.filter((product) => product.isCloseout).length !== digital.length ? '1' : '2';\n            }\n\n            this.$router.push({\n                name: 'sw.bulk.edit.product',\n                params: {\n                    parentId: this.productEntity.id,\n                    includesDigital,\n                },\n            });\n        },\n\n        variantIsDigital(variant) {\n            return variant.states && variant.states.includes('is-download');\n        },\n    },\n};\n"],"names":["template","Mixin","Context","Criteria","index","result","option","parentGroup","group","criteria","productEntityId","term","cri","_a","variantIds","variant","_b","groupIds","element","groups","a","b","children","options","optionsForGroup","elementA","elementB","afterId","response","systemCurrencyId","price","currency","foundVariantIndex","defaultPrice","newPrice","seperator","ommitParenthesis","ommitOptionGroupName","formattedOptions","accumulator","currentOption","optionValue","optionGroupName","variantPrice","limit","page","productId","item","variantName","amount","canBeDeleted","editedVariant","gridSelection","column","role","showOnDisabledElements","isInlineEdit","mediaId","id","position","media","mediaItem","searchResult","includeOption","groupId","includesDigital","digital","product"],"mappings":"AAAA,MAAeA,EAAA,o+cCOT,CAAE,MAAAC,EAAO,QAAAC,CAAS,EAAG,OACrB,CAAE,SAAAC,CAAQ,EAAK,OAAO,KAGbC,EAAA,CACX,SAAAJ,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,oBACA,KACH,EAED,MAAO,CAAC,aAAa,EAErB,OAAQ,CACJC,EAAM,UAAU,cAAc,CACjC,EAED,MAAO,CAEH,cAAe,CACX,KAAM,OACN,SAAU,EACb,CACJ,EAED,MAAO,CACH,MAAO,CACH,gBAAiB,CAAE,EACnB,SAAU,KACV,gBAAiB,GACjB,eAAgB,EAChB,oBAAqB,CAAE,EACvB,gBAAiB,GACjB,WAAY,GACZ,sBAAuB,GACvB,eAAgB,GAChB,cAAe,MACf,OAAQ,gBACR,UAAW,GACX,OAAQ,CAAE,EACV,cAAe,CAAE,EACjB,eAAgB,CAAE,EAClB,iBAAkB,GAClB,kBAAmB,EAC/B,CACK,EAED,SAAU,CACN,YAAa,CACT,OAAO,KAAK,GAAG,oCAAqC,CAChD,YAAa,KAAK,cAAc,WAAW,IAC3D,CAAa,CACJ,EAED,qBAAsB,CAClB,OAAO,KAAK,GAAG,kCAAmC,CAC9C,YAAa,KAAK,cAAc,WAAW,IAC3D,CAAa,CACJ,EAED,mBAAoB,CAChB,OAAO,KAAK,kBAAkB,OAAO,SAAS,CACjD,EAED,wBAAyB,CACrB,OAAO,KAAK,kBAAkB,OAAO,eAAe,CACvD,EAED,gCAAiC,CAC7B,OAAO,KAAK,kBAAkB,OAAO,8BAA8B,CACtE,EAED,oBAAqB,CACjB,OAAO,KAAK,kBAAkB,OAAO,UAAU,CAClD,EAED,iBAAkB,CACd,OAAO,KAAK,kBAAkB,OAAO,gBAAgB,CACxD,EAED,qBAAsB,CAClB,OAAO,KAAK,IAAI,IAAI,gBAAgB,EAAI,KAAK,IAAI,qBAAqB,EAAI,KAAK,IAAI,qBAAqB,CAC3G,EAED,gBAAiB,CACb,OAAI,KAAK,eAAe,QAAU,EACvB,GAQY,KAAK,eAAe,OAAO,CAACI,EAAQC,IAAW,CAClE,MAAMC,EAAcF,EAAO,KAAMG,GAAUA,EAAM,KAAOF,EAAO,OAAO,EAGtE,OAAIC,EACAA,EAAY,QAAQ,KAAKD,EAAO,EAAE,EAGlCD,EAAO,KAAK,CACR,GAAIC,EAAO,QACX,QAAS,CAACA,EAAO,EAAE,CAC3C,CAAqB,EAGED,CACV,EAAE,CAAE,CAAA,EAEiB,IAAKG,GAChBL,EAAS,UAAU,oBAAqBK,EAAM,OAAO,CAC/D,CACJ,EAED,wBAAyB,CACrB,MAAMC,EAAW,IAAIN,EAAS,KAAK,eAAgB,KAAK,eAAe,EAGjEO,EAAkB,KAAK,cAAc,GAC3C,OAAAD,EAAS,UAAUN,EAAS,OAAO,WAAYO,CAAe,CAAC,EAE3D,KAAK,YACLD,EAAS,QAAQ,KAAK,UAAU,EAGpCA,EAAS,eAAe,SAAS,EAAE,eAAe,OAAO,EACzDA,EAAS,eAAe,aAAa,EACrCA,EAAS,eAAe,aAAa,EACrCA,EAAS,eAAe,KAAK,EAEzB,KAAK,YAES,KAAK,WAAW,MAAM,GAAG,EAGjC,QAASE,GAAS,CACpBF,EAAS,SAASN,EAAS,OAAO,uBAAwBQ,CAAI,EAAG,IAAI,EACrEF,EAAS,SAASN,EAAS,SAAS,uBAAwBQ,CAAI,EAAG,GAAG,CAC1F,CAAiB,EAID,KAAK,gBACL,KAAK,eAAe,QAASC,GAAQ,CACjCH,EAAS,UAAUG,CAAG,CAC1C,CAAiB,EAGLH,EAAS,WAAWN,EAAS,KAAK,KAAK,OAAQ,KAAK,cAAe,EAAI,CAAC,EAEjEM,CACV,EAED,aAAc,CDrKtB,IAAAI,ECsKY,MAAO,CACH,CACI,SAAU,OACV,UAAW,OACX,MAAO,KAAK,IAAI,4BAA4B,EAC5C,WAAY,oBACZ,WAAY,SACZ,YAAa,EAChB,EACD,CACI,SAAU,QACV,UAAW,QACX,MAAO,KAAK,IAAI,6BAA6B,EAC7C,YAAa,GACb,MAAO,OACV,EACD,CACI,SAAU,QACV,UAAW,WAASA,EAAA,KAAK,WAAL,YAAAA,EAAe,KAAM,EAAE,OAC3C,MAAO,8BACP,YAAa,GACb,MAAO,QACP,WAAY,SACZ,MAAO,OACV,EACD,CACI,SAAU,QACV,UAAW,QACX,MAAO,gCACP,YAAa,GACb,WAAY,SACZ,MAAO,OACV,EACD,CACI,SAAU,SACV,UAAW,SACX,MAAO,+BACP,YAAa,GACb,WAAY,UACZ,MAAO,QACV,EACD,CACI,SAAU,gBACV,UAAW,gBACX,MAAO,sCACP,YAAa,GACb,MAAO,OACV,EACD,CACI,SAAU,QACV,UAAW,QACX,MAAO,KAAK,IAAI,6BAA6B,EAC7C,YAAa,GACb,WAAY,GACZ,SAAU,GACV,QAAS,EACZ,CACjB,CACS,EAED,sBAAuB,CACnB,MAAMJ,EAAW,IAAIN,EAAS,EAAG,EAAE,EAC7BW,EAAa,KAAK,oBAAoB,IAAKC,GAAYA,EAAQ,EAAE,EACvE,OAAAN,EAAS,UAAUN,EAAS,UAAU,qBAAsBW,CAAU,CAAC,EAEhEL,CACV,EAED,eAAgB,CACZ,OAAO,IAAIN,EAAS,EAAG,GAAG,CAC7B,EAED,gBAAiB,CD9OzB,IAAAU,EAAAG,ECgPY,MAAMC,GAAWJ,EAAA,KAAK,gBAAL,YAAAA,EAAoB,qBAAqB,OAAO,CAACR,EAAQa,KAClEb,EAAO,QAAQa,EAAQ,OAAO,OAAO,EAAI,GACzCb,EAAO,KAAKa,EAAQ,OAAO,OAAO,EAG/Bb,GACR,CAAE,GAEL,OAAOW,EAAA,KAAK,SAAL,YAAAA,EAAa,OAAQR,GACjBS,EAAS,QAAQT,EAAM,EAAE,GAAK,EAE5C,EAED,sBAAuB,CAEnB,MAAMW,EAAS,CAAC,GAAG,KAAK,cAAc,EACjC,KAAK,CAACC,EAAGC,IAAMD,EAAE,SAAWC,EAAE,QAAQ,EACtC,IAAI,CAACb,EAAOJ,IAAU,CACnB,MAAMkB,EAAW,KAAK,mBAAmBd,EAAM,EAAE,EAEjD,MAAO,CACH,GAAIA,EAAM,GACV,KAAMA,EAAM,KACZ,WAAYc,EAAS,OACrB,SAAU,KACV,QAASlB,EAAQ,EAAI,KAAK,eAAeA,EAAQ,CAAC,EAAE,GAAK,KACzD,YAAaI,CACrC,CACA,CAAiB,EAGCc,EAAWH,EAAO,OAAO,CAACd,EAAQG,IAAU,CAC9C,MAAMe,EAAU,KAAK,mBAAmBf,EAAM,EAAE,EAG1CgB,EAAkBD,EACnB,KAAK,CAACE,EAAUC,IACND,EAAS,SAAWC,EAAS,QACvC,EACA,IAAI,CAACR,EAASd,IAAU,CACrB,MAAME,EAASY,EAAQ,OAGvB,IAAIS,EAAU,KACd,OAAIvB,EAAQ,IACRuB,EAAUJ,EAAQnB,EAAQ,CAAC,EAAE,OAAO,IAGjC,CACH,GAAIE,EAAO,GACX,KAAMA,EAAO,KACb,WAAY,EACZ,SAAUA,EAAO,QACjB,QAAAqB,EACA,YAAaT,CACzC,CACA,CAAqB,EAEL,MAAO,CACH,GAAGb,EACH,GAAGmB,CACvB,CACa,EAAE,CAAE,CAAA,EAGL,MAAO,CACH,GAAGL,EACH,GAAGG,CACnB,CACS,EAED,yBAA0B,CACtB,OAAO,OAAO,OAAO,UAAU,mBAAmB,CACrD,CACJ,EAED,MAAO,CACH,gBAAiB,CACb,KAAK,cAAgB,KAAK,oBAC7B,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,YAAK,UAAY,GAEV,QAAQ,IAAI,CACf,KAAK,mBAAoB,EACzB,KAAK,0BAA2B,EAChC,KAAK,qBAAsB,EAC3B,KAAK,oBAAqB,EAC1B,KAAK,WAAY,CACjC,CAAa,EAAE,QAAQ,IAAM,CACb,KAAK,UAAY,EACjC,CAAa,CACJ,EAED,oBAAqB,CACjB,MAAMb,EAAW,IAAIN,EACrB,OAAAM,EAAS,UAAUN,EAAS,OAAO,YAAa,KAAK,cAAc,EAAE,CAAC,EAE/D,KAAK,uBAAuB,OAAOM,CAAQ,EAAE,KAAMmB,GAAa,CACnE,KAAK,cAAc,MAAQA,CAC3C,CAAa,CACJ,EAED,2BAA4B,CACxB,MAAMnB,EAAW,IAAIN,EACrB,OAAAM,EAAS,eAAe,QAAQ,EAChCA,EAAS,UAAUN,EAAS,OAAO,YAAa,KAAK,cAAc,EAAE,CAAC,EAE/D,KAAK,+BAA+B,OAAOM,CAAQ,EAAE,KAAMmB,GAAa,CAC3E,KAAK,cAAc,qBAAuBA,CAC1D,CAAa,CACJ,EAED,qBAAsB,CAClB,MAAMC,EAAmB,OAAO,QAAQ,IAAI,iBAE5C,OAAO,KAAK,mBAAmB,IAAIA,CAAgB,EAAE,KAAMD,GAAa,CACpE,KAAK,SAAWA,CAChC,CAAa,CACJ,EAED,sBAAuB,CACnB,YAAK,UAAY,GAEV,KAAK,kBACP,OAAO,KAAK,sBAAsB,EAClC,KAAMA,GAAa,CAChB,KAAK,gBAAkBA,CAC3C,CAAiB,EACA,QAAQ,IAAM,CACX,KAAK,UAAY,EACrC,CAAiB,CACR,EAED,0BAA0Bb,EAAS,CAC/B,OAAKA,EAAQ,MAIaA,EAAQ,MAAM,KAAMe,GACnCA,EAAM,aAAe,KAAK,gBAAgB,EACpD,GAE2B,KAAK,aAPtB,KAAK,YAQnB,EAED,qBAAqBf,EAASgB,EAAU,CACpC,GAAI,CAAChB,EAAQ,MACT,OAGJ,MAAMiB,EAAoBjB,EAAQ,MAAM,UAAWe,GACxCA,EAAM,aAAeC,EAAS,EACxC,EAEGC,GAAqB,IACjB,KAAK,gBAAgB,iBAAiB,EACtC,KAAK,QAAQjB,EAAQ,MAAOiB,CAAiB,EAE7C,OAAOjB,EAAQ,MAAMiB,CAAiB,GAI1CjB,EAAQ,MAAM,QAAU,IACxBA,EAAQ,MAAQ,KAEvB,EAED,oBAAoBA,EAASgB,EAAU,CAC9BhB,EAAQ,QACTA,EAAQ,MAAQ,IAIpB,MAAMkB,EAAe,KAAK,cAAc,MAAM,CAAC,EACzCC,EAAW,CACb,WAAYH,EAAS,GACrB,MAAOE,EAAa,MAAQF,EAAS,OACrC,OAAQE,EAAa,OACrB,IAAKA,EAAa,IAAMF,EAAS,MACjD,EAGgB,KAAK,gBAAgB,cAAc,EACnC,KAAK,KAAKhB,EAAQ,MAAOA,EAAQ,MAAM,OAAQmB,CAAQ,EAEvDnB,EAAQ,MAAM,KAAKmB,CAAQ,CAElC,EAOD,YAAYX,EAAS,CAIjB,MAFqB,CAAC,GAAGA,CAAO,EAEZ,KAAK,CAACH,EAAGC,IACrBD,EAAE,WAAaC,EAAE,SACVD,EAAE,KAAOC,EAAE,KAAO,EAAI,GAG1BD,EAAE,SAAWC,EAAE,SAAW,EAAI,EACxC,CACJ,EAOD,oBAAoBN,EAASoB,EAAY,KAAMC,EAAmB,GAAOC,EAAuB,GAAO,CACnG,MAAMd,EAAUR,EAAQ,QAOlBuB,EALgB,KAAK,YAAYf,CAAO,EAMzC,OAAO,CAACgB,EAAaC,IAAkB,CACpC,MAAMC,EAAcD,EAAc,WAAW,KACvCE,EAAkBF,EAAc,MAAM,WAAW,KAEvD,OAAOD,EAAY,OACdF,EAAyC,GAAlBK,EACvBL,EAA8B,GAAP,KACxBI,EACAN,CACxB,CACiB,EAAE,EAAE,EACJ,MAAM,EAAG,CAACA,EAAU,MAAM,EAE/B,OAAOC,EAAmBE,EAAmB,IAAIA,CAAgB,GACpE,EAOD,iBAAiBvB,EAAS,CACtB,MAAMQ,EAAU,KAAK,oBAAoBR,CAAO,EAGhD,MAAO,GAFaA,EAAQ,WAAW,MAAQ,KAAK,cAAc,WAAW,IAExD,IAAIQ,CAAO,EACnC,EAOD,gBAAgBR,EAAS,CACrB,MAAM4B,EAAe5B,EAAQ,MAE7B,OAAO4B,EAAeA,EAAa,CAAC,EAAI,KAAK,cAAc,MAAM,CAAC,CACrE,EAED,aAAa,CAAE,MAAAC,EAAQ,GAAI,KAAAC,EAAO,CAAC,EAAI,CACnC,KAAK,gBAAkBD,EACvB,KAAK,eAAiBC,EAEtB,KAAK,qBAAoB,CAC5B,EAED,aAAaC,EAAW,CACpB,KAAK,MAAM,aAAa,EAGxB,KAAK,YAAY,KAAK,IAAM,CACxB,KAAK,QAAQ,KAAK,CACd,KAAM,oBACN,OAAQ,CACJ,GAAIA,CACP,CACrB,CAAiB,CACjB,CAAa,CACJ,EAED,aAAaC,EAAM,CACf,OAAIA,EAAK,MACEA,EAAK,MAAM,MAGlB,KAAK,cAAc,MACZ,KAAK,cAAc,MAAM,MAG7B,IACV,EAED,gBAAiB,CACb,KAAK,sBAAwB,GAE7B,MAAMjC,EAAa,KAAK,oBAAoB,IAAKC,GAAYA,EAAQ,EAAE,EACjEiC,EAAc,KAAK,oBAAoB,CAAC,EAAE,WAAW,MAAQ,KAAK,cAAc,WAAW,KAC3FC,EAASnC,EAAW,OAE1B,KAAK,qBAAoB,EAAG,KAAMoC,GAAiB,CAC/C,GAAI,CAACA,EAAc,CACf,KAAK,sBAAwB,GAC7B,KAAK,eAAiB,GAEtB,KAAK,wBAAwB,CACzB,QAAS,KAAK,IAAI,6DAA8DD,EAAQ,CACpF,YAAAD,CAC5B,CAAyB,CACzB,CAAqB,EAED,MACH,CAED,KAAK,kBACA,YAAYlC,CAAU,EACtB,KAAK,IAAM,CACR,KAAK,0BAA0B,CAC3B,QAAS,KAAK,IAAI,mDAAoDmC,EAAQ,CAC1E,YAAAD,EACA,OAAAC,CAChC,CAA6B,CAC7B,CAAyB,EAED,KAAK,MAAM,YAAY,iBAEvB,KAAK,qBAAoB,CACjD,CAAqB,EACA,MAAM,IAAM,CACT,KAAK,wBAAwB,CACzB,QAAS,KAAK,IAAI,iDAAkDA,EAAQ,CACxE,YAAAD,EACA,OAAAC,CAChC,CAA6B,CAC7B,CAAyB,CACzB,CAAqB,EACA,QAAQ,IAAM,CACX,KAAK,sBAAwB,GAC7B,KAAK,eAAiB,EAC9C,CAAqB,CACrB,CAAa,CACJ,EAED,MAAM,sBAAuB,CAGzB,OAFiB,MAAM,KAAK,kBAAkB,OAAO,KAAK,oBAAoB,GAE9D,SAAW,CAC9B,EAED,iBAAiBE,EAAe,CAC5B,MAAMH,EAAc,KAAK,iBAAiBG,CAAa,EAEvD,KAAK,kBAAkB,KAAKA,CAAa,EAAE,KAAK,IAAM,CAClD,KAAK,0BAA0B,CAC3B,QAAS,KAAK,GAAG,iDAAkD,CAAE,YAAAH,CAAW,CAAE,CACtG,CAAiB,EAED,KAAK,qBAAoB,CACzC,CAAa,CACJ,EAED,oBAAqB,CACjB,KAAK,qBAAoB,CAC5B,EAED,mBAAoB,CAChB,MAAMI,EAAgB,KAAK,MAAM,YAAY,UAC7C,KAAK,oBAAsB,OAAO,OAAOA,CAAa,EAEtD,KAAK,gBAAkB,EAC1B,EAED,kBAAmB,CACf,KAAK,gBAAkB,GACvB,KAAK,oBAAsB,GAC3B,KAAK,eAAiB,EACzB,EAED,gBAAgBrC,EAAS,CACrB,KAAK,oBAAoB,KAAKA,CAAO,EAErC,KAAK,gBAAkB,EAC1B,EAED,oBAAqB,CACjB,KAAK,qBAAoB,CAC5B,EAED,aAAasC,EAAQ,CACb,KAAK,SAAWA,EAAO,UACvB,KAAK,cAAgB,KAAK,gBAAkB,MAAQ,OAAS,MAE7D,KAAK,OAASA,EAAO,UAGzB,KAAK,qBAAoB,CAC5B,EAED,wBAAwBC,EAAMC,EAAyB,GAAM,CACzD,MAAO,CACH,UAAW,IACX,QAAS,KAAK,IAAI,+BAA+B,EACjD,WAAY,OACZ,uBAAAA,EACA,SAAU,KAAK,IAAI,IAAID,CAAI,CAC3C,CACS,EAED,sBAAsBvC,EAAS,CAC3B,OAAIA,EAAQ,4BACD,GAGPA,EAAQ,MACDA,EAAQ,MAAM,QAAU,EAG5B,CAAC,CAACA,EAAQ,KACpB,EAED,0BAA0BA,EAASyC,EAAc,CACxCA,IAILzC,EAAQ,4BAA8B,GACtCA,EAAQ,QAAU,KAElBA,EAAQ,MAAM,OAAQ,EAAC,QAAS0C,GAAY,CACxC1C,EAAQ,MAAM,OAAO0C,CAAO,CAC5C,CAAa,EACJ,EAED,yBAAyB1C,EAASyC,EAAc,CACvCA,IAILzC,EAAQ,4BAA8B,GACtC,KAAK,cAAc,MAAM,QAAQ,CAAC,CAAE,GAAA2C,EAAI,QAAAD,EAAS,SAAAE,EAAU,MAAAC,KAAY,CACnE,MAAMC,EAAY,KAAK,uBAAuB,OAAO3D,EAAQ,GAAG,EAChE,OAAO,OAAO2D,EAAW,CACrB,QAAAJ,EACA,SAAAE,EACA,UAAW,KAAK,cAAc,GAC9B,MAAAC,CACpB,CAAiB,EAEG,KAAK,cAAc,UAAYF,IAC/B3C,EAAQ,QAAU8C,EAAU,IAGhC9C,EAAQ,MAAM,KAAK8C,CAAS,CAC5C,CAAa,EACJ,EAED,YAAa,CACT,OAAO,KAAK,gBAAgB,OAAO,KAAK,aAAa,EAAE,KAAMC,GAAiB,CAC1E,KAAK,OAASA,CAC9B,CAAa,CACJ,EAED,oBAAqB,CACjB,KAAK,cAAgB,GACrB,KAAK,eAAiB,GAEtB,KAAK,UAAU,IAAM,CACjB,KAAK,cAAgB,KAAK,qBAC1B,KAAK,qBAAoB,CACzC,CAAa,CACJ,EAED,oBAAoBxD,EAAQ,CACxB,GAAIA,EAAO,QAAS,CAEhB,KAAK,eAAe,KAAK,CACrB,GAAIA,EAAO,GACX,QAASA,EAAO,QACpC,CAAiB,EACD,MACH,CAED,KAAK,eAAiB,KAAK,eAAe,OAAQyD,GAAkBA,EAAc,KAAOzD,EAAO,EAAE,CACrG,EAED,mBAAmB0D,EAAS,CD7tBpC,IAAAnD,EC8tBY,OAAOA,EAAA,KAAK,gBAAL,YAAAA,EAAoB,qBAAqB,OAAQK,GAC7C,CAACA,EAAQ,WAAaA,EAAQ,OAAO,UAAY8C,EAE/D,EAED,kBAAmB,CACf,KAAK,iBAAmB,CAAC,KAAK,gBACjC,EAED,qBAAsB,CAClB,KAAK,kBAAoB,CAAC,KAAK,iBAClC,EAED,MAAM,aAAc,CAChB,MAAM,KAAK,YAEX,IAAIC,EAAkB,IACtB,MAAMC,EAAU,OAAO,OAAO,KAAK,MAAM,YAAY,SAAS,EAAE,OAAQC,GACpEA,EAAQ,OAAO,SAAS,aAAa,CACrD,EACgBD,EAAQ,OAAS,IACjBD,EAAkBC,EAAQ,OAAQC,GAAYA,EAAQ,UAAU,EAAE,SAAWD,EAAQ,OAAS,IAAM,KAGxG,KAAK,QAAQ,KAAK,CACd,KAAM,uBACN,OAAQ,CACJ,SAAU,KAAK,cAAc,GAC7B,gBAAAD,CACH,CACjB,CAAa,CACJ,EAED,iBAAiBlD,EAAS,CACtB,OAAOA,EAAQ,QAAUA,EAAQ,OAAO,SAAS,aAAa,CACjE,CACJ,CACL"}