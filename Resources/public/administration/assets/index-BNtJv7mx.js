const o=`{% block sw_condition_value_content %} <div class="sw-condition-time-range"> {% block sw_condition_time_range_field_from_time %} <sw-datepicker v-model:value="fromTime" name="sw-field--fromTime" size="medium" date-type="time" required :config="datepickerConfig" :disabled="disabled || undefined" :placeholder="$tc('sw-datepicker.time.placeholder')" /> {% endblock %} {% block sw_condition_time_range_field_to_time %} <sw-datepicker v-model:value="toTime" name="sw-field--toTime" size="medium" date-type="time" required :config="datepickerConfig" :disabled="disabled || undefined" :placeholder="$tc('sw-datepicker.time.placeholder')" /> {% endblock %} </div> {% endblock %}`,{Component:t}=Cicada,{mapPropertyErrors:n}=t.getComponentHelper(),i="12:00";t.extend("sw-condition-time-range","sw-condition-base",{template:o,data(){return{datepickerConfig:{enableTime:!0,dateFormat:"H:i"}}},computed:{fromTime:{get(){return this.ensureValueExist(),this.condition.value.fromTime||(this.condition.value.fromTime=i),this.condition.value.fromTime},set(e){this.ensureValueExist(),this.condition.value.fromTime=e}},toTime:{get(){return this.ensureValueExist(),this.condition.value.toTime||(this.condition.value.toTime=i),this.condition.value.toTime},set(e){this.ensureValueExist(),this.condition.value.toTime=e}},...n("condition",["value.fromTime","value.toTime"]),currentError(){return this.conditionValueFromTimeError||this.conditionValueToTimeError}}});
//# sourceMappingURL=index-BNtJv7mx.js.map
