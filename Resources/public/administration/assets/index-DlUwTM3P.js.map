{"version":3,"file":"index-DlUwTM3P.js","sources":["../../../app/administration/src/module/sw-settings-tax/component/sw-tax-rule-card/sw-tax-rule-card.html.twig","../../../app/administration/src/module/sw-settings-tax/component/sw-tax-rule-card/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_tax_rule_card %}\n<sw-card\n    :title=\"$tc('sw-settings-tax.taxRuleCard.cardTitle')\"\n    class=\"sw-tax-rule-card\"\n    position-identifier=\"sw-tax-rule\"\n    :class=\"taxRuleCardClasses\"\n    :is-loading=\"isLoading || taxRulesLoading || cardLoading\"\n>\n    <template #grid>\n        <template v-if=\"!taxRulesEmpty && !disabled\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_tax_rule_card_header %}\n            <sw-card-section\n                divider=\"bottom\"\n                secondary\n                slim\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_tax_rule_card_header_filter %}\n                <sw-card-filter\n                    :placeholder=\"$tc('sw-settings-tax.taxRuleCard.searchBarPlaceholder')\"\n                    @sw-card-filter-term-change=\"onSearchTermChange\"\n                >\n                    <template #filter>\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_tax_rule_card_header_create_rule_button %}\n                        <sw-button\n                            v-tooltip.bottom=\"{\n                                message: $tc('sw-privileges.tooltip.warning'),\n                                disabled: acl.can('tax.editor'),\n                                showOnDisabledElements: true\n                            }\"\n                            class=\"sw-tax-rule-grid-button\"\n                            size=\"small\"\n                            :disabled=\"!acl.can('tax.editor') || undefined\"\n                            @click=\"showModal = true\"\n                        >\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_tax_rule_card_header_create_document_button_label %}\n                            {{ $tc('sw-settings-tax.taxRuleCard.labelCreateNew') }}\n                            {% endblock %}\n\n                        </sw-button>\n                        {% endblock %}\n                    </template>\n                </sw-card-filter>\n                {% endblock %}\n\n            </sw-card-section>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_tax_rule_card_grid %}\n            <sw-data-grid\n                :data-source=\"taxRules\"\n                :columns=\"getColumns\"\n                :full-page=\"false\"\n                :show-settings=\"true\"\n                :show-selection=\"false\"\n                :show-actions=\"true\"\n                :is-loading=\"isLoading\"\n                :allow-column-edit=\"false\"\n                :allow-inline-edit=\"false\"\n                v-bind=\"{sortBy, sortDirection}\"\n                identifier=\"sw-tax-rule-grid\"\n                @column-sort=\"onColumnSort\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_tax_rule_grid_column_tax_rate %}\n                <template #column-taxRate=\"{ item, isInlineEdit, compact }\">\n                    <template v-if=\"isInlineEdit\">\n                        <sw-number-field\n                            v-model:value=\"item.taxRate\"\n                            :digits=\"3\"\n                            :size=\"compact ? 'small' : 'default'\"\n                        >\n                            <template #suffix>\n                                <span>\n                                    <span v-html=\"$sanitize($tc('sw-settings-tax.general.taxRateSymbol'))\"></span>\n                                </span>\n                            </template>\n                        </sw-number-field>\n                    </template>\n                    <template v-else>\n                        {{ item.taxRate }}%\n                    </template>\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_tax_rule_grid_column_tax_rule_type_type_name %}\n                <template #column-type.typeName=\"{ item }\">\n                    <component\n                        :is=\"getTypeCellComponent(item)\"\n                        v-if=\"getTypeCellComponent(item)\"\n                        :tax-rule=\"item\"\n                    />\n                    <template v-else>\n                        {{ item.type.typeName }}\n                    </template>\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_tax_rule_grid_column_tax_rule_active_from %}\n                <template #column-activeFrom=\"{ item }\">\n                    {{ dateFilter(item.activeFrom, {\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    day: '2-digit',\n                    month: '2-digit',\n                    year: 'numeric'\n                    }) }}\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_tax_list_grid_columns_actions %}\n                <template #actions=\"{ item }\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_settings_tax_list_grid_columns_actions_edit %}\n                    <sw-context-menu-item\n                        class=\"sw-tax-list__edit-action\"\n                        :disabled=\"!acl.can('tax.editor') || undefined\"\n                        @click=\"showRuleModal(item)\"\n                    >\n                        {{ $tc('sw-settings-tax.list.contextMenuEdit') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_settings_tax_list_grid_columns_actions_delete %}\n                    <sw-context-menu-item\n                        class=\"sw-tax-list__delete-action\"\n                        variant=\"danger\"\n                        :disabled=\"!acl.can('tax.editor') || undefined\"\n                        @click=\"onDelete(item.id)\"\n                    >\n                        {{ $tc('sw-settings-tax.list.contextMenuDelete') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_tax_list_grid_action_modals %}\n                <template #action-modals=\"{ item }\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_settings_tax_list_delete_modal %}\n                    <sw-modal\n                        v-if=\"showDeleteModal === item.id\"\n                        :title=\"$tc('global.default.warning')\"\n                        variant=\"small\"\n                        @modal-close=\"onCloseDeleteModal\"\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_tax_list_delete_modal_confirm_delete_text %}\n                        <p class=\"sw-settings-tax-list__confirm-delete-text\">\n                            {{ $tc('sw-settings-tax.taxRuleCard.textDeleteConfirm', 0, { name: item.country.name, type: item.type.typeName }) }}\n                        </p>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_tax_list_delete_modal_footer %}\n                        <template #modal-footer>\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_tax_list_delete_modal_cancel %}\n                            <sw-button\n                                size=\"small\"\n                                @click=\"onCloseDeleteModal\"\n                            >\n                                {{ $tc('global.default.cancel') }}\n                            </sw-button>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_tax_list_delete_modal_confirm %}\n                            <sw-button\n                                variant=\"danger\"\n                                size=\"small\"\n                                @click=\"onConfirmDelete(item.id)\"\n                            >\n                                {{ $tc('sw-settings-tax.list.buttonDelete') }}\n                            </sw-button>\n                            {% endblock %}\n                        </template>\n                        {% endblock %}\n                    </sw-modal>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_tax_list_grid_pagination %}\n                <template #pagination>\n                    <sw-pagination\n                        v-bind=\"{ page, limit, total }\"\n                        :total-visible=\"7\"\n                        @page-change=\"paginate\"\n                    />\n                </template>\n                {% endblock %}\n\n            </sw-data-grid>\n            {% endblock %}\n        </template>\n    </template>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_tax_rule_card_grid_column_modal %}\n    <sw-settings-tax-rule-modal\n        v-if=\"showModal\"\n        :tax=\"tax\"\n        :current-rule=\"currentRule\"\n        @modal-close=\"onModalClose\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_tax_rule_card_empty_state %}\n    <template v-if=\"taxRulesEmpty || disabled\">\n        <div class=\"sw-settings-tax-rule-card__empty-state\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_tax_rule_card_empty_state_image %}\n            <img\n                :src=\"assetFilter('administration/static/img/empty-states/settings-empty-state.svg')\"\n                alt=\"\"\n            >\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_tax_rule_card_empty_state_label %}\n            <div class=\"sw-settings-tax-rule-card__empty-state--label\">\n                <p v-if=\"disabled\">\n                    {{ $tc('sw-settings-tax.taxRuleCard.createStateDescription') }}\n                </p>\n                <p v-else>\n                    {{ $tc('sw-settings-tax.taxRuleCard.emptyStateDescription') }}\n                </p>\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_tax_rule_card_empty_state_button %}\n            <sw-button\n                v-tooltip.bottom=\"{\n                    message: $tc('sw-privileges.tooltip.warning'),\n                    disabled: acl.can('tax.editor'),\n                    showOnDisabledElements: true\n                }\"\n                class=\"sw-settings-tax-rule-card__empty-state--button\"\n                variant=\"ghost\"\n                size=\"small\"\n                :disabled=\"disabled || !acl.can('tax.editor') || undefined\"\n                @click=\"showModal = true\"\n            >\n                {{ $tc('sw-settings-tax.taxRuleCard.labelCreateNew') }}\n            </sw-button>\n            {% endblock %}\n        </div>\n    </template>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n","import template from './sw-tax-rule-card.html.twig';\nimport './sw-tax-rule-card.scss';\n\n/**\n * @package checkout\n */\n\nconst { Context } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'feature',\n    ],\n\n    props: {\n        tax: {\n            type: Object,\n            required: true,\n        },\n        isLoading: {\n            type: Boolean,\n            required: true,\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            taxRulesLoading: false,\n            cardLoading: false,\n            taxRules: [],\n            showModal: false,\n            showDeleteModal: false,\n            currentRule: null,\n            term: '',\n            page: 1,\n            limit: 25,\n            sortBy: 'country.name',\n            sortDirection: 'ASC',\n            total: undefined,\n        };\n    },\n\n    computed: {\n        taxRuleRepository() {\n            return this.repositoryFactory.create('tax_rule');\n        },\n\n        taxRulesEmpty() {\n            return this.taxRules.length === 0 && !this.term;\n        },\n\n        taxRuleCardClasses() {\n            return {\n                'sw-tax-rule-card--is-empty': this.taxRulesEmpty,\n            };\n        },\n\n        taxRuleCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection));\n\n            criteria.addAssociation('type');\n            criteria.addAssociation('country');\n            criteria.addFilter(Criteria.equals('taxId', this.tax.id));\n\n            if (this.term) {\n                criteria.addFilter(\n                    Criteria.multi('OR', [\n                        Criteria.contains('taxRate', this.term),\n                        Criteria.contains('type.technicalName', this.term),\n                        Criteria.contains('type.typeName', this.term),\n                        Criteria.contains('country.name', this.term),\n                    ]),\n                );\n            }\n\n            return criteria;\n        },\n\n        getColumns() {\n            return [\n                {\n                    property: 'country.name',\n                    dataIndex: 'country.name',\n                    label: 'sw-settings-tax.taxRuleCard.labelCountryName',\n                    primary: true,\n                },\n                {\n                    property: 'type.typeName',\n                    dataIndex: 'type.typeName',\n                    label: 'sw-settings-tax.taxRuleCard.labelAppliesOn',\n                },\n                {\n                    property: 'taxRate',\n                    dataIndex: 'taxRate',\n                    label: 'sw-settings-tax.taxRuleCard.labelTaxRate',\n                },\n                {\n                    property: 'activeFrom',\n                    dataIndex: 'activeFrom',\n                    label: 'sw-settings-tax.taxRuleCard.labelActiveFrom',\n                },\n            ];\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n\n        dateFilter() {\n            return Cicada.Filter.getByName('date');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.getList();\n        },\n\n        getList() {\n            this.taxRulesLoading = true;\n\n            return this.taxRuleRepository.search(this.taxRuleCriteria, Context.api).then((response) => {\n                this.total = response.total;\n                this.taxRules = response;\n                this.taxRulesLoading = false;\n                return Promise.resolve();\n            });\n        },\n\n        paginate({ page, limit }) {\n            this.page = page;\n            this.limit = limit;\n            this.getList();\n        },\n\n        onColumnSort(column) {\n            if (this.sortDirection === 'ASC' && column.dataIndex === this.sortBy) {\n                this.sortDirection = 'DESC';\n            } else {\n                this.sortDirection = 'ASC';\n            }\n\n            this.sortBy = column.dataIndex;\n            this.getList();\n        },\n\n        onSearchTermChange(searchTerm) {\n            this.term = searchTerm;\n            this.getList();\n        },\n\n        onModalClose() {\n            this.showModal = false;\n            this.currentRule = null;\n            this.$nextTick(() => this.getList());\n        },\n\n        showRuleModal(taxRule) {\n            this.currentRule = taxRule;\n            this.showModal = true;\n        },\n\n        onDelete(id) {\n            this.showDeleteModal = id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete(id) {\n            this.showDeleteModal = false;\n\n            return this.taxRuleRepository.delete(id, Context.api).then(() => {\n                this.getList();\n            });\n        },\n\n        getTypeCellComponent(taxRule) {\n            const subComponentName = taxRule.type.technicalName.replace(/_/g, '-');\n\n            return Cicada.Component.getComponentRegistry().get(`sw-settings-tax-rule-type-${subComponentName}-cell`);\n        },\n    },\n};\n"],"names":["template","Context","Criteria","index","criteria","response","page","limit","column","searchTerm","taxRule","id","subComponentName"],"mappings":"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"}