const __vite__fileDeps=["assets/index-Bk6pHiGE.js","assets/index-DkNZanEO.css","assets/index-C037vURd.js","assets/index-D0H79NXv.css","assets/index-Cqj8VcKd.js","assets/index-D6JZLUrY.css","assets/index-i390owYY.js","assets/index-DcPmo5ZD.css","assets/index-DwVoiDdb.js","assets/index-DUz6sppy.css","assets/index-D5iMhkgD.js","assets/index-DJWJzMPS.css","assets/index-CO6dNZdZ.js","assets/index-3JcNvQoY.css","assets/index-D0etdpjT.js","assets/index-amhz391J.css","assets/index-DT4RhvsE.js","assets/index-Do_BxQZQ.css","assets/index-Cnw2L7Cm.js","assets/index-BsH74vhD.css","assets/index-Emx84pt8.js","assets/index-CAcohGTX.css","assets/index-DjKCj45B.js","assets/index-cvw0LSMp.css"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{r as g,_ as s}from"./administration-DCOj2uiN.js";import{U as y}from"./user-config.class-C-zJul6z.js";import{s as w}from"./main.vite-CEuAX8cl.js";import"./channel-oRk5-XZJ.js";const{Application:f}=Cicada;f.addServiceProvider("exportTemplateService",()=>({registerProductExportTemplate:C,getProductExportTemplateByName:v,getProductExportTemplateRegistry:b}));const u={};function C(e){return u[e.name]=e,!0}function v(e){return u[e]}function b(){return u}const k="aid,{#- -#} brand,{#- -#} mpnr,{#- -#} ean,{#- -#} name,{#- -#} desc,{#- -#} shop_cat,{#- -#} price,{#- -#} ppu,{#- -#} link,{#- -#} image,{#- -#} dlv_time,{#- -#} dlv_cost,{#- -#} pzn,{#- -#} unit_pricing_measure,{#- -#} unit_pricing_base_measure,{#- -#} target_url,{#- -#} images{#- -#}",S=`"{{ product.productNumber }}",{#- -#} "{{ product.manufacturer.translated.name ?? '' }}",{#- -#} "{{ product.manufacturerNumber }}",{#- -#} "{{ product.ean }}",{#- -#} "{{ product.translated.name|length > 80 ? product.translated.name|slice(0, 80) ~ '...' : product.translated.name }}",{#- -#} "{{ product.translated.description|raw|length > 900 ? product.translated.description|raw|slice(0,900) ~ '...' : product.translated.description|raw }}{#- -#} ",{#- -#} "{%- if product.categories.count > 0 -%} {{ product.categories.first.getBreadCrumb|slice(1)|join(' > ')|raw }}{#- -#} {%- endif -%}",{#- -#} {% set price = product.calculatedPrice %} {%- if product.calculatedPrices.count > 0 -%} {% set price = product.calculatedPrices.last %} {%- endif -%} "{{ price.unitPrice }}",{#- -#} "{%- if price.referencePrice is not null -%} {{ price.referencePrice.price|currency }} / {{ price.referencePrice.referenceUnit }} {{ price.referencePrice.unitName }}{#- -#} {%- endif -%}",{#- -#} "{{ seoUrl('frontend.detail.page', {'productId': product.id}) }}",{#- -#} "{% if product.cover is not null %}{{ product.cover.media.url }}{% endif %}",{#- -#} "{%- if product.availableStock >= product.minPurchase and product.deliveryTime -%} {{ "detail.deliveryTimeAvailable"|trans({'%name%': product.deliveryTime.translation('name')}) }}{#- -#} {%- elseif product.availableStock < product.minPurchase and product.deliveryTime and product.restockTime -%} {{ "detail.deliveryTimeRestock"|trans({'%count%': product.restockTime,'%restockTime%': product.restockTime,'%name%': product.deliveryTime.translation('name')}) }}{#- -#} {%- else -%} {{ "detail.soldOut"|trans }}{#- -#} {%- endif -%}",{#- -#} "4.95",{# change your default delivery costs #}{#- -#} ,{#- -#} "{% if product.purchaseUnit and product.unit %}{{ product.purchaseUnit }} {{ product.unit.shortCode }}{% endif %}",{#- -#} "{% if product.referenceUnit and product.unit %}{{ product.referenceUnit }} {{ product.unit.shortCode }}{% endif %}",{#- -#} "{{ seoUrl('frontend.detail.page', {'productId': product.id}) }}",{#- -#} {%- if product.media|length > 1 -%} "{%- for mediaAssociation in product.media|slice(0, 5) -%} {{ mediaAssociation.media.url }} {%- if not loop.last -%},{%- endif -%} {%- endfor -%}" {%- endif -%}{#- -#}`;Cicada.Service("exportTemplateService").registerProductExportTemplate({name:"billiger_de",translationKey:"sw-sales-channel.detail.productComparison.templates.template-label.billiger-de",headerTemplate:k.trim(),bodyTemplate:S.trim(),footerTemplate:"",fileName:"billiger.csv",encoding:"UTF-8",fileFormat:"csv",generateByCronjob:!1,interval:86400});const P='"categoryPath",{#- -#} "brand",{#- -#} "title",{#- -#} "price",{#- -#} "basePrice",{#- -#} "hans",{#- -#} "eans",{#- -#} "deliveryCosts",{#- -#} "url",{#- -#} "delivery",{#- -#} "sku",{#- -#} "imageUrls",{#- -#} "description",{#- -#} "paymentCosts_CashInAdvance",{#- Change or add your payment methods -#} "paymentCosts_CashOnDelivery",{#- Change or add your payment methods -#} "paymentCosts_Invoice"{#- Change or add your payment methods -#}',T=`"{%- if product.categories.count > 0 -%} {{ product.categories.first.getBreadCrumb|slice(1)|join(' > ')|raw }}{#- -#} {%- endif -%}",{#- -#} "{{ product.manufacturer.translated.name ?? '' }}",{#- -#} "{{ product.translated.name }}",{#- -#} {% set price = product.calculatedPrice %} {%- if product.calculatedPrices.count > 0 -%} {% set price = product.calculatedPrices.last %} {%- endif -%} "{{ price.unitPrice|currency }}",{#- -#} "{%- if price.referencePrice is not null -%} {{ price.referencePrice.price|currency }} / {{ price.referencePrice.referenceUnit }} {{ price.referencePrice.unitName }}{#- -#} {%- endif -%}",{#- -#} "{{ product.manufacturerNumber }}", {#- -#} "{{ product.ean }}",{#- -#} "{{ 4.95|currency }}",{#- Change to your delivery costs -#} "{{ seoUrl('frontend.detail.page', {'productId': product.id}) }}",{#- -#} "{%- if product.availableStock >= product.minPurchase and product.deliveryTime -%} {{ "detail.deliveryTimeAvailable"|trans({'%name%': product.deliveryTime.translation('name')}) }}{#- -#} {%- elseif product.availableStock < product.minPurchase and product.deliveryTime and product.restockTime -%} {{ "detail.deliveryTimeRestock"|trans({'%count%': product.restockTime,'%restockTime%': product.restockTime,'%name%': product.deliveryTime.translation('name')}) }}{#- -#} {%- else -%} {{ "detail.soldOut"|trans }}{#- -#} {%- endif -%}",{#- -#} "{{ product.productNumber }}",{#- -#} "{% if product.cover is not null %}{{ product.cover.media.url }}{% endif %}",{#- -#} "{{ product.translated.description|striptags|raw|length > 300 ? product.translated.description|striptags|raw|slice(0,300) ~ '...' : product.translated.description|striptags|raw }}",{#- -#} "0.00",{#- Change or add your payment methods -#} "0.00",{#- Change or add your payment methods -#} "0.00"{#- Change or add your payment methods -#}`;Cicada.Service("exportTemplateService").registerProductExportTemplate({name:"idealo",translationKey:"sw-sales-channel.detail.productComparison.templates.template-label.idealo",headerTemplate:P.trim(),bodyTemplate:T.trim(),footerTemplate:"",fileName:"idealo.csv",encoding:"UTF-8",fileFormat:"csv",generateByCronjob:!1,interval:86400});const x=`<?xml version="1.0" encoding="UTF-8" ?> <rss version="2.0" xmlns:g="http://base.google.com/ns/1.0" xmlns:atom="http://www.w3.org/2005/Atom"> <channel> <atom:link href="{{ productExport.salesChannelDomain.url }}/store-api/product-export/{{ productExport.accessKey }}/{{ productExport.fileName }}" rel="self" type="application/rss+xml" /> <title>{{ context.salesChannel.name }}</title> <description>{# change your shop's description #}</description> <link>{{ productExport.salesChannelDomain.url }}</link> <language>{{ productExport.salesChannelDomain.language.locale.code }}</language> <image> <url>{# add your logo URL #}</url> <title>{{ context.salesChannel.name }}</title> <link>{{ productExport.salesChannelDomain.url }}</link> </image>`,E="<item> <g:id>{{ product.productNumber }}</g:id> <title>{{ product.translated.name|escape }}</title> <description>{{ product.translated.description|escape }}</description> <g:google_product_category>950{# change your Google Shopping category #}</g:google_product_category> {%- if product.categories.count > 0 -%} <g:product_type>{{ product.categories.first.getBreadCrumb|slice(1)|join(' > ')|raw|escape }}</g:product_type> {%- endif -%} <link>{{ seoUrl('frontend.detail.page', {'productId': product.id}) }}</link> {% if product.cover.media is defined %}<g:image_link>{{ product.cover.media.url }}</g:image_link>{% endif %} <g:condition>new</g:condition> <g:availability> {%- if product.availableStock >= product.minPurchase and product.deliveryTime -%} in_stock {%- elseif product.availableStock < product.minPurchase and product.deliveryTime and product.restockTime -%} preorder {%- else -%} out_of_stock {%- endif -%} </g:availability> {% set price = product.calculatedPrice %} {%- if product.calculatedPrices.count > 0 -%} {% set price = product.calculatedPrices.last %} {%- endif -%} <g:price>{{ price.unitPrice|number_format(context.currency.itemRounding.decimals, '.', '') }} {{ context.currency.isoCode }}</g:price> <g:brand>{{ product.manufacturer.translated.name|escape ? product.manufacturer.translated.name|escape : '' }}</g:brand> <g:gtin>{{ product.ean }}</g:gtin> <g:mpn>{{ product.manufacturerNumber }}</g:mpn> <g:shipping> <g:country>DE</g:country> <g:service>Standard</g:service> {% if product.shippingFree %} <g:price>0.00 {{ context.currency.isoCode }}</g:price> {% else %} <g:price>4.95 {{ context.currency.isoCode }}{# change your default delivery costs #}</g:price> {% endif %} </g:shipping> </item>",I="</channel> </rss>";Cicada.Service("exportTemplateService").registerProductExportTemplate({name:"google-product-search-de",translationKey:"sw-sales-channel.detail.productComparison.templates.template-label.google-product-search-de",headerTemplate:x.trim(),bodyTemplate:E,footerTemplate:I.trim(),fileName:"google.xml",encoding:"UTF-8",fileFormat:"xml",generateByCronjob:!1,interval:86400});const{Application:F,Defaults:h,State:$}=Cicada;F.addServiceProvider("domainLinkService",()=>({getDomainLink:L}));function L(e){if(e.type.id!==h.storefrontSalesChannelTypeId||e.domains.length===0)return null;const t=e.domains.find(i=>i.languageId===$.get("session").languageId);if(t)return t.url;const a=e.domains.find(i=>i.languageId===h.systemLanguageId);return a?a.url:e.domains[0].url}const{Application:R}=Cicada,c=class c extends y{constructor(){super(...arguments),this.state=g({favorites:[]})}async initService(){var t,a;this.userConfig=await this.getUserConfig(),(a=(t=this.userConfig)==null?void 0:t.value)!=null&&a.length&&(this.state.favorites=this.userConfig.value)}getFavoriteIds(){return this.state.favorites}isFavorite(t){return this.state.favorites.includes(t)}update(t,a){if(t&&!this.isFavorite(a))this.state.favorites.push(a);else if(!t&&this.isFavorite(a)){const i=this.state.favorites.indexOf(a);this.state.favorites.splice(i,1)}return this.saveUserConfig()}getConfigurationKey(){return c.USER_CONFIG_KEY}async readUserConfig(){var t;this.userConfig=await this.getUserConfig(),Array.isArray((t=this.userConfig)==null?void 0:t.value)&&(this.state.favorites=this.userConfig.value)}setUserConfig(){this.userConfig.value=this.state.favorites}};c.USER_CONFIG_KEY="sales-channel-favorites";let p=c,l;R.addServiceProvider("salesChannelFavorites",()=>(l||(l=new p),l));const A='{% block sw_admin_menu_navigation_main %} {% parent %} <sw-sales-channel-menu v-if="canViewSalesChannels" /> {% endblock %}',{Component:D}=Cicada;D.override("sw-admin-menu",{template:A,compatConfig:Cicada.compatConfig,inject:["acl"],computed:{canViewSalesChannels(){return this.acl.can("sales_channel.viewer")}}});const N=`{% block sw_sales_channel_menu %} <div class="sw-sales-channel-menu"> {% block sw_sales_channel_menu_modal %} <sw-sales-channel-modal v-if="showModal" @modal-close="showModal=false" /> {% endblock %} {% block sw_sales_channel_menu_headline %} <div class="sw-admin-menu__headline"> {% block sw_sales_channel_menu_headline_text %} <div class="collapsible-text sw-admin-menu__headline_text"> <router-link :to="{ name: 'sw.sales.channel.list' }" >{{ $tc('sw-sales-channel.general.titleMenuItems') }}</router-link> </div> {% endblock %} {% block sw_sales_channel_menu_headline_context_button %} <sw-context-button class="sw-admin-menu__headline-context-menu" icon="solid-ellipsis-h" > {% block sw_sales_channel_menu_headline_context_button_item %} <sw-context-menu-item class="sw-admin-menu__headline-context-menu-manage-sales-channels" :router-link="{ name: 'sw.sales.channel.list' }" > {{ $tc('sw-sales-channel.general.manageSalesChannels') }} </sw-context-menu-item> {% endblock %} </sw-context-button> {% endblock %} {% block sw_sales_channel_menu_headline_action %} <button v-if="canCreateSalesChannels" :aria-label="$tc('sw-sales-channel.general.addSalesChannel')" class="sw-admin-menu__headline-action" @click="openSalesChannelModal" > <sw-icon class="sw-admin-menu__headline-icon" name="regular-plus-circle-s" small /> </button> {% endblock %} </div> {% endblock %} {% block sw_sales_channel_menu_navigation %} <nav class="sw-admin-menu__navigation"> {% block sw_sales_channel_menu_navigation_main_list %} <ul class="sw-admin-menu__navigation-list"> {% block sw_sales_channel_menu_navigation_main_items %} <sw-admin-menu-item v-for="(entry, index) in buildMenuTree" :key="entry.id || index" class="sw-admin-menu__sales-channel-item" :entry="entry" icon-size="16px" :class="['sw-admin-menu__sales-channel-item--' + index]" > <template #additional-text> {% block sw_sales_channel_menu_navigation_item_additional_text %} <button v-if="entry.domainLink && entry.active" class="sw-sales-channel-menu-domain-link" :title="$tc('sw-sales-channel.general.tooltipOpenStorefront')" @click.prevent="openStorefrontLink(entry.domainLink)" > <sw-icon class="sw-sales-channel-menu-domain-link__icon" name="regular-eye-s" size="16px" /> </button> {% endblock %} </template> </sw-admin-menu-item> {% endblock %} {% block sw_sales_channel_menu_navigation_more_items %} <sw-admin-menu-item v-if="moreSalesChannelAvailable" :entry="moreItemsEntry" class="sw-admin-menu__sales-channel-more-items" icon-size="16px" /> {% endblock %} </ul> {% endblock %} {% block sw_sales_channel_menu_context_button_collapsed %} <sw-context-button class="sw-sales-channel-menu__collapsed-context-menu" icon="regular-ellipsis-v" aria-label="sw-sales-channel.general.manageSalesChannels" > <sw-context-menu-item class="sw-admin-menu__headline-context-menu-manage-sales-channels" :router-link="{ name: 'sw.sales.channel.list' }" > {{ $tc('sw-sales-channel.general.manageSalesChannels') }} </sw-context-menu-item> </sw-context-button> {% endblock %} </nav> {% endblock %} </div> {% endblock %}`,{Component:O}=Cicada,{Criteria:d}=Cicada.Data,M=Cicada.Helper.FlatTreeHelper;O.register("sw-sales-channel-menu",{template:N,compatConfig:Cicada.compatConfig,inject:["repositoryFactory","acl","domainLinkService"],data(){return{salesChannels:[],showModal:!1,isLoading:!0}},computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},canCreateSalesChannels(){return this.acl.can("sales_channel.creator")},salesChannelCriteria(){const e=new d(1,7);return e.addIncludes({sales_channel:["name","type","active","translated","domains"],sales_channel_type:["iconName"],sales_channel_domain:["url","languageId"]}),e.addSorting(d.sort("sales_channel.name","ASC")),e.addAssociation("type"),e.addAssociation("domains"),this.salesChannelFavorites.length&&(e.setLimit(50),e.addFilter(d.equalsAny("id",this.salesChannelFavorites))),e},moreSalesChannelAvailable(){var e,t;return((e=this.salesChannels)==null?void 0:e.total)>((t=this.salesChannels)==null?void 0:t.length)},buildMenuTree(){const e=new M;return this.salesChannels.forEach(t=>{e.add({id:t.id,path:"sw.sales.channel.detail",params:{id:t.id},color:"#D8DDE6",label:{label:t.translated.name,translated:!0},icon:t.type.iconName,children:[],domainLink:this.getDomainLink(t),active:t.active})}),e.convertToTree()},moreItemsEntry(){return{active:!0,children:[],color:"#D8DDE6",icon:"regular-ellipsis-v",label:this.$tc("sw-sales-channel.general.titleMenuMoreItems"),path:"sw.sales.channel.list",position:-1}},salesChannelFavoritesService(){return Cicada.Service("salesChannelFavorites")},salesChannelFavorites(){return this.isLoading?[]:this.salesChannelFavoritesService.getFavoriteIds()}},watch:{salesChannelFavorites(){this.isLoading||this.loadEntityData()}},created(){this.createdComponent()},unmounted(){this.destroyedComponent()},methods:{createdComponent(){this.registerListener(),this.salesChannelFavoritesService.initService().finally(()=>{this.isLoading=!1})},registerListener(){this.isCompatEnabled("INSTANCE_EVENT_EMITTER")?(this.$root.$on("sales-channel-change",this.loadEntityData),this.$root.$on("on-change-application-language",this.loadEntityData),this.$root.$on("on-add-sales-channel",this.openSalesChannelModal)):(Cicada.Utils.EventBus.on("sw-sales-channel-detail-sales-channel-change",this.loadEntityData),Cicada.Utils.EventBus.on("sw-language-switch-change-application-language",this.loadEntityData),Cicada.Utils.EventBus.on("sw-sales-channel-detail-base-sales-channel-change",this.openSalesChannelModal))},destroyedComponent(){this.isCompatEnabled("INSTANCE_EVENT_EMITTER")?(this.$root.$off("sales-channel-change",this.loadEntityData),this.$root.$off("on-change-application-language",this.loadEntityData),this.$root.$off("on-add-sales-channel",this.openSalesChannelModal)):(Cicada.Utils.EventBus.off("sw-sales-channel-detail-sales-channel-change",this.loadEntityData),Cicada.Utils.EventBus.off("sw-language-switch-change-application-language",this.loadEntityData),Cicada.Utils.EventBus.off("sw-sales-channel-detail-base-sales-channel-change",this.openSalesChannelModal))},getDomainLink(e){return this.domainLinkService.getDomainLink(e)},loadEntityData(){this.salesChannelRepository.search(this.salesChannelCriteria).then(e=>{this.salesChannels=e})},openSalesChannelModal(){this.showModal=!0},openStorefrontLink(e){window.open(e,"_blank")}}});const U=`{% block sw_sales_channel_products_assignment_single_products %} <sw-card class="sw-sales-channel-products-assignment-single-products" position-identifier="sw-sales-channel-products-assignment-single-products" :is-loading="isLoading" > <div :style="containerStyle"> {% block sw_sales_channel_products_assignment_single_products_secondary %} <sw-card-section ref="cardSectionSecondary" secondary > {% block sw_sales_channel_products_assignment_single_products_search_field %} <sw-simple-search-field v-model:value="searchTerm" variant="form" size="small" @search-term-change="onChangeSearchTerm" /> {% endblock %} </sw-card-section> {% endblock %} {% block sw_sales_channel_products_assignment_single_products_primary %} <sw-card-section class="sw-sales-channel-products-assignment-single-products__card-section-primary" divider="top" > {% block sw_sales_channel_products_assignment_single_products_primary_listing %} <sw-entity-listing v-if="products.length > 0" identifier="sw-sales-channel-products-assignment-single-products-list" :repository="productRepository" :items="products" :columns="productColumns" :plain-appearance="true" :skeleton-item-amount="limit" :is-loading="isLoading" :allow-column-edit="false" :allow-inline-edit="false" :allow-delete="false" :show-actions="false" :show-settings="false" @selection-change="onSelectionChange" @select-item="onSelectionChange" @select-all-items="onSelectionChange" > <template #pagination> {% block sw_sales_channel_products_assignment_single_products_primary_listing_pagination %} <sw-pagination v-bind="{ page, limit, total }" :total-visible="3" :auto-hide="false" @page-change="onChangePage" /> {% endblock %} </template> </sw-entity-listing> {% endblock %} {% block sw_sales_channel_products_assignment_single_products_primary_empty_state %} <sw-empty-state v-else :show-description="false" :title="$tc('sw-sales-channel.detail.products.titleEmptyState')" > <template #icon> <img :src="assetFilter('/administration/static/img/empty-states/products-empty-state.svg')" :alt="$tc('sw-sales-channel.detail.products.titleEmptyState')" > </template> </sw-empty-state> {% endblock %} </sw-card-section> {% endblock %} </div> </sw-card> {% endblock %}`,{Component:j,Mixin:B,Filter:V}=Cicada,{Criteria:r}=Cicada.Data;j.register("sw-sales-channel-products-assignment-single-products",{template:U,compatConfig:Cicada.compatConfig,inject:["repositoryFactory"],emits:["selection-change"],mixins:[B.getByName("notification")],props:{salesChannel:{type:Object,required:!0},containerStyle:{type:Object,required:!0}},data(){return{products:[],searchTerm:null,isLoading:!1,page:1,limit:25,total:0}},computed:{productRepository(){return this.repositoryFactory.create("product")},productCriteria(){const e=new r(this.page,this.limit);return this.searchTerm&&e.setTerm(this.searchTerm),e.addAssociation("visibilities.salesChannel"),e.addFilter(r.not("and",[r.equals("product.visibilities.salesChannelId",this.salesChannel.id)])),e.addFilter(r.equals("parentId",null)),e},productColumns(){return[{property:"name",label:this.$tc("sw-sales-channel.detail.products.columnProductName"),allowResize:!0},{property:"productNumber",label:this.$tc("sw-sales-channel.detail.products.columnProductNumber"),allowResize:!0}]},assetFilter(){return V.getByName("asset")}},created(){this.getProducts()},methods:{getProducts(){return this.isLoading=!0,this.productRepository.search(this.productCriteria).then(e=>{this.products=e,this.total=e.total}).catch(e=>{this.products=[],this.total=0,this.createNotificationError({message:e.message})}).finally(()=>{this.isLoading=!1})},onChangeSearchTerm(e){this.searchTerm=e,e&&(this.page=1),this.getProducts()},onSelectionChange(e){const t=Object.values(e);this.$emit("selection-change",t,"singleProducts")},onChangePage(e){this.page=e.page,this.limit=e.limit,this.products.criteria.sortings.forEach(({field:t,naturalSorting:a,order:i})=>{this.productCriteria.addSorting(r.sort(t,i,a))}),this.getProducts()}}});const q=`{% block sw_sales_channel_product_assignment_categories %} <div class="sw-sales-channel-product-assignment-categories"> {% block sw_sales_channel_product_assignment_categories_info %} <sw-alert ref="alert"> {{ $tc('sw-sales-channel.detail.productAssignmentModal.categories.textInfo') }} </sw-alert> {% endblock %} {% block sw_sales_channel_product_assignment_categories_content %} <sw-card :is-loading="!isComponentReady || isProductLoading" position-identifier="sw-sales-channel-product-assignment-categories" > <div :style="containerStyle"> {% block sw_sales_channel_products_assignment_single_products_secondary %} <sw-card-section ref="cardSectionSecondary" secondary divider="bottom" > {% block sw_sales_channel_product_assignment_categories_search_field %} <sw-simple-search-field :value="searchTerm" variant="form" size="small" :placeholder="$tc('sw-sales-channel.detail.productAssignmentModal.categories.textSearch')" @search-term-change="onSearchTermChange" /> {% endblock %} </sw-card-section> {% endblock %} {% block sw_sales_channel_product_assignment_categories_tree %} {% block sw_sales_channel_product_assignment_categories_tree_result %} <sw-tree v-if="searchTerm.length <= 0 && categories.length > 0" ref="swTree" after-id-property="afterCategoryId" :items="categories" :sortable="false" @get-tree-items="getTreeItems" > {% block sw_sales_channel_product_assignment_categories_tree_headline %} <template #headline> <span></span> </template> {% endblock %} {% block sw_sales_channel_product_assignment_categories_tree_search %} <template #search> <span></span> </template> {% endblock %} {% block sw_sales_channel_product_assignment_categories_tree_items %} <template #items="{ treeItems, draggedItem, translationContext }" > {% block ssw_sales_channel_product_assignment_categories_tree_item %} <sw-tree-item v-for="item in treeItems" :key="item.id" :item="item" :translation-context="translationContext" :dragged-item="draggedItem" :active-parent-ids="selectedCategoriesPathIds" :active-item-ids="selectedCategoriesItemsIds" :sortable="false" :mark-inactive="true" @check-item="onCheckItem" > {% block sw_sales_channel_product_assignment_categories_tree_item_actions %} <template #actions> <span></span> </template> {% endblock %} </sw-tree-item> {% endblock %} </template> {% endblock %} </sw-tree> {% endblock %} {% block sw_sales_channel_product_assignment_categories_search_results %} <ul v-else-if="searchResult.length > 0 && searchTerm.length > 0" class="sw-sales-channel-product-assignment-categories__search-results" > {% block sw_sales_channel_product_assignment_categories_search_results_item %} <li v-for="item in searchResult" :key="item.id" class="sw-sales-channel-product-assignment-categories__search-result" role="option" tabindex="0" :aria-selected="isSearchItemChecked(item.id)" @click.stop="onCheckSearchItem(item)" @keydown.enter="onCheckSearchItem(item)" > {% block sw_sales_channel_product_assignment_categories_search_results_item_checkbox %} <sw-checkbox-field class="sw-sales-channel-product-assignment-categories__search-results-checkbox" :value="isSearchItemChecked(item.id)" /> {% endblock %} {% block sw_sales_channel_product_assignment_categories_search_results_item_folder %} <div v-if="item.childCount > 0" class="sw-sales-channel-product-assignment-categories__search-results-icon" > {% block sw_sales_channel_product_assignment_categories_search_results_item_folder_icon %} <sw-icon name="regular-folder" small /> {% endblock %} </div> {% endblock %} {% block sw_category_tree_field_input_results_search_results_item_endpoint %} <div v-else class="sw-sales-channel-product-assignment-categories__search-results-icon" > {% block sw_category_tree_field_input_results_search_results_item_endpoint_icon %} <sw-icon name="regular-circle-xxs" size="18" /> {% endblock %} </div> {% endblock %} {% block sw_sales_channel_product_assignment_categories_search_results_item_name %} <span class="sw-sales-channel-product-assignment-categories__search-results-name"> {% block sw_category_tree_field_input_results_search_results_item_name_highlight %} <sw-highlight-text :search-term="searchTerm" :text="getBreadcrumb(item)" /> {% endblock %} </span> {% endblock %} </li> {% endblock %} </ul> {% endblock %} {% block sw_sales_channel_product_assignment_categories_search_results_empty %} <sw-empty-state v-else :show-description="false" :absolute="false" :title="$tc('sw-sales-channel.detail.productAssignmentModal.categories.emptySearchResults')" :icon="'regular-products'" class="sw-sales-channel-product-assignment-categories__empty-state" /> {% endblock %} {% endblock %} </div> </sw-card> {% endblock %} </div> {% endblock %}`,{Component:z,Context:_,Mixin:G}=Cicada,{EntityCollection:K,Criteria:n}=Cicada.Data;z.register("sw-sales-channel-product-assignment-categories",{template:q,compatConfig:Cicada.compatConfig,inject:["repositoryFactory"],emits:["selection-change","product-loading"],mixins:[G.getByName("notification")],props:{salesChannel:{type:Object,required:!0},containerStyle:{type:Object,required:!0}},data(){return{categories:[],searchResult:[],searchTerm:"",isFetching:!1,isProductLoading:!1,isComponentReady:!1,categoriesCollection:[]}},computed:{categoryRepository(){return this.repositoryFactory.create("category")},productRepository(){return this.repositoryFactory.create("product")},selectedCategoriesItemsIds(){return this.categoriesCollection.getIds()},selectedCategoriesPathIds(){return this.categoriesCollection.reduce((e,t)=>{const a=t.path?t.path.split("|").filter(i=>i.length>0):"";return[...e,...a]},[])}},watch:{categoriesCollection:{handler(e){if(!e||!e.getIds().length){this.$emit("selection-change",[],"categoryProducts");return}this.$emit("product-loading",!0),this.isProductLoading=!0,this.getProductFromCategories(e.getIds()).then(t=>{this.$emit("selection-change",t,"categoryProducts")}).catch(t=>{this.createNotificationError({message:t.message})}).finally(()=>{this.$emit("product-loading",!1),this.isProductLoading=!1})},deep:!0}},created(){this.createdComponent()},methods:{onSearchTermChange(e){this.searchTerm=e,!(e.length<=0)&&this.searchCategories(e).then(t=>{this.searchResult=t})},createdComponent(){this.categoriesCollection=new K(this.categoryRepository.route,this.categoryRepository.entityName,_.api),this.getTreeItems().then(()=>{this.isComponentReady=!0})},categoryCriteria(e){const t=new n(1,500);return t.addFilter(n.multi("AND",[n.equals("parentId",e),n.multi("OR",[n.equals("type","page"),n.equals("type","folder")])])),t},categorySearchCriteria(e){const t=new n(1,500);return t.addFilter(n.equals("type","page")),t.setTerm(e),t},getTreeItems(e=null){return this.isFetching=!0,this.categoryRepository.search(this.categoryCriteria(e),_.api).then(t=>e===null?(this.categories=t,Promise.resolve()):(t.forEach(a=>{this.categories.add(a)}),Promise.resolve())).catch(t=>{this.createNotificationError({message:t.message})}).finally(()=>{this.isFetching=!1})},onChangeSearchTerm(e){this.searchTerm=e},onCheckItem(e){const t=this.categoriesCollection.has(e.id);return e.checked&&!t?(e.data?this.categoriesCollection.add(e.data):this.categoriesCollection.add(e),!0):(this.removeItem(e),!1)},removeItem(e){this.categoriesCollection.remove(e.id)},searchCategories(e){return this.categoryRepository.search(this.categorySearchCriteria(e),Cicada.Context.api)},isSearchItemChecked(e){return this.selectedCategoriesItemsIds.length>0?this.selectedCategoriesItemsIds.indexOf(e)>=0:!1},onCheckSearchItem(e){const t=!this.isSearchItemChecked(e.id);this.onCheckItem({checked:t,id:e.id,data:e})},getBreadcrumb(e){return e.breadcrumb?e.breadcrumb.join(" / "):e.translated.name||e.name},productCriteria(e){const t=new n(1,500);return t.addFilter(n.multi("AND",[n.equalsAny("categoryIds",e),n.equals("parentId",null),n.not("and",[n.equals("product.visibilities.salesChannelId",this.salesChannel.id)])])),t},getProductFromCategories(e){return this.productRepository.search(this.productCriteria(e),Cicada.Context.api)}}});const H=`{% block sw_sales_channel_products_assignment_dynamic_product_groups %} <div v-if="productStreams" class="sw-sales-channel-products-assignment-dynamic-product-groups" > {% block sw_sales_channel_products_assignment_dynamic_product_groups_info_text %} <sw-alert ref="alert"> {{ $tc('sw-sales-channel.detail.productAssignmentModal.dynamicProductGroups.infoText') }} </sw-alert> {% endblock %} {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing %} <sw-card :is-loading="isProductLoading" position-identifier="sw-sales-channel-products-assignment-dynamic-product-groups" > <template #grid> {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_container %} <div :style="containerStyle"> {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_section %} <sw-card-section ref="cardSectionSecondary" secondary divider="bottom" > {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_search %} <sw-simple-search-field v-model:value="term" variant="form" size="small" :placeholder="$tc('sw-sales-channel.detail.productAssignmentModal.dynamicProductGroups.searchFieldPlaceholder')" @search-term-change="onSearch" /> {% endblock %} </sw-card-section> {% endblock %} {% block sw_sales_channel_products_assignment_dynamic_product_groups_card_section_primary %} <sw-card-section class="sw-sales-channel-products-assignment-dynamic-product-groups__card-section-primary"> {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_entity %} <sw-entity-listing v-if="productStreams.length > 0" ref="productStreamListing" identifier="sw-sales-channel-products-assignment-dynamic-product-groups-listing" :items="productStreams" :data-source="productStreams" :columns="productStreamColumns" :repository="productStreamRepository" :is-loading="isProductStreamsLoading" :skeleton-item-amount="limit" :plain-appearance="true" :show-settings="false" :allow-column-edit="false" :allow-inline-edit="false" @selection-change="onSelect" @select-item="onSelect" @select-all-items="onSelect" > <template #bulk> {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_bulk %} <span></span> {% endblock %} </template> <template #delete-action="{ item }"> {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_delete_action %} <span class="sw-sales-channel-products-assignment-dynamic-product-groups__link-open" role="button" tabindex="0" @click="onOpen(item)" @keydown.enter="onOpen(item)" > {{ $tc('global.default.open') }} </span> {% endblock %} </template> <template #pagination> {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_pagination %} <sw-pagination v-bind="{ page, limit, total }" :total-visible="3" :auto-hide="false" @page-change="onPaginate" /> {% endblock %} </template> </sw-entity-listing> {% endblock %} {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_empty %} <sw-empty-state v-if="productStreams.length <= 0" :show-description="false" :title="productStreams.length <= 0 && term ? $tc('sw-sales-channel.detail.productAssignmentModal.dynamicProductGroups.titleNoProductStreamsMatching') : $tc('sw-sales-channel.detail.productAssignmentModal.dynamicProductGroups.titleNoProductStreamsAvailable') " > <template #icon> {% block sw_sales_channel_products_assignment_dynamic_product_groups_listing_empty_icon %} <img :src="assetFilter('/administration/static/img/empty-states/products-empty-state.svg')" alt="" > {% endblock %} </template> </sw-empty-state> {% endblock %} </sw-card-section> {% endblock %} </div> {% endblock %} </template> </sw-card> {% endblock %} </div> {% endblock %}`,{Component:Y,Mixin:J}=Cicada,{Criteria:o}=Cicada.Data;Y.register("sw-sales-channel-products-assignment-dynamic-product-groups",{template:H,compatConfig:Cicada.compatConfig,inject:["repositoryFactory"],emits:["selection-change","product-loading"],mixins:[J.getByName("notification")],props:{salesChannel:{type:Object,required:!0},containerStyle:{type:Object,required:!0}},data(){return{productStreams:[],productStreamFilter:[],isProductStreamsLoading:!1,isProductLoading:!1,page:1,limit:10,total:0,term:null}},computed:{productRepository(){return this.repositoryFactory.create("product")},productStreamRepository(){return this.repositoryFactory.create("product_stream")},productCriteria(){const e=new o(1,500);return e.filters=this.productStreamFilter,e.addAssociation("visibilities.salesChannel"),e.addFilter(o.not("AND",[o.equals("product.visibilities.salesChannelId",this.salesChannel.id)])),e},productStreamCriteria(){const e=new o(this.page,this.limit);return this.term&&e.setTerm(this.term),e},productStreamColumns(){return[{property:"name",label:this.$tc("sw-sales-channel.detail.productAssignmentModal.dynamicProductGroups.columnName"),sortable:!1}]},assetFilter(){return Cicada.Filter.getByName("asset")}},created(){this.createdComponent()},methods:{createdComponent(){this.getProductStreams()},getProductStreams(){return this.isProductStreamsLoading=!0,this.productStreamRepository.search(this.productStreamCriteria).then(e=>{this.productStreams=e,this.total=e.total}).catch(()=>{this.productStreams=[],this.total=0}).finally(()=>{this.isProductStreamsLoading=!1})},onSearch(e){this.term=e,e&&(this.page=1),this.getProductStreams()},onPaginate(e){this.page=e.page,this.limit=e.limit,this.getProductStreams()},onOpen(e){const t=this.$router.resolve({name:"sw.product.stream.detail",params:{id:e.id}});window.open(t.href,"_blank")},async onSelect(e){if(Object.keys(e).length<=0){this.$emit("selection-change",[],"groupProducts");return}try{const t=await this.getProductsFromProductStreams(e);this.$emit("selection-change",t,"groupProducts")}catch(t){this.createNotificationError({message:t.message})}},getProductsFromProductStreams(e){const t=Object.keys(e).map(a=>this.getProductStreamFilter(a).then(()=>this.getProducts()));return this.$emit("product-loading",!0),this.isProductLoading=!0,Promise.all(t).then(a=>a.flat()).finally(()=>{this.$emit("product-loading",!1),this.isProductLoading=!1})},getProductStreamFilter(e){return this.productStreamRepository.get(e).then(t=>{this.productStreamFilter=t.apiFilter}).catch(t=>(this.productStreamFilter=[],t))},getProducts(){return this.productRepository.search(this.productCriteria).then(e=>e)}}});Cicada.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:null,key:"sales_channel",roles:{viewer:{privileges:["sales_channel:read","sales_channel_type:read",Cicada.Service("privileges").getPrivileges("payment.viewer"),"shipping_method:read","country:read","currency:read","sales_channel_domain:read","snippet_set:read","sales_channel_analytics:read","product_export:read","theme:read","custom_field_set:read","custom_field:read","custom_field_set_relation:read","category:read","customer_group:read",Cicada.Service("privileges").getPrivileges("media.viewer"),"product_export:read","product_stream:read","product_visibility:read","user_config:read","user_config:create","user_config:update"],dependencies:[]},editor:{privileges:["sales_channel:update","sales_channel_analytics:create","sales_channel_analytics:delete","sales_channel_analytics:update","sales_channel_country:create","sales_channel_country:delete","sales_channel_country:update","sales_channel_currency:create","sales_channel_currency:delete","sales_channel_currency:update","sales_channel_domain:create","sales_channel_domain:delete","sales_channel_domain:update","sales_channel_language:create","sales_channel_language:delete","sales_channel_language:update","sales_channel_payment_method:create","sales_channel_payment_method:delete","sales_channel_payment_method:update","sales_channel_shipping_method:create","sales_channel_shipping_method:delete","sales_channel_shipping_method:update","theme_sales_channel:create","theme_sales_channel:delete","product_export:create","product_export:update","product_visibility:create","product_visibility:delete"],dependencies:["sales_channel.viewer"]},creator:{privileges:["product_stream:read","sales_channel:create","product_export:create","product_export:update"],dependencies:["sales_channel.viewer","sales_channel.editor"]},deleter:{privileges:["sales_channel:delete","product_visibility:delete"],dependencies:["sales_channel.viewer"]}}});const Q={_searchable:!1,name:{_searchable:!0,_score:w.HIGH_SEARCH_RANKING}},{Module:W}=Cicada;Cicada.Component.register("sw-sales-channel-defaults-select",()=>s(()=>import("./index-Bk6pHiGE.js"),__vite__mapDeps([0,1])));Cicada.Component.register("sw-sales-channel-modal",()=>s(()=>import("./index-C037vURd.js"),__vite__mapDeps([2,3])));Cicada.Component.register("sw-sales-channel-modal-grid",()=>s(()=>import("./index-Cqj8VcKd.js"),__vite__mapDeps([4,5])));Cicada.Component.register("sw-sales-channel-modal-detail",()=>s(()=>import("./index-i390owYY.js"),__vite__mapDeps([6,7])));Cicada.Component.register("sw-sales-channel-detail-domains",()=>s(()=>import("./index-DwVoiDdb.js"),__vite__mapDeps([8,9])));Cicada.Component.register("sw-sales-channel-detail-hreflang",()=>s(()=>import("./index-DUd8bZu4.js"),[]));Cicada.Component.register("sw-sales-channel-detail",()=>s(()=>import("./index-BLd1tJ3s.js"),[]));Cicada.Component.extend("sw-sales-channel-create","sw-sales-channel-detail",()=>s(()=>import("./index-C0nSkKdA.js"),[]));Cicada.Component.register("sw-sales-channel-list",()=>s(()=>import("./index-D5iMhkgD.js"),__vite__mapDeps([10,11])));Cicada.Component.register("sw-sales-channel-detail-base",()=>s(()=>import("./index-CO6dNZdZ.js"),__vite__mapDeps([12,13])));Cicada.Component.register("sw-sales-channel-detail-products",()=>s(()=>import("./index-D0etdpjT.js"),__vite__mapDeps([14,15])));Cicada.Component.register("sw-sales-channel-detail-analytics",()=>s(()=>import("./index-DT4RhvsE.js"),__vite__mapDeps([16,17])));Cicada.Component.extend("sw-sales-channel-create-base","sw-sales-channel-detail-base",()=>s(()=>import("./index-DXMrYBcs.js"),[]));Cicada.Component.register("sw-sales-channel-detail-product-comparison",()=>s(()=>import("./index-Cnw2L7Cm.js"),__vite__mapDeps([18,19])));Cicada.Component.register("sw-sales-channel-detail-product-comparison-preview",()=>s(()=>import("./index-Emx84pt8.js"),__vite__mapDeps([20,21])));Cicada.Component.register("sw-sales-channel-products-assignment-modal",()=>s(()=>import("./index-DjKCj45B.js"),__vite__mapDeps([22,23])));W.register("sw-sales-channel",{type:"core",name:"sales-channel",title:"sw-sales-channel.general.titleMenuItems",description:"The module for managing Sales Channels.",version:"1.0.0",targetVersion:"1.0.0",color:"#14D7A5",icon:"regular-server",entity:"sales_channel",searchMatcher:(e,t,a)=>{var m;return t.toLowerCase().match(e)?[{name:a.name,icon:a.icon,color:a.color,label:t,entity:a.entity,route:a.routes.list,privilege:(m=a.routes.list)==null?void 0:m.meta.privilege}]:!1},routes:{detail:{component:"sw-sales-channel-detail",path:"detail/:id",meta:{parentPath:"sw.sales.channel.list",privilege:"sales_channel.viewer"},redirect:{name:"sw.sales.channel.detail.base"},children:{base:{component:"sw-sales-channel-detail-base",path:"base",meta:{parentPath:"sw.sales.channel.list",privilege:"sales_channel.viewer"}},products:{component:"sw-sales-channel-detail-products",path:"products",meta:{parentPath:"sw.sales.channel.list",privilege:"sales_channel.viewer"}},productComparison:{component:"sw-sales-channel-detail-product-comparison",path:"product-comparison",meta:{parentPath:"sw.sales.channel.list",privilege:"sales_channel.viewer"}},analytics:{component:"sw-sales-channel-detail-analytics",path:"analytics",meta:{parentPath:"sw.sales.channel.list",privilege:"sales_channel.viewer"}}}},create:{component:"sw-sales-channel-create",path:"create/:typeId",redirect:{name:"sw.sales.channel.create.base"},children:{base:{component:"sw-sales-channel-create-base",path:"base",meta:{parentPath:"sw.sales.channel.list",privilege:"sales_channel.creator"}}}},list:{component:"sw-sales-channel-list",path:"list",meta:{privilege:"sales_channel.viewer"}}},defaultSearchConfiguration:Q});
//# sourceMappingURL=index-BD0bh2Mr.js.map
