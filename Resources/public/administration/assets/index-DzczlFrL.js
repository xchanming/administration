const o='{% block sw_order_create_create_initial %} <div class="sw-order-create-initial"> <sw-order-create-initial-modal @modal-close="onCloseCreateModal" @order-preview="onPreviewOrder" /> </div> {% endblock %}',{Store:r,Data:a,Service:i}=Shopware,{Criteria:d}=a,n={template:o,computed:{customerRepository(){return i("repositoryFactory").create("customer")},customerCriteria(){const e=new d(1,25);return e.addAssociation("addresses").addAssociation("group").addAssociation("salutation").addAssociation("salesChannel").addAssociation("lastPaymentMethod").addAssociation("defaultBillingAddress.country").addAssociation("defaultBillingAddress.countryState").addAssociation("defaultBillingAddress.salutation").addAssociation("defaultShippingAddress.country").addAssociation("defaultShippingAddress.countryState").addAssociation("defaultShippingAddress.salutation").addAssociation("tags"),e}},created(){this.createdComponent()},methods:{async createdComponent(){var s;const e=(s=this.$route.query)==null?void 0:s.customerId;if(!e)return;const t=await this.customerRepository.get(e,Shopware.Context.api,this.customerCriteria);t&&r.get("swOrder").setCustomer(t)},onCloseCreateModal(){this.$nextTick(()=>{this.$router.push({name:"sw.order.index"})})},onPreviewOrder(){this.$nextTick(()=>{this.$router.push({name:"sw.order.create.general"})})}}};export{n as default};
