{"version":3,"file":"index-CrWb8fSs.js","sources":["../../../app/administration/src/module/sw-profile/view/sw-profile-index-general/sw-profile-index-general.html.twig","../../../app/administration/src/module/sw-profile/view/sw-profile-index-general/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_profile_index_general %}\n<div class=\"sw-profile-index-general\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_profile_index_general_information %}\n    <sw-card\n        position-identifier=\"sw-profile-index-general\"\n        :title=\"$tc('sw-profile.index.titleInfoCard')\"\n        :is-loading=\"isUserLoading || !languageId\"\n    >\n        <sw-container v-bind=\"{ columns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '0 30px' }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_profile_index_general_information_name %}\n            <sw-text-field\n                v-model:value=\"user.name\"\n                name=\"sw-field--user-name\"\n                :label=\"$tc('sw-profile.index.labelNameField')\"\n                :disabled=\"!acl.can('user.update_profile')\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_profile_index_general_information_phone %}\n            <sw-text-field\n                v-model:value=\"user.phone\"\n                name=\"sw-field--user-phone\"\n                :label=\"$tc('sw-profile.index.labelPhoneField')\"\n                :disabled=\"!acl.can('user.update_profile')\"\n            />\n            {% endblock %}\n        </sw-container>\n\n        <sw-container v-bind=\"{ columns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '0 30px' }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_profile_index_general_information_username %}\n            <sw-text-field\n                v-model:value=\"user.username\"\n                name=\"sw-field--user-username\"\n                :label=\"$tc('sw-profile.index.labelUsernameField')\"\n                :disabled=\"isDisabled || !acl.can('user.update_profile')\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_profile_index_general_information_language %}\n            <sw-select-field\n                v-model:value=\"user.localeId\"\n                name=\"sw-field--user-localeId\"\n                :label=\"$tc('sw-users-permissions.users.user-detail.labelLanguage')\"\n                :disabled=\"!acl.can('user.update_profile')\"\n                :placeholder=\"$tc('sw-users-permissions.users.user-detail.labelLanguagePlaceholder')\"\n            >\n                <option\n                    v-for=\"language in languages\"\n                    :key=\"language.locale.id\"\n                    :value=\"language.locale.id\"\n                    :selected=\"user.localeId === language.locale.id\"\n                >\n                    {{ language.customLabel }}\n                </option>\n            </sw-select-field>\n            {% endblock %}\n        </sw-container>\n\n        <sw-container v-bind=\"{ columns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '0 30px' }\">\n            <!-- eslint-disable sw-deprecation-rules/no-twigjs-blocks,vue/no-duplicate-attributes,vue/no-parsing-error -->\n            {% block sw_profile_index_general_information_email %}\n            <sw-text-field\n                v-model:value=\"user.email\"\n                name=\"sw-field--user-email\"\n                validation=\"email\"\n                required\n                :label=\"$tc('sw-profile.index.labelEmailField')\"\n                :disabled=\"!acl.can('user.update_profile')\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_profile_index_general_information_timezone %}\n            <sw-single-select\n                v-model:value=\"user.timeZone\"\n                name=\"sw-field--user-timeZone\"\n                class=\"sw-profile--timezone\"\n                :options=\"timezoneOptions\"\n                required\n                :label=\"$tc('sw-users-permissions.users.user-detail.labelTimezone')\"\n                :is-loading=\"timezoneOptions.length <= 0\"\n                :disabled=\"!acl.can('user.update_profile')\"\n            />\n            {% endblock %}\n        </sw-container>\n    </sw-card>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_profile_index_general_image %}\n    <sw-card\n        v-if=\"acl.can('media.creator')\"\n        position-identifier=\"sw-profile-index-general-image\"\n        :title=\"$tc('sw-profile.index.titleImageCard')\"\n        :is-loading=\"isUserLoading || !languageId\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_profile_index_general_image_content %}\n        <sw-upload-listener\n            auto-upload\n            upload-tag=\"sw-profile-upload-tag\"\n            @media-upload-finish=\"onUploadMedia\"\n        />\n        <sw-media-upload-v2\n            upload-tag=\"sw-profile-upload-tag\"\n            :source=\"avatarMediaItem\"\n            :source-context=\"user\"\n            :default-folder=\"userRepository.schema.entity\"\n            :label=\"$tc('sw-profile.index.labelUploadAvatar')\"\n            :disabled=\"!acl.can('user.update_profile')\"\n            :allow-multi-select=\"false\"\n            @media-drop=\"onDropMedia\"\n            @media-upload-sidebar-open=\"onOpenMedia\"\n            @media-upload-remove-image=\"onRemoveMedia\"\n        />\n        {% endblock %}\n    </sw-card>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_profile_index_general_password %}\n    <sw-card\n        position-identifier=\"sw-profile-index-general-password\"\n        :title=\"$tc('sw-profile.index.titlePasswordCard')\"\n        :is-loading=\"isUserLoading || !languageId\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_profile_index_general_password_new_password %}\n        <sw-password-field\n            v-model:value=\"computedNewPassword\"\n            name=\"sw-field--computedNewPassword\"\n            :label=\"$tc('sw-profile.index.labelNewPassword')\"\n            :disabled=\"!acl.can('user.update_profile')\"\n            :placeholder=\"$tc('sw-profile.index.placeholderNewPassword')\"\n            :error=\"userPasswordError\"\n            autocomplete=\"off\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_profile_index_general_password_new_password_confirm %}\n        <sw-password-field\n            v-model:value=\"computedNewPasswordConfirm\"\n            name=\"sw-field--computedNewPasswordConfirm\"\n            :label=\"$tc('sw-profile.index.labelNewPasswordConfirm')\"\n            :disabled=\"!acl.can('user.update_profile')\"\n            :placeholder=\"$tc('sw-profile.index.placeholderNewPasswordConfirm')\"\n            :validation=\"computedNewPassword === computedNewPasswordConfirm\"\n            autocomplete=\"off\"\n        />\n        {% endblock %}\n    </sw-card>\n    {% endblock %}\n</div>\n{% endblock %}\n","/**\n * @package services-settings\n */\nimport template from './sw-profile-index-general.html.twig';\n\nconst { mapPropertyErrors } = Cicada.Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['acl'],\n\n    emits: [\n        'new-password-change',\n        'new-password-confirm-change',\n        'media-upload',\n        'media-remove',\n        'media-open',\n    ],\n\n    props: {\n        user: {\n            type: Object,\n            required: true,\n        },\n        languages: {\n            type: Array,\n            required: true,\n        },\n        newPassword: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        newPasswordConfirm: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        avatarMediaItem: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        isUserLoading: {\n            type: Boolean,\n            required: true,\n        },\n        languageId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        isDisabled: {\n            type: Boolean,\n            required: true,\n        },\n        userRepository: {\n            type: Object,\n            required: true,\n        },\n        timezoneOptions: {\n            type: Array,\n            required: true,\n        },\n    },\n\n    computed: {\n        ...mapPropertyErrors('user', [\n            'password',\n        ]),\n\n        computedNewPassword: {\n            get() {\n                return this.newPassword;\n            },\n            set(newPassword) {\n                this.$emit('new-password-change', newPassword);\n            },\n        },\n\n        computedNewPasswordConfirm: {\n            get() {\n                return this.newPasswordConfirm;\n            },\n            set(newPasswordConfirm) {\n                this.$emit('new-password-confirm-change', newPasswordConfirm);\n            },\n        },\n    },\n\n    methods: {\n        onUploadMedia(media) {\n            this.$emit('media-upload', { targetId: media.targetId });\n        },\n\n        onDropMedia(media) {\n            this.$emit('media-upload', { targetId: media.id });\n        },\n\n        onRemoveMedia() {\n            this.$emit('media-remove');\n        },\n\n        onOpenMedia() {\n            this.$emit('media-open');\n        },\n    },\n};\n"],"names":["template","mapPropertyErrors","index","newPassword","newPasswordConfirm","media"],"mappings":"AAAA,MAAeA,EAAA,60ICKT,CAAE,kBAAAC,CAAiB,EAAK,OAAO,UAAU,mBAAkB,EAGlDC,EAAA,CACX,SAAAF,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,KAAK,EAEd,MAAO,CACH,sBACA,8BACA,eACA,eACA,YACH,EAED,MAAO,CACH,KAAM,CACF,KAAM,OACN,SAAU,EACb,EACD,UAAW,CACP,KAAM,MACN,SAAU,EACb,EACD,YAAa,CACT,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EACD,mBAAoB,CAChB,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EACD,gBAAiB,CACb,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EACD,cAAe,CACX,KAAM,QACN,SAAU,EACb,EACD,WAAY,CACR,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EACD,WAAY,CACR,KAAM,QACN,SAAU,EACb,EACD,eAAgB,CACZ,KAAM,OACN,SAAU,EACb,EACD,gBAAiB,CACb,KAAM,MACN,SAAU,EACb,CACJ,EAED,SAAU,CACN,GAAGC,EAAkB,OAAQ,CACzB,UACZ,CAAS,EAED,oBAAqB,CACjB,KAAM,CACF,OAAO,KAAK,WACf,EACD,IAAIE,EAAa,CACb,KAAK,MAAM,sBAAuBA,CAAW,CAChD,CACJ,EAED,2BAA4B,CACxB,KAAM,CACF,OAAO,KAAK,kBACf,EACD,IAAIC,EAAoB,CACpB,KAAK,MAAM,8BAA+BA,CAAkB,CAC/D,CACJ,CACJ,EAED,QAAS,CACL,cAAcC,EAAO,CACjB,KAAK,MAAM,eAAgB,CAAE,SAAUA,EAAM,QAAQ,CAAE,CAC1D,EAED,YAAYA,EAAO,CACf,KAAK,MAAM,eAAgB,CAAE,SAAUA,EAAM,EAAE,CAAE,CACpD,EAED,eAAgB,CACZ,KAAK,MAAM,cAAc,CAC5B,EAED,aAAc,CACV,KAAK,MAAM,YAAY,CAC1B,CACJ,CACL"}