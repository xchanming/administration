import{S as d}from"./extension-api-data.service-BNEYYFaA.js";const{string:n}=Shopware.Utils,i=class i{constructor(){this.merge=Shopware.Utils.object.merge}handleWriteErrors(r){if(!r)throw new Error("[error-resolver] handleWriteError was called without errors");const e=this.reduceErrorsByWriteIndex(r);e.systemError.length>0&&this.addSystemErrors(e.systemError),this.handleErrors(e.apiError)}cleanWriteErrors(){Shopware.Store.get("error").resetApiErrors()}reduceErrorsByWriteIndex(r){const e={systemError:[],apiError:{}};return r.forEach(o=>{if(!o.source||!o.source.pointer){const s=new d({code:o.code,meta:o.meta,detail:o.detail,status:o.status});e.systemError.push(s);return}const t=o.source.pointer.split("/");t[0]===""&&t.shift();const E={},l=t.length-1;t.reduce((s,a,h)=>a==="translations"||t[h-1]==="translations"?s:(h===l?s[a]=new d(o):s[a]={},s[a]),E),e.apiError=this.merge(e.apiError,E)}),e}addSystemErrors(r){r.forEach(e=>{Shopware.Store.get("error").addSystemError({error:e})})}handleErrors(r){Object.keys(r).forEach(e=>{Shopware.Store.get("error").addApiError({expression:this.getErrorPath(e),error:r[e]})})}getErrorPath(r){return r=n.camelCase(r),`${i.ENTITY_NAME}.${r}`}};i.ENTITY_NAME="SYSTEM_CONFIG";let c=i;export{c as E};
