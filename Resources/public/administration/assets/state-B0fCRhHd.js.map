{"version":3,"file":"state-B0fCRhHd.js","sources":["../../../app/administration/src/module/sw-product/page/sw-product-detail/state.js"],"sourcesContent":["/*\n * @package inventory\n * @deprecated tag:v6.7.0 - Will be replaced with Pinia store\n */\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    namespaced: true,\n\n    state() {\n        return {\n            product: {},\n            parentProduct: {},\n            currencies: [],\n            apiContext: {},\n            taxes: [],\n            variants: [],\n            customFieldSets: [],\n            defaultFeatureSet: {},\n            loading: {\n                init: false,\n                product: false,\n                parentProduct: false,\n                manufacturers: false,\n                currencies: false,\n                taxes: false,\n                customFieldSets: false,\n                media: false,\n                rules: false,\n                variants: false,\n                defaultFeatureSet: false,\n                advancedMode: false,\n            },\n            localMode: false,\n            advancedModeSetting: {},\n            modeSettings: [\n                'general_information',\n                'prices',\n                'deliverability',\n                'visibility_structure',\n                'media',\n                'labelling',\n                'measures_packaging',\n                'properties',\n                'essential_characteristics',\n                'custom_fields',\n            ],\n            /* Product \"types\" provided by the split button for creating a new product through a router parameter */\n            creationStates: [],\n        };\n    },\n\n    getters: {\n        isLoading: (state) => {\n            return Object.values(state.loading).some((loadState) => loadState);\n        },\n\n        defaultCurrency(state) {\n            if (!state.currencies || !state.currencies.length) {\n                return {};\n            }\n\n            const defaultCurrency = state.currencies.find((currency) => currency.isSystemDefault);\n\n            return defaultCurrency || {};\n        },\n\n        defaultPrice(state, getters) {\n            let productPrice = state.product.price;\n\n            // check if price exists\n            if (!productPrice) {\n                // if parent price does not exists\n                if (!state.parentProduct.price) {\n                    return {};\n                }\n\n                productPrice = state.parentProduct.price;\n            }\n\n            // get default price bases on currency\n            return productPrice.find((price) => {\n                return price.currencyId === getters.defaultCurrency.id;\n            });\n        },\n\n        defaultFeatureSet(state) {\n            if (!state.defaultFeatureSet) {\n                return {};\n            }\n\n            return state.defaultFeatureSet;\n        },\n\n        productTaxRate(state) {\n            if (!state.taxes) {\n                return {};\n            }\n\n            return state.taxes.find((tax) => {\n                if (!state.product.taxId) {\n                    if (!state.parentProduct.taxId) {\n                        return {};\n                    }\n\n                    return tax.id === state.parentProduct.taxId;\n                }\n\n                return tax.id === state.product.taxId;\n            });\n        },\n\n        isChild(state) {\n            if (state.product?.parentId) {\n                return !!state.product.parentId;\n            }\n            return false;\n        },\n\n        showModeSetting(state) {\n            if (state.product?.parentId) {\n                return true;\n            }\n\n            return state.advancedModeSetting.value?.advancedMode.enabled;\n        },\n\n        showProductCard(state, getters) {\n            return (key) => {\n                if (state.product?.parentId) {\n                    return true;\n                }\n\n                const cardKeys = [\n                    'essential_characteristics',\n                    'custom_fields',\n                    'labelling',\n                ];\n\n                if (cardKeys.includes(key) && !getters.showModeSetting) {\n                    return false;\n                }\n\n                return state.modeSettings.includes(key);\n            };\n        },\n\n        advanceModeEnabled(state) {\n            return state.advancedModeSetting.value?.advancedMode.enabled;\n        },\n\n        productStates(state) {\n            if (state.product.isNew() && state.creationStates) {\n                return state.creationStates;\n            }\n\n            if (state.product.states) {\n                return state.product.states;\n            }\n\n            return [];\n        },\n    },\n\n    mutations: {\n        setApiContext(state, apiContext) {\n            state.apiContext = apiContext;\n        },\n\n        setCustomFields(state, fieldSet) {\n            state.customFieldSets = state.customFieldSets.map((set) => {\n                if (set.id === fieldSet.id) {\n                    return fieldSet;\n                }\n                return set;\n            });\n        },\n\n        setLocalMode(state, value) {\n            state.localMode = value;\n        },\n\n        setLoading(state, value) {\n            const name = value[0];\n            const data = value[1];\n\n            if (typeof data !== 'boolean') {\n                return false;\n            }\n\n            if (state.loading[name] !== undefined) {\n                state.loading[name] = data;\n                return true;\n            }\n            return false;\n        },\n\n        setAssignedProductsFromCrossSelling(state, { id, collection }) {\n            const entity = state.product.crossSellings.get(id);\n            entity.assignedProducts = collection;\n        },\n\n        setProductId(state, productId) {\n            state.productId = productId;\n        },\n\n        setProduct(state, newProduct) {\n            state.product = newProduct;\n        },\n\n        setVariants(state, newVariants) {\n            state.variants = newVariants;\n        },\n\n        setParentProduct(state, newProduct) {\n            state.parentProduct = newProduct;\n        },\n\n        setCurrencies(state, newCurrencies) {\n            state.currencies = newCurrencies;\n        },\n\n        setTaxes(state, newTaxes) {\n            state.taxes = newTaxes;\n\n            if (state.product && state.product.taxId === null && !state.parentProduct && !state.parentProduct.id) {\n                state.product.taxId = state.taxes[0].id;\n            }\n        },\n\n        setAttributeSet(state, newAttributeSets) {\n            state.customFieldSets = newAttributeSets;\n        },\n\n        setDefaultFeatureSet(state, newDefaultFeatureSet) {\n            state.defaultFeatureSet = newDefaultFeatureSet;\n        },\n\n        setAdvancedModeSetting(state, newAdvancedModeSetting) {\n            state.advancedModeSetting = newAdvancedModeSetting;\n        },\n\n        setModeSettings(state, newModeSettings) {\n            state.modeSettings = newModeSettings;\n        },\n\n        setCreationStates(state, states) {\n            state.creationStates = states;\n        },\n    },\n};\n"],"names":["swProductDetailState","state","loadState","currency","getters","productPrice","price","tax","_a","_b","key","apiContext","fieldSet","set","value","name","data","id","collection","entity","productId","newProduct","newVariants","newCurrencies","newTaxes","newAttributeSets","newDefaultFeatureSet","newAdvancedModeSetting","newModeSettings","states"],"mappings":"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"}