{"version":3,"file":"index-B9edJ344.js","sources":["../../../app/administration/src/app/component/meteor-wrapper/mt-card/mt-card.html.twig","../../../app/administration/src/app/component/meteor-wrapper/mt-card/index.ts"],"sourcesContent":["<mt-card-original\n    v-bind=\"$attrs\"\n    v-on=\"listeners\"\n>\n    <template #before-card>\n        <sw-extension-component-section\n            v-if=\"positionIdentifier\"\n            :position-identifier=\"positionIdentifier + '__before'\"\n        />\n\n        <slot name=\"before-card\"></slot>\n    </template>\n\n    <template\n        v-for=\"(index, name) in getFilteredSlots()\"\n        #[name]=\"data\"\n    >\n        <slot\n            :name=\"name\"\n            v-bind=\"data\"\n        ></slot>\n    </template>\n\n    <template #after-card>\n        <slot name=\"after-card\"></slot>\n\n        <sw-extension-component-section\n            v-if=\"positionIdentifier\"\n            :position-identifier=\"positionIdentifier + '__after'\"\n        />\n    </template>\n</mt-card-original>\n","import { MtCard } from '@cicada-ag/meteor-component-library';\nimport template from './mt-card.html.twig';\n\n// Use the compatConfig from the Cicada object and disable all compatibilities\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nMtCard.compatConfig = Object.fromEntries(\n    Object.keys(Cicada.compatConfig).map((key) => [\n        key,\n        false,\n    ]),\n);\n\n/**\n * @package admin\n *\n * @private\n * @status ready\n * @description Wrapper component for mt-card. Adds the component sections\n *  to the slots. Need to be matched with the original mt-card component.\n */\nCicada.Component.register('mt-card', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    components: {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        'mt-card-original': MtCard,\n    },\n\n    props: {\n        positionIdentifier: {\n            type: String,\n            required: true,\n            default: null,\n        },\n    },\n\n    computed: {\n        listeners() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return this.$listeners;\n            }\n\n            return {};\n        },\n    },\n\n    methods: {\n        getFilteredSlots() {\n            let allSlots: {\n                [key: string]: unknown;\n            } = {};\n\n            if (this.isCompatEnabled('INSTANCE_SCOPED_SLOTS')) {\n                allSlots = {\n                    ...this.$slots,\n                    ...this.$scopedSlots,\n                };\n            } else {\n                allSlots = this.$slots;\n            }\n\n            // Create a new object with the slots we want to keep as deleting is not possible because of read only protection\n            const filteredSlots = Object.entries(allSlots).reduce(\n                (\n                    acc,\n                    [\n                        key,\n                        value,\n                    ],\n                ) => {\n                    if (key !== 'before-card' && key !== 'after-card') {\n                        acc[key] = value;\n                    }\n                    return acc;\n                },\n                {} as { [key: string]: unknown },\n            );\n\n            return filteredSlots;\n        },\n    },\n});\n"],"names":["template","MtCard","key","allSlots","acc","value"],"mappings":"+GAAA,MAAeA,EAAA,ujBCKfC,EAAO,aAAe,OAAO,YACzB,OAAO,KAAK,OAAO,YAAY,EAAE,IAAKC,GAAQ,CAC1CA,EACA,EAAA,CACH,CACL,EAUA,OAAO,UAAU,SAAS,UAAW,CACjC,SAAAF,EAEA,aAAc,OAAO,aAErB,WAAY,CAER,mBAAoBC,CACxB,EAEA,MAAO,CACH,mBAAoB,CAChB,KAAM,OACN,SAAU,GACV,QAAS,IACb,CACJ,EAEA,SAAU,CACN,WAAY,CAEJ,OAAA,KAAK,gBAAgB,oBAAoB,EAClC,KAAK,WAGT,EACX,CACJ,EAEA,QAAS,CACL,kBAAmB,CACf,IAAIE,EAEA,CAAA,EAEA,OAAA,KAAK,gBAAgB,uBAAuB,EACjCA,EAAA,CACP,GAAG,KAAK,OACR,GAAG,KAAK,YAAA,EAGZA,EAAW,KAAK,OAIE,OAAO,QAAQA,CAAQ,EAAE,OAC3C,CACIC,EACA,CACIF,EACAG,CAAA,KAGAH,IAAQ,eAAiBA,IAAQ,eACjCE,EAAIF,CAAG,EAAIG,GAERD,GAEX,CAAC,CAAA,CAIT,CACJ,CACJ,CAAC"}