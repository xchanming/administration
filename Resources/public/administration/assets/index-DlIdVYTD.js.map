{"version":3,"file":"index-DlIdVYTD.js","sources":["../../../app/administration/src/app/component/grid/sw-grid-row/sw-grid-row.html.twig","../../../app/administration/src/app/component/grid/sw-grid-row/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_grid_row %}\n<div\n    ref=\"swGridRow\"\n    class=\"sw-grid-row\"\n    role=\"row\"\n    tabindex=\"0\"\n    @dblclick=\"onInlineEditStart($event.currentTarget)\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_grid_row_actions %}\n    <div class=\"sw-grid-row__actions\">\n        <slot name=\"actions\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_grid_row_slot_actions %}\n            <sw-button\n                size=\"small\"\n                @click=\"onInlineEditCancel(id, index)\"\n            >\n                {{ $tc('global.default.cancel') }}\n            </sw-button>\n            <sw-button\n                class=\"sw-grid-row__inline-edit-action\"\n                variant=\"primary\"\n                size=\"small\"\n                @click=\"onInlineEditFinish\"\n            >\n                {{ $tc('global.default.save') }}\n            </sw-button>\n            {% endblock %}\n        </slot>\n    </div>\n    {% endblock %}\n\n    <slot>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_grid_row_slot_default %}{% endblock %}\n    </slot>\n</div>\n{% endblock %}\n","import template from './sw-grid-row.html.twig';\nimport './sw-grid-row.scss';\n\nconst { Component } = Cicada;\nconst utils = Cicada.Utils;\n\n/**\n * @package admin\n *\n * @private\n */\nComponent.register('sw-grid-row', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: {\n        swGridInlineEditStart: {\n            from: 'swGridInlineEditStart',\n            default: null,\n        },\n        swGridInlineEditCancel: {\n            from: 'swGridInlineEditCancel',\n            default: null,\n        },\n        swOnInlineEditStart: {\n            from: 'swOnInlineEditStart',\n            default: null,\n        },\n        swRegisterGridDisableInlineEditListener: {\n            from: 'swRegisterGridDisableInlineEditListener',\n            default: null,\n        },\n        swUnregisterGridDisableInlineEditListener: {\n            from: 'swUnregisterGridDisableInlineEditListener',\n            default: null,\n        },\n        swGridSetColumns: {\n            from: 'swGridSetColumns',\n            default: null,\n        },\n    },\n\n    emits: ['inline-edit-finish'],\n\n    props: {\n        item: {\n            type: Object,\n            required: true,\n        },\n\n        index: {\n            type: Number,\n            required: false,\n            default: null,\n        },\n\n        allowInlineEdit: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n    },\n\n    data() {\n        return {\n            columns: [],\n            isEditingActive: false,\n            inlineEditingCls: 'is--inline-editing',\n            id: utils.createId(),\n        };\n    },\n\n    watch: {\n        isEditingActive() {\n            if (this.isEditingActive) {\n                this.$refs.swGridRow.classList.add(this.inlineEditingCls);\n                return;\n            }\n\n            this.$refs.swGridRow.classList.remove(this.inlineEditingCls);\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    beforeUnmount() {\n        if (!this.isCompatEnabled('INSTANCE_EVENT_EMITTER')) {\n            this.swUnregisterGridDisableInlineEditListener(this.onInlineEditCancel);\n        }\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.isCompatEnabled('INSTANCE_CHILDREN')) {\n                // Bubble up columns declaration for the column header definition\n                this.$parent.columns = this.columns;\n            } else {\n                this.swGridSetColumns(this.columns);\n            }\n\n            if (this.isCompatEnabled('INSTANCE_EVENT_EMITTER')) {\n                this.$parent.$on('sw-grid-disable-inline-editing', (id) => {\n                    this.onInlineEditCancel(id);\n                });\n            } else {\n                this.swRegisterGridDisableInlineEditListener(this.onInlineEditCancel);\n            }\n        },\n\n        onInlineEditStart() {\n            if (!this.allowInlineEdit || this.$device.getViewportWidth() < 960) {\n                return;\n            }\n\n            let isInlineEditingConfigured = false;\n\n            // If inline editing is already enabled, or no column has\n            // the property \"editable\" we don't have to enable it.\n            this.columns.forEach((column) => {\n                if (column.editable || isInlineEditingConfigured) {\n                    isInlineEditingConfigured = true;\n                }\n            });\n\n            if (this.isEditingActive || !isInlineEditingConfigured) {\n                return;\n            }\n\n            this.isEditingActive = true;\n            if (this.isCompatEnabled('INSTANCE_EVENT_EMITTER')) {\n                this.$parent.$emit('sw-row-inline-edit-start', this.id);\n                this.$parent.$emit('inline-edit-start', this.item);\n            } else {\n                this.swGridInlineEditStart(this.id);\n                this.swOnInlineEditStart(this.item);\n            }\n        },\n\n        onInlineEditCancel(id, index) {\n            if (id && id !== this.id) {\n                return;\n            }\n\n            this.isEditingActive = false;\n            if (this.isCompatEnabled('INSTANCE_CHILDREN')) {\n                this.$parent.$emit('sw-row-inline-edit-cancel', this.id, index);\n                this.$parent.$emit('inline-edit-cancel', this.item, index);\n            } else {\n                this.swGridInlineEditCancel(this.item, index);\n            }\n        },\n\n        onInlineEditFinish() {\n            this.isEditingActive = false;\n            this.$emit('inline-edit-finish', this.item);\n        },\n    },\n});\n"],"names":["template","Component","utils","id","isInlineEditingConfigured","column","index"],"mappings":"AAAA,MAAeA,EAAA,mqBCGT,CAAE,UAAAC,CAAW,EAAG,OAChBC,EAAQ,OAAO,MAOrBD,EAAU,SAAS,cAAe,CAC9B,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,sBAAuB,CACnB,KAAM,wBACN,QAAS,IACZ,EACD,uBAAwB,CACpB,KAAM,yBACN,QAAS,IACZ,EACD,oBAAqB,CACjB,KAAM,sBACN,QAAS,IACZ,EACD,wCAAyC,CACrC,KAAM,0CACN,QAAS,IACZ,EACD,0CAA2C,CACvC,KAAM,4CACN,QAAS,IACZ,EACD,iBAAkB,CACd,KAAM,mBACN,QAAS,IACZ,CACJ,EAED,MAAO,CAAC,oBAAoB,EAE5B,MAAO,CACH,KAAM,CACF,KAAM,OACN,SAAU,EACb,EAED,MAAO,CACH,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EAED,gBAAiB,CACb,KAAM,QACN,SAAU,GAEV,QAAS,EACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,QAAS,CAAE,EACX,gBAAiB,GACjB,iBAAkB,qBAClB,GAAIE,EAAM,SAAU,CAChC,CACK,EAED,MAAO,CACH,iBAAkB,CACd,GAAI,KAAK,gBAAiB,CACtB,KAAK,MAAM,UAAU,UAAU,IAAI,KAAK,gBAAgB,EACxD,MACH,CAED,KAAK,MAAM,UAAU,UAAU,OAAO,KAAK,gBAAgB,CAC9D,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,eAAgB,CACP,KAAK,gBAAgB,wBAAwB,GAC9C,KAAK,0CAA0C,KAAK,kBAAkB,CAE7E,EAED,QAAS,CACL,kBAAmB,CACX,KAAK,gBAAgB,mBAAmB,EAExC,KAAK,QAAQ,QAAU,KAAK,QAE5B,KAAK,iBAAiB,KAAK,OAAO,EAGlC,KAAK,gBAAgB,wBAAwB,EAC7C,KAAK,QAAQ,IAAI,iCAAmCC,GAAO,CACvD,KAAK,mBAAmBA,CAAE,CAC9C,CAAiB,EAED,KAAK,wCAAwC,KAAK,kBAAkB,CAE3E,EAED,mBAAoB,CAChB,GAAI,CAAC,KAAK,iBAAmB,KAAK,QAAQ,iBAAkB,EAAG,IAC3D,OAGJ,IAAIC,EAA4B,GAIhC,KAAK,QAAQ,QAASC,GAAW,EACzBA,EAAO,UAAYD,KACnBA,EAA4B,GAEhD,CAAa,EAEG,OAAK,iBAAmB,CAACA,KAI7B,KAAK,gBAAkB,GACnB,KAAK,gBAAgB,wBAAwB,GAC7C,KAAK,QAAQ,MAAM,2BAA4B,KAAK,EAAE,EACtD,KAAK,QAAQ,MAAM,oBAAqB,KAAK,IAAI,IAEjD,KAAK,sBAAsB,KAAK,EAAE,EAClC,KAAK,oBAAoB,KAAK,IAAI,GAEzC,EAED,mBAAmBD,EAAIG,EAAO,CACtBH,GAAMA,IAAO,KAAK,KAItB,KAAK,gBAAkB,GACnB,KAAK,gBAAgB,mBAAmB,GACxC,KAAK,QAAQ,MAAM,4BAA6B,KAAK,GAAIG,CAAK,EAC9D,KAAK,QAAQ,MAAM,qBAAsB,KAAK,KAAMA,CAAK,GAEzD,KAAK,uBAAuB,KAAK,KAAMA,CAAK,EAEnD,EAED,oBAAqB,CACjB,KAAK,gBAAkB,GACvB,KAAK,MAAM,qBAAsB,KAAK,IAAI,CAC7C,CACJ,CACL,CAAC"}