{"version":3,"file":"index-CjyisyOx.js","sources":["../../../app/administration/src/module/sw-settings-custom-field/component/sw-custom-field-list/sw-custom-field-list.html.twig","../../../app/administration/src/module/sw-settings-custom-field/component/sw-custom-field-list/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_custom_field_list %}\n<sw-card\n    class=\"sw-custom-field-list\"\n    position-identifier=\"sw-custom-field-list\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_custom_field_list_toolbar %}\n    <div class=\"sw-custom-field-list__toolbar\">\n        <sw-container\n            columns=\"1fr 32px minmax(100px, 200px)\"\n            gap=\"0 10px\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_custom_field_list_toolbar_searchfield %}\n            <sw-simple-search-field\n                v-model:value=\"term\"\n                size=\"small\"\n                variant=\"form\"\n                :delay=\"500\"\n                @search-term-change=\"onSearchTermChange\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_custom_field_list_toolbar_delete %}\n            <sw-button\n                v-tooltip.bottom=\"{\n                    message: $tc('sw-privileges.tooltip.warning'),\n                    disabled: acl.can('custom_field.editor'),\n                    showOnDisabledElements: true\n                }\"\n                :disabled=\"deleteButtonDisabled || !acl.can('custom_field.editor') || undefined\"\n                square\n                size=\"small\"\n                class=\"sw-custom-field-list__delete-button\"\n                @click=\"onDeleteCustomFields\"\n            >\n                <sw-icon\n                    name=\"regular-trash\"\n                    small\n                />\n            </sw-button>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_custom_field_list_toolbar_add %}\n            <sw-button\n                v-tooltip.bottom=\"{\n                    message: $tc('sw-privileges.tooltip.warning'),\n                    disabled: acl.can('custom_field.editor'),\n                    showOnDisabledElements: true\n                }\"\n                :disabled=\"set.isLoading || !acl.can('custom_field.editor') || undefined\"\n                size=\"small\"\n                class=\"sw-custom-field-list__add-button\"\n                @click=\"onAddCustomField(set)\"\n            >\n                {{ $tc('sw-settings-custom-field.set.detail.addCustomField') }}\n            </sw-button>\n            {% endblock %}\n        </sw-container>\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_custom_field_list_grid %}\n    <sw-grid\n        v-if=\"(customFields && customFields.length > 0) || term\"\n        ref=\"grid\"\n        class=\"sw-custom-field-list__grid\"\n        :items=\"customFields\"\n        :is-fullpage=\"false\"\n        table\n        :selectable=\"acl.can('custom_field.editor')\"\n        @inline-edit-finish=\"onInlineEditFinish\"\n        @inline-edit-cancel=\"onInlineEditCancel\"\n        @sw-grid-select-item=\"selectionChanged\"\n        @sw-grid-select-all=\"selectionChanged\"\n    >\n        <template\n            #columns=\"{ item }\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_custom_field_list_grid_column_label %}\n            <sw-grid-column\n                data-index=\"label\"\n                truncate\n                flex=\"minmax(150px, 1fr)\"\n                :label=\"$tc('sw-settings-custom-field.customField.list.labelCustomFieldLabel')\"\n            >\n                <span\n                    class=\"sw-custom-field-list__custom-field-label\"\n                    role=\"textbox\"\n                    tabindex=\"0\"\n                    @click=\"onCustomFieldEdit(item)\"\n                    @keydown.enter=\"onCustomFieldEdit(item)\"\n                >\n                    {{ getInlineSnippet(item.config.label) || item.name }}\n                </span>\n\n                <template #inline-edit>\n                    <sw-text-field\n                        :value=\"getInlineSnippet(item.config.label) || item.name\"\n                        disabled\n                    />\n                </template>\n            </sw-grid-column>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_custom_field_list_grid_column_type %}\n            <sw-grid-column\n                data-index=\"type\"\n                truncate\n                flex=\"minmax(150px, 200px)\"\n                :label=\"$tc('sw-settings-custom-field.customField.list.labelCustomFieldType')\"\n            >\n                {{ $tc(`sw-settings-custom-field.types.${item.config.customFieldType || item.type}`) }}\n\n                <template #inline-edit>\n                    <sw-text-field\n                        :value=\"$tc(`sw-settings-custom-field.types.${item.config.customFieldType || item.type}`)\"\n                        disabled\n                    />\n                </template>\n            </sw-grid-column>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_custom_field_list_grid_column_custom_field_position %}\n            <sw-grid-column\n                data-index=\"position\"\n                flex=\"minmax(50px, 100px)\"\n                :editable=\"acl.can('custom_field.editor')\"\n                :label=\"$tc('sw-settings-custom-field.customField.list.labelCustomFieldPosition')\"\n            >\n                {{ item.config.customFieldPosition }}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_custom_field_list_grid_column_custom_field_position_edit %}\n                <template #inline-edit>\n                    <sw-number-field\n                        v-model:value=\"item.config.customFieldPosition\"\n                        number-type=\"int\"\n                    />\n                </template>\n                {% endblock %}\n            </sw-grid-column>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_custom_field_list_grid_column_actions %}\n            <sw-grid-column\n                flex=\"minmax(100px, 100px)\"\n                align=\"center\"\n            >\n                <sw-context-button>\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_custom_field_list_grid_column_actions_edit %}\n                    <sw-context-menu-item\n                        class=\"sw-custom-field-list__edit-action\"\n                        :disabled=\"item.isDeleted || !acl.can('custom_field.editor') || undefined\"\n                        @click=\"onCustomFieldEdit(item)\"\n                    >\n                        {{ $tc('sw-settings-custom-field.customField.list.contextMenuCustomFieldView') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_custom_field_list_grid_column_actions_reset_delete %}\n                    <sw-context-menu-item\n                        v-if=\"item.isDeleted\"\n                        variant=\"success\"\n                        :disabled=\"!acl.can('custom_field.editor') || undefined\"\n                    >\n                        {{ $tc('sw-settings-custom-field.customField.list.contextMenuCustomFieldResetDelete') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_custom_field_list_grid_column_actions_delete %}\n                    <sw-context-menu-item\n                        v-else\n                        variant=\"danger\"\n                        class=\"sw-custom-field-list__delete-action\"\n                        :disabled=\"!acl.can('custom_field.editor')\"\n                        @click=\"onCustomFieldDelete(item)\"\n                    >\n                        {{ $tc('sw-settings-custom-field.customField.list.contextMenuCustomFieldDelete') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n                </sw-context-button>\n            </sw-grid-column>\n            {% endblock %}\n        </template>\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_custom_field_list_grid_pagination %}\n        <template #pagination>\n            <sw-pagination\n                :limit=\"limit\"\n                :page=\"page\"\n                :auto-hide=\"false\"\n                :total=\"customFields.total\"\n                :steps=\"[limit]\"\n                @page-change=\"onPageChange\"\n            />\n        </template>\n        {% endblock %}\n    </sw-grid>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_custom_field_list_empty_state %}\n    <sw-empty-state\n        v-else-if=\"!set.isLoading\"\n        :absolute=\"false\"\n        :title=\"$tc('sw-settings-custom-field.set.detail.messageCustomFieldsEmpty')\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_custom_field_list_custom_field_detail %}\n    <sw-custom-field-detail\n        v-if=\"currentCustomField\"\n        :set=\"set\"\n        :current-custom-field=\"currentCustomField\"\n        @custom-field-edit-save=\"onSaveCustomField\"\n        @custom-field-edit-cancel=\"onCancelCustomField\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_custom_field_list_custom_field_delete %}\n    <sw-modal\n        v-if=\"deleteCustomField\"\n        :title=\"$tc('sw-settings-custom-field.customField.list.titleDeleteAction', deleteCustomField.length)\"\n        variant=\"small\"\n        @modal-close=\"onCancelDeleteCustomField\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_custom_field_list_custom_field_delete_text %}\n        <p class=\"sw-custom-field-delete__description\">\n            {{ $tc('sw-settings-custom-field.customField.list.textDeleteActionConfirmation', deleteCustomField.length, { count: deleteCustomField.length }) }}\n        </p>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_custom_field_list_custom_field_delete_actions %}\n        <template #modal-footer>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_custom_field_list_custom_field_delete_action_cancel %}\n            <sw-button\n                size=\"small\"\n                @click=\"onCancelDeleteCustomField\"\n            >\n                {{ $tc('global.default.cancel') }}\n            </sw-button>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_custom_field_list_custom_field_delete_action_confirm %}\n            <sw-button\n                variant=\"danger\"\n                size=\"small\"\n                @click=\"onDeleteCustomField\"\n            >\n                {{ $tc('global.default.delete') }}\n            </sw-button>\n            {% endblock %}\n        </template>\n        {% endblock %}\n    </sw-modal>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_custom_field_list_loader %}\n    <sw-loader v-if=\"isLoading\" />\n    {% endblock %}\n</sw-card>\n{% endblock %}\n","/**\n * @package services-settings\n */\nimport template from './sw-custom-field-list.html.twig';\nimport './sw-custom-field-list.scss';\n\nconst { Criteria } = Cicada.Data;\nconst { Mixin } = Cicada;\nconst types = Cicada.Utils.types;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    provide() {\n        return {\n            SwCustomFieldListIsCustomFieldNameUnique: this.isCustomFieldNameUnique,\n        };\n    },\n\n    emits: ['loading-changed'],\n\n    mixins: [\n        Mixin.getByName('sw-inline-snippet'),\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        set: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            term: '',\n            isLoading: false,\n            currentCustomField: null,\n            deleteButtonDisabled: true,\n            disableRouteParams: true,\n            deleteCustomField: null,\n            customFields: null,\n            page: 1,\n            total: 0,\n            limit: 10,\n        };\n    },\n\n    computed: {\n        customFieldRepository() {\n            return this.repositoryFactory.create(this.set.customFields.entity, this.set.customFields.source);\n        },\n\n        globalCustomFieldRepository() {\n            return this.repositoryFactory.create('custom_field');\n        },\n    },\n\n    watch: {\n        isLoading(value) {\n            this.$emit('loading-changed', value);\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        onSearchTermChange() {\n            this.loadCustomFields();\n        },\n\n        createdComponent() {\n            this.loadCustomFields();\n        },\n\n        loadCustomFields() {\n            this.isLoading = true;\n\n            const criteria = new Criteria(this.page, this.limit);\n\n            criteria.addFilter(Criteria.equals('customFieldSetId', this.set.id));\n            criteria.addSorting(Criteria.sort('config.customFieldPosition', 'ASC', true));\n\n            if (this.term) {\n                criteria.setTerm(this.term);\n            }\n\n            return this.customFieldRepository\n                .search(criteria)\n                .then((response) => {\n                    this.customFields = response;\n                    this.total = response.total;\n\n                    return response;\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        selectionChanged(selection) {\n            this.deleteButtonDisabled = Object.keys(selection).length <= 0;\n        },\n\n        onCustomFieldDelete(customField) {\n            this.deleteCustomField = customField;\n        },\n\n        onDeleteCustomFields() {\n            this.deleteCustomField = Array.from(Object.values(this.$refs.grid.getSelection()));\n        },\n\n        onAddCustomField() {\n            const customField = this.customFieldRepository.create();\n            this.onCustomFieldEdit(customField);\n        },\n\n        onCancelCustomField() {\n            this.customFieldRepository.discard(this.currentCustomField);\n            this.currentCustomField = null;\n        },\n\n        onInlineEditFinish(item) {\n            this.onSaveCustomField(item);\n        },\n\n        onSaveCustomField(field = this.currentCustomField) {\n            this.removeEmptyProperties(field.config);\n\n            return this.customFieldRepository\n                .save(field)\n                .catch((error) => {\n                    const errorMessage = error?.response?.data?.errors?.[0]?.detail ?? 'Error';\n\n                    this.createNotificationError({\n                        message: errorMessage,\n                    });\n                })\n                .finally(() => {\n                    this.currentCustomField = null;\n\n                    // Wait for modal to be closed\n                    this.$nextTick(() => {\n                        this.loadCustomFields();\n                    });\n                });\n        },\n\n        onInlineEditCancel(customField) {\n            this.customFieldRepository.discard(customField);\n        },\n\n        onCustomFieldEdit(customField) {\n            this.currentCustomField = customField;\n        },\n\n        removeEmptyProperties(config) {\n            Object.keys(config).forEach((property) => {\n                if (\n                    [\n                        'number',\n                        'boolean',\n                    ].includes(typeof config[property])\n                ) {\n                    return;\n                }\n\n                if (types.isObject(config[property]) || types.isArray(config[property])) {\n                    this.removeEmptyProperties(config[property]);\n                }\n\n                if ((types.isEmpty(config[property]) || config[property] === undefined) && config[property !== null]) {\n                    if (this.isCompatEnabled('INSTANCE_DELETE')) {\n                        this.$delete(config, property);\n                    } else {\n                        delete config[property];\n                    }\n                }\n            });\n        },\n\n        isCustomFieldNameUnique(customField) {\n            // Search the server for the customField name\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(Criteria.equals('name', customField.name));\n            return this.globalCustomFieldRepository.search(criteria).then((res) => {\n                return res.length === 0;\n            });\n        },\n\n        onPageChange(event) {\n            this.page = event.page;\n\n            this.loadCustomFields();\n        },\n\n        onCancelDeleteCustomField() {\n            this.deleteCustomField = null;\n        },\n\n        onDeleteCustomField() {\n            // contains an array with custom field id's\n            const toBeDeletedCustomFields = [];\n            const isArray = Array.isArray(this.deleteCustomField);\n\n            if (isArray) {\n                this.deleteCustomField.forEach((customField) => toBeDeletedCustomFields.push(customField.id));\n            } else {\n                toBeDeletedCustomFields.push(this.deleteCustomField.id);\n            }\n\n            return this.globalCustomFieldRepository.syncDeleted(toBeDeletedCustomFields, Cicada.Context.api).then(() => {\n                this.deleteButtonDisabled = true;\n                this.deleteCustomField = null;\n\n                // Wait for modal to be closed\n                this.$nextTick(() => {\n                    this.loadCustomFields();\n                });\n            });\n        },\n    },\n};\n"],"names":["template","Criteria","Mixin","types","index","value","criteria","response","selection","customField","item","field","error","_a","_b","_c","_d","errorMessage","config","property","res","event","toBeDeletedCustomFields"],"mappings":"AAAA,MAAeA,EAAA,o6MCMT,CAAE,SAAAC,CAAQ,EAAK,OAAO,KACtB,CAAE,MAAAC,CAAO,EAAG,OACZC,EAAQ,OAAO,MAAM,MAGZC,EAAA,CACX,SAAAJ,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,oBACA,KACH,EAED,SAAU,CACN,MAAO,CACH,yCAA0C,KAAK,uBAC3D,CACK,EAED,MAAO,CAAC,iBAAiB,EAEzB,OAAQ,CACJE,EAAM,UAAU,mBAAmB,EACnCA,EAAM,UAAU,cAAc,CACjC,EAED,MAAO,CACH,IAAK,CACD,KAAM,OACN,SAAU,EACb,CACJ,EAED,MAAO,CACH,MAAO,CACH,KAAM,GACN,UAAW,GACX,mBAAoB,KACpB,qBAAsB,GACtB,mBAAoB,GACpB,kBAAmB,KACnB,aAAc,KACd,KAAM,EACN,MAAO,EACP,MAAO,EACnB,CACK,EAED,SAAU,CACN,uBAAwB,CACpB,OAAO,KAAK,kBAAkB,OAAO,KAAK,IAAI,aAAa,OAAQ,KAAK,IAAI,aAAa,MAAM,CAClG,EAED,6BAA8B,CAC1B,OAAO,KAAK,kBAAkB,OAAO,cAAc,CACtD,CACJ,EAED,MAAO,CACH,UAAUG,EAAO,CACb,KAAK,MAAM,kBAAmBA,CAAK,CACtC,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,oBAAqB,CACjB,KAAK,iBAAgB,CACxB,EAED,kBAAmB,CACf,KAAK,iBAAgB,CACxB,EAED,kBAAmB,CACf,KAAK,UAAY,GAEjB,MAAMC,EAAW,IAAIL,EAAS,KAAK,KAAM,KAAK,KAAK,EAEnD,OAAAK,EAAS,UAAUL,EAAS,OAAO,mBAAoB,KAAK,IAAI,EAAE,CAAC,EACnEK,EAAS,WAAWL,EAAS,KAAK,6BAA8B,MAAO,EAAI,CAAC,EAExE,KAAK,MACLK,EAAS,QAAQ,KAAK,IAAI,EAGvB,KAAK,sBACP,OAAOA,CAAQ,EACf,KAAMC,IACH,KAAK,aAAeA,EACpB,KAAK,MAAQA,EAAS,MAEfA,EACV,EACA,QAAQ,IAAM,CACX,KAAK,UAAY,EACrC,CAAiB,CACR,EAED,iBAAiBC,EAAW,CACxB,KAAK,qBAAuB,OAAO,KAAKA,CAAS,EAAE,QAAU,CAChE,EAED,oBAAoBC,EAAa,CAC7B,KAAK,kBAAoBA,CAC5B,EAED,sBAAuB,CACnB,KAAK,kBAAoB,MAAM,KAAK,OAAO,OAAO,KAAK,MAAM,KAAK,aAAY,CAAE,CAAC,CACpF,EAED,kBAAmB,CACf,MAAMA,EAAc,KAAK,sBAAsB,OAAM,EACrD,KAAK,kBAAkBA,CAAW,CACrC,EAED,qBAAsB,CAClB,KAAK,sBAAsB,QAAQ,KAAK,kBAAkB,EAC1D,KAAK,mBAAqB,IAC7B,EAED,mBAAmBC,EAAM,CACrB,KAAK,kBAAkBA,CAAI,CAC9B,EAED,kBAAkBC,EAAQ,KAAK,mBAAoB,CAC/C,YAAK,sBAAsBA,EAAM,MAAM,EAEhC,KAAK,sBACP,KAAKA,CAAK,EACV,MAAOC,GAAU,CD7IlC,IAAAC,EAAAC,EAAAC,EAAAC,EC8IoB,MAAMC,IAAeD,GAAAD,GAAAD,GAAAD,EAAAD,GAAA,YAAAA,EAAO,WAAP,YAAAC,EAAiB,OAAjB,YAAAC,EAAuB,SAAvB,YAAAC,EAAgC,KAAhC,YAAAC,EAAoC,SAAU,QAEnE,KAAK,wBAAwB,CACzB,QAASC,CACjC,CAAqB,CACrB,CAAiB,EACA,QAAQ,IAAM,CACX,KAAK,mBAAqB,KAG1B,KAAK,UAAU,IAAM,CACjB,KAAK,iBAAgB,CAC7C,CAAqB,CACrB,CAAiB,CACR,EAED,mBAAmBR,EAAa,CAC5B,KAAK,sBAAsB,QAAQA,CAAW,CACjD,EAED,kBAAkBA,EAAa,CAC3B,KAAK,mBAAqBA,CAC7B,EAED,sBAAsBS,EAAQ,CAC1B,OAAO,KAAKA,CAAM,EAAE,QAASC,GAAa,CAElC,CACI,SACA,SACH,EAAC,SAAS,OAAOD,EAAOC,CAAQ,CAAC,KAKlChB,EAAM,SAASe,EAAOC,CAAQ,CAAC,GAAKhB,EAAM,QAAQe,EAAOC,CAAQ,CAAC,IAClE,KAAK,sBAAsBD,EAAOC,CAAQ,CAAC,GAG1ChB,EAAM,QAAQe,EAAOC,CAAQ,CAAC,GAAKD,EAAOC,CAAQ,IAAM,SAAcD,EAAOC,IAAa,IAAI,IAC3F,KAAK,gBAAgB,iBAAiB,EACtC,KAAK,QAAQD,EAAQC,CAAQ,EAE7B,OAAOD,EAAOC,CAAQ,GAG9C,CAAa,CACJ,EAED,wBAAwBV,EAAa,CAEjC,MAAMH,EAAW,IAAIL,EAAS,EAAG,EAAE,EACnC,OAAAK,EAAS,UAAUL,EAAS,OAAO,OAAQQ,EAAY,IAAI,CAAC,EACrD,KAAK,4BAA4B,OAAOH,CAAQ,EAAE,KAAMc,GACpDA,EAAI,SAAW,CACzB,CACJ,EAED,aAAaC,EAAO,CAChB,KAAK,KAAOA,EAAM,KAElB,KAAK,iBAAgB,CACxB,EAED,2BAA4B,CACxB,KAAK,kBAAoB,IAC5B,EAED,qBAAsB,CAElB,MAAMC,EAA0B,CAAA,EAGhC,OAFgB,MAAM,QAAQ,KAAK,iBAAiB,EAGhD,KAAK,kBAAkB,QAASb,GAAgBa,EAAwB,KAAKb,EAAY,EAAE,CAAC,EAE5Fa,EAAwB,KAAK,KAAK,kBAAkB,EAAE,EAGnD,KAAK,4BAA4B,YAAYA,EAAyB,OAAO,QAAQ,GAAG,EAAE,KAAK,IAAM,CACxG,KAAK,qBAAuB,GAC5B,KAAK,kBAAoB,KAGzB,KAAK,UAAU,IAAM,CACjB,KAAK,iBAAgB,CACzC,CAAiB,CACjB,CAAa,CACJ,CACJ,CACL"}