{"version":3,"file":"index-D7IZAf6h.js","sources":["../../../app/administration/src/module/sw-cms/elements/image-slider/config/sw-cms-el-config-image-slider.html.twig","../../../app/administration/src/module/sw-cms/elements/image-slider/config/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_cms_element_image_slider_config %}\n<div class=\"sw-cms-el-config-image-slider\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_element_image_slider_config_tabs %}\n    <sw-tabs\n        position-identifier=\"sw-cms-element-config-image-slider\"\n        class=\"sw-cms-el-config-image-slider__tabs\"\n        default-item=\"content\"\n    >\n        <template #default=\"{ active }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_element_image_slider_config_tab_content %}\n            <sw-tabs-item\n                :title=\"$tc('sw-cms.elements.general.config.tab.content')\"\n                name=\"content\"\n                :active-tab=\"active\"\n            >\n                {{ $tc('sw-cms.elements.general.config.tab.content') }}\n            </sw-tabs-item>\n            {% endblock %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_element_image_slider_config_tab_options %}\n            <sw-tabs-item\n                :title=\"$tc('sw-cms.elements.general.config.tab.settings')\"\n                name=\"settings\"\n                :active-tab=\"active\"\n            >\n                {{ $tc('sw-cms.elements.general.config.tab.settings') }}\n            </sw-tabs-item>\n            {% endblock %}\n        </template>\n\n        <template\n            #content=\"{ active }\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_element_image_slider_config_content %}\n            <sw-container\n                v-if=\"active === 'content'\"\n                class=\"sw-cms-el-config-image-slider__tab-content\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_element_image_slider_config_media_selection %}\n                <sw-media-list-selection-v2\n                    :entity-media-items=\"mediaItems\"\n                    :entity=\"entity\"\n                    :upload-tag=\"uploadTag\"\n                    :default-folder-name=\"defaultFolderName\"\n                    @upload-finish=\"onImageUpload\"\n                    @item-remove=\"onItemRemove\"\n                    @open-sidebar=\"onOpenMediaModal\"\n                    @item-sort=\"onItemSort\"\n                />\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_element_image_slider_config_media_modal %}\n                <sw-media-modal-v2\n                    v-if=\"mediaModalIsOpen\"\n                    variant=\"full\"\n                    :caption=\"$tc('sw-cms.elements.general.config.caption.mediaUpload')\"\n                    :entity-context=\"cmsPageState.entityName\"\n                    :initial-folder-id=\"cmsPageState.defaultMediaFolderId\"\n                    @media-upload-remove-image=\"onItemRemove\"\n                    @media-modal-selection-change=\"onMediaSelectionChange\"\n                    @modal-close=\"onCloseMediaModal\"\n                />\n                {% endblock %}\n            </sw-container>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_element_image_slider_config_settings %}\n            <sw-container\n                v-if=\"active === 'settings'\"\n                class=\"sw-cms-el-config-image-slider__tab-settings\"\n            >\n                <div class=\"sw-cms-el-config-image-slider__settings-options\">\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_element_image_gallery_config_settings_display_mode %}\n                    <div class=\"sw-cms-el-config-image-slider__setting-option\">\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_element_image_gallery_config_settings_display_mode_select %}\n                        <sw-select-field\n                            v-model:value=\"element.config.displayMode.value\"\n                            class=\"sw-cms-el-config-image-slider__setting-display-mode\"\n                            :label=\"$tc('sw-cms.elements.general.config.label.displayMode')\"\n                            :help-text=\"$tc('sw-cms.elements.imageSlider.config.helpText.displayMode')\"\n                            @update:value=\"onChangeDisplayMode\"\n                        >\n                            <option value=\"standard\">\n                                {{ $tc('sw-cms.elements.general.config.label.displayModeStandard') }}\n                            </option>\n                            <option value=\"contain\">\n                                {{ $tc('sw-cms.elements.general.config.label.displayModeContain') }}\n                            </option>\n                            <option value=\"cover\">\n                                {{ $tc('sw-cms.elements.general.config.label.displayModeCover') }}\n                            </option>\n                        </sw-select-field>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_element_image_gallery_config_settings_min_height %}\n                        <sw-text-field\n                            v-model:value=\"element.config.minHeight.value\"\n                            :label=\"$tc('sw-cms.elements.image.config.label.minHeight')\"\n                            :placeholder=\"$tc('sw-cms.elements.image.config.label.minHeight')\"\n                            :help-text=\"$tc('sw-cms.elements.image.config.label.minHeightHelpText')\"\n                            :disabled=\"element.config.displayMode.value !== 'cover'\"\n                            @update:value=\"onChangeMinHeight\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_element_image_gallery_config_settings_vertical_align %}\n                        <sw-select-field\n                            v-model:value=\"element.config.verticalAlign.value\"\n                            :label=\"$tc('sw-cms.elements.general.config.label.verticalAlign')\"\n                            :placeholder=\"$tc('sw-cms.elements.general.config.label.verticalAlign')\"\n                            :disabled=\"element.config.displayMode.value === 'cover'\"\n                        >\n                            <option value=\"flex-start\">\n                                {{ $tc('sw-cms.elements.general.config.label.verticalAlignTop') }}\n                            </option>\n                            <option value=\"center\">\n                                {{ $tc('sw-cms.elements.general.config.label.verticalAlignCenter') }}\n                            </option>\n                            <option value=\"flex-end\">\n                                {{ $tc('sw-cms.elements.general.config.label.verticalAlignBottom') }}\n                            </option>\n                        </sw-select-field>\n                        {% endblock %}\n                    </div>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_element_image_slider_config_settings_navigation %}\n                    <div class=\"sw-cms-el-config-image-slider__setting-navigations sw-cms-el-config-image-slider__setting-option\">\n                        <div class=\"sw-cms-el-config-image-slider__settings-navigation\">\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_cms_element_image_slider_config_settings_navigation_arrow_position %}\n                            <sw-select-field\n                                v-model:value=\"element.config.navigationArrows.value\"\n                                :label=\"$tc('sw-cms.elements.imageSlider.config.label.navigationArrows')\"\n                                @update:value=\"emitUpdateEl\"\n                            >\n                                <option value=\"none\">\n                                    {{ $tc('sw-cms.elements.imageSlider.config.label.navigationPositionNone') }}\n                                </option>\n                                <option value=\"inside\">\n                                    {{ $tc('sw-cms.elements.imageSlider.config.label.navigationPositionInside') }}\n                                </option>\n                                <option value=\"outside\">\n                                    {{ $tc('sw-cms.elements.imageSlider.config.label.navigationPositionOutside') }}\n                                </option>\n                            </sw-select-field>\n                            {% endblock %}\n                        </div>\n\n                        <div class=\"sw-cms-el-config-image-slider__settings-navigation\">\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_cms_element_image_slider_config_settings_navigation_dots_position %}\n                            <sw-select-field\n                                v-model:value=\"element.config.navigationDots.value\"\n                                :label=\"$tc('sw-cms.elements.imageSlider.config.label.navigationDots')\"\n                                @update:value=\"emitUpdateEl\"\n                            >\n                                <option value=\"none\">\n                                    {{ $tc('sw-cms.elements.imageSlider.config.label.navigationPositionNone') }}\n                                </option>\n                                <option value=\"inside\">\n                                    {{ $tc('sw-cms.elements.imageSlider.config.label.navigationPositionInside') }}\n                                </option>\n                                <option value=\"outside\">\n                                    {{ $tc('sw-cms.elements.imageSlider.config.label.navigationPositionOutside') }}\n                                </option>\n                            </sw-select-field>\n                            {% endblock %}\n                        </div>\n                    </div>\n                    {% endblock %}\n\n                    <div class=\"sw-cms-el-config-image-slider__setting-slide\">\n                        <sw-switch-field\n                            v-model:value=\"element.config.autoSlide.value\"\n                            class=\"sw-cms-el-config-image-slider__setting-auto-slide\"\n                            :label=\"$tc('sw-cms.elements.general.config.label.autoSlide')\"\n                            :help-text=\"$tc('sw-cms.elements.general.config.helpText.autoSlide')\"\n                            bordered\n                            @update:value=\"onChangeAutoSlide\"\n                        />\n                    </div>\n\n                    <div class=\"sw-cms-el-config-image-slider__setting-option\">\n                        <div class=\"sw-cms-el-config-image-slider__setting-delay\">\n                            <sw-number-field\n                                v-model:value=\"element.config.autoplayTimeout.value\"\n                                class=\"sw-cms-el-config-image-slider__setting-delay-slide\"\n                                number-type=\"int\"\n                                :min=\"0\"\n                                :max=\"3600000\"\n                                :disabled=\"!showSlideConfig || undefined\"\n                                :label=\"$tc('sw-cms.elements.general.config.label.autoplayTimeout')\"\n                                :placeholder=\"$tc('sw-cms.elements.general.config.label.autoplayTimeout')\"\n                                :help-text=\"$tc('sw-cms.elements.general.config.helpText.autoplayTimeout')\"\n                            />\n                        </div>\n                        <div class=\"sw-cms-el-config-image-slider__setting-speed\">\n                            <sw-number-field\n                                v-model:value=\"element.config.speed.value\"\n                                class=\"sw-cms-el-config-image-slider__setting-speed-slide\"\n                                number-type=\"int\"\n                                :min=\"0\"\n                                :max=\"3600000\"\n                                :disabled=\"!showSlideConfig || undefined\"\n                                :label=\"$tc('sw-cms.elements.general.config.label.speed')\"\n                                :placeholder=\"$tc('sw-cms.elements.general.config.label.speed')\"\n                                :help-text=\"$tc('sw-cms.elements.general.config.helpText.speed')\"\n                            />\n                        </div>\n                    </div>\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_element_image_slider_config_settings_links %}\n                    <div class=\"sw-cms-el-config-image-slider__settings-links sw-cms-el-config-image-slider__setting-option\">\n                        <div\n                            v-for=\"(sliderItem, index) in items\"\n                            :key=\"index\"\n                            class=\"sw-cms-el-config-image-slider__settings-link\"\n                        >\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_cms_element_image_slider_config_settings_link_url %}\n                            <sw-container\n                                :key=\"sliderItem.mediaId\"\n                                class=\"sw-cms-el-config-image-slider__settings-link-container\"\n                            >\n                                <img\n                                    v-if=\"sliderItem.mediaUrl\"\n                                    class=\"sw-cms-el-config-image-slider__settings-link-prefix\"\n                                    :src=\"sliderItem.mediaUrl\"\n                                    alt=\"\"\n                                >\n\n                                <sw-url-field\n                                    v-model:value=\"sliderItem.url\"\n                                    class=\"sw-cms-el-config-image-slider__settings-link-input\"\n                                    :name=\"sliderItem.mediaUrl\"\n                                    :label=\"$tc('sw-cms.elements.image.config.label.linkTo')\"\n                                    :placeholder=\"$tc('sw-cms.elements.image.config.placeholder.enterUrl')\"\n                                />\n                            </sw-container>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_cms_element_image_slider_config_settings_link_target %}\n                            <sw-switch-field\n                                v-model:value=\"sliderItem.newTab\"\n                                class=\"sw-cms-el-config-image-slider__settings-link-tab\"\n                                :name=\"sliderItem.mediaId\"\n                                :label=\"$tc('sw-cms.elements.image.config.label.linkNewTab')\"\n                            />\n                            {% endblock %}\n                        </div>\n                    </div>\n                    {% endblock %}\n                </div>\n            </sw-container>\n            {% endblock %}\n        </template>\n    </sw-tabs>\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-cms-el-config-image-slider.html.twig';\nimport './sw-cms-el-config-image-slider.scss';\n\nconst { Mixin } = Cicada;\nconst {\n    moveItem,\n    object: { cloneDeep },\n} = Cicada.Utils;\nconst Criteria = Cicada.Data.Criteria;\n\n/**\n * @private\n * @package discovery\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['repositoryFactory'],\n\n    emits: ['element-update'],\n\n    mixins: [\n        Mixin.getByName('cms-element'),\n    ],\n\n    data() {\n        return {\n            mediaModalIsOpen: false,\n            initialFolderId: null,\n            entity: this.element,\n            mediaItems: [],\n            showSlideConfig: false,\n        };\n    },\n\n    computed: {\n        uploadTag() {\n            return `cms-element-media-config-${this.element.id}`;\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        defaultFolderName() {\n            return this.cmsPageState.pageEntityName;\n        },\n\n        items() {\n            if (this.element.config && this.element.config.sliderItems && this.element.config.sliderItems.value) {\n                return this.element.config.sliderItems.value;\n            }\n\n            return [];\n        },\n\n        speedDefault() {\n            return this.cmsService.getCmsElementConfigByName('image-slider').defaultConfig.speed.value;\n        },\n\n        autoplayTimeoutDefault() {\n            return this.cmsService.getCmsElementConfigByName('image-slider').defaultConfig.autoplayTimeout.value;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            this.initElementConfig('image-slider');\n\n            if (this.element.config.autoSlide?.value) {\n                this.showSlideConfig = true;\n            }\n\n            if (this.element.config.sliderItems.source !== 'default' && this.element.config.sliderItems.value.length > 0) {\n                const mediaIds = this.element.config.sliderItems.value.map((configElement) => {\n                    return configElement.mediaId;\n                });\n\n                const criteria = new Criteria(1, 25);\n                criteria.setIds(mediaIds);\n\n                const searchResult = await this.mediaRepository.search(criteria);\n\n                this.mediaItems = mediaIds\n                    .map((mediaId) => {\n                        return searchResult.get(mediaId);\n                    })\n                    .filter((mediaItem) => mediaItem !== null);\n\n                this.element.config.sliderItems.value.forEach((item, i) => {\n                    if (searchResult.get(item.mediaId) === null) {\n                        this.onItemRemove({ id: item.mediaId }, i);\n                    }\n                });\n            }\n        },\n\n        onImageUpload(mediaItem) {\n            const sliderItems = this.element.config.sliderItems;\n            if (sliderItems.source === 'default') {\n                sliderItems.value = [];\n                sliderItems.source = 'static';\n            }\n\n            // Check if mediaItem already exists in mediaItems\n            const mediaItemExists = this.mediaItems.find((item) => {\n                return item.id === mediaItem.id;\n            });\n\n            // Remove previous mediaItem if it already exists\n            if (mediaItemExists) {\n                this.mediaItems = this.mediaItems.filter((item) => {\n                    return item.id !== mediaItem.id;\n                });\n\n                sliderItems.value = sliderItems.value.filter((item) => {\n                    return item.mediaId !== mediaItem.id;\n                });\n            }\n\n            sliderItems.value.push({\n                mediaUrl: mediaItem.url,\n                mediaId: mediaItem.id,\n                url: null,\n                newTab: false,\n            });\n\n            this.mediaItems.push(mediaItem);\n\n            this.updateMediaDataValue();\n            this.emitUpdateEl();\n        },\n\n        onItemRemove(mediaItem, index) {\n            const key = mediaItem.id;\n            const { value } = this.element.config.sliderItems;\n\n            this.element.config.sliderItems.value = value.filter((item, i) => {\n                return item.mediaId !== key || i !== index;\n            });\n\n            this.mediaItems = this.mediaItems.filter((item, i) => {\n                return item.id !== key || i !== index;\n            });\n\n            this.updateMediaDataValue();\n            this.emitUpdateEl();\n        },\n\n        onCloseMediaModal() {\n            this.mediaModalIsOpen = false;\n        },\n\n        onMediaSelectionChange(mediaItems) {\n            const sliderItems = this.element.config.sliderItems;\n            if (sliderItems.source === 'default') {\n                sliderItems.value = [];\n                sliderItems.source = 'static';\n            }\n\n            mediaItems.forEach((item) => {\n                this.element.config.sliderItems.value.push({\n                    mediaUrl: item.url,\n                    mediaId: item.id,\n                    url: null,\n                    newTab: false,\n                });\n            });\n\n            this.mediaItems.push(...mediaItems);\n\n            this.updateMediaDataValue();\n            this.emitUpdateEl();\n        },\n\n        onItemSort(dragData, dropData) {\n            moveItem(this.mediaItems, dragData.position, dropData.position);\n            moveItem(this.element.config.sliderItems.value, dragData.position, dropData.position);\n\n            this.updateMediaDataValue();\n            this.emitUpdateEl();\n        },\n\n        updateMediaDataValue() {\n            if (this.element.config.sliderItems.value) {\n                const sliderItems = cloneDeep(this.element.config.sliderItems.value);\n\n                sliderItems.forEach((sliderItem) => {\n                    this.mediaItems.forEach((mediaItem) => {\n                        if (sliderItem.mediaId === mediaItem.id) {\n                            sliderItem.media = mediaItem;\n                        }\n                    });\n                });\n\n                if (!this.element.data) {\n                    if (this.isCompatEnabled('INSTANCE_SET')) {\n                        this.$set(this.element, 'data', { sliderItems });\n                    } else {\n                        this.element.data = { sliderItems };\n                    }\n\n                    return;\n                }\n\n                if (this.isCompatEnabled('INSTANCE_SET')) {\n                    this.$set(this.element.data, 'sliderItems', sliderItems);\n                } else {\n                    this.element.data.sliderItems = sliderItems;\n                }\n            }\n        },\n\n        onOpenMediaModal() {\n            this.mediaModalIsOpen = true;\n        },\n\n        onChangeMinHeight(value) {\n            this.element.config.minHeight.value = value === null ? '' : value;\n\n            this.$emit('element-update', this.element);\n        },\n\n        onChangeAutoSlide(value) {\n            this.showSlideConfig = value;\n\n            if (!value) {\n                this.element.config.autoplayTimeout.value = this.autoplayTimeoutDefault;\n                this.element.config.speed.value = this.speedDefault;\n            }\n        },\n\n        onChangeDisplayMode(value) {\n            if (value === 'cover') {\n                this.element.config.verticalAlign.value = null;\n            }\n\n            this.$emit('element-update', this.element);\n        },\n\n        emitUpdateEl() {\n            this.$emit('element-update', this.element);\n        },\n    },\n};\n"],"names":["template","Mixin","moveItem","cloneDeep","Criteria","index","_a","mediaIds","configElement","criteria","searchResult","mediaId","mediaItem","item","i","sliderItems","key","value","mediaItems","dragData","dropData","sliderItem"],"mappings":"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"}