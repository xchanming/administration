import{C as a}from"./channel-oRk5-XZJ.js";import"./administration-DCOj2uiN.js";const o=`<div class="sw-category-detail-custom-entity"> <template v-if="category"> <sw-card v-if="!Array.isArray(customEntityAssignments)" :title="$tc('sw-category.base.customEntity.cardTitle')" position-identifier="category-detail-custom-entity" class="sw-category-detail-custom-entity__selection-container" > <sw-entity-single-select class="sw-category-detail-custom-entity__assignment" :value="category.customEntityTypeId" :label="$tc('sw-category.base.customEntity.assignment.label')" :help-text="$tc('sw-category.base.customEntity.assignment.helpText')" :disabled="!acl.can('category.editor')" :criteria="customEntityCriteria" entity="custom_entity" required @update:value="onEntityChange" /> </sw-card> <sw-many-to-many-assignment-card v-else :entity-collection="customEntityAssignments" :title="$tc('sw-category.base.customEntity.cardTitle')" :columns="customEntityColumns" :local-mode="category.isNew()" label-property="cmsAwareTitle" :criteria="sortingCriteria" :select-label="$tc('sw-category.base.customEntity.instanceAssignment.label')" :placeholder="$tc('sw-category.base.customEntity.instanceAssignment.placeholder')" @update:entity-collection="onAssignmentChange" > <template #prepend-select> <sw-entity-single-select class="sw-category-detail-custom-entity__assignment" :value="category.customEntityTypeId" :label="$tc('sw-category.base.customEntity.assignment.label')" :help-text="$tc('sw-category.base.customEntity.assignment.helpText')" :disabled="!acl.can('category.editor')" :criteria="customEntityCriteria" entity="custom_entity" required @update:value="onEntityChange" /> </template> <template #empty-state> <sw-empty-state :title="$tc('sw-category.base.customEntity.instanceAssignment.emptyState.title')" :absolute="false" > <template #icon> <img :src="assetFilter('/administration/static/img/empty-states/products-empty-state.svg')" alt="$tc('sw-category.base.customEntity.instanceAssignment.emptyState.title')" > </template> </sw-empty-state> </template> </sw-many-to-many-assignment-card> </template> </div>`,{Utils:i}=Cicada,n="SwCategories",y=Cicada.Component.wrapComponentConfig({template:o,compatConfig:Cicada.compatConfig,inject:["repositoryFactory","acl"],data(){return{categoryCustomEntityProperty:""}},props:{isLoading:{type:Boolean,required:!1,default:!1}},computed:{customEntityAssignments(){var e,t;return(t=(e=this.category)==null?void 0:e.extensions)==null?void 0:t[`${this.categoryCustomEntityProperty}${n}`]},customEntityColumns(){return[{dataIndex:"cmsAwareTitle",property:"cmsAwareTitle",label:this.$tc("sw-category.base.customEntity.instanceAssignment.title")}]},category(){return Cicada.State.get("swCategoryDetail").category},customEntityCriteria(){return new a(1,10).addFilter(a.contains("flags","cms-aware"))},sortingCriteria(){return new a(1,10).addSorting(a.sort("cmsAwareTitle","ASC"))},assetFilter(){return Cicada.Filter.getByName("asset")}},created(){this.fetchCustomEntityName()},methods:{onAssignmentChange(e){var s;const t=(s=this.category)==null?void 0:s.extensions;t&&(t[`${this.categoryCustomEntityProperty}${n}`]=e)},onEntityChange(e,t){this.category&&(this.category.customEntityTypeId=e,this.categoryCustomEntityProperty=i.string.camelCase((t==null?void 0:t.name)??""))},async fetchCustomEntityName(){var s;if(!((s=this.category)!=null&&s.customEntityTypeId))return;const t=await this.repositoryFactory.create("custom_entity").get(this.category.customEntityTypeId);t&&(this.categoryCustomEntityProperty=i.string.camelCase(t.name))}}});export{y as default};
//# sourceMappingURL=index-nnxj6Ipu.js.map
