{"version":3,"file":"index-DZk1bCRV.js","sources":["../../../app/administration/src/app/component/utils/sw-notifications/sw-notifications.html.twig","../../../app/administration/src/app/component/utils/sw-notifications/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_notifications %}\n<transition name=\"sw-notifications-slide-fade\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_notifications_element %}\n    <div\n        v-if=\"notifications.length\"\n        class=\"sw-notifications\"\n        :style=\"notificationsStyle\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_notifications_transition_group %}\n        <transition-group name=\"sw-notifications-slide-fade\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_notifications_item %}\n            <sw-alert\n                v-for=\"(notification, index) in notifications\"\n                :key=\"notification.uuid\"\n                :class=\"['sw-notifications__notification--' + index, 'sw-notification__alert']\"\n                :title=\"notification.title\"\n                :variant=\"notification.variant\"\n                :appearance=\"notification.system ? 'system' : 'notification'\"\n                :notification-index=\"notification.uuid\"\n                :closable=\"true\"\n                @close=\"onClose(notification)\"\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_notifications_item_content %}\n                <div v-html=\"$sanitize(notification.message, { ALLOWED_TAGS: ['a', 'b', 'i', 'u', 'br'], ALLOWED_ATTR: ['href', 'target'] })\"></div>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_notifications_item_actions_slot %}\n                <template #actions>\n                    <!-- eslint-disable sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_notifications_item_actions %}\n                    <template\n                        v-for=\"action in notification.actions\"\n                        :key=\"action.label\"\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_notifications_item_action_item %}\n                        <sw-button\n                            :disabled=\"action.disabled\"\n                            @click=\"handleAction(action, notification)\"\n                        >\n                            {{ action.label }}\n                        </sw-button>\n                        {% endblock %}\n                    </template>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n            </sw-alert>\n            {% endblock %}\n        </transition-group>\n        {% endblock %}\n    </div>\n    {% endblock %}\n</transition>\n{% endblock %}\n","import template from './sw-notifications.html.twig';\nimport './sw-notifications.scss';\n\nconst { Component } = Cicada;\n\n/**\n * @private\n * @description\n * Wrapper element for all notifications of the administration.\n * @status ready\n * @example-type code-only\n */\nComponent.register('sw-notifications', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['feature'],\n\n    props: {\n        position: {\n            type: String,\n            required: false,\n            default: 'topRight',\n            validator(value) {\n                if (!value.length) {\n                    return true;\n                }\n                return [\n                    'topRight',\n                    'bottomRight',\n                ].includes(value);\n            },\n        },\n        notificationsGap: {\n            type: String,\n            default: '20px',\n        },\n        notificationsTopGap: {\n            type: String,\n            default: '165px',\n        },\n    },\n\n    computed: {\n        notifications() {\n            return Object.values(Cicada.State.getters['notification/getGrowlNotificationsObject']);\n        },\n\n        notificationsStyle() {\n            let notificationsGap = this.notificationsGap;\n\n            if (`${parseInt(notificationsGap, 10)}` === notificationsGap) {\n                notificationsGap = `${notificationsGap}px`;\n            }\n\n            if (this.position === 'bottomRight') {\n                return {\n                    top: 'auto',\n                    right: notificationsGap,\n                    bottom: notificationsGap,\n                    left: 'auto',\n                };\n            }\n\n            return {\n                top: this.notificationsTopGap,\n                right: notificationsGap,\n                bottom: 'auto',\n                left: 'auto',\n            };\n        },\n    },\n\n    methods: {\n        onClose(notification) {\n            Cicada.State.commit('notification/removeGrowlNotification', notification);\n        },\n\n        handleAction(action, notification) {\n            // Allow external links for example to the cicada account or store\n            if (Cicada.Utils.string.isUrl(action.route)) {\n                window.open(action.route);\n                return;\n            }\n\n            if (action.route) {\n                this.$router.push(action.route);\n            }\n\n            if (action.method && typeof action.method === 'function') {\n                action.method.call();\n            }\n\n            this.onClose(notification);\n        },\n    },\n});\n"],"names":["template","Component","value","notificationsGap","notification","action"],"mappings":"AAAA,MAAeA,EAAA,m5CCGT,CAAE,UAAAC,CAAW,EAAG,OAStBA,EAAU,SAAS,mBAAoB,CACnC,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,SAAS,EAElB,MAAO,CACH,SAAU,CACN,KAAM,OACN,SAAU,GACV,QAAS,WACT,UAAUE,EAAO,CACb,OAAKA,EAAM,OAGJ,CACH,WACA,aACpB,EAAkB,SAASA,CAAK,EALL,EAMd,CACJ,EACD,iBAAkB,CACd,KAAM,OACN,QAAS,MACZ,EACD,oBAAqB,CACjB,KAAM,OACN,QAAS,OACZ,CACJ,EAED,SAAU,CACN,eAAgB,CACZ,OAAO,OAAO,OAAO,OAAO,MAAM,QAAQ,0CAA0C,CAAC,CACxF,EAED,oBAAqB,CACjB,IAAIC,EAAmB,KAAK,iBAM5B,MAJI,GAAG,SAASA,EAAkB,EAAE,CAAC,KAAOA,IACxCA,EAAmB,GAAGA,CAAgB,MAGtC,KAAK,WAAa,cACX,CACH,IAAK,OACL,MAAOA,EACP,OAAQA,EACR,KAAM,MAC1B,EAGmB,CACH,IAAK,KAAK,oBACV,MAAOA,EACP,OAAQ,OACR,KAAM,MACtB,CACS,CACJ,EAED,QAAS,CACL,QAAQC,EAAc,CAClB,OAAO,MAAM,OAAO,uCAAwCA,CAAY,CAC3E,EAED,aAAaC,EAAQD,EAAc,CAE/B,GAAI,OAAO,MAAM,OAAO,MAAMC,EAAO,KAAK,EAAG,CACzC,OAAO,KAAKA,EAAO,KAAK,EACxB,MACH,CAEGA,EAAO,OACP,KAAK,QAAQ,KAAKA,EAAO,KAAK,EAG9BA,EAAO,QAAU,OAAOA,EAAO,QAAW,YAC1CA,EAAO,OAAO,OAGlB,KAAK,QAAQD,CAAY,CAC5B,CACJ,CACL,CAAC"}