{"version":3,"file":"index-B6YvlQHc.js","sources":["../../../app/administration/src/module/sw-category/component/sw-category-entry-point-card/sw-category-entry-point-card.html.twig","../../../app/administration/src/module/sw-category/component/sw-category-entry-point-card/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_category_entry_point_card %}\n<sw-card\n    class=\"sw-category-entry-point-card\"\n    position-identifier=\"sw-category-entry-point\"\n    :title=\"$tc('sw-category.base.entry-point-card.cardTitle')\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_category_entry_point_card_selection %}\n    <sw-single-select\n        v-model:value=\"selectedEntryPoint\"\n        class=\"sw-category-entry-point-card__entry-point-selection\"\n        :options=\"entryPoints\"\n        :label=\"$tc('sw-category.base.entry-point-card.labelEntryPoint')\"\n        :placeholder=\"$tc('sw-category.base.entry-point-card.placeholderEntryPoint')\"\n        :help-text=\"helpText\"\n        :disabled=\"hasExistingNavigation || !acl.can('category.editor')\"\n        show-clearable-button\n        @update:value=\"onEntryPointChange\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_category_entry_point_card_navigation_headline %}\n    <p v-if=\"hasExistingNavigation\">\n        {{ $tc('sw-category.base.entry-point-card.existingNavigationDescription') }}\n    </p>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_category_entry_point_card_navigation_list %}\n    <div\n        v-if=\"hasExistingNavigation\"\n        class=\"sw-category-entry-point-card__navigation-list\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_category_detail_entry_point_navigation_list_link %}\n        <router-link\n            v-for=\"salesChannel in initialNavigationSalesChannels\"\n            :key=\"salesChannel.id\"\n            :to=\"{ name: 'sw.sales.channel.detail.base', params: { id: salesChannel.id }}\"\n            class=\"sw-category-entry-point-card__navigation-entry\"\n        >\n            {{ salesChannel.translated.name }}\n        </router-link>\n        {% endblock %}\n\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_category_entry_point_card_sales_channel_selection %}\n    <sw-category-sales-channel-multi-select\n        v-if=\"associatedCollection\"\n        class=\"sw-category-entry-point-card__sales-channel-selection\"\n        :entity-collection=\"associatedCollection\"\n        :label=\"salesChannelSelectionLabel\"\n        :criteria=\"salesChannelCriteria\"\n        :placeholder=\"$tc('sw-category.base.entry-point-card.placeholderSalesChannels')\"\n        :disabled=\"!selectedEntryPoint || !acl.can('category.editor')\"\n        @update:entity-collection=\"onSalesChannelChange\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_category_entry_point_card_button_configure_home %}\n    <sw-button\n        class=\"sw-category-entry-point-card__button-configure-home\"\n        variant=\"ghost\"\n        size=\"small\"\n        :disabled=\"selectedEntryPoint !== 'navigationSalesChannels' || category.navigationSalesChannels.length === 0\"\n        @click=\"openConfigureHomeModal\"\n    >\n        {{ $tc('sw-category.base.entry-point-card.buttonConfigureHome') }}\n    </sw-button>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_category_entry_point_card_configure_home_modal %}\n    <sw-category-entry-point-modal\n        v-if=\"configureHomeModalVisible\"\n        :sales-channel-collection=\"category.navigationSalesChannels\"\n        @modal-close=\"closeConfigureHomeModal\"\n    />\n    {% endblock %}\n</sw-card>\n{% endblock %}\n","import template from './sw-category-entry-point-card.html.twig';\nimport './sw-category-entry-point-card.scss';\n\nconst { Context } = Cicada;\nconst { Criteria, EntityCollection } = Cicada.Data;\n\n/**\n * @package discovery\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'acl',\n    ],\n\n    props: {\n        category: {\n            type: Object,\n            required: true,\n        },\n\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            selectedEntryPoint: this.getInitialEntryPointFromCategory(),\n            initialNavigationSalesChannels: this.category.navigationSalesChannels,\n            addedNavigationSalesChannels: new EntityCollection('/sales_channel', 'sales_channel', Context.api),\n            configureHomeModalVisible: false,\n        };\n    },\n\n    computed: {\n        entryPoints() {\n            return [\n                {\n                    value: 'navigationSalesChannels',\n                    label: this.$tc('sw-category.base.entry-point-card.types.labelMainNavigation'),\n                },\n                {\n                    value: 'footerSalesChannels',\n                    label: this.$tc('sw-category.base.entry-point-card.types.labelFooterNavigation'),\n                },\n                {\n                    value: 'serviceSalesChannels',\n                    label: this.$tc('sw-category.base.entry-point-card.types.labelServiceNavigation'),\n                },\n            ];\n        },\n\n        associatedCollection() {\n            if (this.hasExistingNavigation) {\n                return this.addedNavigationSalesChannels;\n            }\n\n            return this.category[this.selectedEntryPoint];\n        },\n\n        helpText() {\n            switch (this.selectedEntryPoint) {\n                case 'navigationSalesChannels':\n                    return this.$tc('sw-category.base.entry-point-card.types.helpTextMainNavigation');\n                case 'footerSalesChannels':\n                    return this.$tc('sw-category.base.entry-point-card.types.helpTextFooterNavigation');\n                case 'serviceSalesChannels':\n                    return this.$tc('sw-category.base.entry-point-card.types.helpTextServiceNavigation');\n                default:\n                    return '';\n            }\n        },\n\n        hasExistingNavigation() {\n            return this.initialNavigationSalesChannels.length > 0;\n        },\n\n        salesChannelSelectionLabel() {\n            if (this.hasExistingNavigation) {\n                return this.$tc('sw-category.base.entry-point-card.labelSalesChannelsAdd');\n            }\n\n            return this.$tc('global.entities.sales_channel', 2);\n        },\n\n        salesChannelCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            if (this.hasExistingNavigation) {\n                criteria.addFilter(\n                    Criteria.not('or', [\n                        Criteria.equalsAny('id', this.initialNavigationSalesChannels.getIds()),\n                    ]),\n                );\n            }\n\n            return criteria;\n        },\n    },\n\n    watch: {\n        category(newCategory) {\n            this.initialNavigationSalesChannels = newCategory.navigationSalesChannels;\n            this.addedNavigationSalesChannels = new EntityCollection('/sales_channel', 'sales_channel', Context.api);\n            this.selectedEntryPoint = this.getInitialEntryPointFromCategory();\n        },\n    },\n\n    methods: {\n        getInitialEntryPointFromCategory() {\n            if (this.category.navigationSalesChannels && this.category.navigationSalesChannels.length > 0) {\n                return 'navigationSalesChannels';\n            }\n\n            if (this.category.footerSalesChannels && this.category.footerSalesChannels.length > 0) {\n                return 'footerSalesChannels';\n            }\n\n            if (this.category.serviceSalesChannels && this.category.serviceSalesChannels.length > 0) {\n                return 'serviceSalesChannels';\n            }\n\n            return '';\n        },\n\n        onEntryPointChange() {\n            this.resetSalesChannelCollections();\n        },\n\n        onSalesChannelChange(changedEntityCollection) {\n            const entryPoint = this.selectedEntryPoint;\n\n            if (this.hasExistingNavigation) {\n                const joinedNavigationCollection = EntityCollection.fromCollection(this.initialNavigationSalesChannels);\n                changedEntityCollection.forEach((item) => {\n                    joinedNavigationCollection.add(item);\n                });\n                this.addedNavigationSalesChannels = changedEntityCollection;\n                changedEntityCollection = joinedNavigationCollection;\n            }\n\n            changedEntityCollection.source = this.category[entryPoint].source;\n            this.resetSalesChannelCollections();\n\n            this.category[entryPoint] = changedEntityCollection;\n        },\n\n        resetSalesChannelCollections() {\n            const entryPoint = this.selectedEntryPoint;\n\n            const salesChannelsCollectionToReset = this.entryPoints.reduce((accumulator, { value }) => {\n                if (value === entryPoint) {\n                    return accumulator;\n                }\n\n                accumulator.push(this.category[value]);\n                return accumulator;\n            }, []);\n\n            salesChannelsCollectionToReset.forEach((collection) => {\n                const ids = collection.getIds();\n\n                ids.forEach((id) => {\n                    collection.remove(id);\n                });\n            });\n        },\n\n        openConfigureHomeModal() {\n            this.configureHomeModalVisible = true;\n        },\n\n        closeConfigureHomeModal() {\n            this.configureHomeModalVisible = false;\n        },\n    },\n};\n"],"names":["template","Context","Criteria","EntityCollection","index","criteria","newCategory","changedEntityCollection","entryPoint","joinedNavigationCollection","item","accumulator","value","collection","id"],"mappings":"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"}