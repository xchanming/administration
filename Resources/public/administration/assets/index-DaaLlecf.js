const s=`{% block sw_sales_channel_switch %} <div class="sw-sales-channel-switch"> {% block sw_sales_channel_switch_modal %} <sw-modal v-if="showUnsavedChangesModal" :title="$tc('sw-sales-channel-switch.titleModalUnsavedChanges')" variant="small" @modal-close="onCloseChangesModal" > {% block sw_sales_channel_switch_message %} <p>{{ $tc('sw-sales-channel-switch.messageModalUnsavedChanges') }}</p> {% endblock %} {% block sw_sales_channel_switch_footer %} <template #modal-footer> {% block sw_sales_channel_switch_footer_button_close %} <sw-button size="small" @click="onCloseChangesModal" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_sales_channel_switch_footer_button_revert %} <sw-button size="small" @click="onClickRevertUnsavedChanges" > {{ $tc('sw-sales-channel-switch.titleModalButtonRevertUnsavedChanges') }} </sw-button> {% endblock %} {% block sw_sales_channel_switch_footer_button_save %} <sw-button variant="primary" size="small" @click="onClickSaveChanges" > {{ $tc('global.default.save') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} {% block sw_sales_channel_switch_select %} <sw-entity-single-select id="salesChannelSelect" ref="salesChannelSelect" :disabled="disabled" :placeholder="$tc('sw-sales-channel-switch.labelDefaultOption')" :label="label" :search-placeholder="$tc('sw-sales-channel-switch.placeholderSelect')" :reset-option="$tc('sw-sales-channel-switch.labelDefaultOption')" :value="salesChannelId" entity="sales_channel" show-clearable-button @update:value="onChange" > <template #labelProperty="{item, labelProperty}"> <span v-if="item.translated">{{ item.translated[labelProperty] }}</span> </template> </sw-entity-single-select> {% endblock %} </div> {% endblock %}`,{Component:a}=Cicada,{debug:l}=Cicada.Utils;a.register("sw-sales-channel-switch",{template:s,compatConfig:Cicada.compatConfig,emits:["change-sales-channel-id"],props:{disabled:{type:Boolean,required:!1,default:!1},abortChangeFunction:{type:Function,required:!1},saveChangesFunction:{type:Function,required:!1},label:{type:String,required:!1,default:""}},data(){return{salesChannelId:"",lastSalesChannelId:"",newSalesChannelId:"",showUnsavedChangesModal:!1}},methods:{onChange(e){this.salesChannelId=e,this.newSalesChannelId=e,this.checkAbort()},checkAbort(){if(typeof this.abortChangeFunction=="function"&&this.abortChangeFunction({oldSalesChannelId:this.lastSalesChannelId,newSalesChannelId:this.salesChannelId})){this.showUnsavedChangesModal=!0,this.salesChannelId=this.lastSalesChannelId,this.$refs.salesChannelSelect.loadSelected();return}this.emitChange()},emitChange(){this.lastSalesChannelId=this.salesChannelId,this.$emit("change-sales-channel-id",this.salesChannelId)},onCloseChangesModal(){this.showUnsavedChangesModal=!1,this.newSalesChannelId=""},onClickSaveChanges(){let e={};return typeof this.saveChangesFunction=="function"?e=this.saveChangesFunction():l.warn("sw-sales-channel-switch","You need to implement an own save function to save the changes!"),Promise.resolve(e).then(()=>{this.changeToNewSalesChannel(),this.onCloseChangesModal()})},onClickRevertUnsavedChanges(){this.changeToNewSalesChannel(),this.onCloseChangesModal()},changeToNewSalesChannel(e){e&&(this.newSalesChannelId=e),this.salesChannelId=this.newSalesChannelId,this.newSalesChannelId="",this.$refs.salesChannelSelect.loadSelected(),this.emitChange()}}});
//# sourceMappingURL=index-DaaLlecf.js.map
