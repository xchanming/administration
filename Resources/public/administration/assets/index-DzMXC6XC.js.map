{"version":3,"mappings":"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","names":["template","Component","size","newName","variant","iconName","iconFullName","__variableDynamicImportRuntimeHelper","__vitePreload","iconSvgData"],"ignoreList":[],"sources":["../../../app/administration/src/app/component/base/sw-icon-deprecated/sw-icon-deprecated.html.twig","../../../app/administration/src/app/component/base/sw-icon-deprecated/index.js"],"sourcesContent":["<span\n    class=\"sw-icon sw-icon--fill\"\n    :class=\"classes\"\n    :style=\"styles\"\n    :aria-hidden=\"decorative || undefined\"\n    :data-testid=\"'sw-icon__' + name\"\n    v-on=\"listeners\"\n    v-html=\"iconSvgData\"\n></span>\n","/**\n * This file is not linted by ESLint because it cannot be parsed by ESLint because of the dynamic import\n * with dynamic import value.\n */\nimport template from './sw-icon-deprecated.html.twig';\nimport './sw-icon-deprecated.scss';\n\n// Prefetch specific icons to avoid loading them asynchronously to improve performance\nimport '@cicada-ag/meteor-icon-kit/icons/regular/tachometer.svg';\nimport '@cicada-ag/meteor-icon-kit/icons/regular/products.svg';\nimport '@cicada-ag/meteor-icon-kit/icons/regular/shopping-bag.svg';\nimport '@cicada-ag/meteor-icon-kit/icons/regular/users.svg';\nimport '@cicada-ag/meteor-icon-kit/icons/regular/content.svg';\nimport '@cicada-ag/meteor-icon-kit/icons/regular/megaphone.svg';\nimport '@cicada-ag/meteor-icon-kit/icons/regular/plug.svg';\nimport '@cicada-ag/meteor-icon-kit/icons/regular/cog.svg';\nimport '@cicada-ag/meteor-icon-kit/icons/regular/bell.svg';\nimport '@cicada-ag/meteor-icon-kit/icons/regular/question-circle.svg';\nimport '@cicada-ag/meteor-icon-kit/icons/regular/search-s.svg';\nimport '@cicada-ag/meteor-icon-kit/icons/regular/chevron-down-xs.svg';\nimport '@cicada-ag/meteor-icon-kit/icons/regular/chevron-up-xs.svg';\nimport '@cicada-ag/meteor-icon-kit/icons/regular/chevron-circle-left.svg';\n\nconst { Component } = Cicada;\n\n/**\n * @package admin\n *\n * @private\n * @description Renders an icon from the icon library.\n * @status ready\n * @example-type static\n * @component-example\n * <div>\n *     <sw-icon name=\"regular-circle-download\" color=\"#1abc9c\"></sw-icon>\n *     <sw-icon name=\"regular-storefront\" color=\"#3498db\"></sw-icon>\n *     <sw-icon name=\"regular-eye-slash\" color=\"#9b59b6\"></sw-icon>\n *     <sw-icon name=\"regular-fingerprint\" color=\"#f39c12\"></sw-icon>\n *     <sw-icon name=\"regular-tools-alt\" color=\"#d35400\"></sw-icon>\n *     <sw-icon name=\"regular-user\" color=\"#c0392b\"></sw-icon>\n *     <sw-icon name=\"regular-circle\" color=\"#fc427b\"></sw-icon>\n *     <sw-icon name=\"regular-bell\" color=\"#f1c40f\"></sw-icon>\n * </div>\n */\nComponent.register('sw-icon-deprecated', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'feature',\n    ],\n\n    props: {\n        name: {\n            type: String,\n            required: true,\n        },\n        color: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        small: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        large: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        size: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        decorative: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            iconSvgData: '',\n        };\n    },\n\n    computed: {\n        iconName() {\n            return `icons-${this.name}`;\n        },\n\n        classes() {\n            return [\n                `icon--${this.name}`,\n                {\n                    'sw-icon--small': this.small,\n                    'sw-icon--large': this.large,\n                },\n            ];\n        },\n\n        styles() {\n            let size = this.size;\n\n            if (!Number.isNaN(parseFloat(size)) && !Number.isNaN(size - 0)) {\n                size = `${size}px`;\n            }\n\n            return {\n                color: this.color,\n                width: size,\n                height: size,\n            };\n        },\n\n        listeners() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return this.$listeners;\n            }\n\n            return {};\n        },\n    },\n\n    watch: {\n        name: {\n            handler(newName) {\n                if (!newName) {\n                    return;\n                }\n\n                const [\n                    variant,\n                    ...iconName\n                ] = newName.split('-');\n                this.loadIconSvgData(variant, iconName.join('-'), newName);\n            },\n            immediate: true,\n        },\n    },\n\n    beforeMount() {\n        this.iconSvgData = `<svg id=\"meteor-icon-kit__${this.name}\"></svg>`;\n    },\n\n    methods: {\n        /**\n         * Loads the requested icon's SVG data.\n         *\n         * This defaults to loading from the meteor-icon-kit.\n         *\n         * This throws an exception if the import is not found. Catch this in an override to add custom icons;\n         * or override and do custom logic based on the `variant`, `iconName` or `iconFullName`.\n         *\n         * Loosely based on an idea from https://cicadacommunity.slack.com/archives/C04P3QBG8S2/p1683098652206189\n         *\n         * @return Promise for possible override fallback logic\n         */\n        loadIconSvgData(variant, iconName, iconFullName) {\n            if (this.feature.isActive('ADMIN_VITE')) {\n                // eslint-disable-next-line max-len\n                return import(\n                    `./../../../../../node_modules/@cicada-ag/meteor-icon-kit/icons/${variant}/${iconName}.svg?raw`\n                ).then((iconSvgData) => {\n                    if (iconSvgData.default) {\n                        this.iconSvgData = iconSvgData.default;\n                    } else {\n                        // note this only happens if the import exists but does not export a default\n                        console.error(`The SVG file for the icon name ${iconFullName} could not be found and loaded.`);\n                        this.iconSvgData = '';\n                    }\n                });\n            }\n\n            return import(`@cicada-ag/meteor-icon-kit/icons/${variant}/${iconName}.svg`).then((iconSvgData) => {\n                if (iconSvgData.default) {\n                    this.iconSvgData = iconSvgData.default;\n                } else {\n                    // note this only happens if the import exists but does not export a default\n                    console.error(`The SVG file for the icon name ${iconFullName} could not be found and loaded.`);\n                    this.iconSvgData = '';\n                }\n            });\n        },\n    },\n});\n"],"file":"assets/index-DzMXC6XC.js"}