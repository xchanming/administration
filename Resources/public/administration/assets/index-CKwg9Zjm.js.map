{"version":3,"file":"index-CKwg9Zjm.js","sources":["../../../app/administration/src/module/sw-order/view/sw-order-detail-general/sw-order-detail-general.html.twig","../../../app/administration/src/module/sw-order/view/sw-order-detail-general/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_order_detail_general %}\n<div class=\"sw-order-detail-general\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_order_detail_general_info_card %}\n    <sw-card\n        class=\"sw-order-detail-base__general-info\"\n        position-identifier=\"sw-order-detail-general-info\"\n        :title=\"$tc('sw-order.detailBase.cardTitleGeneralInfo')\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_detail_general_info %}\n        <sw-order-general-info\n            ref=\"swOrderGeneralInfo\"\n            :order=\"order\"\n            @save-edits=\"onSaveEdits\"\n        />\n        {% endblock %}\n    </sw-card>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_order_detail_general_line_items_card %}\n    <sw-extension-component-section\n        position-identifier=\"sw-order-detail-base-line-items__before\"\n    />\n\n    <sw-card\n        class=\"sw-order-detail-general__line-item-grid-card\"\n        position-identifier=\"sw-order-detail-general-line-items\"\n        :title=\"$tc('sw-order.detailBase.cardTitleLineItems')\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_detail_general_line_items_card_rows %}\n        <template #grid>\n            <sw-container type=\"row\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_detail_general_line_items_grid %}\n                <sw-order-line-items-grid\n                    ref=\"sw-order-line-item-grid\"\n                    :order=\"order\"\n                    :context=\"versionContext\"\n                    :editable=\"acl.can('order.editor')\"\n                    @item-delete=\"recalculateAndReload\"\n                    @item-edit=\"recalculateAndReload\"\n                    @existing-item-edit=\"saveAndRecalculate\"\n                    @item-cancel=\"recalculateAndReload\"\n                />\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_detail_general_line_items_summary %}\n                <sw-card-section\n                    divider=\"top\"\n                    slim\n                >\n                    <sw-description-list\n                        class=\"sw-order-detail__summary\"\n                        grid=\"1fr 1fr\"\n                    >\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_order_detail_general_line_items_summary_entries %}\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_order_detail_general_line_items_summary_amount %}\n                        <dt>{{ $tc('sw-order.detailBase.summaryLabelAmount') }}</dt>\n                        <dd>{{ currencyFilter(order.positionPrice, currency.isoCode, order.totalRounding.decimals) }}</dd>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_order_detail_general_line_items_summary_shipping_cost %}\n                        <template v-if=\"delivery\">\n                            <dt>{{ $tc('sw-order.detailBase.summaryLabelShippingCosts') }}</dt>\n                            <dd>\n                                <sw-order-saveable-field\n                                    v-tooltip=\"{\n                                        showDelay: 300,\n                                        message: shippingCostsDetail,\n                                        disabled: taxStatus === 'tax-free'\n                                    }\"\n                                    type=\"number\"\n                                    :editable=\"acl.can('order.editor')\"\n                                    :value=\"delivery.shippingCosts.totalPrice\"\n                                    @value-change=\"onShippingChargeEdited\"\n                                    @update:value=\"onShippingChargeUpdated\"\n                                >\n                                    {{ currencyFilter(delivery.shippingCosts.totalPrice, currency.isoCode, order.totalRounding.decimals) }}\n                                </sw-order-saveable-field>\n                            </dd>\n                        </template>\n\n                        <template\n                            v-for=\"(delivery, index) in deliveryDiscounts\"\n                            :key=\"index\"\n                        >\n                            <dt>\n                                {{ $tc('sw-order.detailBase.discountLabelShippingCosts') }}\n                            </dt>\n                            <dd>\n                                {{ currencyFilter(delivery.shippingCosts.totalPrice, currency.isoCode, order.totalRounding.decimals) }}\n                            </dd>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_order_detail_general_line_items_summary_amount_without_tax %}\n                        <template v-if=\"taxStatus !== 'tax-free'\">\n                            <dt><strong>{{ $tc('sw-order.detailBase.summaryLabelAmountWithoutTaxes') }}</strong></dt>\n                            <dd><strong>{{ currencyFilter(order.amountNet, currency.isoCode, order.totalRounding.decimals) }}</strong></dd>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_order_detail_general_line_items_summary_taxes %}\n                        <template v-if=\"taxStatus !== 'tax-free'\">\n                            <template\n                                v-for=\"(calculatedTax, index) in sortedCalculatedTaxes\"\n                                :key=\"index\"\n                            >\n                                <dt>\n                                    {{ $tc('sw-order.detailBase.summaryLabelTaxes', 1, { taxRate: calculatedTax.taxRate }) }}\n                                </dt>\n                                <dd>\n                                    {{ currencyFilter(calculatedTax.tax, currency.isoCode, order.totalRounding.decimals) }}\n                                </dd>\n                            </template>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_order_detail_general_line_items_summary_amount_total %}\n                        <template v-if=\"taxStatus !== 'tax-free'\">\n                            <dt><strong>{{ $tc('sw-order.detailBase.summaryLabelAmountTotal') }}</strong></dt>\n                            <dd><strong>{{ currencyFilter(orderTotal, currency.isoCode, order.totalRounding.decimals) }}</strong></dd>\n                            <template v-if=\"displayRounded\">\n                                <dt><strong>{{ $tc('sw-order.detailBase.summaryLabelAmountTotalRounded') }}</strong></dt>\n                                <dd><strong>{{ currencyFilter(order.price.totalPrice, currency.isoCode, order.totalRounding.decimals) }}</strong></dd>\n                            </template>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_order_detail_general_line_items_summary_amount_free_tax %}\n                        <template v-if=\"taxStatus === 'tax-free'\">\n                            <dt><strong>{{ $tc('sw-order.detailBase.summaryLabelAmount') }}</strong></dt>\n                            <dd><strong>{{ currencyFilter(order.price.totalPrice, currency.isoCode, order.totalRounding.decimals) }}</strong></dd>\n                        </template>\n                        {% endblock %}\n                    {% endblock %}\n                    </sw-description-list>\n                </sw-card-section>\n                {% endblock %}\n            </sw-container>\n        </template>\n        {% endblock %}\n    </sw-card>\n\n    <sw-extension-component-section\n        position-identifier=\"sw-order-detail-base-line-items__after\"\n    />\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-order-detail-general.html.twig';\n\n/**\n * @package checkout\n */\n\nconst { Utils, Mixin } = Cicada;\nconst { format, array } = Utils;\nconst { mapGetters, mapState } = Cicada.Component.getComponentHelper();\nconst { cloneDeep } = Cicada.Utils.object;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: {\n        swOrderDetailOnSaveAndReload: {\n            from: 'swOrderDetailOnSaveAndReload',\n            default: null,\n        },\n        swOrderDetailOnSaveEdits: {\n            from: 'swOrderDetailOnSaveEdits',\n            default: null,\n        },\n        swOrderDetailOnRecalculateAndReload: {\n            from: 'swOrderDetailOnRecalculateAndReload',\n            default: null,\n        },\n        swOrderDetailOnSaveAndRecalculate: {\n            from: 'swOrderDetailOnSaveAndRecalculate',\n            default: null,\n        },\n        acl: {\n            from: 'acl',\n            default: null,\n        },\n    },\n\n    emits: [\n        'save-and-recalculate',\n        'save-edits',\n        'recalculate-and-reload',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        orderId: {\n            type: String,\n            required: true,\n        },\n\n        isSaveSuccessful: {\n            type: Boolean,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            shippingCosts: null,\n        };\n    },\n\n    computed: {\n        ...mapGetters('swOrderDetail', [\n            'isLoading',\n        ]),\n\n        ...mapState('swOrderDetail', [\n            'order',\n            'versionContext',\n        ]),\n\n        delivery() {\n            return this.order.deliveries[0];\n        },\n\n        deliveryDiscounts() {\n            return array.slice(this.order.deliveries, 1) || [];\n        },\n\n        shippingCostsDetail() {\n            const calcTaxes = this.sortByTaxRate(cloneDeep(this.order.shippingCosts.calculatedTaxes));\n            const formattedTaxes = `${calcTaxes\n                .map(\n                    (calcTax) =>\n                        `${this.$tc('sw-order.detailBase.shippingCostsTax', 0, {\n                            taxRate: calcTax.taxRate,\n                            tax: format.currency(calcTax.tax, this.order.currency.isoCode),\n                        })}`,\n                )\n                .join('<br>')}`;\n\n            return `${this.$tc('sw-order.detailBase.tax')}<br>${formattedTaxes}`;\n        },\n\n        sortedCalculatedTaxes() {\n            return this.sortByTaxRate(cloneDeep(this.order.price.calculatedTaxes)).filter((price) => price.tax !== 0);\n        },\n\n        taxStatus() {\n            return this.order.price.taxStatus;\n        },\n\n        displayRounded() {\n            return (\n                this.order.totalRounding.interval !== 0.01 ||\n                this.order.totalRounding.decimals !== this.order.itemRounding.decimals\n            );\n        },\n\n        orderTotal() {\n            if (this.displayRounded) {\n                return this.order.price.rawTotal;\n            }\n\n            return this.order.price.totalPrice;\n        },\n\n        currency() {\n            return this.order.currency;\n        },\n\n        currencyFilter() {\n            return Cicada.Filter.getByName('currency');\n        },\n    },\n\n    methods: {\n        sortByTaxRate(price) {\n            return price.sort((prev, current) => {\n                return prev.taxRate - current.taxRate;\n            });\n        },\n\n        onShippingChargeEdited() {\n            this.delivery.shippingCosts.unitPrice = this.shippingCosts;\n            this.delivery.shippingCosts.totalPrice = this.shippingCosts;\n\n            this.saveAndRecalculate();\n        },\n\n        onShippingChargeUpdated(amount) {\n            this.shippingCosts = amount;\n        },\n\n        saveAndRecalculate() {\n            this.$emit('save-and-recalculate');\n\n            if (this.swOrderDetailOnSaveAndRecalculate) {\n                this.swOrderDetailOnSaveAndRecalculate();\n            }\n        },\n\n        onSaveEdits() {\n            this.$emit('save-edits');\n\n            if (this.swOrderDetailOnSaveEdits) {\n                this.swOrderDetailOnSaveEdits();\n            }\n        },\n\n        recalculateAndReload() {\n            this.$emit('recalculate-and-reload');\n\n            if (this.swOrderDetailOnRecalculateAndReload) {\n                this.swOrderDetailOnRecalculateAndReload();\n            }\n        },\n    },\n};\n"],"names":["template","Utils","Mixin","format","array","mapGetters","mapState","cloneDeep","index","formattedTaxes","calcTax","price","prev","current","amount"],"mappings":"AAAA,MAAeA,EAAA,i8ICMT,CAAE,MAAAC,EAAO,MAAAC,CAAO,EAAG,OACnB,CAAE,OAAAC,EAAQ,MAAAC,CAAO,EAAGH,EACpB,CAAE,WAAAI,EAAY,SAAAC,CAAU,EAAG,OAAO,UAAU,mBAAkB,EAC9D,CAAE,UAAAC,CAAW,EAAG,OAAO,MAAM,OAGpBC,EAAA,CACX,SAAAR,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,6BAA8B,CAC1B,KAAM,+BACN,QAAS,IACZ,EACD,yBAA0B,CACtB,KAAM,2BACN,QAAS,IACZ,EACD,oCAAqC,CACjC,KAAM,sCACN,QAAS,IACZ,EACD,kCAAmC,CAC/B,KAAM,oCACN,QAAS,IACZ,EACD,IAAK,CACD,KAAM,MACN,QAAS,IACZ,CACJ,EAED,MAAO,CACH,uBACA,aACA,wBACH,EAED,OAAQ,CACJE,EAAM,UAAU,cAAc,CACjC,EAED,MAAO,CACH,QAAS,CACL,KAAM,OACN,SAAU,EACb,EAED,iBAAkB,CACd,KAAM,QACN,SAAU,EACb,CACJ,EAED,MAAO,CACH,MAAO,CACH,cAAe,IAC3B,CACK,EAED,SAAU,CACN,GAAGG,EAAW,gBAAiB,CAC3B,WACZ,CAAS,EAED,GAAGC,EAAS,gBAAiB,CACzB,QACA,gBACZ,CAAS,EAED,UAAW,CACP,OAAO,KAAK,MAAM,WAAW,CAAC,CACjC,EAED,mBAAoB,CAChB,OAAOF,EAAM,MAAM,KAAK,MAAM,WAAY,CAAC,GAAK,EACnD,EAED,qBAAsB,CAElB,MAAMK,EAAiB,GADL,KAAK,cAAcF,EAAU,KAAK,MAAM,cAAc,eAAe,CAAC,EAEnF,IACIG,GACG,GAAG,KAAK,IAAI,uCAAwC,EAAG,CACnD,QAASA,EAAQ,QACjB,IAAKP,EAAO,SAASO,EAAQ,IAAK,KAAK,MAAM,SAAS,OAAO,CAChE,CAAA,CAAC,EACT,EACA,KAAK,MAAM,CAAC,GAEjB,MAAO,GAAG,KAAK,IAAI,yBAAyB,CAAC,OAAOD,CAAc,EACrE,EAED,uBAAwB,CACpB,OAAO,KAAK,cAAcF,EAAU,KAAK,MAAM,MAAM,eAAe,CAAC,EAAE,OAAQI,GAAUA,EAAM,MAAQ,CAAC,CAC3G,EAED,WAAY,CACR,OAAO,KAAK,MAAM,MAAM,SAC3B,EAED,gBAAiB,CACb,OACI,KAAK,MAAM,cAAc,WAAa,KACtC,KAAK,MAAM,cAAc,WAAa,KAAK,MAAM,aAAa,QAErE,EAED,YAAa,CACT,OAAI,KAAK,eACE,KAAK,MAAM,MAAM,SAGrB,KAAK,MAAM,MAAM,UAC3B,EAED,UAAW,CACP,OAAO,KAAK,MAAM,QACrB,EAED,gBAAiB,CACb,OAAO,OAAO,OAAO,UAAU,UAAU,CAC5C,CACJ,EAED,QAAS,CACL,cAAcA,EAAO,CACjB,OAAOA,EAAM,KAAK,CAACC,EAAMC,IACdD,EAAK,QAAUC,EAAQ,OACjC,CACJ,EAED,wBAAyB,CACrB,KAAK,SAAS,cAAc,UAAY,KAAK,cAC7C,KAAK,SAAS,cAAc,WAAa,KAAK,cAE9C,KAAK,mBAAkB,CAC1B,EAED,wBAAwBC,EAAQ,CAC5B,KAAK,cAAgBA,CACxB,EAED,oBAAqB,CACjB,KAAK,MAAM,sBAAsB,EAE7B,KAAK,mCACL,KAAK,kCAAiC,CAE7C,EAED,aAAc,CACV,KAAK,MAAM,YAAY,EAEnB,KAAK,0BACL,KAAK,yBAAwB,CAEpC,EAED,sBAAuB,CACnB,KAAK,MAAM,wBAAwB,EAE/B,KAAK,qCACL,KAAK,oCAAmC,CAE/C,CACJ,CACL"}