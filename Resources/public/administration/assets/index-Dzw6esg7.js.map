{"version":3,"file":"index-Dzw6esg7.js","sources":["../../../app/administration/src/module/sw-product/page/sw-product-list/sw-product-list.html.twig","../../../app/administration/src/module/sw-product/page/sw-product-list/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_product_list %}\n<sw-page class=\"sw-product-list\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_list_search_bar %}\n    <template #search-bar>\n        <sw-search-bar\n            initial-search-type=\"product\"\n            :initial-search=\"term\"\n            @search=\"onSearch\"\n        />\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_list_smart_bar_header %}\n    <template #smart-bar-header>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_list_smart_bar_header_title %}\n        <h2>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_list_smart_bar_header_title_text %}\n            {{ $tc('sw-product.list.textProductOverview') }}\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_list_smart_bar_header_amount %}\n            <span\n                v-if=\"!isLoading\"\n                class=\"sw-page__smart-bar-amount\"\n            >\n                ({{ total }})\n            </span>\n            {% endblock %}\n        </h2>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_list_smart_bar_actions %}\n    <template #smart-bar-actions>\n        <sw-button-group\n            v-tooltip.bottom=\"{\n                message: $tc('sw-privileges.tooltip.warning'),\n                disabled: acl.can('product.creator'),\n                showOnDisabledElements: true\n            }\"\n            class=\"sw-product-list__add-button-group\"\n            split-button\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_list_smart_bar_actions_add %}\n            <sw-button\n                v-tooltip=\"{\n                    message: $tc('sw-privileges.tooltip.warning'),\n                    disabled: acl.can('product.creator'),\n                    showOnDisabledElements: true\n                }\"\n                class=\"sw-product-list__add-physical-button\"\n                :router-link=\"{ name: 'sw.product.create', query: { creationStates: ['is-physical'] } }\"\n                variant=\"primary\"\n                :disabled=\"!acl.can('product.creator')\"\n            >\n                {{ $tc('sw-product.list.buttonAddProduct') }}\n            </sw-button>\n            {% endblock %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_list_smart_bar_actions_add_download %}\n            <sw-context-button class=\"sw-product-list__add-other-context-button\">\n                <template #button>\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_list_smart_bar_actions_add_download_button %}\n                    <sw-button\n                        class=\"sw-product-list__button-context-menu\"\n                        square\n                        variant=\"primary\"\n                        :disabled=\"!acl.can('product.editor')\"\n                    >\n                        <sw-icon\n                            name=\"regular-chevron-down-xs\"\n                            size=\"16\"\n                        />\n                    </sw-button>\n                    {% endblock %}\n                </template>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_list_smart_bar_actions_add_download_context_menu_item_downloadable_product %}\n                <sw-context-menu-item\n                    v-tooltip=\"{\n                        message: $tc('sw-privileges.tooltip.warning'),\n                        disabled: acl.can('product.creator'),\n                        showOnDisabledElements: true\n                    }\"\n                    :router-link=\"{ name: 'sw.product.create', query: { creationStates: ['is-download'] } }\"\n                    :disabled=\"!acl.can('product.creator')\"\n                >\n                    {{ $tc('sw-product.list.buttonAddDownloadableProduct') }}\n                </sw-context-menu-item>\n                {% endblock %}\n            </sw-context-button>\n            {% endblock %}\n        </sw-button-group>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_list_language_switch %}\n    <template #language-switch>\n        <sw-language-switch @on-change=\"onChangeLanguage\" />\n    </template>\n    {% endblock %}\n\n    <template #content>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_list_content %}\n        <div class=\"sw-product-list__content\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_list_grid %}\n            <sw-entity-listing\n                v-if=\"entitySearchable\"\n                ref=\"swProductGrid\"\n                class=\"sw-product-list-grid\"\n                :items=\"products\"\n                :columns=\"productColumns\"\n                :repository=\"productRepository\"\n                detail-route=\"sw.product.detail\"\n                :show-selection=\"true\"\n                :is-loading=\"isLoading\"\n                identifier=\"sw-product-list\"\n                :allow-edit=\"acl.can('product.editor')\"\n                :allow-delete=\"acl.can('product.deleter')\"\n                :allow-inline-edit=\"acl.can('product.editor')\"\n                :sort-by=\"currentSortBy\"\n                :sort-direction=\"sortDirection\"\n                :natural-sorting=\"naturalSorting\"\n                :criteria-limit=\"limit\"\n                :disable-data-fetching=\"true\"\n                :allow-bulk-edit=\"acl.can('product.editor')\"\n                @column-sort=\"onColumnSort\"\n                @page-change=\"onPageChange\"\n                @inline-edit-save=\"onInlineEditSave\"\n                @selection-change=\"updateSelection\"\n                @update-records=\"updateTotal\"\n                @bulk-edit-modal-open=\"onBulkEditModalOpen\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_list_grid_columns %}\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_list_grid_columns_name_preview %}\n                <template #preview-name=\"{ item }\">\n                    <sw-media-preview-v2 :source=\"item.cover ? item.cover.media : null\" />\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_list_grid_columns_name %}\n                <template #column-name=\"{ item, isInlineEdit }\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_list_grid_columns_name_inline_edit %}\n                    <sw-text-field\n                        v-if=\"isInlineEdit\"\n                        v-model:value=\"item.name\"\n                        size=\"small\"\n                    />\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_list_grid_columns_name_content %}\n                    <div v-else>\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_product_list_grid_columns_name_content_variant_button %}\n                        <sw-button\n                            v-if=\"productHasVariants(item)\"\n                            v-tooltip=\"{ message: $tc('sw-product.list.variantIndicatorTooltip') }\"\n                            class=\"sw-product-list__variant-indicator\"\n                            size=\"x-small\"\n                            @click=\"openVariantModal(item)\"\n                        >\n                            <sw-icon\n                                name=\"regular-variants\"\n                                size=\"14px\"\n                            />\n                        </sw-button>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_product_list_grid_columns_name_content_link %}\n                        <router-link :to=\"{ name: 'sw.product.detail', params: { id: item.id } }\">\n                            {{ item.translated ? item.translated.name : item.name }}\n                        </router-link>\n                        {% endblock %}\n\n                        <sw-label\n                            v-if=\"productIsDigital(item)\"\n                            class=\"sw-product-list__digital-indicator\"\n                        >\n                            {{ $tc('sw-product.variations.generatedListColumnContentProductState.is-download') }}\n                        </sw-label>\n                    </div>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_list_grid_columns_active %}\n                <template #column-active=\"{ item, isInlineEdit }\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_list_grid_columns_active_inline_edit %}\n                    <template v-if=\"isInlineEdit\">\n                        <sw-checkbox-field\n                            v-model:value=\"item.active\"\n                        />\n                    </template>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_list_grid_columns_active_content %}\n                    <template v-else>\n                        <sw-icon\n                            v-if=\"item.active\"\n                            name=\"regular-checkmark-xs\"\n                            small\n                            class=\"is--active\"\n                        />\n                        <sw-icon\n                            v-else\n                            name=\"regular-times-s\"\n                            small\n                            class=\"is--inactive\"\n                        />\n                    </template>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_list_grid_columns_sales %}\n                <template #column-sales=\"{ item }\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_list_grid_columns_sales_content %}\n                    <template v-if=\"productHasVariants(item)\">\n                        -\n                    </template>\n                    <template v-else>\n                        {{ item.sales }}\n                    </template>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_list_grid_columns_price %}\n                <template\n                    v-for=\"currency in currencies\"\n                    #[`column-price-${currency.isoCode}`]=\"{ item }\"\n                >\n                    {{ currencyFilter(getCurrencyPriceByCurrencyId(currency.id, item.price).gross, currency.isoCode) }}\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_list_grid_columns_stock %}\n                <template #column-stock=\"{ item, isInlineEdit, compact }\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_list_grid_columns_stock_inline_edit %}\n                    <template v-if=\"isInlineEdit\">\n                        <sw-number-field\n                            v-model:value=\"item.stock\"\n                            :size=\"compact ? 'small' : 'default'\"\n                        />\n                    </template>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_list_grid_columns_stock_content %}\n                    <template v-else>\n                        {{ item.stock }}\n                        <sw-color-badge :variant=\"stockColorVariantFilter(item.stock)\" />\n                    </template>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                <template #column-createdAt=\"{ item }\">\n                    {{ dateFilter(item.createdAt) }}\n                </template>\n\n                <template #column-updatedAt=\"{ item }\">\n                    {{ dateFilter(item.updatedAt) }}\n                </template>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_list_grid_columns_actions %}\n                <template #more-actions=\"{ item }\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_list_grid_columns_actions_duplicate %}\n                    <sw-context-menu-item\n                        class=\"sw-product-list-grid__duplicate-action\"\n                        :disabled=\"item.parentId != null || !acl.can('product.creator')\"\n                        @click=\"onDuplicate(item)\"\n                    >\n                        {{ $tc('sw-product.list.buttonDuplicate') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_list_grid_columns_actions_open_variant %}\n                    <sw-context-menu-item\n                        v-if=\"productHasVariants(item)\"\n                        @click=\"openVariantModal(item)\"\n                    >\n                        {{ $tc('sw-product.list.contextMenuShowVariants') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_list_bulk_edit_modal %}\n                <template #bulk-edit-modal=\"{ selection }\">\n                    <sw-bulk-edit-modal\n                        v-if=\"showBulkEditModal\"\n                        class=\"sw-product-bulk-edit-modal\"\n                        :selection=\"selection\"\n                        :bulk-grid-edit-columns=\"productBulkEditColumns\"\n                        @edit-items=\"onBulkEditItems\"\n                        @modal-close=\"showBulkEditModal = false\"\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_product_list_bulk_edit_grid_columns_name %}\n                        <template #column-name=\"{ item }\">\n                            <router-link\n                                :to=\"{ name: 'sw.product.detail', params: { id: item.id } }\"\n                                target=\"_blank\"\n                                rel=\"noreferrer noopener\"\n                            >\n                                {{ item.translated ? item.translated.name : item.name }}\n                            </router-link>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_product_list_bulk_edit_grid_columns_active %}\n                        <template #column-active=\"{ item }\">\n                            <sw-icon\n                                small\n                                :name=\"item.active ? 'regular-checkmark-xs' : 'regular-times-s'\"\n                                :color=\"item.active ? '#37d046' : '#de294c'\"\n                            />\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_product_list_bulk_edit_grid_columns_price %}\n                        <template\n                            v-for=\"currency in currencies\"\n                            #[`column-price-${currency.isoCode}`]=\"{ item }\"\n                        >\n                            {{ currencyFilter(getCurrencyPriceByCurrencyId(currency.id, item.price).gross, currency.isoCode) }}\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_product_list_bulk_edit_grid_columns_stock %}\n                        <template #column-stock=\"{ item }\">\n                            {{ item.stock }}\n                            <sw-color-badge :variant=\"stockColorVariantFilter(item.stock)\" />\n                        </template>\n                        {% endblock %}\n                    </sw-bulk-edit-modal>\n                </template>\n                {% endblock %}\n            </sw-entity-listing>\n\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_list_empty_state %}\n            <template v-if=\"!isLoading && !total\">\n                <sw-empty-state\n                    v-if=\"filterCriteria.length || isValidTerm(term)\"\n                    :title=\"$tc('sw-empty-state.messageNoResultTitle')\"\n                >\n                    <template #icon>\n                        <img\n                            :src=\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\"\n                            :alt=\"$tc('sw-empty-state.messageNoResultTitle')\"\n                        >\n                    </template>\n\n                    <template #default>\n                        {{ $tc('sw-empty-state.messageNoResultSublineBefore') }}\n                        <router-link\n                            class=\"sw-empty-state__description-link\"\n                            :to=\"{ name: 'sw.profile.index.searchPreferences' }\"\n                        >\n                            {{ $tc('sw-empty-state.messageNoResultSublineLink') }}\n                        </router-link>\n                        {{ $tc('sw-empty-state.messageNoResultSublineAfter') }}\n                    </template>\n                </sw-empty-state>\n                <sw-empty-state\n                    v-else\n                    :title=\"$tc('sw-product.list.messageEmpty')\"\n                >\n                    <template #icon>\n                        <img\n                            :src=\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\"\n                            :alt=\"$tc('sw-product.list.messageEmpty')\"\n                        >\n                    </template>\n                </sw-empty-state>\n            </template>\n            {% endblock %}\n\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_list_content_clone_modal %}\n        <sw-product-clone-modal\n            v-if=\"cloning\"\n            :product=\"product\"\n            @clone-finish=\"onDuplicateFinish\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_list_content_variant_modal %}\n        <sw-product-variant-modal\n            v-if=\"showVariantModal\"\n            :product-entity=\"productEntityVariantModal\"\n            @modal-close=\"closeVariantModal\"\n        />\n        {% endblock %}\n    </template>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_list_sidebar %}\n    <template #sidebar>\n        <sw-sidebar>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_list_sidebar_refresh %}\n            <sw-sidebar-item\n                icon=\"regular-undo\"\n                :title=\"$tc('sw-product.list.titleSidebarItemRefresh')\"\n                @click=\"onRefresh\"\n            />\n            {% endblock %}\n\n            <sw-sidebar-filter-panel\n                entity=\"product\"\n                :store-key=\"storeKey\"\n                :active-filter-number=\"activeFilterNumber\"\n                :filters=\"listFilters\"\n                :defaults=\"defaultFilters\"\n                @criteria-changed=\"updateCriteria\"\n            />\n        </sw-sidebar>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n","/*\n * @package inventory\n */\n\nimport { searchRankingPoint } from 'src/app/service/search-ranking.service';\nimport template from './sw-product-list.html.twig';\nimport './sw-product-list.scss';\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\nconst { cloneDeep } = Cicada.Utils.object;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'numberRangeService',\n        'acl',\n        'filterFactory',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('listing'),\n        Mixin.getByName('placeholder'),\n    ],\n\n    data() {\n        return {\n            products: null,\n            currencies: [],\n            sortBy: 'productNumber',\n            sortDirection: 'DESC',\n            naturalSorting: false,\n            isLoading: false,\n            isBulkLoading: false,\n            total: 0,\n            product: null,\n            cloning: false,\n            productEntityVariantModal: false,\n            filterCriteria: [],\n            defaultFilters: [\n                'active-filter',\n                'product-without-images-filter',\n                'release-date-filter',\n                'stock-filter',\n                'price-filter',\n                'manufacturer-filter',\n                'visibilities-filter',\n                'categories-filter',\n                'sales-filter',\n                'tags-filter',\n                'product-states-filter',\n            ],\n            storeKey: 'grid.filter.product',\n            activeFilterNumber: 0,\n            showBulkEditModal: false,\n            searchConfigEntity: 'product',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        productRepository() {\n            return this.repositoryFactory.create('product');\n        },\n\n        productColumns() {\n            return this.getProductColumns();\n        },\n\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n\n        currenciesColumns() {\n            // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n            return this.currencies\n                .sort((a, b) => {\n                    return b.isSystemDefault ? 1 : -1;\n                })\n                .map((item) => {\n                    return {\n                        property: `price-${item.isoCode}`,\n                        dataIndex: `price.${item.id}`,\n                        label: `${item.name}`,\n                        routerLink: 'sw.product.detail',\n                        allowResize: true,\n                        currencyId: item.id,\n                        visible: item.isSystemDefault,\n                        align: 'right',\n                        useCustomSort: true,\n                    };\n                });\n        },\n\n        productCriteria() {\n            const productCriteria = new Criteria(this.page, this.limit);\n\n            productCriteria.setTerm(this.term);\n            productCriteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, this.naturalSorting));\n            productCriteria.addAssociation('cover.media');\n            productCriteria.addAssociation('manufacturer');\n            productCriteria.addAssociation('tax');\n\n            this.filterCriteria.forEach((filter) => {\n                productCriteria.addFilter(filter);\n            });\n\n            return productCriteria;\n        },\n\n        currencyCriteria() {\n            return new Criteria(1, 500);\n        },\n\n        showVariantModal() {\n            return !!this.productEntityVariantModal;\n        },\n\n        listFilterOptions() {\n            return {\n                'active-filter': {\n                    property: 'active',\n                    label: this.$tc('sw-product.filters.activeFilter.label'),\n                    placeholder: this.$tc('sw-product.filters.activeFilter.placeholder'),\n                },\n                'stock-filter': {\n                    property: 'stock',\n                    label: this.$tc('sw-product.filters.stockFilter.label'),\n                    numberType: 'int',\n                    step: 1,\n                    min: 0,\n                    fromPlaceholder: this.$tc('sw-product.filters.fromPlaceholder'),\n                    toPlaceholder: this.$tc('sw-product.filters.toPlaceholder'),\n                },\n                'product-without-images-filter': {\n                    property: 'media',\n                    label: this.$tc('sw-product.filters.imagesFilter.label'),\n                    placeholder: this.$tc('sw-product.filters.imagesFilter.placeholder'),\n                    optionHasCriteria: this.$tc('sw-product.filters.imagesFilter.textHasCriteria'),\n                    optionNoCriteria: this.$tc('sw-product.filters.imagesFilter.textNoCriteria'),\n                },\n                'manufacturer-filter': {\n                    property: 'manufacturer',\n                    label: this.$tc('sw-product.filters.manufacturerFilter.label'),\n                    placeholder: this.$tc('sw-product.filters.manufacturerFilter.placeholder'),\n                },\n                'visibilities-filter': {\n                    property: 'visibilities.salesChannel',\n                    label: this.$tc('sw-product.filters.salesChannelsFilter.label'),\n                    placeholder: this.$tc('sw-product.filters.salesChannelsFilter.placeholder'),\n                },\n                'categories-filter': {\n                    property: 'categories',\n                    label: this.$tc('sw-product.filters.categoriesFilter.label'),\n                    placeholder: this.$tc('sw-product.filters.categoriesFilter.placeholder'),\n                    displayPath: true,\n                },\n                'sales-filter': {\n                    property: 'sales',\n                    label: this.$tc('sw-product.filters.salesFilter.label'),\n                    digits: 20,\n                    min: 0,\n                    fromPlaceholder: this.$tc('sw-product.filters.fromPlaceholder'),\n                    toPlaceholder: this.$tc('sw-product.filters.toPlaceholder'),\n                },\n                'price-filter': {\n                    property: 'price',\n                    label: this.$tc('sw-product.filters.priceFilter.label'),\n                    digits: 20,\n                    min: 0,\n                    fromPlaceholder: this.$tc('sw-product.filters.fromPlaceholder'),\n                    toPlaceholder: this.$tc('sw-product.filters.toPlaceholder'),\n                },\n                'tags-filter': {\n                    property: 'tags',\n                    label: this.$tc('sw-product.filters.tagsFilter.label'),\n                    placeholder: this.$tc('sw-product.filters.tagsFilter.placeholder'),\n                },\n                'product-states-filter': {\n                    property: 'states',\n                    label: this.$tc('sw-product.filters.productStatesFilter.label'),\n                    placeholder: this.$tc('sw-product.filters.productStatesFilter.placeholder'),\n                    type: 'multi-select-filter',\n                    options: [\n                        {\n                            label: this.$tc('sw-product.filters.productStatesFilter.options.physical'),\n                            value: 'is-physical',\n                        },\n                        {\n                            label: this.$tc('sw-product.filters.productStatesFilter.options.digital'),\n                            value: 'is-download',\n                        },\n                    ],\n                },\n                'release-date-filter': {\n                    property: 'releaseDate',\n                    label: this.$tc('sw-product.filters.releaseDateFilter.label'),\n                    dateType: 'datetime-local',\n                    fromFieldLabel: null,\n                    toFieldLabel: null,\n                    showTimeframe: true,\n                },\n            };\n        },\n\n        listFilters() {\n            return this.filterFactory.create('product', this.listFilterOptions);\n        },\n\n        productBulkEditColumns() {\n            return this.productColumns.map((item) => {\n                const { inlineEdit, ...restParams } = item;\n                return restParams;\n            });\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n\n        currencyFilter() {\n            return Cicada.Filter.getByName('currency');\n        },\n\n        dateFilter() {\n            return Cicada.Filter.getByName('date');\n        },\n\n        stockColorVariantFilter() {\n            return Cicada.Filter.getByName('stockColorVariant');\n        },\n    },\n\n    watch: {\n        productCriteria: {\n            handler() {\n                this.getList();\n            },\n            deep: true,\n        },\n    },\n\n    beforeRouteLeave(to, from, next) {\n        const goingToProductDetailPage = to.name === 'sw.product.detail.base';\n\n        if (goingToProductDetailPage && this.showVariantModal) {\n            this.closeVariantModal();\n        }\n\n        this.$nextTick(() => {\n            next();\n        });\n    },\n\n    methods: {\n        async getList() {\n            this.isLoading = true;\n\n            let criteria = await Cicada.Service('filterService').mergeWithStoredFilters(this.storeKey, this.productCriteria);\n\n            criteria = await this.addQueryScores(this.term, criteria);\n\n            // Clone product query to its variant\n            const variantCriteria = cloneDeep(criteria);\n            criteria.addFilter(Criteria.equals('product.parentId', null));\n            variantCriteria.addFilter(\n                Criteria.not('AND', [\n                    Criteria.equals('product.parentId', null),\n                ]),\n            );\n\n            this.activeFilterNumber = criteria.filters.length - 1;\n\n            if (!this.entitySearchable) {\n                this.isLoading = false;\n                this.total = 0;\n\n                return;\n            }\n\n            if (this.freshSearchTerm) {\n                criteria.resetSorting();\n            }\n\n            try {\n                if (this.term) {\n                    const variants = await this.productRepository.search(variantCriteria);\n                    if (variants.length > 0) {\n                        const parentIds = [];\n\n                        variants.forEach((variant) => {\n                            parentIds.push(variant.parentId);\n                        });\n\n                        criteria.addQuery(Criteria.equalsAny('id', parentIds), searchRankingPoint.HIGH_SEARCH_RANKING);\n                    }\n                }\n\n                const result = await Promise.all([\n                    this.productRepository.search(criteria),\n                    this.currencyRepository.search(this.currencyCriteria),\n                ]);\n\n                const products = result[0];\n                const currencies = result[1];\n\n                this.total = products.total;\n                this.products = products;\n\n                this.currencies = currencies;\n                this.isLoading = false;\n\n                this.selection = {};\n            } catch {\n                this.isLoading = false;\n            }\n        },\n\n        onInlineEditSave(promise, product) {\n            const productName = product.name || this.placeholder(product, 'name');\n\n            return promise\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-product.list.messageSaveSuccess', 0, { name: productName }),\n                    });\n                })\n                .catch(() => {\n                    this.getList();\n                    this.createNotificationError({\n                        message: this.$tc('global.notification.notificationSaveErrorMessageRequiredFieldsInvalid'),\n                    });\n                });\n        },\n\n        onInlineEditCancel(product) {\n            product.discardChanges();\n        },\n\n        updateTotal({ total }) {\n            this.total = total;\n        },\n\n        onChangeLanguage(languageId) {\n            Cicada.State.commit('context/setApiLanguageId', languageId);\n            this.getList();\n        },\n\n        updateCriteria(criteria) {\n            this.page = 1;\n\n            this.filterCriteria = criteria;\n        },\n\n        getCurrencyPriceByCurrencyId(currencyId, prices) {\n            const priceForProduct = prices.find((price) => price.currencyId === currencyId);\n\n            if (priceForProduct) {\n                return priceForProduct;\n            }\n\n            return {\n                currencyId: null,\n                gross: null,\n                linked: true,\n                net: null,\n            };\n        },\n\n        getProductColumns() {\n            return [\n                {\n                    property: 'name',\n                    label: this.$tc('sw-product.list.columnName'),\n                    routerLink: 'sw.product.detail',\n                    inlineEdit: 'string',\n                    allowResize: true,\n                    primary: true,\n                },\n                {\n                    property: 'productNumber',\n                    naturalSorting: true,\n                    label: this.$tc('sw-product.list.columnProductNumber'),\n                    align: 'right',\n                    allowResize: true,\n                },\n                {\n                    property: 'manufacturer.name',\n                    label: this.$tc('sw-product.list.columnManufacturer'),\n                    allowResize: true,\n                    visible: false,\n                },\n                {\n                    property: 'active',\n                    label: this.$tc('sw-product.list.columnActive'),\n                    inlineEdit: 'boolean',\n                    allowResize: true,\n                    align: 'center',\n                },\n                {\n                    property: 'sales',\n                    label: this.$tc('sw-product.list.columnSales'),\n                    allowResize: true,\n                    align: 'right',\n                },\n                ...this.currenciesColumns,\n                {\n                    property: 'stock',\n                    label: this.$tc('sw-product.list.columnInStock'),\n                    inlineEdit: 'number',\n                    allowResize: true,\n                    align: 'right',\n                },\n                {\n                    property: 'availableStock',\n                    label: this.$tc('sw-product.list.columnAvailableStock'),\n                    allowResize: true,\n                    align: 'right',\n                },\n                {\n                    property: 'createdAt',\n                    label: this.$tc('sw-product.list.columnCreatedAt'),\n                    allowResize: true,\n                    visible: false,\n                },\n                {\n                    property: 'updatedAt',\n                    label: this.$tc('sw-product.list.columnUpdatedAt'),\n                    allowResize: true,\n                    visible: false,\n                },\n            ];\n        },\n\n        onDuplicate(referenceProduct) {\n            this.product = referenceProduct;\n            this.cloning = true;\n        },\n\n        onDuplicateFinish(duplicate) {\n            this.cloning = false;\n            this.product = null;\n\n            this.$nextTick(() => {\n                this.$router.push({\n                    name: 'sw.product.detail',\n                    params: { id: duplicate.id },\n                });\n            });\n        },\n\n        onColumnSort(column) {\n            this.onSortColumn(column);\n        },\n\n        productHasVariants(productEntity) {\n            const childCount = productEntity.childCount;\n\n            return childCount !== null && childCount > 0;\n        },\n\n        productIsDigital(productEntity) {\n            return productEntity.states && productEntity.states.includes('is-download');\n        },\n\n        openVariantModal(item) {\n            this.productEntityVariantModal = item;\n        },\n\n        closeVariantModal() {\n            this.productEntityVariantModal = null;\n        },\n\n        onBulkEditItems() {\n            let includesDigital = '0';\n            const digital = Object.values(this.selection).filter((product) => product.states.includes('is-download'));\n            if (digital.length > 0) {\n                includesDigital = digital.filter((product) => product.isCloseout).length !== digital.length ? '1' : '2';\n            }\n\n            this.$router.push({\n                name: 'sw.bulk.edit.product',\n                params: {\n                    parentId: 'null',\n                    includesDigital,\n                },\n            });\n        },\n\n        onBulkEditModalOpen() {\n            this.showBulkEditModal = true;\n        },\n\n        onBulkEditModalClose() {\n            this.showBulkEditModal = false;\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","cloneDeep","index","a","b","item","productCriteria","filter","inlineEdit","restParams","to","from","next","criteria","variantCriteria","variants","parentIds","variant","searchRankingPoint","result","products","currencies","promise","product","productName","total","languageId","currencyId","prices","priceForProduct","price","referenceProduct","duplicate","column","productEntity","childCount","includesDigital","digital"],"mappings":"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"}