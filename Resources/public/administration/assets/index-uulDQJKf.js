const e='{% block sw_language_info %} <p v-if="infoText" class="sw-language-info" > {% block sw_language_info_text %} <span class="sw_language-info__info" v-html="$sanitize(infoText)" ></span> <span v-if="infoParent" class="sw-language-info__link-parent" role="link" tabindex="0" @click="onClickParentLanguage" @keydown.enter="onClickParentLanguage" > "{{ infoParent }}". </span> {% endblock %} </p> {% endblock %}',{Component:n}=Cicada,{mapState:t}=Cicada.Component.getComponentHelper(),{warn:i}=Cicada.Utils.debug;n.register("sw-language-info",{template:e,compatConfig:Cicada.compatConfig,inject:["repositoryFactory"],props:{entityDescription:{type:String,required:!1,default:""},isNewEntity:{type:Boolean,required:!1,default:!1},changeLanguageOnParentClick:{type:Boolean,required:!1,default:!0}},data(){return{parentLanguage:{name:""}}},computed:{...t("context",{languageId:a=>a.api.languageId,systemLanguageId:a=>a.api.systemLanguageId,language:a=>a.api.language}),languageRepository(){return this.repositoryFactory.create("language")},infoParent(){return this.parentLanguage.name},infoText(){return this.isNewEntity?this.$tc("sw-language-info.infoTextNewEntity",0,{entityDescription:this.entityDescription}):this.language===null?"":this.language.parentId!==null&&this.language.parentId.length>0?this.$tc("sw-language-info.infoTextChildLanguage",0,{entityDescription:this.entityDescription,language:this.language.name}):this.isDefaultLanguage?"":this.$tc("sw-language-info.infoTextRootLanguage",0,{entityDescription:this.entityDescription,language:this.language.name})},isDefaultLanguage(){return this.languageId===this.systemLanguageId}},watch:{"language.name":{handler(){this.refreshParentLanguage().catch(a=>i(a))}}},methods:{async refreshParentLanguage(){if(this.language.id.length<1||this.isDefaultLanguage){this.parentLanguage={name:""};return}if(this.language.parentId!==null&&this.language.parentId.length>0){this.parentLanguage=await this.languageRepository.get(this.language.parentId,Cicada.Context.api);return}this.parentLanguage=await this.languageRepository.get(this.systemLanguageId,Cicada.Context.api)},onClickParentLanguage(){this.changeLanguageOnParentClick&&(this.isCompatEnabled("INSTANCE_EVENT_EMITTER")?this.$root.$emit("on-change-language-clicked",this.parentLanguage.id):Cicada.Utils.EventBus.emit("on-change-language-clicked",this.parentLanguage.id))}}});
//# sourceMappingURL=index-uulDQJKf.js.map
