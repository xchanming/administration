const n='{% block sw_form_field_renderer %} <component :is="componentName" v-bind="bind" ref="component" v-model:value="currentValue" class="sw-form-field-renderer" :error="error" @update:value="emitUpdate" @update:ids="emitUpdate" @update:entity-collection="emitUpdate" > {% block sw_form_field_renderer_scope_slots %} <template v-for="(slot, slotName) in getScopedSlots()" #[slotName]="slotData" > <slot :name="slotName" v-bind="slotData" > </slot> </template> {% endblock %} {% block sw_form_field_renderer_inner %} <slot> {% block sw_form_field_renderer_inner_slot %}{% endblock %} </slot> {% endblock %} </component> {% endblock %}',{Component:o,Mixin:a}=Cicada,{types:l}=Cicada.Utils;o.register("sw-form-field-renderer",{template:n,inheritAttrs:!1,compatConfig:Cicada.compatConfig,inject:["repositoryFactory","feature"],emits:["update:value"],mixins:[a.getByName("sw-inline-snippet")],props:{type:{type:String,required:!1,default:null},config:{type:Object,required:!1,default:null},value:{required:!0},error:{type:Object,required:!1,default:null}},data(){return{currency:{id:Cicada.Context.app.systemCurrencyId,factor:1},currentComponentName:"",swFieldConfig:{},currentValue:this.value}},computed:{bind(){let e={};return this.isCompatEnabled("INSTANCE_LISTENERS")?e={...this.$attrs}:Object.keys(this.$attrs).forEach(t=>{["onUpdate:value"].includes(t)||(e[t]=this.$attrs[t])}),e={...e,...this.config,...this.swFieldType,...this.translations,...this.optionTranslations},this.componentName==="sw-entity-multi-id-select"&&(e.repository=this.createRepository(this.config.entity)),e},hasConfig(){return!!this.config},componentName(){return this.hasConfig?this.config.componentName==="sw-field"?this.getComponentFromType(this.config.type):this.config.componentName||this.getComponentFromType():this.getComponentFromType()},swFieldType(){return this.type==="price"?{type:"price",allowModal:!0,hideListPrices:!0,currency:this.currency}:this.hasConfig&&this.config.hasOwnProperty("type")?{}:this.type==="int"?{type:"number",numberType:"int"}:this.type==="float"?{type:"number",numberType:"float"}:this.type==="string"||this.type==="text"?{type:"text"}:this.type==="bool"?{type:"switch",bordered:!0}:this.type==="datetime"?{type:"date",dateType:"datetime"}:this.type==="date"?{type:"date",dateType:"date"}:this.type==="time"?{type:"date",dateType:"time"}:{type:this.type}},translations(){return this.getTranslations(this.componentName)},optionTranslations(){if(["sw-single-select","sw-multi-select"].includes(this.componentName)){if(!this.config.hasOwnProperty("options"))return{};const e=[];let t="label";return this.config.hasOwnProperty("labelProperty")&&(t=this.config.labelProperty),this.config.options.forEach(i=>{const r=this.getTranslations("options",i,[t]);r.label||(r.label=i.value);const s={...i,...r};e.push(s)}),{options:e}}return{}}},watch:{currentValue(e){Array.isArray(e)&&Array.isArray(this.value)&&e.length===this.value.length&&e.every((t,i)=>t===this.value[i])||e!==this.value&&this.$emit("update:value",e)},value(){this.currentValue=this.value}},created(){this.createdComponent()},methods:{createdComponent(){this.fetchSystemCurrency(),this.type==="price"&&!Array.isArray(this.currentValue)&&(this.currentValue=[{currencyId:Cicada.Context.app.systemCurrencyId,gross:null,net:null,linked:!0}])},emitUpdate(e){this.$emit("update:value",e)},getTranslations(e,t=this.config,i=["label","placeholder","helpText"]){if(!i)return{};const r={};return i.forEach(s=>{t[s]&&t[s]!==""&&(r[s]=this.getInlineSnippet(t[s]))}),r},getComponentFromType(e=void 0){const t=e??this.type;return{bool:"sw-switch-field",checkbox:"sw-checkbox-field",colorpicker:"sw-colorpicker",compactColorpicker:"sw-compact-colorpicker",date:"sw-datepicker",datetime:"sw-datepicker",email:"sw-email-field",float:"sw-number-field",int:"sw-number-field","multi-entity-id-select":"sw-entity-multi-id-select","multi-select":"sw-multi-select",number:"sw-number-field",password:"sw-password-field",price:"sw-price-field",radio:"sw-radio-field","single-entity-id-select":"sw-entity-single-select","single-select":"sw-single-select",string:"sw-text-field",switch:"sw-switch-field",tagged:"sw-tagged-field",text:"sw-text-field",textarea:"sw-textarea-field",time:"sw-datepicker",url:"sw-url-field"}[t]??"sw-text-field"},createRepository(e){if(l.isUndefined(e))throw new Error("sw-form-field-renderer - sw-entity-multi-id-select component needs entity property");return this.repositoryFactory.create(e)},fetchSystemCurrency(){const e=Cicada.Context.app.systemCurrencyId;this.createRepository("currency").get(e).then(t=>{this.currency=t})},getScopedSlots(){return this.isCompatEnabled("INSTANCE_SCOPED_SLOTS")?{...this.$scopedSlots}:this.$slots}}});
//# sourceMappingURL=index-DjAHe_J6.js.map
