const a=`{% block sw_promotion_v2_detail %} <sw-page class="sw-promotion-v2-detail"> {% block sw_promotion_v2_detail_header %} <template #smart-bar-header> <h2>{{ placeholder(promotion, 'name', $tc('sw-promotion-v2.detail.header.titleEdit')) }}</h2> </template> {% endblock %} {% block sw_promotion_v2_detail_actions %} <template #smart-bar-actions> {% block sw_promotion_v2_detail_actions_abort %} <sw-button v-tooltip.bottom="tooltipCancel" class="sw-promotion-v2-detail__cancel-action" :disabled="promotion !== null && promotion.isLoading || undefined" @click="onCancel" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_promotion_v2_detail_actions_save %} <sw-button-process v-model:processSuccess="isSaveSuccessful" v-tooltip.bottom="tooltipSave" class="sw-promotion-v2-detail__save-action" variant="primary" :is-loading="isLoading" :disabled="isLoading || !acl.can('promotion.editor') || undefined" :process-success="isSaveSuccessful" @update:process-success="saveFinish" @click.prevent="onSave" > {{ $tc('global.default.save') }} </sw-button-process> {% endblock %} </template> {% endblock %} {% block sw_promotion_v2_detail_language_switch %} <template #language-switch> <sw-language-switch :disabled="!promotionId || undefined" @on-change="onChangeLanguage" /> </template> {% endblock %} {% block sw_promotion_v2_detail_content %} <template #content> <sw-card-view> {% block sw_promotion_v2_detail_content_language_info %} <sw-language-info :entity-description="placeholder(promotion, 'name', $tc('sw-promotion-v2.detail.header.titleCreate'))" :is-new-entity="!promotionId" /> {% endblock %} {% block sw_promotion_v2_detail_content_tabs %} <sw-tabs v-if="!isCreateMode" class="sw-promotion-v2-detail-page__tabs" position-identifier="sw-promotion-detail" > {% block sw_promotion_v2_detail_content_tabs_general %} <sw-tabs-item :route="{ name: 'sw.promotion.v2.detail.base', params: { id: $route.params.id } }" :title="$tc('sw-promotion-v2.detail.tabs.tabGeneral')" :has-error="swPromotionV2DetailBaseError" :disabled="!promotionId || undefined" > {{ $tc('sw-promotion-v2.detail.tabs.tabGeneral') }} </sw-tabs-item> {% endblock %} {% block sw_promotion_v2_detail_content_tabs_conditions %} <sw-tabs-item :route="{ name: 'sw.promotion.v2.detail.conditions', params: { id: $route.params.id } }" :title="$tc('sw-promotion-v2.detail.tabs.tabConditions')" :disabled="!promotionId || undefined" > {{ $tc('sw-promotion-v2.detail.tabs.tabConditions') }} </sw-tabs-item> {% endblock %} {% block sw_promotion_v2_detail_content_tabs_discounts %} <sw-tabs-item :route="{ name: 'sw.promotion.v2.detail.discounts', params: { id: $route.params.id } }" :title="$tc('sw-promotion-v2.detail.tabs.tabDiscounts')" :disabled="!promotionId || undefined" > {{ $tc('sw-promotion-v2.detail.tabs.tabDiscounts') }} </sw-tabs-item> {% endblock %} </sw-tabs> {% endblock %} {% block sw_promotion_v2_detail_content_view %} <div v-if="isLoading && !promotion" class="sw-promotion-v2-detail__content-view-skeleton" > <sw-skeleton /> <sw-skeleton /> </div> <template v-else> <router-view v-slot="{ Component }"> <component :is="Component" :promotion="promotion" :is-create-mode="isCreateMode" @clean-up-codes="onCleanUpCodes" @generate-individual-codes-finish="onGenerateIndividualCodesFinish" @delete-individual-codes-finish="onDeleteIndividualCodesFinish" /> </router-view> </template> {% endblock %} {% block sw_promotion_v2_detail_change_code_type_modal %} <sw-modal v-if="!!showCodeTypeChangeModal" class="sw-promotion-v2-detail__change-modal" :title="$tc('sw-promotion-v2.detail.codeChangeModal.title')" @modal-close="onCloseCodeTypeChangeModal" > {{ $tc('sw-promotion-v2.detail.codeChangeModal.text') }} {% block sw_promotion_v2_detail_change_code_type_modal_footer %} <template #modal-footer> {% block sw_promotion_v2_detail_change_code_type_modal_footer_cancel_action %} <sw-button class="sw-promotion-v2-detail__change-modal-cancel-action" size="small" @click="onCloseCodeTypeChangeModal" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_promotion_v2_detail_change_code_type_modal_footer_confirm_action %} <sw-button class="sw-promotion-v2-detail__change-modal-confirm-action" size="small" variant="primary" @click="onConfirmSave" > {{ $tc('global.default.confirm') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} </sw-card-view> </template> {% endblock %} </sw-page> {% endblock %}`,s={"sw.promotion.v2.detail.base":{promotion:["name","validUntil"]}},{Mixin:n}=Cicada,{Criteria:e}=Cicada.Data,{mapPageErrors:r}=Cicada.Component.getComponentHelper(),l={template:a,compatConfig:Cicada.compatConfig,inject:["repositoryFactory","acl"],mixins:["notification","placeholder",n.getByName("discard-detail-page-changes")("promotion")],shortcuts:{"SYSTEMKEY+S":{active(){return this.acl.can("promotion.editor")},method:"onSave"},ESCAPE:"onCancel"},props:{promotionId:{type:String,required:!1,default(){return null}}},data(){return{isLoading:!1,promotion:null,cleanUpIndividualCodes:!1,cleanUpFixedCode:!1,showCodeTypeChangeModal:!1,isSaveSuccessful:!1,saveCallbacks:[]}},metaInfo(){return{title:this.$createTitle(this.identifier)}},computed:{identifier(){return this.placeholder(this.promotion,"name")},promotionRepository(){return this.repositoryFactory.create("promotion")},isCreateMode(){return this.$route.name==="sw.promotion.v2.create.base"},promotionCriteria(){const o=new e(1,1).addAssociation("discounts.promotionDiscountPrices").addAssociation("discounts.discountRules").addAssociation("salesChannels");return o.getAssociation("discounts").addSorting(e.sort("createdAt","ASC")),o.getAssociation("individualCodes").setLimit(25),o},tooltipSave(){return this.acl.can("promotion.editor")?{message:`${this.$device.getSystemKey()} + S`,appearance:"light"}:{message:this.$tc("sw-privileges.tooltip.warning"),showOnDisabledElements:!0}},tooltipCancel(){return{message:"ESC",appearance:"light"}},promotionGroupRepository(){return this.repositoryFactory.create("promotion_setgroup")},...r(s)},watch:{promotionId(){this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){if(Cicada.ExtensionAPI.publishData({id:"sw-promotion-detail__promotion",path:"promotion",scope:this}),this.isLoading=!0,!this.promotionId){Cicada.State.getters["context/isSystemDefaultLanguage"]||Cicada.State.commit("context/resetLanguageToDefault"),this.promotion=this.promotionRepository.create(),this.isLoading=!1;return}this.loadEntityData()},loadEntityData(){return this.promotionId?this.promotionRepository.get(this.promotionId,Cicada.Context.api,this.promotionCriteria).then(o=>{o!==null&&(this.promotion=o,!(!this.promotion||!this.promotion.discounts||this.promotion.length<1)&&(this.promotion.hasOrders=o.orderCount!==null?o.orderCount>0:!1,Cicada.State.commit("swPromotionDetail/setPromotion",this.promotion)))}).finally(()=>{this.isLoading=!1}):Promise.resolve()},onChangeLanguage(){this.loadEntityData()},onSave(){if(!this.promotionId){this.savePromotion();return}if(![this.cleanUpIndividualCodes,this.cleanUpFixedCode].some(o=>o)){this.savePromotion();return}this.showCodeTypeChangeModal=!0},onConfirmSave(){this.onCloseCodeTypeChangeModal(),this.savePromotion()},onCloseCodeTypeChangeModal(){this.showCodeTypeChangeModal=!1},createPromotion(){return this.savePromotion()},async savePromotion(){this.isLoading=!0,this.cleanUpIndividualCodes===!0&&(this.promotion.individualCodes=this.promotion.individualCodes.filter(()=>!1)),this.cleanUpFixedCode===!0&&(this.promotion.code=""),this.promotion.discounts&&this.promotion.discounts.forEach(o=>{o.type==="free"&&Object.assign(o,{type:"percentage",value:100,applierKey:"SELECT"})});try{await this.promotionRepository.save(this.promotion),await this.savePromotionSetGroups(),Cicada.State.commit("swPromotionDetail/setSetGroupIdsDelete",[]),this.isSaveSuccessful=!0,await this.loadEntityData(),this.isCreateMode&&this.$router.push({name:"sw.promotion.v2.detail",params:{id:this.promotion.id}})}catch{this.isLoading=!1,this.createNotificationError({message:this.$tc("global.notification.notificationSaveErrorMessage",0,{entityName:this.promotion.name})})}finally{this.cleanUpCodes(!1,!1)}},savePromotionSetGroups(){const o=Cicada.State.get("swPromotionDetail").setGroupIdsDelete;if(o!==null){const t=o.map(i=>this.promotionGroupRepository.delete(i));return Promise.all(t)}return Promise.resolve()},saveFinish(){this.isSaveSuccessful=!1},onCancel(){this.$router.push({name:"sw.promotion.v2.index"})},onCleanUpCodes(o,t){this.cleanUpCodes(o,t)},cleanUpCodes(o,t){this.cleanUpIndividualCodes=o,this.cleanUpFixedCode=t},onGenerateIndividualCodesFinish(){this.savePromotion()},onDeleteIndividualCodesFinish(){this.savePromotion()}}};export{l as default};
//# sourceMappingURL=index-BbOmiz_c.js.map
