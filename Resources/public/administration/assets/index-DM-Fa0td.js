const r=`{% block sw_text_editor_table_toolbar %} <div class="sw-text-editor-table-toolbar"> {% block sw_text_editor_table_toolbar_buttons %} <div class="sw-text-editor-table-toolbar__buttons"> {% block sw_text_editor_table_toolbar_button_row_before %} <div class="sw-text-editor-table-toolbar__button" role="button" tabindex="0" @mousedown="onAddRow('before')" > <sw-icon name="regular-insert-row-before" size="12" /> </div> {% endblock %} {% block sw_text_editor_table_toolbar_button_row_after %} <div class="sw-text-editor-table-toolbar__button" role="button" tabindex="0" @mousedown="onAddRow('after')" > <sw-icon name="regular-insert-row-after" size="12" /> </div> {% endblock %} {% block sw_text_editor_table_toolbar_button_row_delete %} <div class="sw-text-editor-table-toolbar__button" role="button" tabindex="0" @mousedown="onDeleteRow" > <sw-icon name="regular-delete-row" size="12" /> </div> {% endblock %} {% block sw_text_editor_table_toolbar_button_column_before %} <div class="sw-text-editor-table-toolbar__button" role="button" tabindex="0" @mousedown="onAddColumn('before')" > <sw-icon name="regular-insert-column-before" size="12" /> </div> {% endblock %} {% block sw_text_editor_table_toolbar_button_column_after %} <div class="sw-text-editor-table-toolbar__button" role="button" tabindex="0" @mousedown="onAddColumn('after')" > <sw-icon name="regular-insert-column-after" size="12" /> </div> {% endblock %} {% block sw_text_editor_table_toolbar_button_column_delete %} <div class="sw-text-editor-table-toolbar__button" role="button" tabindex="0" @mousedown="onDeleteColumn" > <sw-icon name="regular-delete-column" size="12" /> </div> {% endblock %} {% block sw_text_editor_table_toolbar_button_table_delete %} <div class="sw-text-editor-table-toolbar__button" role="button" tabindex="0" @mousedown="onDeleteTable" > <sw-icon name="regular-times" size="12" /> </div> {% endblock %} </div> {% endblock %} </div> {% endblock %}`,{Component:a}=Shopware;a.register("sw-text-editor-table-toolbar",{template:r,emits:["table-modify","table-delete"],props:{selection:{required:!1,default:null}},data(){return{range:null,colClassName:"sw-text-editor-table__col",resizeHandle:'<div class="sw-text-editor-table__col-selector" contenteditable="false"></div>'}},methods:{onAddRow(t){const{table:e,index:n}=this.getVariables("tr");if(!e||n===void 0)return;const o=t==="after"?n+1:n,l=o===0;l&&this.removeResizeHandle(e);const s=e.rows[0].cells.length,i=e.insertRow(o);i.className="sw-text-editor-table__row",this.fillRowWithCells(i,s,l),this.$emit("table-modify",e)},fillRowWithCells(t,e,n){let o;for(let l=0;l<e;l+=1)o=t.insertCell(),o.className=this.colClassName,n&&(o.innerHTML=this.resizeHandle)},removeResizeHandle(t){const e=t.querySelectorAll(".sw-text-editor-table__col-selector");Object.values(e).forEach(n=>{n.remove()})},onAddColumn(t){const{table:e,index:n}=this.getVariables("td");if(!e||n===void 0)return;const o=Object.values(e.tBodies),l=e.tHead,s=t==="after"?n+1:n;l&&this.insertNewCellsForColumn(Object.values(l.children),s,!0),o.forEach(i=>{this.insertNewCellsForColumn(Object.values(i.children),s,!l)}),this.$emit("table-modify",e),this.keepSelection()},insertNewCellsForColumn(t,e,n=!1){let o;t.forEach((l,s)=>{o=l.insertCell(e),o.className=this.colClassName,s===0&&n&&(o.innerHTML=this.resizeHandle)})},onDeleteColumn(){const{table:t,index:e}=this.getVariables("td");if(!t||e===void 0)return;const n=Object.values(t.tBodies),o=t.tHead;n&&(o&&this.deleteCells(Object.values(o.children),e),n.forEach(l=>{this.deleteCells(Object.values(l.children),e)}),this.setRangeAfterDelete(t,e,"cell"),this.keepSelection())},setRangeAfterDelete(t,e,n){this.selection.rangeCount>0&&this.selection.removeAllRanges();const o=new Range;let l,s;if(n==="cell"){if(l=t.rows[0],!l)return;s=l.children[e]?l.children[e]:l.children[e-1]}else{if(l=t.rows[e]?t.rows[e]:t.rows[e-1],!l)return;s=l.children[0]}s&&(o.setStart(s,0),o.setEnd(s,0),setTimeout(()=>{this.selection.addRange(o)},250))},onDeleteRow(){const{table:t,index:e}=this.getVariables("tr");!t||e===void 0||(t.deleteRow(e),e===0&&this.addResizeHandle(t),this.setRangeAfterDelete(t,e,"row"),this.keepSelection())},addResizeHandle(t){this.$nextTick(()=>{const e=t.rows[0];if(!e)return;Object.values(e.children).forEach(o=>{o.innerHTML=this.resizeHandle+o.innerHTML})})},deleteCells(t,e){t.forEach(n=>{n.deleteCell(e)})},onDeleteTable(t){this.getNode().closest("table").remove(),this.$emit("table-delete",t)},getVariables(t="td"){const e=this.getNode();if(!e||!e.closest(t))return{};const n={td:"cellIndex",tr:"rowIndex"},o=e.closest("table"),l=e.closest(t)[n[t]];return!o||l===void 0?{}:{index:l,table:o}},getNode(){if(this.setSelectionRange(),this.keepSelection(),!this.selection||!this.selection.anchorNode)return null;let t=this.selection.anchorNode;return t.nodeName==="#text"&&(t=t.parentNode),t},setSelectionRange(){this.selection.rangeCount>0&&(this.range=this.selection.getRangeAt(0).cloneRange())},keepSelection(){this.range&&(this.selection.removeAllRanges(),this.selection.addRange(this.range))}}});
