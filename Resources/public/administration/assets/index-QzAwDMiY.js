const n=`<div class="sw-product-cross-selling-assignment"> {% block sw_product_cross_selling_assignment_container %} <div class="sw-product-cross-selling-assignment__select-container"> {% block sw_product_cross_selling_assignment_select %} <sw-entity-single-select :label="$tc('sw-product.crossselling.inputCrossSellingProductList')" entity="product" value="" :criteria="searchCriteria" :context="searchContext" disable-auto-close :disabled="!allowEdit" show-clearable-button @update:value="onToggleProduct" > <template #result-item="{ item, index }"> <slot name="result-item" v-bind="{ item, index, isSelected }" > <sw-select-result :selected="isSelected(item)" v-bind="{ item, index }" > {% block sw_entity_single_select_base_results_list_result_label %} <span class="sw-select-result__result-item-text"> <sw-product-variant-info :variations="item.variation"> {{ item.translated.name || item.name }} </sw-product-variant-info> </span> {% endblock %} </sw-select-result> </slot> </template> </sw-entity-single-select> {% endblock %} {% block sw_product_cross_selling_assignment_option_grid %} <sw-data-grid v-if="total" :key="isLoadingGrid" :data-source="assignedProducts" :is-loading="isLoadingGrid" :columns="assignedProductColumns" :show-settings="true" :show-selection="false" > <template #actions="{ item }"> <sw-context-menu-item :disabled="!allowEdit" variant="danger" @click="removeItem(item)" > {{ $tc('global.default.delete') }} </sw-context-menu-item> </template> <template #column-product.translated.name="{ item }"> {% block sw_data_grid_columns_render_value %} <span> <sw-product-variant-info :variations="item.product.variation"> {{ item.product.translated.name || item.product.name || variantNames[item.product.id] }} </sw-product-variant-info> </span> {% endblock %} </template> {% block sw_product_cross_selling_assignment_option_grid_column_position %} <template #column-position="{ item }"> <sw-data-grid-column-position ref="columnPosition" v-model:value="assignedProducts" :show-value="true" :item="item" /> </template> {% endblock %} </sw-data-grid> {% endblock %} {% block sw_product_cross_selling_assignment_empty_state %} <sw-empty-state v-if="!total && !isLoadingGrid" class="sw-product-cross-selling-assignment__option-list-empty-state" title="" :absolute="false" :subline="$tc('sw-product.crossselling.assignEmptyStateDescription')" > <template #icon> <img :src="assetFilter('/administration/static/img/empty-states/products-empty-state.svg')" alt="" > </template> </sw-empty-state> {% endblock %} </div> {% endblock %} </div>`,{Context:r}=Shopware,{Criteria:i}=Shopware.Data,d={template:n,inject:["repositoryFactory"],props:{assignedProducts:{type:Array,required:!0},crossSellingId:{type:String,required:!0},allowEdit:{type:Boolean,required:!1,default:!0}},data(){return{isLoadingData:!1,variantNames:{}}},computed:{product(){return Shopware.Store.get("swProductDetail").product},isLoading(){return Shopware.Store.get("swProductDetail").isLoading},isLoadingGrid(){return this.isLoadingData||this.isLoading},assignmentRepository(){return this.repositoryFactory.create(this.assignedProducts.entity,this.assignedProducts.source)},productRepository(){return this.repositoryFactory.create("product")},searchCriteria(){const t=new i(1,25);return t.addFilter(i.not("and",[i.equals("id",this.product.id)])),t.addFilter(i.multi("or",[i.equals("childCount",0),i.not("and",[i.equals("parentId",null)])])),t.addAssociation("options.group"),t},searchContext(){return{...r.api,inheritance:!0}},total(){return!this.assignedProducts||!Array.isArray(this.assignedProducts)?0:this.assignedProducts.length},assignedProductColumns(){return[{property:"product.translated.name",label:this.$tc("sw-product.list.columnName"),primary:!0,allowResize:!0,sortable:!1},{property:"product.productNumber",label:this.$tc("sw-product.list.columnProductNumber"),allowResize:!0,sortable:!1},{property:"position",label:this.$tc("sw-product.crossselling.inputCrossSellingPosition"),allowResize:!0,sortable:!1}]},variantProductIds(){const t=[];return this.assignedProducts.forEach(e=>{!e.product.parentId||e.product.translated.name||e.product.name||t.push(e.product.id)}),t},variantCriteria(){const t=new i(1,25);return t.setIds(this.variantProductIds),t},assetFilter(){return Shopware.Filter.getByName("asset")}},created(){this.variantProductIds.length!==0&&this.productRepository.search(this.variantCriteria,{...r.api,inheritance:!0}).then(t=>{const e={};t.forEach(s=>{e[s.id]=s.translated.name}),this.variantNames=e})},methods:{onToggleProduct(t){if(t===null)return;this.isLoadingData=!0;const e=this.assignedProducts.find(s=>s.productId===t);if(e)this.removeItem(e),this.isLoadingData=!1;else{const s=this.assignmentRepository.create();s.crossSellingId=this.crossSellingId,s.productId=t,s.position=this.assignedProducts.length+1,this.assignedProducts.add(s);const o=new i(1,25);o.addAssociation("options.group"),this.productRepository.get(t,{...r.api,inheritance:!0},o).then(a=>{s.product=a,this.isLoadingData=!1})}},removeItem(t){const e=t.position;this.assignedProducts.remove(t.id),this.assignedProducts.forEach(s=>{s.position<=e||(s.position-=1)})},isSelected(t){return this.assignedProducts.some(e=>e.productId===t.id)}}};export{d as default};
