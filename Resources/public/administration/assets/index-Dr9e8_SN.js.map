{"version":3,"file":"index-Dr9e8_SN.js","sources":["../../../app/administration/src/app/component/base/sw-property-search/sw-property-search.html.twig","../../../app/administration/src/app/component/base/sw-property-search/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_property_search %}\n<div\n    class=\"sw-property-search\"\n    :class=\"swPropertySearchClasses\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_property_search_inner_before %}{% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_property_search_field %}\n    <div class=\"sw-property-search__toolbar\">\n        <slot\n            name=\"toolbar\"\n            :focus=\"onFocusSearch\"\n            :input=\"onSearchOptions\"\n            :search-term=\"searchTerm\"\n        >\n            <div class=\"sw-property-search__search-field-container\">\n                <slot name=\"toolbar-search-field\">\n                    <sw-text-field\n                        ref=\"searchField\"\n                        v-model:value=\"searchTerm\"\n                        name=\"sw-field--searchTerm\"\n                        class=\"sw-property-search__search-field\"\n                        :disabled=\"disabled\"\n                        :placeholder=\"$tc('sw-property-search.placeholderSearch')\"\n                        autocomplete=\"off\"\n                        @focus=\"onFocusSearch\"\n                        @update:value=\"onSearchOptions\"\n                    />\n                </slot>\n            </div>\n\n            <slot name=\"toolbar-items\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_property_toolbar_items %}{% endblock %}\n            </slot>\n        </slot>\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_property_search_tree %}\n    <div\n        v-if=\"displayTree\"\n        class=\"sw-property-search__tree-selection\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_property_search_tree_container %}\n        <sw-container\n            columns=\"50% 50%\"\n            class=\"sw-property-search__tree-selection-container\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_property_search_tree_group_grid %}\n            <sw-grid\n                ref=\"groupGrid\"\n                class=\"sw-property-search__tree-selection__group_grid\"\n                :header=\"false\"\n                :all-selectable=\"false\"\n                :show-selection-checkbox=\"false\"\n                :selectable=\"false\"\n                :items=\"groups\"\n                :is-fullpage=\"false\"\n                table\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_property_search_tree_group_grid_columns %}\n                <template\n                    #columns=\"{ item }\"\n                >\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_property_search_tree_group_grid_columns_name %}\n                    <sw-grid-column\n                        truncate\n                        class=\"group_grid__column-name\"\n                        flex=\"auto\"\n                        data-index=\"name\"\n                        @click=\"selectGroup(item)\"\n                    >\n                        <sw-icon\n                            name=\"regular-folder\"\n                            size=\"16px\"\n                        />\n                        {{ item.translated.name }}\n                    </sw-grid-column>\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_property_search_tree_group_grid_columns_options %}\n                    <sw-grid-column\n                        truncate\n                        align=\"right\"\n                        flex=\"1fr\"\n                        class=\"sw-property-search__tree-selection__column-items-selected\"\n                        data-index=\"assignedOptions\"\n                    >\n                        <span v-if=\"item.optionCount > 0\">{{ $tc('sw-property-search.selected', item.optionCount, { count: item.optionCount }) }}</span>\n                    </sw-grid-column>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                <template #pagination>\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_property_search_tree_group_grid_pagination %}\n                    <sw-pagination\n                        :page=\"groupPage\"\n                        :limit=\"10\"\n                        :total=\"groupTotal\"\n                        :total-visible=\"7\"\n                        :auto-hide=\"false\"\n                        :steps=\"[10]\"\n                        @page-change=\"onGroupPageChange\"\n                    />\n                    {% endblock %}\n                </template>\n            </sw-grid>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_property_search_tree_option_grid %}\n            <sw-grid\n                ref=\"optionGrid\"\n                class=\"sw-property-search__tree-selection__option_grid\"\n                :header=\"false\"\n                :all-selectable=\"false\"\n                :items=\"groupOptions\"\n                :is-fullpage=\"false\"\n                table\n                @sw-grid-select-item=\"onOptionSelect\"\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_property_search_tree_option_grid_columns %}\n                <template\n                    #columns=\"{ item }\"\n                >\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_property_search_tree_option_grid_columns_name %}\n                    <sw-grid-column\n                        class=\"sw-property-search__tree-selection__option_grid--option-value\"\n                        truncate\n                        flex=\"minmax(0, 1fr)\"\n                        data-index=\"name\"\n                        :title=\"item.translated.name\"\n                    >\n                        <!-- eslint-disable-next-line vuejs-accessibility/label-has-for -->\n                        <label :for=\"`sw-field--${item.id}`\">{{ item.translated.name }}</label>\n                    </sw-grid-column>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                <template #pagination>\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_property_search_tree_option_grid_pagination %}\n                    <sw-pagination\n                        :page=\"optionPage\"\n                        :limit=\"10\"\n                        :total=\"optionTotal\"\n                        :total-visible=\"7\"\n                        :steps=\"[10]\"\n                        @page-change=\"onOptionPageChange\"\n                    />\n                    {% endblock %}\n                </template>\n\n            </sw-grid>\n            {% endblock %}\n\n        </sw-container>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_property_search_option_search %}\n    <div\n        v-if=\"displaySearch\"\n        class=\"sw-property-search__search-selection\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_property_search_option_search_grid %}\n        <sw-grid\n            v-if=\"groupOptions.length > 0\"\n            ref=\"optionSearchGrid\"\n            class=\"sw-property-search__search-selection__option_grid\"\n            :items=\"groupOptions\"\n            :header=\"false\"\n            :all-selectable=\"false\"\n            :is-fullpage=\"false\"\n            table\n            @sw-grid-select-item=\"onOptionSelect\"\n        >\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_property_search_option_search_grid_columns %}\n            <template\n                #columns=\"{ item }\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_property_search_option_search_grid_columns_name %}\n                <sw-grid-column\n                    flex=\"300px\"\n                    data-index=\"name\"\n                >\n                    {{ item.group.translated.name }} / {{ item.translated.name }}\n                </sw-grid-column>\n                {% endblock %}\n            </template>\n            {% endblock %}\n\n            <template #pagination>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_property_search_option_search_grid_pagination %}\n                <sw-pagination\n                    :page=\"optionPage\"\n                    :limit=\"10\"\n                    :total=\"optionTotal\"\n                    :total-visible=\"7\"\n                    :steps=\"[10]\"\n                    @page-change=\"onOptionSearchPageChange\"\n                />\n                {% endblock %}\n            </template>\n        </sw-grid>\n        {% endblock %}\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_property_search_empty %}\n        <sw-empty-state\n            v-else\n            :absolute=\"false\"\n            :title=\"$tc('sw-property-search.noPropertiesFound')\"\n            :subline=\"$tc('sw-property-search.noPropertiesFoundDescription')\"\n        >\n            <template #icon>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_property_search_empty_image %}\n                <img\n                    :src=\"assetFilter('/administration/static/img/empty-states/products-empty-state.svg')\"\n                    :alt=\"$tc('sw-property-search.noPropertiesFound')\"\n                >\n                {% endblock %}\n            </template>\n        </sw-empty-state>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_property_search_inner_after %}{% endblock %}\n\n</div>\n{% endblock %}\n","/**\n * @package admin\n */\n\nimport template from './sw-property-search.html.twig';\nimport './sw-property-search.scss';\n\nconst { Component } = Cicada;\nconst { Criteria } = Cicada.Data;\nconst utils = Cicada.Utils;\n\n/**\n * @private\n */\nComponent.register('sw-property-search', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['repositoryFactory'],\n\n    emits: ['option-select'],\n\n    props: {\n        collapsible: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n        overlay: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n        options: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            },\n        },\n        /**\n         * @deprecated tag:v6.7.0 - disabled will be removed. Use `isAddOnly` instead.\n         */\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        isAddOnly: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            groups: [],\n            groupOptions: [],\n            displayTree: false,\n            preventSelection: false,\n            displaySearch: false,\n            currentGroup: null,\n            searchTerm: '',\n            groupPage: 1,\n            optionPage: 1,\n            groupTotal: 1,\n            optionTotal: 1,\n            prevSearchTerm: '',\n        };\n    },\n\n    computed: {\n        swPropertySearchClasses() {\n            return { overlay: this.overlay };\n        },\n\n        propertyGroupRepository() {\n            return this.repositoryFactory.create('property_group');\n        },\n\n        propertyGroupCriteria() {\n            const criteria = new Criteria(this.groupPage, 10);\n            criteria.addSorting(Criteria.sort('name', 'ASC', false));\n            criteria.setTotalCountMode(1);\n\n            return criteria;\n        },\n\n        propertyGroupOptionRepository() {\n            return this.repositoryFactory.create('property_group_option');\n        },\n\n        propertyGroupOptionCriteria() {\n            const criteria = new Criteria(this.optionPage, 10);\n            criteria.addSorting(Criteria.sort('name', 'ASC'));\n\n            if (this.currentGroup) {\n                criteria.addFilter(Criteria.equals('groupId', this.currentGroup.id));\n            }\n\n            if (this.searchTerm.length > 0) {\n                this.searchTerm\n                    .trim()\n                    .split(' ')\n                    .forEach((option) => {\n                        if (option.trim().length === 0) {\n                            return;\n                        }\n\n                        criteria.addQuery(Criteria.contains('name', option.trim()), 1000);\n                        criteria.addQuery(Criteria.contains('group.name', option.trim()), 800);\n                    });\n\n                criteria.addAssociation('group');\n            }\n\n            return criteria;\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        isAddOnly() {\n            this.addOptionCount();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    unmounted() {\n        this.destroyedComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.collapsible) {\n                document.addEventListener('click', this.closeOnClickOutside);\n                document.addEventListener('keyup', this.closeOnClickOutside);\n            } else {\n                this.showTree();\n            }\n\n            // Info: there is no component available with this event so it can be removed safely\n            if (this.isCompatEnabled('INSTANCE_CHILDREN')) {\n                this.$parent.$on('options-load', this.addOptionCount);\n            }\n        },\n\n        destroyedComponent() {\n            if (this.collapsible) {\n                document.removeEventListener('click', this.closeOnClickOutside);\n                document.removeEventListener('keyup', this.closeOnClickOutside);\n            }\n        },\n\n        selectGroup(group) {\n            this.$refs.groupGrid.selectAll(false);\n            this.$refs.groupGrid.selectItem(true, group);\n\n            if (!group) {\n                this.groupOptions = [];\n                return;\n            }\n\n            this.currentGroup = group;\n            this.optionPage = 1;\n            this.loadOptions();\n        },\n\n        onOptionSelect(selection, item, selected) {\n            if (this.preventSelection) {\n                return;\n            }\n\n            this.$emit('option-select', { item, selected });\n            this.addOptionCount();\n        },\n\n        onGroupPageChange(pagination) {\n            this.groupPage = pagination.page;\n            this.loadGroups();\n        },\n\n        onOptionPageChange(pagination) {\n            this.optionPage = pagination.page;\n            this.loadOptions();\n        },\n\n        onOptionSearchPageChange(pagination) {\n            this.optionPage = pagination.page;\n            this.showSearch();\n        },\n\n        onFocusSearch() {\n            if (this.searchTerm.length > 0) {\n                this.showSearch();\n                return;\n            }\n\n            this.showTree();\n        },\n\n        onSearchOptions: utils.debounce(function debouncedSearch(input) {\n            const validInput = input || '';\n\n            if (this.prevSearchTerm !== validInput) {\n                this.prevSearchTerm = validInput;\n                this.searchTerm = validInput;\n                this.optionPage = 1;\n                this.onFocusSearch();\n            }\n        }, 400),\n\n        closeOnClickOutside(event) {\n            if (event.type === 'keyup' && event.key.toLowerCase() !== 'tab') {\n                return;\n            }\n\n            const target = event.target;\n\n            if (target.closest('.sw-property-search') === null) {\n                this.displaySearch = false;\n                this.displayTree = false;\n            }\n        },\n\n        selectOptions(grid) {\n            if (!grid) {\n                return;\n            }\n\n            grid.selectAll(false);\n\n            this.preventSelection = true;\n            this.options.forEach((option) => {\n                grid.selectItem(!option.isDeleted, option);\n            });\n            this.preventSelection = false;\n        },\n\n        showSearch() {\n            this.currentGroup = null;\n\n            this.propertyGroupOptionRepository\n                .search(this.propertyGroupOptionCriteria, Cicada.Context.api)\n                .then((groupOptions) => {\n                    this.groupOptions = groupOptions;\n                    this.optionTotal = groupOptions.total;\n                    this.displaySearch = true;\n                    this.displayTree = false;\n                })\n                .then(() => {\n                    if (this.$refs.optionSearchGrid) {\n                        this.selectOptions(this.$refs.optionSearchGrid);\n                    }\n                })\n                .catch((error) => {\n                    this.createNotificationError({ message: error.message });\n                });\n        },\n\n        showTree() {\n            this.displaySearch = false;\n            this.displayTree = true;\n            this.groupPage = 1;\n            this.optionPage = 1;\n            this.groupOptions = [];\n            this.loadGroups();\n        },\n\n        loadGroups() {\n            this.propertyGroupRepository.search(this.propertyGroupCriteria, Cicada.Context.api).then((groups) => {\n                this.groups = groups;\n                this.groupTotal = groups.total;\n                this.addOptionCount();\n            });\n        },\n\n        loadOptions() {\n            this.propertyGroupOptionRepository\n                .search(this.propertyGroupOptionCriteria, Cicada.Context.api)\n                .then((groupOptions) => {\n                    this.groupOptions = groupOptions;\n                    this.optionTotal = groupOptions.total;\n                    this.selectOptions(this.$refs.optionGrid);\n                });\n        },\n\n        sortOptions(options) {\n            if (options.length > 0 && options[0].group.sortingType === 'alphanumeric') {\n                options.sort((a, b) => a.translated.name.localeCompare(b.translated.name, undefined, { numeric: true }));\n            } else {\n                options.sort((a, b) => a.position - b.position);\n            }\n            const start = (this.optionPage - 1) * 10;\n            const end = start + 10;\n            options = options.slice(start, end);\n            return options;\n        },\n\n        refreshSelection() {\n            if (this.displayTree) {\n                this.selectOptions(this.$refs.optionGrid);\n            } else if (this.displaySearch) {\n                this.selectOptions(this.$refs.optionSearchGrid);\n            }\n        },\n\n        addOptionCount() {\n            this.groups.forEach((group) => {\n                const optionCount = this.options.filter((option) => {\n                    return option.groupId === group.id && !option.isDeleted;\n                });\n\n                if (this.isCompatEnabled('INSTANCE_SET')) {\n                    this.$set(group, 'optionCount', optionCount.length);\n                } else {\n                    group.optionCount = optionCount.length;\n                }\n            });\n        },\n    },\n});\n"],"names":["template","Component","Criteria","utils","criteria","option","group","selection","item","selected","pagination","input","validInput","event","grid","groupOptions","error","groups","options","a","b","start","end","optionCount"],"mappings":"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"}