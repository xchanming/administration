{"version":3,"file":"index-BuBz5eyt.js","sources":["../../../app/administration/src/app/asyncComponent/media/sw-media-modal-delete/sw-media-modal-delete.html.twig","../../../app/administration/src/app/asyncComponent/media/sw-media-modal-delete/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_media_modal_delete %}\n<sw-modal\n    variant=\"small\"\n    class=\"sw-media-modal-delete\"\n    :title=\"snippets.modalTitle\"\n    @modal-close=\"closeDeleteModal($event)\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_modal_body %}\n    <div v-if=\"mediaQuickInfo\">\n        <p>{{ $tc('global.sw-media-modal-delete.mediaQuickInfoMessage') }}</p>\n        <sw-media-quickinfo-usage\n            :item=\"mediaQuickInfo\"\n            router-link-target=\"_blank\"\n        />\n    </div>\n    <div v-if=\"mediaInUsages && mediaInUsages.length > 0\">\n        <p>{{ $tc('global.sw-media-modal-delete.mediaInUsagesMessage') }}</p>\n        <sw-media-media-item\n            v-for=\"mediaInUsage in mediaInUsages\"\n            :key=\"`sw-media-modal-delete-${mediaInUsage.id}`\"\n            class=\"sw-media-modal-delete__media-list-item\"\n            :item=\"mediaInUsage\"\n            :is-list=\"true\"\n            :editable=\"false\"\n            :selected=\"false\"\n            :show-selection-indicator=\"false\"\n            :show-context-menu-button=\"false\"\n        />\n    </div>\n    <p v-html=\"$sanitize(snippets.deleteMessage)\"></p>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_modal_footer %}\n    <template #modal-footer>\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_modal_delete_cancel_button %}\n        <sw-button\n            size=\"small\"\n            @click=\"closeDeleteModal($event)\"\n        >\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_modal_delete_confirm_button %}\n        <sw-button\n            class=\"sw-media-modal-delete__confirm\"\n            size=\"small\"\n            variant=\"danger\"\n            @click=\"deleteSelection($event)\"\n        >\n            {{ $tc('global.default.delete') }}\n        </sw-button>\n        {% endblock %}\n\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n","import template from './sw-media-modal-delete.html.twig';\nimport './sw-media-modal-delete.scss';\n\nconst { Context, Mixin, Filter } = Cicada;\n\n/**\n * @status ready\n * @description The <u>sw-media-modal-delete</u> component is used to validate the delete action.\n * @package content\n * @example-type code-only\n * @component-example\n * <sw-media-modal-delete :itemsToDelete=\"[items]\">\n * </sw-media-modal-delete>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['repositoryFactory'],\n\n    emits: [\n        'media-delete-modal-close',\n        'media-delete-modal-items-delete',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        itemsToDelete: {\n            required: true,\n            type: Array,\n            validator(value) {\n                return value.length !== 0;\n            },\n        },\n    },\n\n    data() {\n        return {\n            mediaItems: [],\n            folders: [],\n            notificationId: null,\n        };\n    },\n\n    computed: {\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n        mediaFolderRepository() {\n            return this.repositoryFactory.create('media_folder');\n        },\n        mediaNameFilter() {\n            return Filter.getByName('mediaName');\n        },\n\n        snippets() {\n            if (this.mediaItems.length > 0 && this.folders.length > 0) {\n                return {\n                    successOverall: 'global.sw-media-modal-delete.notification.successOverall.message.mediaAndFolder',\n                    errorOverall: this.$tc('global.sw-media-modal-delete.notification.errorOverall.message.mediaAndFolder'),\n                    modalTitle: this.$tc('global.default.warning'),\n                    deleteMessage: this.$tc(\n                        'global.sw-media-modal-delete.deleteMessage.mediaAndFolder',\n                        this.itemsToDelete.length,\n                        {\n                            mediaCount: this.mediaItems.length,\n                            folderCount: this.folders.length,\n                        },\n                    ),\n                };\n            }\n\n            if (this.mediaItems.length > 0) {\n                return {\n                    successOverall: 'global.sw-media-modal-delete.notification.successOverall.message.media',\n                    errorOverall: this.$tc('global.sw-media-modal-delete.notification.errorOverall.message.media'),\n                    modalTitle: this.$tc('global.default.warning'),\n                    deleteMessage: this.$tc('global.sw-media-modal-delete.deleteMessage.media', this.mediaItems.length, {\n                        name: this.mediaNameFilter(this.mediaItems[0]),\n                        count: this.mediaItems.length,\n                    }),\n                };\n            }\n\n            return {\n                successOverall: 'global.sw-media-modal-delete.notification.successOverall.message.folder',\n                errorOverall: this.$tc('global.sw-media-modal-delete.notification.errorOverall.message.folder'),\n                modalTitle: this.$tc('global.default.warning'),\n                deleteMessage: this.$tc('global.sw-media-modal-delete.deleteMessage.folder', this.folders.length, {\n                    name: this.folders[0].name,\n                    count: this.folders.length,\n                }),\n            };\n        },\n\n        mediaQuickInfo() {\n            const usedMediaItem = this.mediaItems.length === 1 && this._checkInUsage(this.mediaItems[0]);\n            return usedMediaItem ? this.mediaItems[0] : null;\n        },\n\n        mediaInUsages() {\n            if (this.mediaItems.length <= 1) return [];\n\n            return this.mediaItems.filter((mediaItem) => this._checkInUsage(mediaItem));\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.mediaItems = this.itemsToDelete.filter((item) => {\n                return item.getEntityName() === 'media';\n            });\n\n            this.folders = this.itemsToDelete.filter((item) => {\n                return item.getEntityName() === 'media_folder';\n            });\n        },\n\n        closeDeleteModal(originalDomEvent) {\n            this.$emit('media-delete-modal-close', { originalDomEvent });\n        },\n\n        getEntityRepository(entityName) {\n            if (entityName === 'media') {\n                return this.mediaRepository;\n            }\n\n            if (entityName === 'media_folder') {\n                return this.mediaFolderRepository;\n            }\n\n            return null;\n        },\n\n        _deleteSelection(item) {\n            const entityName = item.getEntityName();\n            const repository = this.getEntityRepository(entityName);\n\n            item.isLoading = true;\n\n            return repository\n                .delete(item.id, Context.api)\n                .then(() => {\n                    return true;\n                })\n                .catch(() => {\n                    const isMedia = item.getEntityName() === 'media';\n                    const errorSnippet = 'global.sw-media-modal-delete.notification.errorSingle.message';\n\n                    const message = isMedia\n                        ? this.$tc(`${errorSnippet}.media`, 1, {\n                              name: this.mediaNameFilter(item),\n                          })\n                        : this.$tc(`${errorSnippet}.folder`, 1, {\n                              name: item.name,\n                          });\n\n                    this.createNotificationError({\n                        message,\n                    });\n\n                    return false;\n                })\n                .finally(() => {\n                    item.isLoading = false;\n                });\n        },\n\n        async deleteSelection() {\n            const deleteSelections = this.itemsToDelete.map((item) => {\n                return this._deleteSelection(item).catch(() => false);\n            });\n\n            const deletions = await Promise.all(deleteSelections);\n\n            const amounts = deletions.reduce(\n                (acc, isSuccess) => {\n                    acc.success = isSuccess ? (acc.success += 1) : acc.success;\n                    acc.failure = isSuccess ? acc.failure : (acc.failure += 1);\n\n                    return acc;\n                },\n                { success: 0, failure: 0 },\n            );\n\n            if (amounts.success > 0) {\n                this.updateSuccessNotification(amounts.success, amounts.failure, deletions.length);\n            }\n\n            this.$emit('media-delete-modal-items-delete', {\n                mediaIds: this.mediaItems.map((media) => {\n                    return media.id;\n                }),\n                folderIds: this.folders.map((folder) => {\n                    return folder.id;\n                }),\n            });\n        },\n\n        async updateSuccessNotification(successAmount, failureAmount, totalAmount) {\n            const notification = {\n                message: this.$tc(this.snippets.successOverall, successAmount, {\n                    count: successAmount,\n                    total: totalAmount,\n                }),\n                growl: successAmount + failureAmount === totalAmount,\n            };\n\n            if (this.notificationId !== null) {\n                await Cicada.State.dispatch('notification/updateNotification', {\n                    uuid: this.notificationId,\n                    ...notification,\n                });\n\n                if (successAmount + failureAmount === totalAmount) {\n                    this.notificationId = null;\n                }\n\n                return;\n            }\n\n            const newNotificationId = await Cicada.State.dispatch('notification/createNotification', {\n                variant: 'success',\n                ...notification,\n            });\n\n            if (successAmount + failureAmount < totalAmount) {\n                this.notificationId = newNotificationId;\n            }\n        },\n\n        _checkInUsage(mediaItem) {\n            if (mediaItem.avatarUsers?.[0]) {\n                return true;\n            }\n\n            const mediaAssociations = [\n                'categories',\n                'productMedia',\n                'productManufacturers',\n                'mailTemplateMedia',\n                'paymentMethods',\n                'shippingMethods',\n                'cmsBlocks',\n                'cmsSections',\n                'cmsPages',\n            ];\n\n            return mediaAssociations.some((association) => {\n                return mediaItem[association].length > 0;\n            });\n        },\n    },\n};\n"],"names":["template","Context","Mixin","Filter","index","value","mediaItem","item","originalDomEvent","entityName","repository","isMedia","errorSnippet","message","deleteSelections","deletions","amounts","acc","isSuccess","media","folder","successAmount","failureAmount","totalAmount","notification","newNotificationId","_a","association"],"mappings":"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"}