{"version":3,"file":"index-DSt7d9y_.js","sources":["../../../app/administration/src/module/sw-settings-search/component/sw-settings-search-searchable-content-customfields/sw-settings-search-searchable-content-customfields.html.twig","../../../app/administration/src/module/sw-settings-search/component/sw-settings-search-searchable-content-customfields/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_search_searchable_content_customfields %}\n<div class=\"sw-settings-search__searchable-content-customfields\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_search_searchable_content_customfields_empty_state %}\n    <sw-empty-state\n        v-if=\"isEmpty\"\n        :title=\"$tc('sw-settings-search.generalTab.textEmptyStateSearchableContent')\"\n        :show-description=\"false\"\n        :has-action-slot=\"true\"\n        :absolute=\"false\"\n    >\n        <template #icon>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_search_searchable_content_customfields_state_image %}\n            <img\n                :src=\"assetFilter('administration/static/img/empty-states/settings-empty-state.svg')\"\n                :alt=\"$tc('sw-settings-search.generalTab.textEmptyStateSearchableContent')\"\n            >\n            {% endblock %}\n        </template>\n\n        <template #actions>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_search_searchable_content_customfields_empty_state_action %}\n            <sw-button\n                variant=\"ghost\"\n                size=\"small\"\n                :disabled=\"!acl.can('product_search_config.creator')\"\n                @click=\"onAddField\"\n            >\n                {{ $tc('sw-settings-search.generalTab.buttonAddContent') }}\n            </sw-button>\n            {% endblock %}\n        </template>\n    </sw-empty-state>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_search_searchable_content_customfields_grid %}\n    <sw-entity-listing\n        v-if=\"!isEmpty\"\n        ref=\"customGrid\"\n        class=\"sw-settings-search__searchable-content-list\"\n        :columns=\"columns\"\n        :repository=\"repository\"\n        :allow-column-edit=\"false\"\n        :full-page=\"false\"\n        :show-settings=\"false\"\n        :show-selection=\"false\"\n        :is-loading=\"isLoading\"\n        :items=\"searchConfigs\"\n        :allow-inline-edit=\"acl.can('product_search_config.editor')\"\n        :allow-edit=\"acl.can('product_search_config.editor')\"\n        :allow-delete=\"acl.can('product_search_config.deleter')\"\n        @inline-edit-save=\"onInlineEditSave\"\n        @inline-edit-cancel=\"onInlineEditCancel\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_searchable_content_customfields_field %}\n        <template #column-field=\"{ item, isInlineEdit }\">\n            <template v-if=\"item._isNew && isInlineEdit\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_search_searchable_content_customfields_field_editor %}\n                <sw-entity-single-select\n                    v-model:value=\"currentCustomFieldId\"\n                    class=\"sw-settings-search-custom-field-select\"\n                    entity=\"custom_field\"\n                    :criteria=\"customFieldFilteredCriteria\"\n                    show-clearable-button\n                    @update:value=\"(id, customfield) => onSelectCustomField(customfield)\"\n                >\n\n                    <template #selection-label-property=\"{ item }\">\n                        {{ showCustomFieldWithSet(item) }}\n                    </template>\n\n                    <template #result-label-property=\"{ item }\">\n                        {{ showCustomFieldWithSet(item) }}\n                    </template>\n\n                </sw-entity-single-select>\n                {% endblock %}\n            </template>\n\n            <template v-else>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_search_searchable_content_customfields_field_label %}\n                {{ getMatchingCustomFields(item.field) }}\n                {% endblock %}\n            </template>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_searchable_content_customfields_ranking %}\n        <template #column-ranking=\"{ item, isInlineEdit }\">\n            <template v-if=\"isInlineEdit\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_search_searchable_content_customfields_ranking_editor %}\n                <sw-number-field\n                    v-model:value=\"item.ranking\"\n                    number-type=\"int\"\n                    size=\"small\"\n                />\n                {% endblock %}\n            </template>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_searchable_content_customfields_searchable %}\n        <template #column-searchable=\"{ item, isInlineEdit }\">\n            <template v-if=\"isInlineEdit\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_search_searchable_content_customfields_searchable_editor %}\n                <sw-checkbox-field\n                    v-model:value=\"item.searchable\"\n                />\n                {% endblock %}\n            </template>\n\n            <template v-else>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_search_searchable_content_customfields_searchable_label %}\n                <sw-icon\n                    v-if=\"item.searchable\"\n                    class=\"is--active\"\n                    name=\"regular-checkmark-xs\"\n                    small\n                />\n                <sw-icon\n                    v-else\n                    class=\"is--inactive\"\n                    name=\"regular-times-s\"\n                    small\n                />\n                {% endblock %}\n            </template>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_searchable_content_customfields_tokenize %}\n        <template #column-tokenize=\"{ item, isInlineEdit }\">\n            <template v-if=\"isInlineEdit\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_search_searchable_content_customfields_tokenize_editor %}\n                <sw-checkbox-field\n                    v-model:value=\"item.tokenize\"\n                />\n                {% endblock %}\n            </template>\n\n            <template v-else>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_search_searchable_content_customfields_tokenize_label %}\n                <sw-icon\n                    v-if=\"item.tokenize\"\n                    class=\"is--active\"\n                    name=\"regular-checkmark-xs\"\n                    small\n                />\n                <sw-icon\n                    v-else\n                    class=\"is--inactive\"\n                    name=\"regular-times-s\"\n                    small\n                />\n                {% endblock %}\n            </template>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_searchable_content_customfields_columns_actions %}\n        <template #actions=\"{ item }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_search_searchable_content_customfields_columns_actions_edit %}\n            <sw-context-menu-item\n                class=\"sw-settings-search__searchable-content-list-action sw-settings-search__searchable-content-list-reset\"\n                :disabled=\"!acl.can('product_search_config.editor')\"\n                @click=\"onResetRanking(item)\"\n            >\n                {{ $tc('sw-settings-search.generalTab.list.textResetRanking') }}\n            </sw-context-menu-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_search_searchable_content_customfields_columns_actions_delete %}\n            <sw-context-menu-item\n                class=\"sw-settings-search__searchable-content-list-action sw-settings-search__searchable-content-list-remove\"\n                :disabled=\"!acl.can('product_search_config.deleter')\"\n                @click=\"onRemove(item)\"\n            >\n                {{ $tc('sw-settings-search.generalTab.list.textRemove') }}\n            </sw-context-menu-item>\n            {% endblock %}\n        </template>\n        {% endblock %}\n    </sw-entity-listing>\n    {% endblock %}\n</div>\n{% endblock %}\n","/**\n * @package buyers-experience\n */\nimport template from './sw-settings-search-searchable-content-customfields.html.twig';\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    emits: [\n        'config-add',\n        'data-load',\n        'config-save',\n        'config-delete',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('sw-inline-snippet'),\n    ],\n\n    props: {\n        isEmpty: {\n            type: Boolean,\n            required: true,\n        },\n\n        columns: {\n            type: Array,\n            required: true,\n        },\n\n        repository: {\n            type: Object,\n            required: true,\n        },\n\n        searchConfigs: {\n            type: Array,\n            required: false,\n            default() {\n                return null;\n            },\n        },\n\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            customFields: [],\n            currentCustomFieldId: null,\n            addedCustomFieldIds: [],\n        };\n    },\n\n    computed: {\n        customFieldRepository() {\n            return this.repositoryFactory.create('custom_field');\n        },\n\n        customFieldFilteredCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addAssociation('customFieldSet');\n\n            if (!this.searchConfigs) {\n                return criteria;\n            }\n\n            this.searchConfigs.forEach((item) => {\n                if (item?.customFieldId) {\n                    this.addedCustomFieldIds.push(item.customFieldId);\n                }\n            });\n\n            if (this.addedCustomFieldIds.length === 0) {\n                return criteria;\n            }\n\n            criteria.addFilter(\n                Criteria.not('AND', [\n                    Criteria.equalsAny('id', this.addedCustomFieldIds),\n                ]),\n            );\n\n            return criteria;\n        },\n\n        customFieldCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addAssociation('customFieldSet');\n\n            return criteria;\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        searchConfigs(newData) {\n            if (newData[0] && newData[0]._isNew && this.$refs.customGrid) {\n                this.$refs.customGrid.enableInlineEdit();\n                this.$refs.customGrid.onDbClickCell(this.$refs.customGrid.records[0]);\n            }\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.customFieldRepository\n                .search(this.customFieldCriteria)\n                .then((items) => {\n                    this.customFields = items;\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-search.notification.loadError'),\n                    });\n                });\n        },\n\n        showCustomFieldWithSet(field) {\n            let setName = '';\n            if (field?.customFieldSet) {\n                setName = this.getInlineSnippet(field.customFieldSet.config.label) || field.customFieldSet.name;\n            }\n\n            const itemName = this.getInlineSnippet(field.config.label) || field.name;\n            return `${setName} - ${itemName}`;\n        },\n\n        getMatchingCustomFields(field) {\n            if (!field) {\n                return '';\n            }\n\n            const fieldName = field.replace('customFields.', '');\n            const fieldItem = this.customFields.find((item) => item.name === fieldName);\n\n            if (fieldItem) {\n                return this.showCustomFieldWithSet(fieldItem);\n            }\n            return fieldName;\n        },\n\n        onSelectCustomField(currentField) {\n            const currentCustomField = this.searchConfigs.find((configItem) => configItem._isNew);\n\n            currentCustomField.field = `customFields.${currentField.name}`;\n            currentCustomField.customFieldId = this.currentCustomFieldId;\n        },\n\n        onAddField() {\n            this.$emit('config-add');\n        },\n\n        onInlineEditSave(promise) {\n            promise\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-settings-search.notification.saveSuccess'),\n                    });\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-search.notification.saveError'),\n                    });\n                })\n                .finally(() => {\n                    this.currentCustomFieldId = null;\n                    this.$emit('data-load');\n                });\n        },\n\n        onInlineEditCancel() {\n            this.currentCustomFieldId = null;\n            this.$emit('data-load');\n        },\n\n        onResetRanking(currentField) {\n            if (!currentField.field) {\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-search.notification.saveError'),\n                });\n\n                this.$emit('data-load');\n                return;\n            }\n\n            const currentItem = this.searchConfigs.find((item) => item.field === currentField.field);\n            if (!currentItem) {\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-search.notification.saveError'),\n                });\n\n                return;\n            }\n\n            currentItem.ranking = 0;\n            this.$emit('config-save');\n        },\n\n        onRemove(currentField) {\n            if (!currentField.field) {\n                this.$emit('data-load');\n                return;\n            }\n\n            this.$emit('config-delete', currentField.id);\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","index","criteria","item","newData","items","field","setName","itemName","fieldName","fieldItem","currentField","currentCustomField","configItem","promise","currentItem"],"mappings":"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"}