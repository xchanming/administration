class r{constructor(n,s){this.title=n,this.message=s}}const o={FRAMEWORK__PLUGIN_NO_PLUGIN_FOUND_IN_ZIP:new r("global.default.error","sw-extension.errors.messageUploadFailureNoPluginFoundInZipFile"),FRAMEWORK__PLUGIN_NOT_A_ZIP_FILE:new r("global.default.error","sw-extension.errors.messageUploadFailureNotAZipFile"),FRAMEWORK__PLUGIN_EXTRACTION_FAILED:new r("global.default.error","sw-extension.errors.messageUploadFailureUnzipFailed"),FRAMEWORK__STORE_INVALID_CREDENTIALS:new r("global.default.error","sw-extension.errors.messageLoginDataInvalid"),FRAMEWORK__STORE_LICENSE_DOMAIN_IS_MISSING:new r("global.default.error","sw-extension.errors.messageStoreLicenseDomainMissing"),FRAMEWORK__STORE_NOT_AVAILABLE:new r("global.default.error","sw-extension.errors.messageStoreNotAvailable"),FRAMEWORK__PLUGIN_BASE_CLASS_NOT_FOUND:new r("global.default.error","sw-extension.errors.messagePluginBaseClassNotFound"),FRAMEWORK__PLUGIN_REQUIREMENT_MISMATCH:new r("global.default.error","sw-extension.errors.messagePluginRequirementMismatch")};function t(e){return e.code==="FRAMEWORK__STORE_ERROR"?a(e):typeof o[e.code]<"u"?{title:o[e.code].title,message:o[e.code].message,details:e.detail}:{title:"global.default.error",message:"sw-extension.errors.messageGenericFailure",details:e.detail}}function a({title:e,detail:n,meta:s}){return s&&typeof s.documentationLink=="string"?{title:e,message:n,details:null,parameters:{documentationLink:s.documentationLink}}:{title:e,message:n,details:null}}function i(e){return e.map(t)}const l={mapErrors:i};export{l as e};
