{"version":3,"file":"index-DMk1Q_kj.js","sources":["../../../app/administration/src/module/sw-settings-search/component/sw-settings-search-searchable-content-general/sw-settings-search-searchable-content-general.html.twig","../../../app/administration/src/module/sw-settings-search/component/sw-settings-search-searchable-content-general/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_search_searchable_content_general %}\n<div class=\"sw-settings-search__searchable-content-general\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_search_searchable_content_general_empty_state %}\n    <sw-empty-state\n        v-if=\"isEmpty\"\n        :title=\"$tc('sw-settings-search.generalTab.textEmptyStateSearchableContent')\"\n        :show-description=\"false\"\n        :has-action-slot=\"true\"\n        :absolute=\"false\"\n    >\n        <template #icon>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_search_searchable_content_general_state_image %}\n            <img\n                :src=\"assetFilter('administration/static/img/empty-states/settings-empty-state.svg')\"\n                :alt=\"$tc('sw-settings-search.generalTab.textEmptyStateSearchableContent')\"\n            >\n            {% endblock %}\n        </template>\n    </sw-empty-state>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_search_searchable_content_general_grid %}\n    <sw-entity-listing\n        v-if=\"!isEmpty\"\n        ref=\"swSettingsSearchableContentGrid\"\n        class=\"sw-settings-search__searchable-content-list\"\n        :columns=\"columns\"\n        :repository=\"repository\"\n        :allow-column-edit=\"false\"\n        :full-page=\"false\"\n        :show-settings=\"false\"\n        :show-selection=\"false\"\n        :is-loading=\"isLoading\"\n        :items=\"searchConfigs\"\n        :skeleton-item-amount=\"searchConfigs && searchConfigs.length\"\n        :allow-inline-edit=\"acl.can('product_search_config.editor')\"\n        @inline-edit-save=\"onInlineEditSave\"\n        @inline-edit-cancel=\"onInlineEditCancel\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_searchable_content_general_field %}\n        <template #column-field=\"{ item, isInlineEdit }\">\n            <template v-if=\"item._isNew && isInlineEdit\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_search_searchable_content_general_field_editor %}\n                <sw-single-select\n                    v-model:value=\"item.field\"\n                    class=\"sw-settings-search-field-select\"\n                    size=\"small\"\n                    show-clearable-button\n                    :options=\"fieldConfigs\"\n                    @update:value=\"onSelectField(item)\"\n                />\n                {% endblock %}\n            </template>\n            <template v-else>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_search_searchable_content_general_field_label %}\n                {{ getMatchingFields(item.field) }}\n                {% endblock %}\n            </template>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_searchable_content_general_ranking %}\n        <template #column-ranking=\"{ item, isInlineEdit }\">\n            <template v-if=\"isInlineEdit\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_search_searchable_content_general_ranking_editor %}\n                <sw-number-field\n                    v-model:value=\"item.ranking\"\n                    number-type=\"int\"\n                    size=\"small\"\n                />\n                {% endblock %}\n            </template>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_searchable_content_general_searchable %}\n        <template #column-searchable=\"{ item, isInlineEdit }\">\n            <template v-if=\"isInlineEdit\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_search_searchable_content_general_searchable_editor %}\n                <sw-checkbox-field\n                    v-model:value=\"item.searchable\"\n                />\n                {% endblock %}\n            </template>\n\n            <template v-else>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_search_searchable_content_general_searchable_label %}\n                <sw-data-grid-column-boolean v-model:value=\"item.searchable\" />\n                {% endblock %}\n            </template>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_searchable_content_general_tokenize %}\n        <template #column-tokenize=\"{ item, isInlineEdit }\">\n            <template v-if=\"isInlineEdit\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_search_searchable_content_general_tokenize_editor %}\n                <sw-checkbox-field\n                    v-model:value=\"item.tokenize\"\n                />\n                {% endblock %}\n            </template>\n\n            <template v-else>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_search_searchable_content_general_tokenize_label %}\n                <sw-data-grid-column-boolean v-model:value=\"item.tokenize\" />\n                {% endblock %}\n            </template>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_searchable_content_general_columns_actions %}\n        <template #actions=\"{ item }\">\n            <sw-context-menu-item\n                class=\"sw-settings-search__searchable-content-list-action sw-settings-search__searchable-content-list-edit\"\n                :disabled=\"!acl.can('product_search_config.editor')\"\n                @click=\"onInlineEditItem(item)\"\n            >\n                {{ $tc('global.default.edit') }}\n            </sw-context-menu-item>\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_search_searchable_content_general_columns_actions_edit %}\n            <sw-context-menu-item\n                class=\"sw-settings-search__searchable-content-list-action sw-settings-search__searchable-content-list-reset\"\n                :disabled=\"!acl.can('product_search_config.editor')\"\n                @click=\"onResetRanking(item)\"\n            >\n                {{ $tc('sw-settings-search.generalTab.list.textResetRanking') }}\n            </sw-context-menu-item>\n            {% endblock %}\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_search_searchable_content_general_pagination %}\n        <template #pagination>\n            <sw-pagination\n                :page=\"page\"\n                :limit=\"limit\"\n                :total=\"total\"\n                auto-hide\n            />\n        </template>\n        {% endblock %}\n    </sw-entity-listing>\n    {% endblock %}\n</div>\n{% endblock %}\n","/**\n * @package buyers-experience\n */\nimport template from './sw-settings-search-searchable-content-general.html.twig';\n\nconst { Mixin } = Cicada;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'acl',\n    ],\n\n    emits: [\n        'data-load',\n        'config-save',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    props: {\n        isEmpty: {\n            type: Boolean,\n            required: true,\n        },\n\n        columns: {\n            type: Array,\n            required: true,\n        },\n\n        repository: {\n            type: Object,\n            required: true,\n        },\n\n        searchConfigs: {\n            type: Array,\n            required: false,\n            default() {\n                return null;\n            },\n        },\n\n        fieldConfigs: {\n            type: Array,\n            required: true,\n        },\n\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    computed: {\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n    },\n\n    methods: {\n        getList() {\n            // Empty method needed to avoid warning from listing mixin\n        },\n\n        getMatchingFields(fieldName) {\n            if (!fieldName) {\n                return '';\n            }\n\n            const fieldItem = this.fieldConfigs.find((fieldConfig) => fieldConfig.value === fieldName);\n\n            return fieldItem ? fieldItem.label : '';\n        },\n\n        onSelectField(currentField) {\n            const { defaultConfigs } = this.fieldConfigs.find((option) => option.value === currentField.field);\n            this.searchConfigs.forEach((configItem) => {\n                if (configItem._isNew) {\n                    configItem.ranking = defaultConfigs.ranking;\n                    configItem.searchable = defaultConfigs.searchable;\n                    configItem.tokenize = defaultConfigs.tokenize;\n                }\n\n                return configItem;\n            });\n        },\n\n        onInlineEditSave(promise) {\n            promise\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-settings-search.notification.saveSuccess'),\n                    });\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-search.notification.saveError'),\n                    });\n                })\n                .finally(() => {\n                    this.$emit('data-load');\n                });\n        },\n\n        onInlineEditCancel() {\n            this.$emit('data-load');\n        },\n\n        onInlineEditItem(item) {\n            this.$refs.swSettingsSearchableContentGrid.onDbClickCell(item);\n        },\n\n        onResetRanking(currentField) {\n            if (!currentField.field) {\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-search.notification.saveError'),\n                });\n\n                this.$emit('data-load');\n                return;\n            }\n\n            const currentItem = this.searchConfigs.find((item) => item.field === currentField.field);\n            if (!currentItem) {\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-search.notification.saveError'),\n                });\n\n                return;\n            }\n            currentItem.ranking = this.getConfigRankingDefault(currentField.field);\n\n            this.$emit('config-save');\n        },\n\n        getConfigRankingDefault(fieldName) {\n            if (!fieldName) {\n                return 0;\n            }\n\n            const fieldConfigDefault = this.fieldConfigs.find((fieldConfig) => fieldConfig.value === fieldName);\n\n            return fieldConfigDefault ? fieldConfigDefault.defaultConfigs.ranking : 0;\n        },\n    },\n};\n"],"names":["template","Mixin","index","fieldName","fieldItem","fieldConfig","currentField","defaultConfigs","option","configItem","promise","item","currentItem","fieldConfigDefault"],"mappings":"AAAA,MAAeA,EAAA,muICKT,CAAE,MAAAC,CAAO,EAAG,OAGHC,EAAA,CACX,SAAAF,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,KACH,EAED,MAAO,CACH,YACA,aACH,EAED,OAAQ,CACJC,EAAM,UAAU,SAAS,EACzBA,EAAM,UAAU,cAAc,CACjC,EAED,MAAO,CACH,QAAS,CACL,KAAM,QACN,SAAU,EACb,EAED,QAAS,CACL,KAAM,MACN,SAAU,EACb,EAED,WAAY,CACR,KAAM,OACN,SAAU,EACb,EAED,cAAe,CACX,KAAM,MACN,SAAU,GACV,SAAU,CACN,OAAO,IACV,CACJ,EAED,aAAc,CACV,KAAM,MACN,SAAU,EACb,EAED,UAAW,CACP,KAAM,QACN,SAAU,GACV,QAAS,EACZ,CACJ,EAED,SAAU,CACN,aAAc,CACV,OAAO,OAAO,OAAO,UAAU,OAAO,CACzC,CACJ,EAED,QAAS,CACL,SAAU,CAET,EAED,kBAAkBE,EAAW,CACzB,GAAI,CAACA,EACD,MAAO,GAGX,MAAMC,EAAY,KAAK,aAAa,KAAMC,GAAgBA,EAAY,QAAUF,CAAS,EAEzF,OAAOC,EAAYA,EAAU,MAAQ,EACxC,EAED,cAAcE,EAAc,CACxB,KAAM,CAAE,eAAAC,CAAc,EAAK,KAAK,aAAa,KAAMC,GAAWA,EAAO,QAAUF,EAAa,KAAK,EACjG,KAAK,cAAc,QAASG,IACpBA,EAAW,SACXA,EAAW,QAAUF,EAAe,QACpCE,EAAW,WAAaF,EAAe,WACvCE,EAAW,SAAWF,EAAe,UAGlCE,EACV,CACJ,EAED,iBAAiBC,EAAS,CACtBA,EACK,KAAK,IAAM,CACR,KAAK,0BAA0B,CAC3B,QAAS,KAAK,IAAI,6CAA6C,CACvF,CAAqB,CACrB,CAAiB,EACA,MAAM,IAAM,CACT,KAAK,wBAAwB,CACzB,QAAS,KAAK,IAAI,2CAA2C,CACrF,CAAqB,CACrB,CAAiB,EACA,QAAQ,IAAM,CACX,KAAK,MAAM,WAAW,CAC1C,CAAiB,CACR,EAED,oBAAqB,CACjB,KAAK,MAAM,WAAW,CACzB,EAED,iBAAiBC,EAAM,CACnB,KAAK,MAAM,gCAAgC,cAAcA,CAAI,CAChE,EAED,eAAeL,EAAc,CACzB,GAAI,CAACA,EAAa,MAAO,CACrB,KAAK,wBAAwB,CACzB,QAAS,KAAK,IAAI,2CAA2C,CACjF,CAAiB,EAED,KAAK,MAAM,WAAW,EACtB,MACH,CAED,MAAMM,EAAc,KAAK,cAAc,KAAMD,GAASA,EAAK,QAAUL,EAAa,KAAK,EACvF,GAAI,CAACM,EAAa,CACd,KAAK,wBAAwB,CACzB,QAAS,KAAK,IAAI,2CAA2C,CACjF,CAAiB,EAED,MACH,CACDA,EAAY,QAAU,KAAK,wBAAwBN,EAAa,KAAK,EAErE,KAAK,MAAM,aAAa,CAC3B,EAED,wBAAwBH,EAAW,CAC/B,GAAI,CAACA,EACD,MAAO,GAGX,MAAMU,EAAqB,KAAK,aAAa,KAAMR,GAAgBA,EAAY,QAAUF,CAAS,EAElG,OAAOU,EAAqBA,EAAmB,eAAe,QAAU,CAC3E,CACJ,CACL"}