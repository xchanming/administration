{"version":3,"file":"first-run-wizard.api.service-Cj3VCCSf.js","sources":["../../../app/administration/src/core/service/api/first-run-wizard.api.service.js"],"sourcesContent":["const ApiService = Cicada.Classes.ApiService;\n\n/**\n * @package services-settings\n *\n * Gateway for the API end point \"frw\"\n * @private\n * @class\n * @extends ApiService\n */\nclass FirstRunWizardApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'frw') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'firstRunWizardService';\n    }\n\n    getBasicHeaders(additionalHeaders = {}) {\n        return {\n            ...super.getBasicHeaders(additionalHeaders),\n            'sw-language-id': Cicada.Context.api.languageId,\n        };\n    }\n\n    /**\n     * Check cicadaId\n     *\n     * @param {Object} [payload = {}]\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    checkCicadaId(payload = {}, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(`/_action/store/${this.apiEndpoint}/login`, payload, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Get license domains\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getLicenseDomains(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_action/store/license-domains', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Verify license domain\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    verifyLicenseDomain(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(\n                '/_action/store/verify-license-domain',\n                {},\n                {\n                    params,\n                    headers,\n                },\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Set wizard start message\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    setFRWStart(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(\n                '/_action/store/frw/start',\n                {},\n                {\n                    params,\n                    headers,\n                },\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Set wizard finish message\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    setFRWFinish(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(\n                '/_action/store/frw/finish',\n                {},\n                {\n                    params,\n                    headers,\n                },\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\n/**\n * @private\n * @package services-settings\n */\nexport default FirstRunWizardApiService;\n"],"names":["ApiService","FirstRunWizardApiService","httpClient","loginService","apiEndpoint","additionalHeaders","payload","additionalParams","params","headers","response"],"mappings":"AAAA,MAAMA,EAAa,OAAO,QAAQ,WAUlC,MAAMC,UAAiCD,CAAW,CAC9C,YAAYE,EAAYC,EAAcC,EAAc,MAAO,CACvD,MAAMF,EAAYC,EAAcC,CAAW,EAC3C,KAAK,KAAO,uBACf,CAED,gBAAgBC,EAAoB,GAAI,CACpC,MAAO,CACH,GAAG,MAAM,gBAAgBA,CAAiB,EAC1C,iBAAkB,OAAO,QAAQ,IAAI,UACjD,CACK,CAUD,cAAcC,EAAU,CAAE,EAAEC,EAAmB,CAAE,EAAEF,EAAoB,GAAI,CACvE,MAAMG,EAASD,EACTE,EAAU,KAAK,gBAAgBJ,CAAiB,EAEtD,OAAO,KAAK,WACP,KAAK,kBAAkB,KAAK,WAAW,SAAUC,EAAS,CACvD,OAAAE,EACA,QAAAC,CAChB,CAAa,EACA,KAAMC,GACIV,EAAW,eAAeU,CAAQ,CAC5C,CACR,CASD,kBAAkBH,EAAmB,GAAIF,EAAoB,CAAA,EAAI,CAC7D,MAAMG,EAASD,EACTE,EAAU,KAAK,gBAAgBJ,CAAiB,EAEtD,OAAO,KAAK,WACP,IAAI,iCAAkC,CACnC,OAAAG,EACA,QAAAC,CAChB,CAAa,EACA,KAAMC,GACIV,EAAW,eAAeU,CAAQ,CAC5C,CACR,CASD,oBAAoBH,EAAmB,GAAIF,EAAoB,CAAA,EAAI,CAC/D,MAAMG,EAASD,EACTE,EAAU,KAAK,gBAAgBJ,CAAiB,EAEtD,OAAO,KAAK,WACP,KACG,uCACA,CAAE,EACF,CACI,OAAAG,EACA,QAAAC,CACH,CACJ,EACA,KAAMC,GACIV,EAAW,eAAeU,CAAQ,CAC5C,CACR,CASD,YAAYH,EAAmB,GAAIF,EAAoB,CAAA,EAAI,CACvD,MAAMG,EAASD,EACTE,EAAU,KAAK,gBAAgBJ,CAAiB,EAEtD,OAAO,KAAK,WACP,KACG,2BACA,CAAE,EACF,CACI,OAAAG,EACA,QAAAC,CACH,CACJ,EACA,KAAMC,GACIV,EAAW,eAAeU,CAAQ,CAC5C,CACR,CASD,aAAaH,EAAmB,GAAIF,EAAoB,CAAA,EAAI,CACxD,MAAMG,EAASD,EACTE,EAAU,KAAK,gBAAgBJ,CAAiB,EAEtD,OAAO,KAAK,WACP,KACG,4BACA,CAAE,EACF,CACI,OAAAG,EACA,QAAAC,CACH,CACJ,EACA,KAAMC,GACIV,EAAW,eAAeU,CAAQ,CAC5C,CACR,CACL"}