{"version":3,"file":"index-sPMPglBX.js","sources":["../../../app/administration/src/app/component/form/select/base/sw-single-select/sw-single-select.html.twig","../../../app/administration/src/app/component/form/select/base/sw-single-select/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_single_select %}\n<sw-select-base\n    ref=\"selectBase\"\n    class=\"sw-single-select\"\n    :is-loading=\"isLoading\"\n    v-bind=\"$attrs\"\n    :label=\"label\"\n    @clear=\"clearSelection\"\n    @select-expanded=\"onSelectExpanded\"\n    @select-collapsed=\"onSelectCollapsed\"\n    v-on=\"listeners\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_single_select_base %}\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_single_select_base_selection %}\n    <template #sw-select-selection=\"{ identification, error, disabled, size, setFocusClass, removeFocusClass }\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_single_select_base_selection_slot %}\n        <div class=\"sw-single-select__selection\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_single_select_single_selection_inner %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_single_select_single_selection_inner_label %}\n            <div\n                v-if=\"!isExpanded\"\n                class=\"sw-single-select__selection-text\"\n                :class=\"selectionTextClasses\"\n            >\n                <template v-if=\"singleSelection\">\n                    <slot\n                        name=\"selection-label-property\"\n                        v-bind=\"{ item: singleSelection, labelProperty, valueProperty, searchTerm, getKey }\"\n                    >\n                        {{ getKey(singleSelection, labelProperty) }}\n                    </slot>\n                </template>\n                <template v-else>\n                    {{ placeholder }}\n                </template>\n            </div>\n            {% endblock %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_single_select_single_selection_inner_input %}\n            <!-- eslint-disable-next-line vuejs-accessibility/form-control-has-label -->\n            <input\n                v-show=\"isExpanded\"\n                ref=\"swSelectInput\"\n                v-model=\"searchTerm\"\n                class=\"sw-single-select__selection-input\"\n                :class=\"inputClasses\"\n                type=\"text\"\n                :aria-label=\"label\"\n                :placeholder=\"placeholder\"\n                :disabled=\"disableSearchFunction\"\n                @input=\"onInputSearchTerm\"\n            >\n            {% endblock %}\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_single_select_base_results %}\n    <template #results-list>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_single_select_base_results_slot %}\n        <sw-select-result-list\n            ref=\"resultsList\"\n            :popover-classes=\"popoverClasses\"\n            :options=\"visibleResults\"\n            :is-loading=\"isLoading\"\n            :empty-message=\"$tc('global.sw-single-select.messageNoResults', 0, { term: searchTerm })\"\n            :focus-el=\"$refs.swSelectInput\"\n            @paginate=\"$emit('paginate')\"\n            @item-select=\"setValue\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_single_select_base_results_list %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_single_select_base_results_list_before %}\n            <template #before-item-list>\n                <slot name=\"before-item-list\"></slot>\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_single_select_base_results_list_result %}\n            <template #result-item=\"{ item, index }\">\n                <slot\n                    name=\"result-item\"\n                    v-bind=\"{ item, index, labelProperty, searchTerm, highlightSearchTerm, isSelected, setValue, getKey }\"\n                >\n                    <sw-select-result\n                        :disabled=\"item.disabled\"\n                        :class=\"'sw-select-option--' + item.value\"\n                        :selected=\"isSelected(item)\"\n                        v-bind=\"{ item, index }\"\n                        @item-select=\"setValue\"\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_single_select_base_results_list_result_label %}\n                        <slot\n                            name=\"result-label-property\"\n                            v-bind=\"{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, getKey }\"\n                        >\n                            <sw-highlight-text\n                                v-if=\"highlightSearchTerm && !isSelected(item)\"\n                                :text=\"getKey(item, labelProperty)\"\n                                :search-term=\"searchTerm\"\n                            />\n                            <template v-else>\n                                {{ getKey(item, labelProperty) }}\n                            </template>\n                        </slot>\n                        {% endblock %}\n                    </sw-select-result>\n                </slot>\n            </template>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_single_select_base_results_list_after %}\n            <template #after-item-list>\n                <slot name=\"after-item-list\"></slot>\n            </template>\n            {% endblock %}\n            {% endblock %}\n        </sw-select-result-list>\n        {% endblock %}\n    </template>\n    {% endblock %}\n    {% endblock %}\n\n    <template #label>\n        <slot name=\"label\"></slot>\n    </template>\n\n    <template #hint>\n        <slot name=\"hint\"></slot>\n    </template>\n</sw-select-base>\n{% endblock %}\n","/**\n * @package admin\n */\n\nimport './sw-single-select.scss';\nimport template from './sw-single-select.html.twig';\n\nconst { Component, Mixin } = Cicada;\nconst { debounce, get } = Cicada.Utils;\n\n/**\n * @private\n */\nComponent.register('sw-single-select', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['feature'],\n\n    emits: [\n        'update:value',\n        'item-selected',\n        'on-open-change',\n        'before-selection-clear',\n        'search',\n        'paginate',\n    ],\n\n    mixins: [\n        Mixin.getByName('remove-api-error'),\n    ],\n\n    props: {\n        options: {\n            required: true,\n            type: Array,\n        },\n        // eslint-disable-next-line vue/require-prop-types\n        value: {\n            required: true,\n        },\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        highlightSearchTerm: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n        placeholder: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        labelProperty: {\n            type: String,\n            required: false,\n            default: 'label',\n        },\n        valueProperty: {\n            type: String,\n            required: false,\n            default: 'value',\n        },\n\n        popoverClasses: {\n            type: Array,\n            required: false,\n            default() {\n                return [];\n            },\n        },\n\n        // Used to implement a custom search function.\n        // Parameters passed: { options, labelProperty, valueProperty, searchTerm }\n        searchFunction: {\n            type: Function,\n            required: false,\n            default({ options, labelProperty, searchTerm }) {\n                return options.filter((option) => {\n                    const label = this.getKey(option, labelProperty);\n                    if (!label) {\n                        return false;\n                    }\n                    return label.toLowerCase().includes(searchTerm.toLowerCase());\n                });\n            },\n        },\n\n        disableSearchFunction: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        label: {\n            type: String,\n            required: false,\n            default: undefined,\n        },\n    },\n\n    data() {\n        return {\n            searchTerm: '',\n            isExpanded: false,\n            results: this.options,\n            // used to track if an item was selected before closing the result list\n            itemRecentlySelected: false,\n        };\n    },\n\n    computed: {\n        currentValue: {\n            get() {\n                return this.value;\n            },\n            set(newValue) {\n                this.$emit('update:value', newValue);\n            },\n        },\n\n        inputClasses() {\n            return {\n                'is--expanded': this.isExpanded,\n            };\n        },\n\n        selectionTextClasses() {\n            return {\n                'is--placeholder': !this.singleSelection,\n            };\n        },\n\n        singleSelection: {\n            get() {\n                return this.options.find((option) => {\n                    return this.getKey(option, this.valueProperty) === this.currentValue;\n                });\n            },\n            set(newValue) {\n                this.currentValue = this.getKey(newValue, this.valueProperty);\n                this.$emit('item-selected', newValue);\n            },\n        },\n\n        /**\n         * @returns {Array}\n         */\n        visibleResults() {\n            return this.results.filter((result) => !result.hidden);\n        },\n\n        listeners() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return this.$listeners;\n            }\n\n            return {};\n        },\n    },\n\n    methods: {\n        isSelected(item) {\n            return this.getKey(item, this.valueProperty) === this.value;\n        },\n\n        onSelectExpanded() {\n            this.isExpanded = true;\n            this.$emit('on-open-change', true);\n\n            // Always start with a fresh list when opening the result list\n            this.results = this.options;\n\n            // Get the search text of the selected item as prefilled value\n            this.searchTerm = this.tryGetSearchText(this.singleSelection);\n\n            this.$nextTick(() => {\n                this.resetActiveItem();\n                this.$refs.swSelectInput.select();\n                this.$refs.swSelectInput.focus();\n            });\n        },\n\n        tryGetSearchText(option) {\n            return this.getKey(option, this.labelProperty, '');\n        },\n\n        onSelectCollapsed() {\n            // Empty the selection if the search term is empty\n            if (this.searchTerm === '' && !this.itemRecentlySelected) {\n                this.$emit('before-selection-clear', this.singleSelection, this.value);\n                this.currentValue = null;\n            }\n\n            this.$refs.swSelectInput.blur();\n            this.searchTerm = '';\n            this.itemRecentlySelected = false;\n            this.$emit('on-open-change', false);\n            this.isExpanded = false;\n        },\n\n        closeResultList() {\n            this.$refs.selectBase.collapse();\n        },\n\n        setValue(item) {\n            this.itemRecentlySelected = true;\n            this.singleSelection = item;\n            this.closeResultList();\n        },\n\n        resetActiveItem(pos = 0) {\n            // Return if the result list is closed before the search request returns\n            if (!this.$refs.resultsList) {\n                return;\n            }\n            // If an item is selected the second entry is the first search result\n            if (this.singleSelection) {\n                pos = 1;\n            }\n            this.$refs.resultsList.setActiveItemIndex(pos);\n        },\n\n        onInputSearchTerm() {\n            this.debouncedSearch();\n        },\n\n        debouncedSearch: debounce(function updateSearchTerm() {\n            this.search();\n        }, 100),\n\n        search() {\n            this.$emit('search', this.searchTerm);\n\n            if (this.disableSearchFunction) {\n                return;\n            }\n\n            this.results = this.searchFunction({\n                options: this.options,\n                labelProperty: this.labelProperty,\n                valueProperty: this.valueProperty,\n                searchTerm: this.searchTerm,\n            });\n\n            this.$nextTick(() => {\n                this.resetActiveItem();\n            });\n        },\n\n        getKey(object, keyPath, defaultValue) {\n            return get(object, keyPath, defaultValue);\n        },\n\n        clearSelection() {\n            this.setValue(null);\n        },\n    },\n});\n"],"names":["template","Component","Mixin","debounce","get","options","labelProperty","searchTerm","option","label","newValue","result","item","pos","object","keyPath","defaultValue"],"mappings":"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"}