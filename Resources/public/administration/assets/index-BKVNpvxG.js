import a from"./index-9ODwnDr0.js";const o=`{% block sw_cms_element_text %} <div class="sw-cms-el-text"> <div v-if="element.config.content.source === 'mapped'" class="sw-cms-el-text__mapping-preview content-editor" v-html="$sanitize(demoValue)" ></div> <mt-text-editor v-else :model-value="element.config.content.value" :custom-buttons="customTextEditorButtons" is-inline-edit @update:model-value="onInput" /> </div> {% endblock %}`,{Mixin:s}=Shopware,l={template:o,emits:["element-update"],mixins:[s.getByName("cms-element")],data(){return{editable:!0,demoValue:""}},watch:{"cmsPageState.currentDemoEntity":{handler(){this.updateDemoValue()}},"element.config.content.source":{handler(){this.updateDemoValue()}}},computed:{availableDataMappings(){let e=[];return Object.entries(Shopware.Store.get("cmsPage").currentMappingTypes).forEach(t=>{const[n,i]=t;n==="string"&&(e=[...e,...i])}),e},customTextEditorButtons(){return[a(()=>this.availableDataMappings)]}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("text")},updateDemoValue(){this.element.config.content.source==="mapped"&&(this.demoValue=this.getDemoValue(this.element.config.content.value))},onBlur(e){this.emitChanges(e)},onInput(e){this.emitChanges(e)},emitChanges(e){e!==this.element.config.content.value&&(this.element.config.content.value=e,this.$emit("element-update",this.element))}}};export{l as default};
