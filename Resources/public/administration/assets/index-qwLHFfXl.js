const t=`{% block sw_cms_element_text %} <div class="sw-cms-el-text"> <div v-if="element.config.content.source === 'mapped'" class="sw-cms-el-text__mapping-preview content-editor" v-html="$sanitize(demoValue)" ></div> <sw-text-editor v-else v-model:value="element.config.content.value" :disabled="disabled" :vertical-align="element.config.verticalAlign.value" :allow-inline-data-mapping="true" :is-inline-edit="true" sanitize-input sanitize-field-name="app_cms_block.template" enable-transparent-background @blur="onBlur" @update:value="onInput" /> </div> {% endblock %}`,{Mixin:n}=Cicada,i={template:t,compatConfig:Cicada.compatConfig,emits:["element-update"],mixins:[n.getByName("cms-element")],data(){return{editable:!0,demoValue:""}},watch:{"cmsPageState.currentDemoEntity":{handler(){this.updateDemoValue()}},"element.config.content.source":{handler(){this.updateDemoValue()}}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("text")},updateDemoValue(){this.element.config.content.source==="mapped"&&(this.demoValue=this.getDemoValue(this.element.config.content.value))},onBlur(e){this.emitChanges(e)},onInput(e){this.emitChanges(e)},emitChanges(e){e!==this.element.config.content.value&&(this.element.config.content.value=e,this.$emit("element-update",this.element))}}};export{i as default};
//# sourceMappingURL=index-qwLHFfXl.js.map
