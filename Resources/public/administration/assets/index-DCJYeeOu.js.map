{"version":3,"file":"index-DCJYeeOu.js","sources":["../../../app/administration/src/app/component/utils/sw-step-display/sw-step-display.html.twig","../../../app/administration/src/app/component/utils/sw-step-display/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_step_display %}\n<div class=\"sw-step-display\">\n    <slot>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_step_display_slot %}\n        {% endblock %}\n    </slot>\n</div>\n{% endblock %}\n","import template from './sw-step-display.html.twig';\n\nconst { Component } = Cicada;\n\n/**\n * @private\n * @description This step display component need flow-items inside it's slot to work.\n * To control the current position use the `itemIndex` property (zero-based index).\n * To change the variant of the current position you can use the `itemVariant` property.\n * To load specific variants for multiple items you can use the `initialItemVariants` property\n * with an array of variants. Possible variants are 'disabled', 'info', 'error' and 'success'.\n * @status ready\n * @example-type dynamic\n * @component-example\n * <sw-step-display :itemIndex=\"flowChartItemIndex\"\n *                            :itemVariant=\"flowChartItemVariant\"\n *                            :initialItemVariants=\"flowChartInitialItemVariants\">\n *   <sw-step-item>\n *      Check\n *   </sw-step-item>\n *   <sw-step-item>\n *      Read\n *   </sw-step-item>\n *   <sw-step-item disabledIcon=\"regular-checkmark-xs\">\n *      Finish\n *   </sw-step-item>\n * </sw-step-display>\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nComponent.register('sw-step-display', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    provide() {\n        return {\n            addStep: this.addStep,\n        };\n    },\n\n    props: {\n        itemIndex: {\n            type: Number,\n            required: true,\n        },\n        itemVariant: {\n            type: String,\n            required: true,\n        },\n        initialItemVariants: {\n            type: Array,\n            default() {\n                return [];\n            },\n            required: false,\n        },\n    },\n\n    data() {\n        return {\n            items: [],\n        };\n    },\n\n    watch: {\n        itemIndex(newIndex, oldIndex) {\n            this.setItemActive(oldIndex, false);\n            this.setItemActive(newIndex, true);\n            this.setVariantForCurrentItem(this.itemVariant);\n        },\n        itemVariant(newVariant) {\n            this.setVariantForCurrentItem(newVariant);\n        },\n        initialItemVariants: {\n            deep: true,\n            handler(newItemVariants) {\n                this.setItemVariants(newItemVariants);\n            },\n        },\n    },\n\n    methods: {\n        addStep(item) {\n            this.items.push(item);\n\n            this.setItemVariant(item, this.initialItemVariants[this.items.length - 1]);\n            this.setItemActive(this.itemIndex, true);\n            this.setVariantForCurrentItem(this.itemVariant);\n        },\n\n        setItemVariants(itemVariants) {\n            const max = Math.min(this.items.length, itemVariants.length);\n\n            for (let i = 0; i < max; i += 1) {\n                this.setItemVariant(this.items[i], itemVariants[i]);\n            }\n        },\n\n        setItemVariant(item, variant) {\n            item.setVariant(variant);\n        },\n\n        setVariantForCurrentItem(variant) {\n            if (this.itemIndex >= this.items.length) {\n                return;\n            }\n\n            this.items[this.itemIndex].setVariant(variant);\n        },\n\n        setItemActive(index, active) {\n            if (index >= this.items.length) {\n                return;\n            }\n\n            this.items[index].setActive(active);\n        },\n    },\n});\n"],"names":["template","Component","newIndex","oldIndex","newVariant","newItemVariants","item","itemVariants","max","variant","index","active"],"mappings":"AAAA,MAAeA,EAAA,iJCET,CAAE,UAAAC,CAAW,EAAG,OA2BtBA,EAAU,SAAS,kBAAmB,CAClC,SAAAD,EAEA,aAAc,OAAO,aAErB,SAAU,CACN,MAAO,CACH,QAAS,KAAK,OAC1B,CACK,EAED,MAAO,CACH,UAAW,CACP,KAAM,OACN,SAAU,EACb,EACD,YAAa,CACT,KAAM,OACN,SAAU,EACb,EACD,oBAAqB,CACjB,KAAM,MACN,SAAU,CACN,MAAO,EACV,EACD,SAAU,EACb,CACJ,EAED,MAAO,CACH,MAAO,CACH,MAAO,CAAE,CACrB,CACK,EAED,MAAO,CACH,UAAUE,EAAUC,EAAU,CAC1B,KAAK,cAAcA,EAAU,EAAK,EAClC,KAAK,cAAcD,EAAU,EAAI,EACjC,KAAK,yBAAyB,KAAK,WAAW,CACjD,EACD,YAAYE,EAAY,CACpB,KAAK,yBAAyBA,CAAU,CAC3C,EACD,oBAAqB,CACjB,KAAM,GACN,QAAQC,EAAiB,CACrB,KAAK,gBAAgBA,CAAe,CACvC,CACJ,CACJ,EAED,QAAS,CACL,QAAQC,EAAM,CACV,KAAK,MAAM,KAAKA,CAAI,EAEpB,KAAK,eAAeA,EAAM,KAAK,oBAAoB,KAAK,MAAM,OAAS,CAAC,CAAC,EACzE,KAAK,cAAc,KAAK,UAAW,EAAI,EACvC,KAAK,yBAAyB,KAAK,WAAW,CACjD,EAED,gBAAgBC,EAAc,CAC1B,MAAMC,EAAM,KAAK,IAAI,KAAK,MAAM,OAAQD,EAAa,MAAM,EAE3D,QAAS,EAAI,EAAG,EAAIC,EAAK,GAAK,EAC1B,KAAK,eAAe,KAAK,MAAM,CAAC,EAAGD,EAAa,CAAC,CAAC,CAEzD,EAED,eAAeD,EAAMG,EAAS,CAC1BH,EAAK,WAAWG,CAAO,CAC1B,EAED,yBAAyBA,EAAS,CAC1B,KAAK,WAAa,KAAK,MAAM,QAIjC,KAAK,MAAM,KAAK,SAAS,EAAE,WAAWA,CAAO,CAChD,EAED,cAAcC,EAAOC,EAAQ,CACrBD,GAAS,KAAK,MAAM,QAIxB,KAAK,MAAMA,CAAK,EAAE,UAAUC,CAAM,CACrC,CACJ,CACL,CAAC"}