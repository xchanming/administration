const i='{% block sw_side_navigation_item %} <a v-if="isNative" class="sw-tabs-item" :class="tabsItemClasses" v-bind="$attrs" role="tab" tabindex="0" @click="clickEvent" > {% block sw_tabs_item_slot %} <slot></slot> {% endblock %} <sw-icon v-if="hasError" v-tooltip="{ message: errorTooltip }" class="sw-tabs-item__error-badge" name="solid-exclamation-circle" size="12px" /> <sw-icon v-if="!hasError && hasWarning" v-tooltip="{ message: warningTooltip }" class="sw-tabs-item__warning-badge" name="solid-exclamation-triangle" size="12px" /> </a> <router-link v-else ref="sw-tabs-item" :class="tabsItemClasses" v-bind="$attrs" class="sw-tabs-item" :to="route" role="tab" tabindex="0" @click="clickEvent" > {% block sw_tabs_item_slot_native %} <slot></slot> <sw-icon v-if="hasError" v-tooltip="{ message: errorTooltip }" class="sw-tabs-item__error-badge" name="solid-exclamation-circle" size="12px" /> <sw-icon v-if="!hasError && hasWarning" v-tooltip="{ message: warningTooltip }" class="sw-tabs-item__warning-badge" name="solid-exclamation-triangle" size="12px" /> {% endblock %} </router-link> {% endblock %}',{Component:s}=Cicada,a=Cicada.Utils.types;s.register("sw-tabs-item",{template:i,compatConfig:Cicada.compatConfig,inheritAttrs:!1,inject:{feature:{from:"feature",default:null},onNewItemActive:{from:"onNewItemActive",default:null},registerNewTabItem:{from:"registerNewTabItem",default:null},unregisterNewTabItem:{from:"unregisterNewTabItem",default:null},swTabsSetActiveItem:{from:"swTabsSetActiveItem",default:null}},emits:["click"],props:{route:{type:[String,Object],required:!1,default:""},active:{type:Boolean,required:!1,default:!1},activeTab:{type:String,required:!1,default:""},name:{type:String,required:!1,default:""},hasError:{type:Boolean,required:!1,default:!1},hasWarning:{type:Boolean,required:!1,default:!1},disabled:{type:Boolean,required:!1,default:!1},errorTooltip:{type:String,required:!1,default(){return Cicada.Snippet.tc("global.sw-tabs-item.tooltipTabHasErrors")}},warningTooltip:{type:String,required:!1,default(){return Cicada.Snippet.tc("global.sw-tabs-item.tooltipTabHasWarnings")}}},data(){return{isActive:!1}},computed:{isNative(){return a.isEmpty(this.route)},tabsItemClasses(){return{"sw-tabs-item--active":this.isActive,"sw-tabs-item--has-error":this.hasError,"sw-tabs-item--has-warning":!this.hasError&&this.hasWarning,"sw-tabs-item--is-disabled":this.disabled}}},watch:{$route(){this.checkIfRouteMatchesLink()}},mounted(){this.mountedComponent()},beforeUpdate(){this.beforeUpdateComponent()},created(){this.createdComponent()},beforeUnmount(){var e;this.isCompatEnabled("INSTANCE_CHILDREN")?this.$parent.$off("new-item-active",this.checkIfActive):(e=this.unregisterNewTabItem)==null||e.call(this,this)},methods:{createdComponent(){var e,t;this.isCompatEnabled("INSTANCE_CHILDREN")?this.$parent.$on("new-item-active",this.checkIfActive):((e=this.onNewItemActive)==null||e.call(this,this.checkIfActive),(t=this.registerNewTabItem)==null||t.call(this,this)),this.active&&(this.isActive=!0)},beforeUpdateComponent(){this.updateActiveState()},mountedComponent(){this.updateActiveState()},updateActiveState(){this.checkIfRouteMatchesLink(),this.activeTab&&this.activeTab===this.name&&(this.isActive=!0)},clickEvent(){this.disabled||(this.isCompatEnabled("INSTANCE_CHILDREN")?this.$parent.setActiveItem(this):this.swTabsSetActiveItem(this),this.$emit("click"))},checkIfActive(e){this.isActive=e.$vnode===this.$vnode},checkIfRouteMatchesLink(){this.$nextTick().then(()=>{let e;try{e=this.$router.resolve(this.route)}catch{return}if(e===void 0)return;let t=!1;if(t=e.matched.length>0,!t)return;this.$el.classList.contains("router-link-active")&&(this.isCompatEnabled("INSTANCE_CHILDREN")?this.$parent.setActiveItem(this):this.swTabsSetActiveItem(this))})}}});
//# sourceMappingURL=index-DzpWxhEP.js.map
