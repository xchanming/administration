{"version":3,"file":"index-Cczlqwgo.js","sources":["../../../app/administration/src/module/sw-first-run-wizard/view/sw-first-run-wizard-paypal-info/sw-first-run-wizard-paypal-info.html.twig","../../../app/administration/src/module/sw-first-run-wizard/view/sw-first-run-wizard-paypal-info/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_first_run_wizard_paypal_info %}\n<div class=\"sw-first-run-wizard-paypal\">\n    <div\n        v-if=\"!isInstallingPlugin\"\n        class=\"sw-first-run-wizard-paypal-info\"\n    >\n        <img\n            class=\"sw-first-run-wizard-paypal-info__icon\"\n            :src=\"assetFilter('/administration/static/img/paypal-official-logo.svg')\"\n            alt=\"\"\n        >\n\n        <h3 class=\"headline\">\n            {{ $tc('sw-first-run-wizard.paypalInfo.headline') }}\n        </h3>\n\n        <sw-container\n            columns=\"1fr 1fr 1fr 1fr\"\n            class=\"paymethods\"\n        >\n            <div class=\"paymethod\">\n                <sw-icon\n                    name=\"regular-check-circle\"\n                    size=\"12px\"\n                />\n                <span>{{ $tc('sw-first-run-wizard.paypalInfo.paymethod.paypal') }}</span>\n            </div>\n            <div class=\"paymethod\">\n                <sw-icon\n                    name=\"regular-check-circle\"\n                    size=\"12px\"\n                />\n                <span>{{ $tc('sw-first-run-wizard.paypalInfo.paymethod.debit') }}</span>\n            </div>\n            <div class=\"paymethod\">\n                <sw-icon\n                    name=\"regular-check-circle\"\n                    size=\"12px\"\n                />\n                <span>{{ $tc('sw-first-run-wizard.paypalInfo.paymethod.creditcard') }}</span>\n            </div>\n            <div class=\"paymethod\">\n                <sw-icon\n                    name=\"regular-check-circle\"\n                    size=\"12px\"\n                />\n                <span>{{ $tc('sw-first-run-wizard.paypalInfo.paymethod.invoice') }}**</span>\n            </div>\n        </sw-container>\n        <div\n            v-if=\"pluginInstallationFailed\"\n            class=\"sw-first-run-wizard-paypal__error\"\n        >\n            <sw-alert\n                :title=\"pluginError.title\"\n                variant=\"error\"\n                appearance=\"notification\"\n            >\n                {{ pluginError.detail }}\n            </sw-alert>\n        </div>\n        <div class=\"disclaimer\">\n            <p>{{ $tc('sw-first-run-wizard.paypalInfo.disclaimerLineOne') }}</p>\n            <p>{{ $tc('sw-first-run-wizard.paypalInfo.disclaimerLineTwo') }}</p>\n        </div>\n    </div>\n    <div\n        v-else\n        class=\"sw-first-run-wizard-paypal-install\"\n    >\n        <sw-loader size=\"48px\" />\n        <p\n            class=\"sw-loader-info-text\"\n            v-html=\"$tc('sw-first-run-wizard.paypalInstall.loadingMessage')\"\n        ></p>\n    </div>\n</div>\n{% endblock %}\n","import template from './sw-first-run-wizard-paypal-info.html.twig';\nimport './sw-first-run-wizard-paypal-info.scss';\n\n/**\n * @package checkout\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['extensionStoreActionService'],\n\n    emits: [\n        'frw-set-title',\n        'buttons-update',\n    ],\n\n    data() {\n        return {\n            isInstallingPlugin: false,\n            pluginInstallationFailed: false,\n            pluginError: null,\n            pluginName: 'SwagPayPal',\n            installPromise: Promise.resolve(),\n        };\n    },\n\n    computed: {\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.updateButtons();\n            this.setTitle();\n            this.installPromise = this.installPayPal();\n        },\n\n        setTitle() {\n            this.$emit('frw-set-title', this.$tc('sw-first-run-wizard.paypalInfo.modalTitle'));\n        },\n\n        updateButtons() {\n            const buttonConfig = [\n                {\n                    key: 'back',\n                    label: this.$tc('sw-first-run-wizard.general.buttonBack'),\n                    position: 'left',\n                    variant: null,\n                    action: 'sw.first.run.wizard.index.mailer.selection',\n                    disabled: false,\n                },\n                {\n                    key: 'skip',\n                    label: this.$tc('sw-first-run-wizard.general.buttonSkip'),\n                    position: 'right',\n                    variant: null,\n                    action: 'sw.first.run.wizard.index.plugins',\n                    disabled: false,\n                },\n                {\n                    key: 'configure',\n                    label: this.$tc('sw-first-run-wizard.general.buttonNextPayPalInfo'),\n                    position: 'right',\n                    variant: 'primary',\n                    action: this.activatePayPalAndRedirect.bind(this),\n                    disabled: false,\n                },\n            ];\n\n            this.$emit('buttons-update', buttonConfig);\n        },\n\n        installPayPal() {\n            return this.extensionStoreActionService.downloadExtension(this.pluginName).then(() => {\n                return this.extensionStoreActionService.installExtension(this.pluginName, 'plugin');\n            });\n        },\n\n        activatePayPalAndRedirect() {\n            this.isInstallingPlugin = true;\n            this.installPromise\n                .then(() => {\n                    return this.extensionStoreActionService.activateExtension(this.pluginName, 'plugin');\n                })\n                .then(async () => {\n                    await this.$router.push({\n                        name: 'sw.first.run.wizard.index.paypal.credentials',\n                    });\n\n                    // need a force reload, after plugin was activated\n                    window.location.reload();\n\n                    return Promise.resolve(true);\n                })\n                .catch((error) => {\n                    this.isInstallingPlugin = false;\n                    this.pluginInstallationFailed = true;\n\n                    if (error.response?.data?.errors) {\n                        this.pluginError = error.response.data.errors.pop();\n                    }\n\n                    return true;\n                });\n        },\n    },\n};\n"],"names":["template","index","buttonConfig","error","_a","_b"],"mappings":"AAAA,MAAeA,EAAA,opDCOAC,EAAA,CACX,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,6BAA6B,EAEtC,MAAO,CACH,gBACA,gBACH,EAED,MAAO,CACH,MAAO,CACH,mBAAoB,GACpB,yBAA0B,GAC1B,YAAa,KACb,WAAY,aACZ,eAAgB,QAAQ,QAAS,CAC7C,CACK,EAED,SAAU,CACN,aAAc,CACV,OAAO,OAAO,OAAO,UAAU,OAAO,CACzC,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,cAAa,EAClB,KAAK,SAAQ,EACb,KAAK,eAAiB,KAAK,eAC9B,EAED,UAAW,CACP,KAAK,MAAM,gBAAiB,KAAK,IAAI,2CAA2C,CAAC,CACpF,EAED,eAAgB,CACZ,MAAME,EAAe,CACjB,CACI,IAAK,OACL,MAAO,KAAK,IAAI,wCAAwC,EACxD,SAAU,OACV,QAAS,KACT,OAAQ,6CACR,SAAU,EACb,EACD,CACI,IAAK,OACL,MAAO,KAAK,IAAI,wCAAwC,EACxD,SAAU,QACV,QAAS,KACT,OAAQ,oCACR,SAAU,EACb,EACD,CACI,IAAK,YACL,MAAO,KAAK,IAAI,kDAAkD,EAClE,SAAU,QACV,QAAS,UACT,OAAQ,KAAK,0BAA0B,KAAK,IAAI,EAChD,SAAU,EACb,CACjB,EAEY,KAAK,MAAM,iBAAkBA,CAAY,CAC5C,EAED,eAAgB,CACZ,OAAO,KAAK,4BAA4B,kBAAkB,KAAK,UAAU,EAAE,KAAK,IACrE,KAAK,4BAA4B,iBAAiB,KAAK,WAAY,QAAQ,CACrF,CACJ,EAED,2BAA4B,CACxB,KAAK,mBAAqB,GAC1B,KAAK,eACA,KAAK,IACK,KAAK,4BAA4B,kBAAkB,KAAK,WAAY,QAAQ,CACtF,EACA,KAAK,UACF,MAAM,KAAK,QAAQ,KAAK,CACpB,KAAM,8CAC9B,CAAqB,EAGD,OAAO,SAAS,SAET,QAAQ,QAAQ,EAAI,EAC9B,EACA,MAAOC,GAAU,CDvGlC,IAAAC,EAAAC,ECwGoB,YAAK,mBAAqB,GAC1B,KAAK,yBAA2B,IAE5BA,GAAAD,EAAAD,EAAM,WAAN,YAAAC,EAAgB,OAAhB,MAAAC,EAAsB,SACtB,KAAK,YAAcF,EAAM,SAAS,KAAK,OAAO,OAG3C,EAC3B,CAAiB,CACR,CACJ,CACL"}