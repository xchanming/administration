{"version":3,"file":"index-BW3Q2pC4.js","sources":["../../../app/administration/src/app/component/form/sw-text-editor/sw-text-editor-link-menu/sw-text-editor-link-menu.html.twig","../../../app/administration/src/app/component/form/sw-text-editor/sw-text-editor-link-menu/index.ts"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_text_editor_toolbar_button_link_menu %}\n<div class=\"sw-text-editor-toolbar-button__link-menu\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_text_editor_toolbar_button_link_menu_content %}\n    <div class=\"sw-text-editor-toolbar-button__link-menu-content\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_text_editor_toolbar_button_link_menu_content_type %}\n        <sw-select-field\n            :value=\"linkCategory\"\n            :label=\"$tc('sw-text-editor-toolbar.link.labelType')\"\n            require\n            @update:value=\"onSelectFieldChange\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_text_editor_toolbar_button_link_menu_content_type_options %}\n            <option value=\"link\">\n                {{ $tc('sw-text-editor-toolbar.link.labelUrl') }}\n            </option>\n            <option value=\"detail\">\n                {{ $tc('sw-text-editor-toolbar.link.labelProduct') }}\n            </option>\n            <option value=\"navigation\">\n                {{ $tc('sw-text-editor-toolbar.link.labelCategory') }}\n            </option>\n            <option value=\"media\">\n                {{ $tc('sw-text-editor-toolbar.link.labelMedia') }}\n            </option>\n            <option value=\"email\">\n                {{ $tc('sw-text-editor-toolbar.link.labelEmail') }}\n            </option>\n            <option value=\"phone\">\n                {{ $tc('sw-text-editor-toolbar.link.labelPhoneNumber') }}\n            </option>\n            {% endblock %}\n        </sw-select-field>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_text_editor_toolbar_button_link_menu_content_type_inputs %}\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_text_editor_toolbar_button_link_menu_content_type_inputs_link %}\n        <sw-text-field\n            v-if=\"linkCategory === 'link'\"\n            v-model:value=\"linkTarget\"\n            :label=\"$tc('sw-text-editor-toolbar.link.linkTo')\"\n            :placeholder=\"$tc('sw-text-editor-toolbar.link.placeholder')\"\n            name=\"sw-field--linkTarget\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_text_editor_toolbar_button_link_menu_content_type_inputs_phone %}\n        <sw-text-field\n            v-else-if=\"linkCategory === 'phone'\"\n            v-model:value=\"linkTarget\"\n            :label=\"$tc('sw-text-editor-toolbar.link.linkTo')\"\n            :placeholder=\"$tc('sw-text-editor-toolbar.link.placeholderPhoneNumber')\"\n            name=\"sw-field--linkTarget\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_text_editor_toolbar_button_link_menu_content_type_inputs_email %}\n        <sw-email-field\n            v-else-if=\"linkCategory === 'email'\"\n            v-model:value=\"linkTarget\"\n            :label=\"$tc('sw-text-editor-toolbar.link.linkTo')\"\n            :placeholder=\"$tc('sw-text-editor-toolbar.link.placeholderEmail')\"\n            name=\"sw-field--linkTarget\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_text_editor_toolbar_button_link_menu_content_type_inputs_detail %}\n        <sw-entity-single-select\n            v-else-if=\"linkCategory === 'detail'\"\n            v-model:value=\"linkTarget\"\n            class=\"sw-text-editor-link-menu__entity-single-select\"\n            entity=\"product\"\n            should-show-active-state\n            :criteria=\"entityFilter\"\n            :label=\"$tc('sw-text-editor-toolbar.link.linkTo')\"\n            :placeholder=\"$tc('sw-text-editor-toolbar.link.placeholderProduct')\"\n            show-clearable-button\n            display-variants\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_text_editor_toolbar_button_link_menu_content_type_inputs_category %}\n        <sw-category-tree-field\n            v-else-if=\"linkCategory === 'navigation'\"\n            :label=\"$tc('sw-text-editor-toolbar.link.linkTo')\"\n            :placeholder=\"$tc('sw-text-editor-toolbar.link.placeholderCategory')\"\n            :categories-collection=\"categoryCollection\"\n            single-select\n            @selection-add=\"replaceCategorySelection\"\n            @selection-remove=\"removeCategorySelection\"\n        />\n        {% endblock %}\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_text_editor_toolbar_button_link_menu_content_type_inputs_media %}\n        <sw-media-field\n            v-else-if=\"linkCategory === 'media'\"\n            v-model:value=\"linkTarget\"\n            :label=\"$tc('sw-text-editor-toolbar.link.linkTo')\"\n            :criteria=\"entityFilter\"\n            single-select\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_text_editor_toolbar_button_link_menu_content_type_opens_new_tab %}\n        <sw-switch-field\n            v-if=\"!['phone', 'email'].includes(linkCategory)\"\n            v-model:value=\"opensNewTab\"\n            class=\"sw-text-editor-toolbar-button__link-menu-switch sw-text-editor-toolbar-button__link-menu-new-tab\"\n            :label=\"$tc('sw-text-editor-toolbar.link.openInNewTab')\"\n            no-margin-top\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_text_editor_toolbar_button_link_menu_content_type_display_as_button %}\n        <sw-switch-field\n            v-model:value=\"displayAsButton\"\n            class=\"sw-text-editor-toolbar-button__link-menu-switch sw-text-editor-toolbar-button__link-menu-display-button\"\n            :label=\"$tc('sw-text-editor-toolbar.link.displayAsButton')\"\n            no-margin-top\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_text_editor_toolbar_button_link_menu_content_type_button_type %}\n        <sw-select-field\n            v-if=\"displayAsButton\"\n            v-model:value=\"buttonVariant\"\n            class=\"sw-text-editor-link-menu__button-variant\"\n            :label=\"$tc('sw-text-editor-toolbar.link.buttonVariant')\"\n            :options=\"buttonVariantList\"\n            require\n        />\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_text_editor_toolbar_button_link_menu_buttons %}\n    <div class=\"sw-text-editor-toolbar-button__link-menu-buttons\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_text_editor_toolbar_button_link_menu_button_remove %}\n        <sw-button\n            class=\"sw-text-editor-toolbar-button__link-menu-buttons-button-remove\"\n            variant=\"ghost-danger\"\n            size=\"small\"\n            :disabled=\"!linkTarget\"\n            @click=\"removeLink\"\n        >\n            {{ $tc('global.default.remove') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_text_editor_toolbar_button_link_menu_button_insert %}\n        <sw-button\n            class=\"sw-text-editor-toolbar-button__link-menu-buttons-button-insert\"\n            variant=\"primary\"\n            size=\"small\"\n            :disabled=\"!linkTarget\"\n            @click=\"setLink\"\n        >\n            {{ $tc('global.default.add') }}\n        </sw-button>\n        {% endblock %}\n    </div>\n    {% endblock %}\n</div>\n{% endblock %}\n","import type CriteriaType from 'src/core/data/criteria.data';\nimport type RepositoryType from 'src/core/data/repository.data';\nimport type EntityCollectionType from 'src/core/data/entity-collection.data';\nimport template from './sw-text-editor-link-menu.html.twig';\nimport './sw-text-editor-link-menu.scss';\n\nconst { Component } = Cicada;\nconst { Criteria, EntityCollection } = Cicada.Data;\n\ntype ButtonVariant = 'primary' | 'primary-sm' | 'secondary' | 'secondary-sm';\ntype LinkCategories = 'link' | 'detail' | 'navigation' | 'media' | 'email' | 'phone';\ninterface TextEditorLinkMenuConfig {\n    title: string;\n    icon: string;\n    expanded: boolean;\n    newTab: boolean;\n    displayAsButton: boolean;\n    buttonVariant: ButtonVariant;\n    value: string;\n    type: string;\n    tag: 'a';\n    active: false;\n}\n\n/**\n * @package admin\n *\n * @private\n */\nComponent.register('sw-text-editor-link-menu', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    props: {\n        buttonConfig: {\n            type: Object as () => TextEditorLinkMenuConfig,\n            required: true,\n        },\n    },\n\n    data(): {\n        linkTitle: string;\n        linkTarget: string;\n        isHTTPs: boolean;\n        opensNewTab: boolean;\n        displayAsButton: boolean;\n        buttonVariant: ButtonVariant;\n        linkCategory: LinkCategories;\n        categoryCollection?: EntityCollectionType<'category'>;\n        buttonVariantList: Array<{ id: ButtonVariant; name: string }>;\n    } {\n        return {\n            linkTitle: '',\n            linkTarget: '',\n            isHTTPs: false,\n            opensNewTab: false,\n            displayAsButton: false,\n            buttonVariant: 'primary',\n            linkCategory: 'link',\n            categoryCollection: undefined,\n            buttonVariantList: [\n                {\n                    id: 'primary',\n                    name: this.$tc('sw-text-editor-toolbar.link.buttonVariantPrimary'),\n                },\n                {\n                    id: 'secondary',\n                    name: this.$tc('sw-text-editor-toolbar.link.buttonVariantSecondary'),\n                },\n                {\n                    id: 'primary-sm',\n                    name: this.$tc('sw-text-editor-toolbar.link.buttonVariantPrimarySmall'),\n                },\n                {\n                    id: 'secondary-sm',\n                    name: this.$tc('sw-text-editor-toolbar.link.buttonVariantSecondarySmall'),\n                },\n            ],\n        };\n    },\n\n    computed: {\n        seoUrlReplacePrefix(): string {\n            return '124c71d524604ccbad6042edce3ac799';\n        },\n\n        entityFilter(): CriteriaType {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addAssociation('options.group');\n\n            criteria.addFilter(\n                Criteria.multi('OR', [\n                    Criteria.equals('product.childCount', 0),\n                    Criteria.equals('product.childCount', null),\n                ]),\n            );\n\n            return criteria;\n        },\n\n        categoryRepository(): RepositoryType<'category'> {\n            return this.repositoryFactory.create('category');\n        },\n    },\n\n    watch: {\n        buttonConfig: {\n            async handler(buttonConfig): Promise<void> {\n                const { title, newTab, displayAsButton, buttonVariant, value, type } =\n                    buttonConfig as TextEditorLinkMenuConfig;\n                this.linkTitle = title;\n                this.opensNewTab = newTab;\n                this.displayAsButton = displayAsButton;\n                this.buttonVariant = buttonVariant;\n\n                const parsedResult = await this.parseLink(value, type);\n                this.linkCategory = parsedResult.type;\n                this.linkTarget = parsedResult.target;\n            },\n            immediate: true,\n        },\n    },\n\n    created(): void {\n        this.createdComponent();\n    },\n\n    mounted(): void {\n        this.mountedComponent();\n    },\n\n    methods: {\n        createdComponent(): void {\n            this.categoryCollection = this.getEmptyCategoryCollection();\n        },\n\n        mountedComponent(): void {\n            this.$emit('mounted');\n        },\n\n        getCategoryCollection(categoryId: string): Promise<EntityCollectionType<'category'>> {\n            const categoryCriteria = new Criteria(1, 25).addFilter(Criteria.equals('id', categoryId));\n            return this.categoryRepository.search(categoryCriteria);\n        },\n\n        getEmptyCategoryCollection(): EntityCollectionType<'category'> {\n            return new EntityCollection(\n                this.categoryRepository.route,\n                this.categoryRepository.entityName,\n                Cicada.Context.api,\n            );\n        },\n\n        async parseLink(link: string, detectedLinkType: string): Promise<{ type: LinkCategories; target: string }> {\n            const slicedLink = link.slice(0, -1).split('/');\n\n            if (\n                link.startsWith(this.seoUrlReplacePrefix) &&\n                [\n                    'navigation',\n                    'detail',\n                    'mediaId',\n                ].includes(slicedLink[1])\n            ) {\n                if (slicedLink[1] === 'navigation') {\n                    this.categoryCollection = await this.getCategoryCollection(slicedLink[2]);\n                } else if (slicedLink[1] === 'mediaId') {\n                    slicedLink[1] = 'media';\n                }\n                return {\n                    type: slicedLink[1] as LinkCategories,\n                    target: slicedLink[2],\n                };\n            }\n\n            if (link.startsWith('mailto:')) {\n                return {\n                    type: 'email',\n                    target: link.replace('mailto:', ''),\n                };\n            }\n\n            if (link.startsWith('tel:')) {\n                return {\n                    type: 'phone',\n                    target: link.replace('tel:', ''),\n                };\n            }\n\n            return {\n                type: (detectedLinkType ?? 'link') as LinkCategories,\n                target: link,\n            };\n        },\n\n        replaceCategorySelection(category: { id: string }): void {\n            this.linkTarget = category.id;\n        },\n\n        removeCategorySelection(): void {\n            this.linkTarget = '';\n        },\n\n        prepareLink(): string {\n            switch (this.linkCategory) {\n                case 'detail':\n                    return `${this.seoUrlReplacePrefix}/detail/${this.linkTarget}#`;\n                case 'navigation':\n                    return `${this.seoUrlReplacePrefix}/navigation/${this.linkTarget}#`;\n                case 'media':\n                    return `${this.seoUrlReplacePrefix}/mediaId/${this.linkTarget}#`;\n                case 'email':\n                    return `mailto:${this.linkTarget}`;\n                case 'phone':\n                    return `tel:${this.linkTarget.replace(/\\//, '')}`;\n                default:\n                    return this.addProtocolToLink(this.linkTarget);\n            }\n        },\n\n        addProtocolToLink(link: string): string {\n            if (/(^(\\w+):\\/\\/)|(mailto:)|(fax:)|(tel:)/.test(link)) {\n                return link;\n            }\n\n            const isInternal = /^\\/[^\\/\\s]/.test(link);\n            const isAnchor = link.substring(0, 1) === '#';\n            const isProtocolRelative = /^\\/\\/[^\\/\\s]/.test(link);\n\n            if (!isInternal && !isAnchor && !isProtocolRelative) {\n                link = `http://${link}`;\n            }\n\n            return link;\n        },\n\n        setLink(): void {\n            this.$emit('button-click', {\n                type: 'link',\n                value: this.prepareLink(),\n                displayAsButton: this.displayAsButton,\n                buttonVariant: this.buttonVariant,\n                newTab: this.opensNewTab,\n            });\n        },\n\n        removeLink(): void {\n            this.$emit('button-click', {\n                type: 'linkRemove',\n            });\n        },\n\n        onSelectFieldChange(category: LinkCategories): void {\n            this.linkCategory = category;\n            this.linkTarget = '';\n        },\n    },\n});\n"],"names":["template","Component","Criteria","EntityCollection","criteria","buttonConfig","title","newTab","displayAsButton","buttonVariant","value","type","parsedResult","categoryId","categoryCriteria","link","detectedLinkType","slicedLink","category","isInternal","isAnchor","isProtocolRelative"],"mappings":"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"}