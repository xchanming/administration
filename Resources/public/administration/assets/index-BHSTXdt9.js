const o=`{% block sw_product_detail_variants %} <div class="sw-product-detail-variants"> {% block sw_product_detail_variants_sw_card_generated_variants %} <sw-card class="sw-product-detail-variants__generated-variants" position-identifier="sw-product-detail-variants-generated-variants" :class="{'is--loading': isLoading}" :title="$tc('sw-product.variations.generatedVariationCardTitle')" large > <template v-if="!isLoading && propertiesAvailable" #tabs > <sw-tabs position-identifier="sw-variant-card-tabs" :small="false" :default-item="defaultTab" @new-item-active="setActiveTab($event.name)" > <sw-tabs-item name="all" :active-tab="activeTab" > {{ $tc('sw-product.variations.variationCard.tabs.allProducts') }} </sw-tabs-item> <sw-tabs-item name="is-physical" :active-tab="activeTab" > {{ $tc('sw-product.variations.variationCard.tabs.physicalProducts') }} </sw-tabs-item> <sw-tabs-item name="is-download" :active-tab="activeTab" > {{ $tc('sw-product.variations.variationCard.tabs.digitalProducts') }} </sw-tabs-item> </sw-tabs> </template> <sw-skeleton v-if="isLoading" /> {% block sw_product_detail_variants_sw_card_empty_state %} <sw-empty-state v-else-if="!propertiesAvailable" class="sw-product-detail-variants__generated-variants-empty-state" :absolute="false" :title="$tc('sw-product.variations.emptyStatePropertyTitle')" :subline="$tc('sw-product.variations.emptyStatePropertyDescription')" > <template #icon> {% block sw_product_properties_empty_state_image %} <img :src="assetFilter('/administration/static/img/empty-states/products-empty-state.svg')" :alt="$tc('sw-product.properties.titleEmptyState')" > {% endblock %} </template> <template #actions> {% block sw_product_properties_empty_state_button_property %} <sw-button v-tooltip="{ message: $tc('sw-privileges.tooltip.warning'), disabled: acl.can('product.editor'), showOnDisabledElements: true }" variant="ghost" :disabled="!acl.can('product.editor')" @click="openAddPropertiesModal" > {{ $tc('sw-product.properties.buttonAddProperties') }} </sw-button> {% endblock %} </template> </sw-empty-state> {% endblock %} {% block sw_product_detail_variants_sw_card_empty_state_variant %} <sw-empty-state v-if="!isLoading && propertiesAvailable && variants.length === 0" class="sw-product-detail-variants__generated-variants-empty-state" :absolute="false" :title="$tc('sw-product.variations.emptyStateTitle')" :subline="$tc('sw-product.variations.emptyStateDescription')" > <template #icon> {% block sw_product_properties_empty_state_image %} <img :src="assetFilter('/administration/static/img/empty-states/products-empty-state.svg')" :alt="$tc('sw-product.properties.titleEmptyState')" > {% endblock %} </template> <template #actions> {% block sw_product_properties_empty_state_button %} <sw-button v-tooltip="{ message: $tc('sw-privileges.tooltip.warning'), disabled: acl.can('product.creator'), showOnDisabledElements: true }" class="sw-product-detail-variants__generated-variants-empty-state-button" variant="ghost" :disabled="!acl.can('product.creator')" @click="openModal('variantGeneration')" > {{ $tc('sw-product.variations.emptyStateButton') }} </sw-button> {% endblock %} </template> </sw-empty-state> {% endblock %} {% block sw_product_detail_variants_sw_card_generated_variants_overview %} <sw-product-variants-overview v-if="product.id" v-show="variantListHasContent && !isLoading" ref="generatedVariants" :product-states="currentProductStates" :groups="groups" :selected-groups="configSettingGroups" :product-entity="productEntity" @variants-finish-update="updateVariantListHasContent" @generator-open="openModal('variantGeneration')" @delivery-open="openModal('deliveryModal')" /> {% endblock %} </sw-card> {% endblock %} {% block sw_product_detail_variants_modal_variant_generation %} <sw-product-modal-variant-generation v-if="activeModal === 'variantGeneration'" :product="productEntity" :groups="groups" :actual-status="activeTab" :selected-groups="configSettingGroups" @modal-close="activeModal = ''" @variations-finish-generate="updateVariations" /> {% endblock %} {% block sw_product_detail_variants_modal_delivery %} <sw-product-modal-delivery v-if="activeModal === 'deliveryModal'" :product="productEntity" :selected-groups="configSettingGroups" @configuration-close="onConfigurationClosed" @modal-close="activeModal = ''" /> {% endblock %} {% block sw_product_properties_add_properties_modal %} <sw-product-add-properties-modal v-if="showAddPropertiesModal" :new-properties="newProperties" @modal-cancel="onCancelAddPropertiesModal" @modal-save="onSaveAddPropertiesModal" /> {% endblock %} </div> {% endblock %}`,{Criteria:i,EntityCollection:s}=Cicada.Data,{uniqBy:n}=Cicada.Utils.array,{mapState:r,mapGetters:d}=Cicada.Component.getComponentHelper(),p={template:o,compatConfig:Cicada.compatConfig,inject:["repositoryFactory","acl"],data(){return{variantListHasContent:!1,activeModal:"",isLoading:!0,productEntity:{},configuratorSettingsRepository:{},groups:[],productEntityLoaded:!1,propertiesAvailable:!0,showAddPropertiesModal:!1,defaultTab:"all",activeTab:"all",configSettingGroups:[]}},computed:{...r("swProductDetail",["product","variants"]),...r("context",{contextLanguageId:t=>t.api.languageId}),...d("swProductDetail",{isStoreLoading:"isLoading"}),productRepository(){return this.repositoryFactory.create("product")},groupRepository(){return this.repositoryFactory.create("property_group")},propertyRepository(){return this.repositoryFactory.create("property_group_option")},productProperties(){var t,e;return this.isChild&&((e=(t=this.product)==null?void 0:t.properties)==null?void 0:e.length)<=0?this.parentProduct.properties:this.product.properties},currentProductStates(){return this.activeTab.split(",")},assetFilter(){return Cicada.Filter.getByName("asset")}},watch:{isStoreLoading:{handler(){this.isStoreLoading===!1&&this.loadData()}},contextLanguageId:{handler(){this.$refs.generatedVariants.getList()}}},created(){this.createdComponent()},mounted(){this.mountedComponent()},methods:{createdComponent(){this.checkIfPropertiesExists()},mountedComponent(){this.loadData()},setActiveTab(t){this.activeTab=t},loadData(){this.isStoreLoading||this.loadOptions().then(()=>this.loadGroups()).then(()=>this.loadConfigSettingGroups())},async loadConfigSettingGroups(){const t=n(this.productEntity.configuratorSettings,"option.groupId").map(a=>a.option.groupId),e=new i(1,null);t.length&&e.addFilter(i.equalsAny("id",t)),this.configSettingGroups=await this.groupRepository.search(e)},loadOptions(){return new Promise(t=>{const e=new i(1,25);e.addAssociation("configuratorSettings.option"),e.addAssociation("prices"),this.productRepository.get(this.product.id,Cicada.Context.api,e).then(a=>{this.productEntity=a,this.productEntityLoaded=!0,t()})})},loadGroups(){return new Promise(t=>{this.$nextTick().then(()=>{const e=new i(1,null);this.groupRepository.search(e).then(a=>{this.groups=a,t()})})})},updateVariations(){this.$refs.generatedVariants.includeOptions=[],this.$refs.generatedVariants.filterWindowOpen=!1,this.loadOptions().then(()=>this.loadGroups()).then(()=>{this.$refs.generatedVariants.getFilterOptions(),this.$refs.generatedVariants.resetFilterOptions()})},updateVariantListHasContent(t){const e=this.$refs.generatedVariants.includeOptions.length>0,a=this.$route.query?this.$route.query.term:"";this.variantListHasContent=t.length>0||a||e,this.isLoading=!1},openModal(t){this.activeModal=t},onConfigurationClosed(){this.loadData(),this.activeModal=""},checkIfPropertiesExists(){this.propertyRepository.search(new i(1,1)).then(t=>{this.propertiesAvailable=t.total>0})},openAddPropertiesModal(){this.propertiesAvailable?(this.updateNewProperties(),this.showAddPropertiesModal=!0):this.$router.push({name:"sw.property.index"})},closeAddPropertiesModal(){this.showAddPropertiesModal=!1,this.updateNewProperties()},updateNewProperties(){this.newProperties=new s(this.productProperties.source,this.productProperties.entity,this.productProperties.context,i.fromCriteria(this.productProperties.criteria),this.productProperties,this.productProperties.total,this.productProperties.aggregations)},onCancelAddPropertiesModal(){this.closeAddPropertiesModal()},onSaveAddPropertiesModal(t){this.closeAddPropertiesModal(),!(t.length<=0)&&this.productProperties.splice(0,this.productProperties.length,...t)}}};export{p as default};
//# sourceMappingURL=index-BHSTXdt9.js.map
