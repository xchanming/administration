{"version":3,"file":"index-xN89Nk5l.js","sources":["../../../app/administration/src/module/sw-order/component/sw-order-address-modal/sw-order-address-modal.html.twig","../../../app/administration/src/module/sw-order/component/sw-order-address-modal/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_order_address_modal %}\n<sw-modal\n    :title=\"$tc('sw-order.addressSelection.modalTitleEditAddress')\"\n    :is-loading=\"isLoading\"\n    @modal-close=\"onClose\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_order_address_modal_content %}\n    <sw-tabs\n        class=\"sw-order-address-modal\"\n        position-identifier=\"sw-order-address-modal\"\n        default-item=\"edit\"\n        @new-item-active=\"onNewActiveItem\"\n    >\n        <template #default=\"{ active }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_address_modal_tabs %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_address_modal_tab_edit_address %}\n            <sw-tabs-item\n                name=\"edit\"\n                :active-tab=\"active\"\n            >\n                {{ $tc('sw-order.addressSelection.headlineTabEditAddress') }}\n            </sw-tabs-item>\n            {%  endblock %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_address_modal_tab_select_address %}\n            <sw-tabs-item\n                name=\"addresses\"\n                :active-tab=\"active\"\n            >\n                {{ $tc('sw-order.addressSelection.headlineTabSelectAddress') }}\n            </sw-tabs-item>\n            {% endblock %}\n            {% endblock %}\n        </template>\n\n        <template #content=\"{ active }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_address_modal_tabs_content %}\n            <div v-if=\"active==='edit'\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_address_modal_tabs_content_edit_address %}\n                <sw-customer-address-form\n                    :address=\"address\"\n                    :customer=\"orderCustomer\"\n                    :countries=\"countries\"\n                />\n                <sw-custom-field-set-renderer\n                    :entity=\"address\"\n                    variant=\"tabs\"\n                    :sets=\"addressCustomFieldSets\"\n                />\n                {% endblock %}\n            </div>\n            <div v-if=\"active==='addresses'\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_address_modal_tabs_content_select_address %}\n                <sw-button\n                    v-for=\"address in availableAddresses\"\n                    :key=\"address.id\"\n                    block\n                    :class=\"addressButtonClasses(address.id)\"\n                    @click=\"onExistingAddressSelected(address)\"\n                >\n                    {{ address.company }} <br>\n                    {{ salutationFilter(address) }}<br>\n                    {{ address.street }} <br>\n                    {{ address.zipcode }} {{ address.city }}<br>\n                    {{ placeholder(address.country, 'name') }}<br>\n                </sw-button>\n                {% endblock %}\n            </div>\n            {% endblock %}\n        </template>\n    </sw-tabs>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_order_address_modal_actions %}\n    <template #modal-footer>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_address_modal_action_close %}\n        <sw-button\n            size=\"small\"\n            @click=\"onClose\"\n        >\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_address_modal_actions_apply %}\n        <sw-button\n            variant=\"primary\"\n            size=\"small\"\n            @click=\"onSave\"\n        >\n            {{ $tc('global.default.apply') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n\n","import template from './sw-order-address-modal.html.twig';\nimport './sw-order-address-modal.scss';\n\n/**\n * @package checkout\n */\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['repositoryFactory'],\n\n    emits: [\n        'reset',\n        'address-select',\n        'save',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('placeholder'),\n    ],\n\n    props: {\n        address: {\n            type: Object,\n            required: true,\n            default: () => {},\n        },\n\n        countries: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            },\n        },\n\n        order: {\n            type: Object,\n            required: true,\n            default: () => {},\n        },\n\n        versionContext: {\n            type: Object,\n            required: true,\n            default: () => {},\n        },\n    },\n\n    data() {\n        return {\n            availableAddresses: [],\n            selectedAddressId: 0,\n            isLoading: false,\n            addressCustomFieldSets: [],\n        };\n    },\n\n    computed: {\n        customerCriteria() {\n            const criteria = new Criteria(1, 1);\n            criteria.setIds([this.orderCustomer.customerId]);\n            criteria.addAssociation('addresses');\n\n            return criteria;\n        },\n\n        customFieldSetCriteria() {\n            const criteria = new Criteria(1, null);\n            criteria.addFilter(Criteria.equals('relations.entityName', 'customer_address'));\n            criteria.addAssociation('customFields');\n\n            return criteria;\n        },\n\n        customerRepository() {\n            return this.repositoryFactory.create('customer');\n        },\n\n        orderRepository() {\n            return this.repositoryFactory.create('order');\n        },\n\n        orderCustomer() {\n            return this.order.orderCustomer;\n        },\n\n        customFieldSetRepository() {\n            return this.repositoryFactory.create('custom_field_set');\n        },\n\n        salutationFilter() {\n            return Cicada.Filter.getByName('salutation');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.orderCustomer && this.orderCustomer.customerId) {\n                this.getCustomerInfo();\n            }\n\n            this.getCustomFieldSetData();\n        },\n\n        getCustomerInfo() {\n            this.isLoading = true;\n\n            this.customerRepository\n                .search(this.customerCriteria)\n                .then((customer) => {\n                    this.availableAddresses = customer[0].addresses;\n\n                    return Cicada.State.dispatch('error/resetApiErrors');\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        onNewActiveItem() {\n            this.selectedAddressId = 0;\n        },\n\n        addressButtonClasses(addressId) {\n            return `sw-order-address-modal__entry${\n                addressId === this.selectedAddressId ? ' sw-order-address-modal__entry__selected' : ''\n            }`;\n        },\n\n        onExistingAddressSelected(address) {\n            this.selectedAddressId = address.id;\n        },\n\n        onClose() {\n            this.$emit('reset');\n        },\n\n        onSave() {\n            this.isLoading = true;\n\n            const isShippingAvailable = this.order.addresses[0].country.shippingAvailable;\n            if (!isShippingAvailable && typeof isShippingAvailable === 'boolean') {\n                this.createNotificationError({\n                    message: this.$tc('sw-order.detail.messageShippingNotAvailable'),\n                });\n\n                this.isLoading = false;\n                return;\n            }\n\n            new Promise((resolve) => {\n                // check if user selected an address\n                if (this.selectedAddressId !== 0) {\n                    const address = this.availableAddresses.find((addr) => {\n                        return addr.id === this.selectedAddressId;\n                    });\n\n                    this.$emit('address-select', address);\n                    resolve();\n                } else {\n                    // save address\n                    this.orderRepository\n                        .save(this.order, this.versionContext)\n                        .then(() => {\n                            this.$emit('save');\n                        })\n                        .catch(() => {\n                            this.createNotificationError({\n                                message: this.$tc('sw-order.detail.messageSaveError'),\n                            });\n                        })\n                        .finally(() => {\n                            resolve();\n                        });\n                }\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        getCustomFieldSetData() {\n            this.customFieldSetRepository.search(this.customFieldSetCriteria).then((response) => {\n                this.addressCustomFieldSets = response;\n            });\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","index","criteria","customer","addressId","address","isShippingAvailable","resolve","addr","response"],"mappings":"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"}