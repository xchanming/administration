const t='{# v-on="$listeners" needed becaues vue/compat removes them from $attrs #} {# New mt-switch component #} <mt-switch v-if="useMeteorComponent" v-bind="$attrs" :checked="checkedValue" v-on="listeners" @change="onChangeHandler" > <slot></slot> </mt-switch> {# v-on="$listeners" needed becaues vue/compat removes them from $attrs #} {# Deprecated component #} <sw-switch-field-deprecated v-else v-bind="$attrs" :value="value" v-on="listeners" @update:value="onChangeHandler" > <slot></slot> </sw-switch-field-deprecated>',{Component:s}=Cicada;s.register("sw-switch-field",{template:t,compatConfig:Cicada.compatConfig,emits:["update:value"],props:{value:{type:Boolean,required:!1},checked:{type:Boolean,required:!1}},computed:{checkedValue(){return typeof this.checked=="boolean"?this.checked:this.value},useMeteorComponent(){return Cicada.Feature.isActive("v6.7.0.0")?!0:(Cicada.Utils.debug.warn("sw-switch-field",'The old usage of "sw-switch-field" is deprecated and will be removed in v6.7.0.0. Please use "mt-switch" instead.'),!1)},listeners(){return this.isCompatEnabled("INSTANCE_LISTENERS")?this.$listeners:{}}},methods:{onChangeHandler(e){this.$emit("update:value",e)}}});
//# sourceMappingURL=index-BcDNCyFh.js.map
