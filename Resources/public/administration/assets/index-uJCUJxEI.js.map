{"version":3,"file":"index-uJCUJxEI.js","sources":["../../../app/administration/src/module/sw-extension/component/sw-extension-file-upload/sw-extension-file-upload.html.twig","../../../app/administration/src/module/sw-extension/component/sw-extension-file-upload/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_extension_file_upload %}\n<div class=\"sw-extension-file-upload\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_extension_file_upload_content %}\n    <div class=\"sw-extension-file-upload__content\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_extension_file_upload_button %}\n        <sw-button\n            class=\"sw-extension-file-upload__button\"\n            :is-loading=\"isLoading\"\n            variant=\"primary\"\n            @click=\"showConfirmModal\"\n        >\n            {{ $tc('sw-extension.my-extensions.fileUpload.buttonFileUpload') }}\n        </sw-button>\n        {% endblock %}\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_extension_file_upload_form %}\n        <form\n            ref=\"fileForm\"\n            class=\"sw-extension-file-upload__form\"\n        >\n            <!-- eslint-disable-next-line vuejs-accessibility/form-control-has-label -->\n            <input\n                id=\"files\"\n                ref=\"fileInput\"\n                class=\"sw-extension-file-upload__file-input\"\n                type=\"file\"\n                @change=\"onFileInputChange\"\n            >\n        </form>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_extension_file_upload_confirm_modal %}\n    <sw-modal\n        v-if=\"confirmModalVisible\"\n        class=\"sw-extension-file-upload-confirm-modal\"\n        :title=\"$tc('sw-extension.my-extensions.fileUpload.titleWarningModal')\"\n        variant=\"small\"\n        @modal-close=\"closeConfirmModal\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_extension_file_upload_confirm_modal_content %}\n        <template #default>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_extension_file_upload_confirm_modal_body %}\n            <p>\n                {{ $tc('sw-extension.my-extensions.fileUpload.descriptionWarningModal') }}\n            </p>\n            {% endblock %}\n        </template>\n        <template #modal-footer>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_extension_file_upload_confirm_modal_footer %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_extension_file_upload_confirm_modal_footer_checkbox %}\n            <sw-checkbox-field\n                v-model:value=\"shouldHideConfirmModal\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_extension_file_upload_confirm_modal_footer_checkbox_label %}\n                <template #label>\n                    {{ $tc('sw-extension.my-extensions.fileUpload.textHideWarning') }}\n                </template>\n                {% endblock %}\n            </sw-checkbox-field>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_extension_file_upload_confirm_modal_footer_buttons %}\n            <div>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_extension_file_upload_confirm_modal_footer_cancel %}\n                <sw-button\n                    size=\"small\"\n                    :disabled=\"isLoading\"\n                    @click=\"closeConfirmModal\"\n                >\n                    {{ $tc('global.default.cancel') }}\n                </sw-button>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_extension_file_upload_confirm_modal_footer_continue %}\n                <sw-button\n                    variant=\"primary\"\n                    size=\"small\"\n                    :is-loading=\"isLoading\"\n                    @click=\"onClickUpload\"\n                >\n                    {{ $tc('global.default.confirm') }}\n                </sw-button>\n                {% endblock %}\n            </div>\n            {% endblock %}\n            {% endblock %}\n        </template>\n        {% endblock %}\n    </sw-modal>\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-extension-file-upload.html.twig';\nimport './sw-extension-file-upload.scss';\nimport pluginErrorHandler from '../../service/extension-error-handler.service';\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\n\nconst USER_CONFIG_KEY = 'extension.plugin_upload';\n\n/**\n * @package checkout\n * @private\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'extensionStoreActionService',\n        'repositoryFactory',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            isLoading: true,\n            confirmModalVisible: false,\n            shouldHideConfirmModal: false,\n            pluginUploadUserConfig: null,\n        };\n    },\n\n    computed: {\n        userConfigRepository() {\n            return this.repositoryFactory.create('user_config');\n        },\n\n        currentUser() {\n            return Cicada.State.get('session').currentUser;\n        },\n\n        userConfigCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(Criteria.equals('key', USER_CONFIG_KEY));\n            criteria.addFilter(Criteria.equals('userId', this.currentUser?.id));\n\n            return criteria;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            await this.getUserConfig();\n            this.isLoading = false;\n        },\n\n        onClickUpload() {\n            this.$refs.fileInput.click();\n        },\n\n        onFileInputChange() {\n            const newFiles = Array.from(this.$refs.fileInput.files);\n            this.handleUpload(newFiles);\n            this.$refs.fileForm.reset();\n        },\n\n        handleUpload(files) {\n            this.isLoading = true;\n            const formData = new FormData();\n            formData.append('file', files[0]);\n\n            return this.extensionStoreActionService\n                .upload(formData)\n                .then(() => {\n                    Cicada.Service('cicadaExtensionService')\n                        .updateExtensionData()\n                        .then(() => {\n                            return this.createNotificationSuccess({\n                                message: this.$tc('sw-extension.my-extensions.fileUpload.messageUploadSuccess'),\n                            });\n                        });\n                })\n                .catch((exception) => {\n                    const mappedErrors = pluginErrorHandler.mapErrors(exception.response.data.errors);\n                    mappedErrors.forEach((error) => {\n                        if (error.parameters) {\n                            this.showStoreError(error);\n                            return;\n                        }\n\n                        const message = [\n                            this.$tc(error.message),\n                            error.details,\n                        ]\n                            .filter(Boolean)\n                            .join('<br />');\n\n                        this.createNotificationError({\n                            message: message,\n                        });\n                    });\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                    this.confirmModalVisible = false;\n\n                    if (this.shouldHideConfirmModal === true) {\n                        this.saveConfig(true);\n                    }\n                });\n        },\n\n        showStoreError(error) {\n            const docLink = this.$tc('sw-extension.errors.messageToTheCicadaDocumentation', 0, error.parameters);\n            this.createNotificationError({\n                message: `${error.message} ${docLink}`,\n                autoClose: false,\n            });\n        },\n\n        showConfirmModal() {\n            if (this.pluginUploadUserConfig.value.hide_upload_warning === true) {\n                this.onClickUpload();\n                return;\n            }\n\n            this.confirmModalVisible = true;\n        },\n\n        closeConfirmModal() {\n            this.confirmModalVisible = false;\n        },\n\n        getUserConfig() {\n            return this.userConfigRepository.search(this.userConfigCriteria, Cicada.Context.api).then((response) => {\n                if (response.length) {\n                    this.pluginUploadUserConfig = response.first();\n                } else {\n                    this.pluginUploadUserConfig = this.userConfigRepository.create(Cicada.Context.api);\n                    this.pluginUploadUserConfig.key = USER_CONFIG_KEY;\n                    this.pluginUploadUserConfig.userId = this.currentUser?.id;\n                    this.pluginUploadUserConfig.value = {\n                        hide_upload_warning: false,\n                    };\n                }\n            });\n        },\n\n        saveConfig(value) {\n            this.pluginUploadUserConfig.value = {\n                hide_upload_warning: value,\n            };\n\n            this.userConfigRepository.save(this.pluginUploadUserConfig, Cicada.Context.api).then(() => {\n                this.getUserConfig();\n            });\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","USER_CONFIG_KEY","index","criteria","_a","newFiles","files","formData","exception","pluginErrorHandler","error","message","docLink","response","value"],"mappings":"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"}