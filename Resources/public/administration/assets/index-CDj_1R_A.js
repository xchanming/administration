const o=`{% block sw_users_permissions_role_listing %} <sw-card class="sw-users-permissions-role-listing" position-identifier="sw-users-permissions-role-listing" :title="$tc('sw-users-permissions.roles.general.cardLabel')" > {% block sw_users_permissions_role_listing_toolbar %} <div class="sw-users-permissions-role-listing__toolbar"> <sw-container columns="1fr minmax(100px, 200px)" gap="0 10px" > {% block sw_users_permissions_role_listing_toolbar_search_field %} <sw-simple-search-field v-model:value="term" size="small" variant="form" @search-term-change="onSearch" /> {% endblock %} {% block sw_users_permissions_role_listing_toolbar_add_role_button %} <sw-button :router-link="{ name: 'sw.users.permissions.role.detail' }" variant="ghost" size="small" :disabled="!acl.can('users_and_permissions.creator') || undefined" class="sw-users-permissions-role-listing__add-role-button" > {{ $tc('sw-users-permissions.roles.general.labelCreateNewRole') }} </sw-button> {% endblock %} </sw-container> </div> {% endblock %} {% block sw_users_permissions_role_listing_verify_modal %} <sw-verify-user-modal v-if="confirmPasswordModal" @verified="deleteRole" @close="onCloseConfirmPasswordModal" /> {% endblock %} {% block sw_users_permissions_role_listing_grid %} <sw-data-grid v-if="showListingResults" :data-source="roles" :columns="rolesColumns" identifier="roles-grid" :show-settings="true" :show-selection="false" :is-loading="isLoading" @column-sort="onSortColumn" > {% block sw_users_permissions_role_listing_grid_actions %} <template #actions="{ item }"> {% block sw_users_permissions_role_listing_grid_actions_edit %} <sw-context-menu-item :router-link="{ name: 'sw.users.permissions.role.detail', params: { id: item.id } }" class="sw-users-permissions-role-listing__context-menu-edit" :disabled="!acl.can('users_and_permissions.editor') || undefined" > {{ $tc('sw-users-permissions.roles.role-grid.contextMenuEdit') }} </sw-context-menu-item> {% endblock %} {% block sw_users_permissions_role_listing_grid_actions_delete %} <sw-context-menu-item variant="danger" class="sw-users-permissions-role-listing__context-menu-delete" :disabled="!acl.can('users_and_permissions.deleter') || undefined" @click="onDelete(item)" > {{ $tc('sw-users-permissions.roles.role-grid.contextMenuDelete') }} </sw-context-menu-item> {% endblock %} </template> {% endblock %} {% block sw_users_permissions_role_listing_grid_columns %} <template #column-name="{ item }"> {% block sw_users_permissions_role_listing_grid_columns_name %} <router-link :to="{ name: 'sw.users.permissions.role.detail', params: { id: item.id } }"> {{ item.name }} </router-link> {% endblock %} </template> {% endblock %} {% block sw_users_permissions_role_listing_grid_action_modals %} <template #action-modals="{ item }"> {% block sw_users_permissions_role_listing_grid_actions_modals_modal %} <sw-modal v-if="getItemToDelete(item)" :title="$tc('sw-users-permissions.roles.role-grid.titleModalDelete')" variant="small" @modal-close="onCloseDeleteModal" > {% block sw_users_permissions_role_listing_grid_actions_modals_modal_delete_text %} <p class="sw-users-permissions-role-listing__confirm-delete-text"> {{ $tc('sw-users-permissions.roles.role-grid.textModalDelete', 0, { name: item.name }) }} </p> {% endblock %} {% block sw_users_permissions_role_listing_grid_actions_modals_modal_footer %} <template #modal-footer> {% block sw_users_permissions_role_listing_grid_actions_modals_modal_close_delete %} <sw-button size="small" @click="onCloseDeleteModal" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_users_permissions_role_listing_grid_actions_modals_modal_confirm_delete %} <sw-button variant="danger" size="small" @click="onConfirmDelete(item)" > {{ $tc('sw-users-permissions.roles.role-grid.labelButtonDelete') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} </template> {% endblock %} <template #pagination> {% block sw_users_permissions_role_listing_grid_pagination %} <sw-pagination :page="page" :limit="limit" :total="total" :auto-hide="true" @page-change="onPageChange" /> {% endblock %} </template> </sw-data-grid> {% endblock %} {% block sw_users_permissions_role_listing_empty_state %} <sw-empty-state v-else :absolute="false" :title="$tc('sw-users-permissions.roles.role-grid.messageEmptyTitle')" :subline="$tc('sw-users-permissions.roles.role-grid.messageEmptySubline')" /> {% endblock %} </sw-card> {% endblock %}`,{Data:l,Mixin:t}=Cicada,{Criteria:s}=l,r={template:o,compatConfig:Cicada.compatConfig,inject:["repositoryFactory","acl"],emits:["get-list"],mixins:[t.getByName("listing"),t.getByName("notification")],data(){return{roles:[],isLoading:!1,itemToDelete:null,confirmDelete:null,disableRouteParams:!0,confirmPasswordModal:!1}},computed:{rolesColumns(){return[{property:"name",label:this.$tc("sw-users-permissions.roles.role-grid.labelName")},{property:"description",label:this.$tc("sw-users-permissions.roles.role-grid.labelDescription")}]},roleRepository(){return this.repositoryFactory.create("acl_role")},roleCriteria(){const e=new s(this.page,this.limit);return e.addFilter(s.equals("app.id",null)),e.addFilter(s.equals("deletedAt",null)),this.term&&e.setTerm(this.term),this.sortBy&&e.addSorting(s.sort(this.sortBy,this.sortDirection||"ASC")),e},showListingResults(){return this.isLoading?!1:this.roles&&this.roles.length>0||this.term&&this.term.length<=0}},created(){this.createdComponent()},methods:{createdComponent(){this.$emit("get-list")},getList(){return this.isLoading=!0,this.roles=[],this.roleRepository.search(this.roleCriteria).then(e=>{this.total=e.total,this.roles=e}).finally(()=>{this.isLoading=!1})},onSearch(e){this.term=e,this.$emit("get-list")},getItemToDelete(e){return this.itemToDelete?this.itemToDelete.id===e.id:!1},onDelete(e){this.itemToDelete=e},onCloseDeleteModal(){this.itemToDelete=null},onConfirmDelete(){this.confirmDelete=this.itemToDelete,this.onCloseDeleteModal(),this.confirmPasswordModal=!0},deleteRole(e){this.confirmPasswordModal=!1;const i=this.confirmDelete;this.confirmDelete=null,this.roleRepository.delete(i.id,e).then(()=>{this.createNotificationSuccess({message:this.$tc("sw-users-permissions.roles.role-grid.notification.deleteSuccess.message",0,{name:i.name})}),this.$emit("get-list")}).catch(()=>{this.createNotificationError({message:this.$tc("sw-users-permissions.roles.role-grid.notification.deleteError.message",0,{name:i.name})})})},onCloseConfirmPasswordModal(){this.confirmPasswordModal=!1}}};export{r as default};
//# sourceMappingURL=index-CDj_1R_A.js.map
