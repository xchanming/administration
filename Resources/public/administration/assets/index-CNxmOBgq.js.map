{"version":3,"file":"index-CNxmOBgq.js","sources":["../../../app/administration/src/app/component/app/sw-app-app-url-changed-modal/sw-app-app-url-changed-modal.html.twig","../../../app/administration/src/app/component/app/sw-app-app-url-changed-modal/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_app_app_url_changed_modal %}\n<sw-modal\n    class=\"sw-app-app-url-changed-modal\"\n    variant=\"large\"\n    :title=\"$tc('sw-app.component.sw-app-app-url-changed-modal.title')\"\n    :is-loading=\"isLoading\"\n    @modal-close=\"closeModal\"\n>\n    <template #default>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_app_app_url_changed_modal_content %}\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_app_app_url_changed_modal_content_description %}\n        <div class=\"sw-app-app-url-changed-modal__content-description\">\n            <h3>{{ $tc('sw-app.component.sw-app-app-url-changed-modal.explanationHeader') }}</h3>\n            <div class=\"sw-app-app-url-changed-modal__content-description-change\">\n                <span>\n                    <b> {{ $tc('sw-app.component.sw-app-app-url-changed-modal.oldLabel') }} </b>\n                    {{ urlDiff.oldUrl }}\n                </span>\n                <br>\n                <span>\n                    <b> {{ $tc('sw-app.component.sw-app-app-url-changed-modal.newLabel') }} </b>\n                    {{ urlDiff.newUrl }}\n                </span>\n            </div>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_app_app_url_changed_modal_description_explanation %}\n            {{ $tc('sw-app.component.sw-app-app-url-changed-modal.explanation') }}\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_app_app_url_changed_modal_content_strategies %}\n        <div\n            v-for=\"(strategy, index) in strategies\"\n            :key=\"`content-strategies-${index}`\"\n            class=\"sw-app-app-url-changed-modal__content-choices\"\n        >\n            <sw-button\n                class=\"sw-app-app-url-changed-modal__content-migration-strategy\"\n                :class=\"getActiveStyle(strategy)\"\n                block\n                @click=\"setSelectedStrategy(strategy)\"\n            >\n\n                <template v-if=\"isSelected(strategy)\">\n                    <sw-icon\n                        class=\"sw-app-app-url-changed-modal__migration-button-center\"\n                        small\n                        color=\"#ffffff\"\n                        name=\"regular-circle\"\n                    />\n                    <sw-icon\n                        small\n                        color=\"#189eff\"\n                        name=\"regular-circle-xxs\"\n                    />\n                </template>\n                <sw-icon\n                    v-else\n                    small\n                    name=\"regular-circle\"\n                />\n\n                <span class=\"sw-app-app-url-changed-modal__content-choices-label\">\n                    {{ getStrategyLabel(strategy) }}\n                </span>\n\n                <span class=\"sw-app-app-url-changed-modal__content-choices-description\">\n                    {{ getStrategyDescription(strategy) }}\n                </span>\n            </sw-button>\n        </div>\n        {% endblock %}\n        {% endblock %}\n    </template>\n\n    <template #modal-footer>\n        <sw-button @click=\"closeModal\">\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n\n        <sw-button\n            variant=\"primary\"\n            @click=\"confirm\"\n        >\n            {{ $tc('sw-app.component.sw-app-app-url-changed-modal.confirmation') }}\n        </sw-button>\n    </template>\n</sw-modal>\n{% endblock %}\n","/**\n * @package admin\n */\n\nimport template from './sw-app-app-url-changed-modal.html.twig';\nimport './sw-app-app-url-changed-modal.scss';\n\nconst { Component } = Cicada;\n\n/**\n * @private\n */\nComponent.register('sw-app-app-url-changed-modal', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['appUrlChangeService'],\n\n    emits: ['modal-close'],\n\n    mixins: [Cicada.Mixin.getByName('notification')],\n\n    props: {\n        /**\n         * @var {newUrl: string, oldUrl: string}\n         */\n        urlDiff: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            strategies: [],\n            selectedStrategy: null,\n            isLoading: true,\n        };\n    },\n\n    created() {\n        this.appUrlChangeService\n            .fetchResolverStrategies()\n            .then((strategies) => {\n                this.strategies = strategies;\n                this.selectedStrategy = strategies[0];\n            })\n            .then(() => {\n                this.isLoading = false;\n            });\n    },\n\n    methods: {\n        closeModal() {\n            this.$emit('modal-close');\n        },\n\n        setSelectedStrategy(strategy) {\n            this.selectedStrategy = strategy;\n        },\n\n        isSelected({ name }) {\n            return !!this.selectedStrategy && this.selectedStrategy.name === name;\n        },\n\n        getStrategyLabel({ name }) {\n            return this.$tc(`sw-app.component.sw-app-app-url-changed-modal.${name}.name`);\n        },\n\n        getStrategyDescription({ name }) {\n            return this.$tc(`sw-app.component.sw-app-app-url-changed-modal.${name}.description`);\n        },\n\n        getActiveStyle({ name }) {\n            return {\n                'sw-app-app-url-changed-modal__content-migration-strategy--active': name === this.selectedStrategy.name,\n            };\n        },\n\n        confirm() {\n            this.appUrlChangeService\n                .resolveUrlChange(this.selectedStrategy)\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-app.component.sw-app-app-url-changed-modal.success'),\n                    });\n                })\n                .then(this.closeModal)\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-app.component.sw-app-app-url-changed-modal.error'),\n                    });\n                });\n        },\n    },\n});\n"],"names":["template","Component","strategies","strategy","name"],"mappings":"AAAA,MAAeA,EAAA,6oECOT,CAAE,UAAAC,CAAW,EAAG,OAKtBA,EAAU,SAAS,+BAAgC,CAC/C,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,qBAAqB,EAE9B,MAAO,CAAC,aAAa,EAErB,OAAQ,CAAC,OAAO,MAAM,UAAU,cAAc,CAAC,EAE/C,MAAO,CAIH,QAAS,CACL,KAAM,OACN,SAAU,EACb,CACJ,EAED,MAAO,CACH,MAAO,CACH,WAAY,CAAE,EACd,iBAAkB,KAClB,UAAW,EACvB,CACK,EAED,SAAU,CACN,KAAK,oBACA,wBAAyB,EACzB,KAAME,GAAe,CAClB,KAAK,WAAaA,EAClB,KAAK,iBAAmBA,EAAW,CAAC,CACpD,CAAa,EACA,KAAK,IAAM,CACR,KAAK,UAAY,EACjC,CAAa,CACR,EAED,QAAS,CACL,YAAa,CACT,KAAK,MAAM,aAAa,CAC3B,EAED,oBAAoBC,EAAU,CAC1B,KAAK,iBAAmBA,CAC3B,EAED,WAAW,CAAE,KAAAC,GAAQ,CACjB,MAAO,CAAC,CAAC,KAAK,kBAAoB,KAAK,iBAAiB,OAASA,CACpE,EAED,iBAAiB,CAAE,KAAAA,GAAQ,CACvB,OAAO,KAAK,IAAI,iDAAiDA,CAAI,OAAO,CAC/E,EAED,uBAAuB,CAAE,KAAAA,GAAQ,CAC7B,OAAO,KAAK,IAAI,iDAAiDA,CAAI,cAAc,CACtF,EAED,eAAe,CAAE,KAAAA,GAAQ,CACrB,MAAO,CACH,mEAAoEA,IAAS,KAAK,iBAAiB,IACnH,CACS,EAED,SAAU,CACN,KAAK,oBACA,iBAAiB,KAAK,gBAAgB,EACtC,KAAK,IAAM,CACR,KAAK,0BAA0B,CAC3B,QAAS,KAAK,IAAI,uDAAuD,CACjG,CAAqB,CACrB,CAAiB,EACA,KAAK,KAAK,UAAU,EACpB,MAAM,IAAM,CACT,KAAK,wBAAwB,CACzB,QAAS,KAAK,IAAI,qDAAqD,CAC/F,CAAqB,CACrB,CAAiB,CACR,CACJ,CACL,CAAC"}