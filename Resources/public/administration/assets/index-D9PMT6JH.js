const s=`{% block sw_date_filter %} <sw-range-filter :class="'sw-date-filter' + ((filter.showTimeframe) ? ' --has-timeframe' : '')" :value="dateValue" :title="filter.label" :active="active" :show-reset-button="!!dateValue.from || !!dateValue.to" :is-show-divider="showDivider" :property="filter.property" @filter-update="updateFilter" @filter-reset="resetFilter" > {% block sw_date_filter_timeframe %} <sw-single-select v-if="filter.showTimeframe" v-model:value="dateValue.timeframe" class="sw-date-filter__timeframe" placeholder="Select timeframe" :options="timeframeOptions" @update:value="onTimeframeSelect" /> {% endblock %} {% block sw_date_filter_from_field %} <template #from-field> <sw-datepicker v-model:value="dateValue.from" v-bind="$attrs" class="sw-date-filter__from" :date-type="dateType" :placeholder="filter.fromPlaceholder" :label="fromToFieldLabel('from')" @update:value="resetTimeframe" /> </template> {% endblock %} {% block sw_date_filter_to_field %} <template #to-field> <sw-datepicker v-model:value="dateValue.to" v-bind="$attrs" class="sw-date-filter__to" :date-type="dateType" :placeholder="filter.toPlaceholder" :label="fromToFieldLabel('to')" @update:value="resetTimeframe" /> </template> {% endblock %} </sw-range-filter> {% endblock %}`,{Component:o}=Shopware,{Criteria:d}=Shopware.Data;o.register("sw-date-filter",{template:s,inject:["feature"],emits:["filter-reset","filter-update"],props:{filter:{type:Object,required:!0},active:{type:Boolean,required:!0}},data(){return{dateValue:{from:null,to:null,timeframe:null},timeframeOptions:[{label:this.$tc("sw-order.filters.orderDateFilter.options.lastYear"),value:-365},{label:this.$tc("sw-order.filters.orderDateFilter.options.lastQuarter"),value:"lastQuarter"},{label:this.$tc("sw-order.filters.orderDateFilter.options.lastMonth"),value:-30},{label:this.$tc("sw-order.filters.orderDateFilter.options.lastWeek"),value:-7},{label:this.$tc("sw-order.filters.orderDateFilter.options.lastDay"),value:-1},{label:this.$tc("sw-order.filters.orderDateFilter.options.custom"),value:"custom",hidden:!0}]}},computed:{dateType(){return["time","date","datetime","datetime-local"].includes(this.filter.dateType)?this.filter.dateType:"date"},isDateTimeType(){return this.dateType==="datetime"||this.dateType==="datetime-local"},showDivider(){return!this.isDateTimeType&&!this.filter.showTimeframe}},watch:{"filter.value":{handler(){this.filter.value&&(this.dateValue={...this.filter.value})}}},methods:{fromToFieldLabel(e){const t=`${e}FieldLabel`;if(!this.filter.hasOwnProperty(t))return this.$tc(`global.default.${e}`);const r=this.filter[t];return r||null},updateFilter(e){if(!this.dateValue.from&&!this.dateValue.to){this.$emit("filter-reset",this.filter.name);return}const{value:t}=this.filter;if(!(t&&t.from===this.dateValue.from&&t.to===this.dateValue.to)){if(this.dateValue.to){const r=new Date(this.dateValue.to);r.setHours(23,59,59),this.dateValue.to=r.toISOString()}this.$emit("filter-update",this.filter.name,e,this.dateValue)}},onTimeframeSelect(e){if(!e)return;if(!this.timeframeOptions.some(i=>i.value===e)){console.error(`Timeframe ${e} is not allowed for sw-date-filter component`);return}this.resetFilter();let t=new Date,r=new Date;t.setDate(t.getDate()+e),t.setHours(0,0,0),e==="lastQuarter"&&({startDate:t,endDate:r}=this.getPreviousQuarterDates());const a={gte:t.toISOString(),lte:r.toISOString()},l=[d.range(this.filter.property,a)];this.dateValue={from:a.gte,to:a.lte,timeframe:e},this.$emit("filter-update",this.filter.name,l,this.dateValue)},resetFilter(){this.dateValue={from:null,to:null,timeframe:null},this.$emit("filter-reset",this.filter.name,this.dateValue)},resetTimeframe(){this.dateValue.timeframe="custom"},getPreviousQuarterDates(){const e=new Date,t=Math.floor(e.getMonth()/3),r=new Date(e.getFullYear(),t*3-3,1),a=new Date(e.getFullYear(),r.getMonth()+3,0,23,59,59);return{startDate:r,endDate:a}}}});
