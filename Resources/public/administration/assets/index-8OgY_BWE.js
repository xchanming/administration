import{d as h}from"./util.service-B7bLiCAI.js";import"./channel-oRk5-XZJ.js";import"./administration-DCOj2uiN.js";import"./_baseUniq-S2dU3oH3.js";import"./_baseIteratee-CqDR5IDS.js";import"./camelCase-D7-BemT7.js";import"./string.utils-CcfYXjow.js";const _=`{% block sw_mail_template_detail %} <sw-page class="sw-mail-template-detail"> {% block sw_mail_template_detail_header %} <template #smart-bar-header> <h2 v-if="mailTemplate"> {{ $tc('sw-mail-template.detail.textHeadlineEdit') }} </h2> <h2 v-else class="sw-mail-template-detail__empty-title" > {{ $tc('sw-mail-template.detail.textHeadline') }} </h2> </template> {% endblock %} {% block sw_mail_template_detail_actions %} <template #smart-bar-actions> {% block sw_mail_template_detail_actions_abort %} <sw-button v-tooltip.bottom="{ message: 'ESC', appearance: 'light' }" :disabled="isLoading" @click="onCancel" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_mail_template_detail_actions_save %} <sw-button-process v-tooltip.bottom="tooltipSave" class="sw-mail-template-detail__save-action" variant="primary" :is-loading="isLoading" :process-success="isSaveSuccessful" :disabled="!allowSave || undefined" @update:process-success="saveFinish" @click.prevent="onSave" > {{ $tc('sw-mail-template.detail.buttonSave') }} </sw-button-process> {% endblock %} </template> {% endblock %} {% block sw_mail_template_detail_language_switch %} <template #language-switch> <sw-language-switch :save-changes-function="saveOnLanguageChange" :abort-change-function="abortOnLanguageChange" @on-change="onChangeLanguage" /> </template> {% endblock %} {% block sw_mail_template_detail_content %} <template #content> <sw-card-view sidebar> <template v-if="isLoading"> <sw-skeleton variant="detail-bold" /> <sw-skeleton /> </template> <template v-else> {% block sw_mail_template_detail_content_language_info %} <sw-language-info :entity-description="placeholder(mailTemplate.mailTemplateType, 'name', $tc('sw-mail-template.detail.textHeadline'))" /> {% endblock %} {% block sw_mail_template_detail_basic_info %} <sw-card :title="$tc('sw-mail-template.detail.basic.titleCard')" position-identifier="sw-mail-template-detail-basic-info" > {% block sw_mail_template_basic_form_mail_type_field %} <sw-entity-single-select id="mailTemplateTypes" v-model:value="mailTemplate.mailTemplateTypeId" name="sw-field--mailTemplate-mailTemplateTypeId" entity="mail_template_type" required show-clearable-button :label="$tc('sw-mail-template.detail.basic.labelMailType')" :placeholder="$tc('sw-mail-template.detail.basic.placeholderMailType')" :disabled="!acl.can('mail_templates.editor') || undefined" :error="mailTemplateMailTemplateTypeIdError" @update:value="onChangeType" /> {% endblock %} {% block sw_mail_template_basic_form_description_field %} <sw-textarea-field v-model:value="mailTemplate.description" name="sw-field--mailTemplate-description" :label="$tc('sw-mail-template.detail.basic.labelDescription')" :placeholder="$tc('sw-mail-template.detail.basic.placeholderDescription')" :disabled="!acl.can('mail_templates.editor') || undefined" /> {% endblock %} </sw-card> {% endblock %} {% block sw_mail_template_detail_options_info %} <sw-card position-identifier="sw-mail-template-detail-options-info" :title="$tc('sw-mail-template.detail.options.titleCard')" > <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="0 30px" class="sw-mail-template-detail-options__container" > <div class="sw-mail-template-detail__options-info-wrapper"> {% block sw_mail_template_options_form_subject_field %} <sw-text-field v-model:value="mailTemplate.subject" name="sw-field--mailTemplate-subject" required :label="$tc('sw-mail-template.detail.options.labelSubject')" :placeholder="placeholder(mailTemplate, 'subject', $tc('sw-mail-template.detail.options.placeholderSubject'))" :disabled="!acl.can('mail_templates.editor') || undefined" :error="mailTemplateSubjectError" /> {% endblock %} </div> {% block sw_mail_template_options_form_sender_name_field %} <sw-text-field v-model:value="mailTemplate.senderName" name="sw-field--mailTemplate-senderName" :label="$tc('sw-mail-template.detail.options.labelSenderName')" :placeholder="placeholder(mailTemplate, 'senderName', $tc('sw-mail-template.detail.options.placeholderSenderName'))" :disabled="!acl.can('mail_templates.editor') || undefined" /> {% endblock %} </sw-container> </sw-card> {% endblock %} {% block sw_mail_template_detail_attachments_info %} <sw-card :title="$tc('sw-mail-template.detail.media.titleCard')" position-identifier="sw-mail-template-detail-atttachments-info" > {% block sw_mail_template_detail_attachments_info_upload %} <sw-upload-listener v-if="mailTemplate.id" auto-upload :upload-tag="mailTemplate.id" @media-upload-finish="successfulUpload" /> <sw-media-upload-v2 v-if="mailTemplate.id" variant="regular" default-folder="mail_template" :upload-tag="mailTemplate.id" :file-accept="fileAccept" :disabled="!acl.can('mail_templates.editor') || undefined" @media-drop="onMediaDrop" @media-upload-sidebar-open="openMediaSidebar" /> {% endblock %} {% block sw_mail_template_detail_attachments_info_grid %} <sw-data-grid v-if="mailTemplateMedia && mailTemplateMedia.length > 0" class="sw-mail-template-detail__attachments-info-grid" :data-source="mailTemplateMedia" :columns="mediaColumns" :full-page="false" :show-settings="false" :allow-column-edit="false" :allow-inline-edit="false" :compact-mode="false" :show-selection="acl.can('mail_templates.editor') || undefined" @selection-change="onSelectionChanged" > <template #preview-fileName="{ item }"> {% block sw_mail_template_detail_attachments_info_grid_preview %} <sw-media-preview :source="item.id" /> {% endblock %} </template> <template #actions="{ item }"> {% block sw_mail_template_detail_attachments_info_grid_actions %} <sw-context-menu-item v-tooltip.bottom="{ message: $tc('sw-privileges.tooltip.warning'), disabled: acl.can('mail_templates.editor') || undefined, showOnDisabledElements: true }" variant="danger" :disabled="!acl.can('mail_templates.editor') || undefined" @click="onDeleteMedia(item.id)" > {{ $tc('global.default.delete') }} </sw-context-menu-item> {% endblock %} </template> <template #bulk> {% block sw_mail_template_detail_attachments_info_grid_bulk %} <a class="link link-danger" role="link" tabindex="0" @click="onDeleteSelectedMedia" @keydown.enter="onDeleteSelectedMedia" > {{ $tc('global.default.delete') }} </a> {% endblock %} </template> </sw-data-grid> {% endblock %} </sw-card> {% endblock %} {% block sw_mail_template_detail_mail_text_info %} <sw-card :title="$tc('sw-mail-template.detail.mailText.titleCard')" position-identifier="sw-mail-template-detail-text-info" > {% block sw_mail_template_mail_text_form_content_plain_field %} <sw-code-editor ref="plainEditor" :key="\`\${mailTemplate.mailTemplateTypeId}plain\`" v-model:value="mailTemplate.contentPlain" name="content_plain" completion-mode="entity" :label="$tc('sw-mail-template.detail.mailText.labelContentPlain')" :placeholder="placeholder(mailTemplate, 'contentPlain', $tc('sw-mail-template.detail.mailText.placeholderPlain'))" :completer-function="outerCompleterFunction" :editor-config="editorConfig" :disabled="!acl.can('mail_templates.editor')" :error="mailTemplateContentPlainError" required /> {% endblock %} {% block sw_mail_template_mail_text_form_content_html_field %} <sw-code-editor ref="htmlEditor" :key="\`\${mailTemplate.mailTemplateTypeId}html\`" v-model:value="mailTemplate.contentHtml" name="content_html" completion-mode="entity" :label="$tc('sw-mail-template.detail.mailText.labelContentHtml')" :placeholder="placeholder(mailTemplate, 'contentHtml', $tc('sw-mail-template.detail.mailText.placeholderHtml'))" :completer-function="outerCompleterFunction" :editor-config="editorConfig" :disabled="!acl.can('mail_templates.editor')" :error="mailTemplateContentHtmlError" required /> {% endblock %} </sw-card> {% block sw_mail_template_detail_preview_modal %} <sw-modal v-if="mailPreview" class="sw-mail-template-preview-modal" :title="$tc('sw-mail-template.detail.previewModalTitle')" :is-loading="isLoading" @modal-close="onCancelShowPreview" > <template v-if="!isLoading"> <span v-html="mailPreview"></span> </template> {% block sw_mail_template_detail_preview_modal_footer %} <template #modal-footer> {% block sw_mail_template_detail_preview_modal_footer_cancel %} <sw-button size="small" @click="onCancelShowPreview" > {{ $tc('global.default.close') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} {% endblock %} </template> </sw-card-view> </template> {% endblock %} {% block sw_mail_template_detail_sidebar %} <template #sidebar> <sw-sidebar :propagate-width="true"> {% block sw_mail_template_detail_sidebar_inner %} {% block sw_mail_template_detail_sidebar_inner_test_mail %} <sw-sidebar-item icon="regular-paper-plane" :title="$tc('sw-mail-template.detail.sidebar.titleTestMail')" class="sw-mail-template-detail__test-mail-sidebar" > <div class="sw-mail-template-detail__test-mail-sidebar-container"> <sw-alert v-if="showLanguageNotAssignedToSalesChannelWarning" variant="warning" > {{ $tc('sw-mail-template.detail.sidebar.languageNotAssignedToSalesChannel') }} </sw-alert> {% block sw_mail_template_mail_text_form_test_mail_field %} <sw-text-field v-model:value="testerMail" name="sw-field--testerMail" :placeholder="$tc('sw-mail-template.detail.sidebar.placeholderTestMail')" :label="$tc('sw-mail-template.detail.sidebar.labelTestMail')" :disabled="!acl.can('mail_templates.editor') || undefined" /> {% endblock %} {% block sw_mail_template_mail_text_form_test_sales_channel_field %} <sw-entity-single-select v-model:value="testMailSalesChannelId" name="sw-field--testMailSalesChannelId" entity="sales_channel" :label="$tc('sw-mail-template.detail.basic.labelSalesChannels')" :placeholder="$tc('sw-mail-template.detail.basic.placeholderSalesChannels')" show-clearable-button /> {% endblock %} {% block sw_mail_template_mail_text_form_test_mail_button %} <sw-button :disabled="isSendButtonDisabled" class="sw-mail-template-detail__send-test-mail" @click="onClickTestMailTemplate" > {{ $tc('sw-mail-template.detail.sidebar.buttonTestMail') }} </sw-button> {% endblock %} </div> </sw-sidebar-item> {% endblock %} {% block sw_mail_template_detail_sidebar_inner_variables %} <sw-sidebar-item icon="regular-code" :title="$tc('sw-mail-template.detail.sidebar.titleShowAvailableVariables')" :disabled="isLoading || !hasTemplateData" class="sw-mail-template-detail__show-available-variables" > <div class="sw-mail-template-detail__available-variables-sidebar-container"> {% block sw_mail_template_available_variables_tree %} <sw-tree class="sw-mail-template-detail__available-variables-sidebar-container__tree" :searchable="false" :disable-context-menu="true" :on-change-route="() => { return false; }" :items="loadedAvailableVariables" :sortable="false" @get-tree-items="onGetTreeItems" > {% block sw_mail_template_available_variables_tree_headline %} <template #headline> <span></span> </template> {% endblock %} {% block sw_mail_template_available_variables_tree_items %} <template #items="{ treeItems, sortable, draggedItem, disableContextMenu, onChangeRoute }" > {% block sw_mail_template_available_variables_tree_items_item %} <sw-tree-item v-for="(item, index) in treeItems" :key="item.id" :item="item" :disable-context-menu="disableContextMenu" :on-change-route="onChangeRoute" :sortable="false" :display-checkbox="false" > {% block sw_mail_template_available_variables_tree_items_item_grip %} <template #grip> <span></span> </template> {% endblock %} {% block sw_mail_template_available_variables_tree_items_item_actions %} <template #actions="{ item }"> <sw-icon v-tooltip="{ message: $tc('sw-mail-template.detail.sidebar.copyTooltip'), width: 150, position: 'bottom' }" name="regular-products-s" class="sw-mail-template-detail__copy_icon" @click="onCopyVariable(item.schema)" /> </template> {% endblock %} </sw-tree-item> {% endblock %} </template> {% endblock %} </sw-tree> {% endblock %} </div> </sw-sidebar-item> {% endblock %} {% block sw_mail_template_detail_sidebar_inner_preview %} <sw-sidebar-item icon="regular-eye" :title="$tc('sw-mail-template.detail.sidebar.titleShowPreview')" :disabled="isLoading || showPreview || !hasTemplateData" class="sw-mail-template-detail__show-preview-sidebar" @click="onClickShowPreview" /> {% endblock %} {% block sw_mail_template_detail_sidebar_inner_media %} <sw-sidebar-media-item ref="mediaSidebarItem"> <template #context-menu-items="media" > {% block sw_mail_template_detail_sidebar_add_attachment %} <sw-context-menu-item :disabled="!acl.can('mail_templates.editor') || undefined" @click="onAddItemToAttachment(media.mediaItem)" > {{ $tc('sw-mail-template.detail.sidebar.labelContextMenuAddToMailTemplate') }} </sw-context-menu-item> {% endblock %} </template> </sw-sidebar-media-item> {% endblock %} {% endblock %} </sw-sidebar> </template> {% endblock %} </sw-page> {% endblock %}`,{Mixin:r,Context:b}=Cicada,{Criteria:d,EntityCollection:u}=Cicada.Data,{warn:w}=Cicada.Utils.debug,{mapPropertyErrors:g}=Cicada.Component.getComponentHelper(),S={template:_,compatConfig:Cicada.compatConfig,inject:["mailService","entityMappingService","repositoryFactory","acl","feature"],mixins:[r.getByName("placeholder"),r.getByName("notification")],shortcuts:{"SYSTEMKEY+S":{active(){return this.allowSave},method:"onSave"},ESCAPE:"onCancel"},data(){return{mailTemplate:!1,testerMail:"",mailTemplateId:null,mailPreview:null,isLoading:!1,isSaveSuccessful:!1,mailTemplateType:{},selectedType:{},editorConfig:{enableBasicAutocompletion:!0},mailTemplateMedia:null,mailTemplateMediaSelected:{},fileAccept:"application/pdf, image/*",testMailSalesChannelId:null,availableVariables:{},entitySchema:Object.fromEntries(Cicada.EntityDefinition.getDefinitionRegistry()),showLanguageNotAssignedToSalesChannelWarning:!1}},metaInfo(){return{title:this.$createTitle(this.identifier)}},computed:{...g("mailTemplate",["contentHtml","contentPlain","mailTemplateTypeId","subject"]),loadedAvailableVariables(){return!this.mailTemplateType||!this.mailTemplateType.templateData?[]:(Object.values(this.availableVariables).length===0&&this.loadInitialAvailableVariables(),Object.values(this.availableVariables))},identifier(){return this.placeholder(this.mailTemplateType,"name")},mailTemplateRepository(){return this.repositoryFactory.create("mail_template")},mediaRepository(){return this.repositoryFactory.create("media")},mailTemplateMediaRepository(){return this.repositoryFactory.create("mail_template_media")},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},outerCompleterFunction(){return function(t,a){function i(l){const n=[];return Object.keys(t.getEntityMapping(l,a.availableEntities)).forEach(s=>{n.push({value:s})}),n}return i}(this.entityMappingService,this.mailTemplateType)},mailTemplateTypeRepository(){return this.repositoryFactory.create("mail_template_type")},testMailRequirementsMet(){var e,t,a,i;return this.testerMail&&(this.mailTemplate.subject||((e=this.mailTemplate.translated)==null?void 0:e.subject))&&(this.mailTemplate.contentPlain||((t=this.mailTemplate.translated)==null?void 0:t.contentPlain))&&(this.mailTemplate.contentHtml||((a=this.mailTemplate.translated)==null?void 0:a.contentHtml))&&(this.mailTemplate.senderName||((i=this.mailTemplate.translated)==null?void 0:i.senderName))},mediaColumns(){return this.getMediaColumns()},allowSave(){return this.mailTemplate&&this.mailTemplate.isNew()?this.acl.can("mail_templates.creator"):this.acl.can("mail_templates.editor")},tooltipSave(){return this.allowSave?{message:`${this.$device.getSystemKey()} + S`,appearance:"light"}:{message:this.$tc("sw-privileges.tooltip.warning"),disabled:this.allowSave,showOnDisabledElements:!0}},showPreview(){return this.mailTemplate.contentHtml===void 0||this.mailTemplate.mailTemplateTypeId===void 0||this.mailTemplate.contentHtml===""},hasTemplateData(){var e;return Object.keys(((e=this.mailTemplateType)==null?void 0:e.templateData)||{}).length>0},lacksEmailSendPermission(){return!this.acl.can("api_send_email")},isSendButtonDisabled(){return this.isLoading||!this.testMailRequirementsMet||this.lacksEmailSendPermission}},watch:{"$route.params.id"(){this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){Cicada.ExtensionAPI.publishData({id:"sw-mail-template-detail__mailTemplate",path:"mailTemplate",scope:this}),Cicada.ExtensionAPI.publishData({id:"sw-mail-template-detail__mailTemplateMedia",path:"mailTemplateMedia",scope:this}),Cicada.ExtensionAPI.publishData({id:"sw-mail-template-detail__mailTemplateMediaSelected",path:"mailTemplateMediaSelected",scope:this}),Cicada.ExtensionAPI.publishData({id:"sw-mail-template-detail__mailTemplateType",path:"mailTemplateType",scope:this}),Cicada.ExtensionAPI.publishData({id:"sw-mail-template-detail__availableVariables",path:"availableVariables",scope:this}),Cicada.ExtensionAPI.publishData({id:"sw-mail-template-detail__testMailSalesChannelId",path:"testMailSalesChannelId",scope:this}),Cicada.ExtensionAPI.publishData({id:"sw-mail-template-detail__testerMail",path:"testerMail",scope:this}),this.$route.params.id&&(this.mailTemplateId=this.$route.params.id,this.loadEntityData())},loadEntityData(){const e=new d(1,25);e.addAssociation("mailTemplateType"),e.addAssociation("media.media"),this.isLoading=!0,this.mailTemplateRepository.get(this.mailTemplateId,Cicada.Context.api,e).then(t=>{var a;this.mailTemplate=t,(a=this.mailTemplate.mailTemplateType)!=null&&a.id?(this.onChangeType(this.mailTemplate.mailTemplateType.id),this.getMailTemplateMedia()):(this.isLoading=!1,this.createNotificationError({message:this.$tc("sw-mail-template.general.missingMailTemplateTypeErrorMessage")}))})},getMailTemplateType(){return this.mailTemplate.mailTemplateTypeId?this.mailTemplateTypeRepository.get(this.mailTemplate.mailTemplateTypeId).then(e=>{this.mailTemplateType=e}):Promise.resolve()},createMediaCollection(){return new u("/media","media",Cicada.Context.api)},getMailTemplateMedia(){this.mailTemplateMedia=this.createMediaCollection(),this.mailTemplate.media.forEach(e=>{e.languageId===Cicada.Context.api.languageId&&this.mailTemplateMedia.push(e.media)})},abortOnLanguageChange(){return this.mailTemplateRepository.hasChanges(this.mailTemplate)},saveOnLanguageChange(){return this.onSave()},onChangeLanguage(e){Cicada.State.commit("context/setApiLanguageId",e),this.loadEntityData()},saveFinish(){this.isSaveSuccessful=!1},onCancel(){this.$router.push({name:"sw.mail.template.index"})},onSave(){const e=[],t=this.mailTemplate.subject||this.placeholder(this.mailTemplate,"subject");return this.isSaveSuccessful=!1,this.isLoading=!0,e.push(this.mailTemplateRepository.save(this.mailTemplate).then(()=>{Promise.all(e).then(()=>{this.loadEntityData(),this.saveFinish()})}).catch(a=>{let i="";if(this.isLoading=!1,a.response.data.errors.length>0){const l=a.response.data.errors[0].detail;i=`<br/> ${this.$tc("sw-mail-template.detail.textErrorMessage")}: "${l}"`}this.createNotificationError({message:this.$tc("sw-mail-template.detail.messageSaveError",0,{subject:t})+i})})),Promise.all(e)},onClickTestMailTemplate(){const e={message:this.$tc("sw-mail-template.general.notificationTestMailSuccessMessage")},t={message:this.$tc("sw-mail-template.general.notificationTestMailErrorMessage")},a={message:this.$tc("sw-mail-template.general.notificationTestMailSalesChannelErrorMessage")};if(!this.testMailSalesChannelId){this.createNotificationError(a);return}const i=new d;i.addAssociation("languages"),this.salesChannelRepository.get(this.testMailSalesChannelId,b.api,i).then(l=>{if(!l.languages.has(Cicada.Context.api.languageId)){this.showLanguageNotAssignedToSalesChannelWarning=!0;return}this.showLanguageNotAssignedToSalesChannelWarning=!1}),this.mailService.testMailTemplate(this.testerMail,this.mailPreviewContent(),this.mailTemplateMedia,this.testMailSalesChannelId,this.mailTemplate.mailTemplateTypeId,this.mailTemplate.id).then(l=>{if(!((l==null?void 0:l.size)!==0)){this.createNotificationError({message:this.$tc("sw-mail-template.general.notificationGeneralSyntaxValidationErrorMessage")});return}this.createNotificationSuccess(e)}).catch(l=>{this.createNotificationError(t),w(this._name,l.message,l.response)})},onClickShowPreview(){this.isLoading=!0,this.mailPreview=this.mailService.buildRenderPreview(this.mailTemplateType,this.mailPreviewContent()).then(e=>{this.mailPreview=e}).catch(e=>{var t,a,i,l,n,s,m,o;this.mailPreview=null,(l=(i=(a=(t=e.response)==null?void 0:t.data)==null?void 0:a.errors)==null?void 0:i[0])!=null&&l.detail?this.createNotificationError({message:this.$tc("sw-mail-template.general.notificationSyntaxValidationErrorMessage",0,{errorMsg:(o=(m=(s=(n=e.response)==null?void 0:n.data)==null?void 0:s.errors)==null?void 0:m[0])==null?void 0:o.detail})}):this.createNotificationError({message:this.$tc("sw-mail-template.general.notificationGeneralSyntaxValidationErrorMessage")})}).finally(()=>{this.isLoading=!1})},mailPreviewContent(){var t,a;const e={...this.mailTemplate};return e.contentHtml&&(e.contentHtml=this.replaceContent(e.contentHtml)),(t=e.translated)!=null&&t.contentHtml&&(e.translated.contentHtml=this.replaceContent(e.translated.contentHtml)),e.contentPlain&&(e.contentPlain=this.replaceContent(e.contentPlain)),(a=e.translated)!=null&&a.contentPlain&&(e.translated.contentPlain=this.replaceContent(e.translated.contentPlain)),e},replaceContent(e){return e.replace(/\.at\(([0-9]*)\)\./g,t=>`.${parseInt(t.match(/[0-9]/g).join(""),10)}.`).replace(/\.first\./g,".0.")},onCancelShowPreview(){this.mailPreview=null},async onCopyVariable(e){try{await h.copyStringToClipboard(e)}catch(t){let a="";if(t.response.data.errors.length>0){const i=t.response.data.errors[0].detail;a=`<br/> ${this.$tc("sw-mail-template.detail.textErrorMessage")}: "${i}"`}this.createNotificationError({message:a})}},async onChangeType(e){var t,a,i;if(!e){this.selectedType={};return}this.isLoading=!0;try{await this.getMailTemplateType(),this.selectedType=await this.mailTemplateTypeRepository.get(e),this.loadInitialAvailableVariables(),this.outerCompleterFunction()}catch(l){let n=l.message??"";if(((i=(a=(t=l.response)==null?void 0:t.data)==null?void 0:a.errors)==null?void 0:i.length)>0){const s=l.response.data.errors[0].detail;n=`<br/> ${this.$tc("sw-mail-template.detail.textErrorMessage")}: "${s}"`}this.createNotificationError({message:n})}finally{this.isLoading=!1}},getMediaColumns(){return[{property:"fileName",label:"sw-mail-template.list.columnFilename"}]},successfulUpload({targetId:e}){this.mailTemplate.media.find(t=>t.mediaId===e)||this.mediaRepository.get(e).then(t=>{this.createMailTemplateMediaAssoc(t)})},onMediaDrop(e){this.successfulUpload({targetId:e.id})},createMailTemplateMediaAssoc(e){const t=this.mailTemplateMediaRepository.create();t.mailTemplateId=this.mailTemplateId,t.languageId=Cicada.Context.api.languageId,t.mediaId=e.id,this.mailTemplate.media.length<=0?t.position=0:t.position=this.mailTemplate.media.length,this.mailTemplate.media.push(t),this.mailTemplateMedia.push(e)},openMediaSidebar(){this.$refs.mediaSidebarItem.openContent()},onDeleteMedia(e){const t=this.mailTemplate.media.find(a=>a.mediaId===e);t&&(this.mailTemplate.media.remove(t.id),this.getMailTemplateMedia())},onSelectionChanged(e){this.selectedItems=e},onDeleteSelectedMedia(){Object.keys(this.selectedItems).forEach(e=>{this.onDeleteMedia(e)})},_checkIfMediaIsAlreadyUsed(e){return this.mailTemplate.media.some(t=>t.mediaId===e&&t.languageId===Cicada.Context.api.languageId)},onAddItemToAttachment(e){return this._checkIfMediaIsAlreadyUsed(e.id)?(this.createNotificationInfo({message:this.$tc("sw-mail-template.list.errorMediaItemDuplicated")}),!1):(this.createMailTemplateMediaAssoc(e),!0)},loadAvailableVariables(e,t){if(!this.mailTemplateType||!this.mailTemplateType.availableEntities)return[];const a=e.concat("."),i=t.concat("."),n=Object.keys(Cicada.Utils.get(this.mailTemplateType.templateData,e)).map(s=>{const m=Cicada.Utils.get(this.mailTemplateType.templateData,a.concat(s)),c=typeof m=="object"&&m!==null?Object.values(m).length:0,p=this.isToManyAssociationVariable(e)?`${i}at(${parseInt(s,10)})`:i+s;return{id:a+s,schema:p,name:s,childCount:c,parentId:e,afterId:null}});return this.addVariables(n),!0},isToManyAssociationVariable(e){if(!e)return!1;const t=e.split(".");t.splice(1,0,"properties");const a=Cicada.Utils.get(this.entitySchema,`${t.join(".")}`);return a&&a.type==="association"&&["one_to_many","many_to_many"].includes(a.relation)},onGetTreeItems(e,t){this.loadAvailableVariables(e,t)},addVariables(e){e.forEach(t=>{this.isCompatEnabled("INSTANCE_SET")?this.$set(this.availableVariables,t.id,t):this.availableVariables[t.id]=t})},loadInitialAvailableVariables(){this.availableVariables={},this.hasTemplateData&&Object.keys(this.mailTemplateType.templateData).forEach(e=>{const t=Cicada.Utils.get(this.mailTemplateType.templateData,e);let a=0;typeof t=="object"&&t!==null&&(a=Object.values(t).length),this.addVariables([{id:e,schema:e,name:e,childCount:a,parentId:null,afterId:null}])})}}};export{S as default};
//# sourceMappingURL=index-8OgY_BWE.js.map
