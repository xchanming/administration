const a='{% block sw_sales_channel_config %} <div class="sw-sales-channel-config" @salesChannelChanged="save" > <div class="sw-sales-channel-config__global-sales-channel-switch"> {% block sw_sales_channel_config_switch %} <slot name="select" v-bind="{ onInput, selectedSalesChannelId, salesChannel }" > <sw-single-select v-model:value="selectedSalesChannelId" :options="salesChannel" label-property="translated.name" value-property="id" show-clearable-button @update:value="onInput" /> </slot> {% endblock %} </div> <slot name="content" v-bind="{ actualConfigData, allConfigs, selectedSalesChannelId }" ></slot> </div> {% endblock %}',{Component:t}=Cicada,{Criteria:s}=Cicada.Data;t.register("sw-sales-channel-config",{template:a,compatConfig:Cicada.compatConfig,inject:["systemConfigApiService","repositoryFactory","feature"],emits:["update:value","salesChannelChanged"],props:{domain:{type:String,required:!1,default:""},value:{type:Object,required:!1},criteria:{type:Object,required:!1,default:()=>new s(1,25)}},data(){return{allConfigs:{},selectedSalesChannelId:null,salesChannel:[]}},computed:{actualConfigData:{get(){return this.allConfigs[this.selectedSalesChannelId]},set(e){this.allConfigs={...this.allConfigs,[this.selectedSalesChannelId]:e}}},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")}},watch:{actualConfigData:{handler(e){e&&this.$emit("update:value",e)},deep:!0}},created(){this.createdComponent()},methods:{createdComponent(){this.salesChannel.length||this.salesChannelRepository.search(this.criteria,Cicada.Context.api).then(e=>{e.add({id:null,translated:{name:this.$tc("sw-sales-channel-switch.labelDefaultOption")}}),this.salesChannel=e}),!this.allConfigs[this.selectedSalesChannelId]&&this.domain&&!this.actualConfigData&&this.readAll().then(e=>{this.actualConfigData=e})},readAll(){return this.systemConfigApiService.getValues(this.domain,this.selectedSalesChannelId)},onInput(e){this.selectedSalesChannelId=e,this.$emit("salesChannelChanged"),this.createdComponent()},save(){return this.domain&&this.domain.length!==0?this.systemConfigApiService.batchSave(this.allConfigs):Promise.resolve(this.allConfigs)}}});
//# sourceMappingURL=index-DbpEk3OA.js.map
