{"version":3,"file":"index-BbiDQuKw.js","sources":["../../../app/administration/src/module/sw-media/page/sw-media-index/sw-media-index.html.twig","../../../app/administration/src/module/sw-media/page/sw-media-index/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_media_index %}\n<sw-page class=\"sw-media-index\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_list_search_bar %}\n    <template #search-bar>\n        <sw-search-bar\n            initial-search-type=\"media\"\n            :initial-search=\"term\"\n            @search=\"onSearch\"\n        />\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_index_smart_bar %}\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_index_bread_crumb_navigation %}\n    <template #smart-bar-back>\n        <div class=\"sw-media-index__navigation\">\n\n            <template v-if=\"parentFolder\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_index_bread_crumb_navigation_icon %}\n                <router-link :to=\"{ name: 'sw.media.index', params: { folderId: null } }\">\n                    <img\n                        :src=\"assetFilter('/administration/static/img/media/folder--back--breadcrumb.svg')\"\n                        class=\"sw-media-index__navigation-breadcrumb\"\n                        alt=\"Folder back breadcrumb\"\n                    >\n                </router-link>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_media_index_bread_crumb_navigation_parent%}\n                <router-link\n                    class=\"sw-media-index__navigation-label\"\n                    :to=\"{ name: 'sw.media.index', params: { folderId: parentFolder.id } }\"\n                >\n                    {{ parentFolder.name }}\n                </router-link>\n                {% endblock %}\n            </template>\n        </div>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_index_smart_bar_header %}\n    <template\n        v-if=\"currentFolder\"\n        #smart-bar-header\n    >\n        <h2>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_index_smart_bar_heading %}\n            {{ currentFolder.name }}\n            {% endblock %}\n        </h2>\n    </template>\n    {% endblock %}\n\n    <template #smart-bar-actions>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_media_index_smart_bar_media_upload %}\n        <sw-media-upload-v2\n            v-tooltip=\"{\n                message: $tc('sw-privileges.tooltip.warning'),\n                disabled: acl.can('media.creator'),\n                showOnDisabledElements: true\n            }\"\n            :disabled=\"!acl.can('media.creator') || undefined\"\n            variant=\"compact\"\n            :file-accept=\"fileAccept\"\n            :target-folder-id=\"routeFolderId\"\n            :upload-tag=\"uploadTag\"\n        />\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_index_language_switch %}\n    <template #language-switch>\n        <sw-language-switch @on-change=\"reloadList\" />\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_media_index_page_content %}\n    <template #content>\n        <div class=\"sw-media-index__page-content\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_index_listing_grid %}\n            <sw-upload-listener\n                :upload-tag=\"uploadTag\"\n                @media-upload-add=\"onUploadsAdded\"\n                @media-upload-finish=\"onUploadFinished\"\n                @media-upload-fail=\"onUploadFailed\"\n                @media-upload-cancel=\"reloadList\"\n            />\n\n            <sw-media-library\n                ref=\"mediaLibrary\"\n                v-model:selection=\"selectedItems\"\n                class=\"sw-media-index__media-library\"\n                :folder-id=\"routeFolderId\"\n                :pending-uploads=\"uploads\"\n                :term=\"term\"\n                editable\n                @media-folder-change=\"updateRoute\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_index_sidebar %}\n            <sw-media-sidebar\n                :items=\"selectedItems\"\n                :current-folder-id=\"routeFolderId\"\n                editable\n                @media-sidebar-folder-renamed=\"updateFolder\"\n                @media-sidebar-items-delete=\"onItemsDeleted\"\n                @media-sidebar-folder-items-dissolve=\"onMediaFoldersDissolved\"\n                @media-sidebar-items-move=\"reloadList\"\n                @media-item-replaced=\"reloadList\"\n                @media-item-selection-remove=\"onMediaUnselect\"\n            />\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_media_index_list_grid_loader %}\n            <sw-loader v-if=\"isLoading\" />\n            {% endblock %}\n        </div>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n","import template from './sw-media-index.html.twig';\nimport './sw-media-index.scss';\n\nconst { Context, Filter } = Cicada;\n\n/**\n * @package discovery\n */\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'mediaService',\n        'acl',\n        'feature',\n    ],\n\n    props: {\n        routeFolderId: {\n            type: String,\n            default: null,\n        },\n\n        fileAccept: {\n            type: String,\n            required: false,\n            default: '*/*',\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            selectedItems: [],\n            uploads: [],\n            term: this.$route.query?.term ?? '',\n            uploadTag: 'upload-tag-sw-media-index',\n            parentFolder: null,\n            currentFolder: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        mediaFolderRepository() {\n            return this.repositoryFactory.create('media_folder');\n        },\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n        rootFolder() {\n            const root = this.mediaFolderRepository.create(Context.api);\n            root.name = this.$tc('sw-media.index.rootFolderName');\n            root.id = null;\n            return root;\n        },\n\n        assetFilter() {\n            return Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        routeFolderId() {\n            this.term = '';\n            this.updateFolder();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    unmounted() {\n        this.destroyedComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            // Vue router sets the folder id to an empty string if the page is reloaded\n            if (this.routeFolderId === '') {\n                this.updateRoute(null);\n\n                return;\n            }\n\n            this.updateFolder();\n        },\n\n        async updateFolder() {\n            if (!this.routeFolderId) {\n                this.currentFolder = this.rootFolder;\n                this.parentFolder = null;\n            } else {\n                this.currentFolder = await this.mediaFolderRepository.get(this.routeFolderId, Context.api);\n\n                if (this.currentFolder && this.currentFolder.parentId) {\n                    this.parentFolder = await this.mediaFolderRepository.get(this.currentFolder.parentId, Context.api);\n                } else {\n                    this.parentFolder = this.rootFolder;\n                }\n            }\n        },\n\n        destroyedComponent() {},\n\n        async onUploadsAdded() {\n            await this.mediaService.runUploads(this.uploadTag);\n            this.reloadList();\n        },\n\n        onUploadFinished({ targetId }) {\n            this.uploads = this.uploads.filter((upload) => {\n                return upload.id !== targetId;\n            });\n        },\n\n        onUploadFailed({ targetId }) {\n            this.uploads = this.uploads.filter((upload) => {\n                return targetId !== upload.id;\n            });\n        },\n\n        onChangeLanguage() {\n            this.clearSelection();\n        },\n\n        onSearch(value) {\n            this.term = value;\n            this.clearSelection();\n        },\n\n        onItemsDeleted(ids) {\n            this.onMediaFoldersDissolved(ids.folderIds);\n        },\n\n        onMediaFoldersDissolved(ids) {\n            this.clearSelection();\n            if (ids.includes(this.routeFolderId)) {\n                let routeId = null;\n                if (this.parentFolder) {\n                    routeId = this.parentFolder.id;\n                }\n\n                this.$router.push({\n                    name: 'sw.media.index',\n                    params: {\n                        folderId: routeId,\n                    },\n                });\n                return;\n            }\n\n            this.reloadList();\n        },\n\n        reloadList() {\n            this.$refs.mediaLibrary.refreshList();\n        },\n\n        clearSelection() {\n            this.selectedItems.splice(0, this.selectedItems.length);\n        },\n\n        onMediaUnselect({ item }) {\n            const index = this.selectedItems.findIndex((selected) => {\n                return selected === item;\n            });\n\n            if (index > -1) {\n                this.selectedItems.splice(index, 1);\n            }\n        },\n\n        updateRoute(newFolderId) {\n            this.term = this.$route.query?.term ?? '';\n            this.$router.push({\n                name: 'sw.media.index',\n                params: {\n                    folderId: newFolderId,\n                },\n            });\n        },\n    },\n};\n"],"names":["template","Context","Filter","index","_a","root","targetId","upload","value","ids","routeId","item","selected","newFolderId"],"mappings":"AAAA,MAAeA,EAAA,44FCGT,CAAE,QAAAC,EAAS,OAAAC,CAAQ,EAAG,OAMbC,EAAA,CACX,SAAAH,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,oBACA,eACA,MACA,SACH,EAED,MAAO,CACH,cAAe,CACX,KAAM,OACN,QAAS,IACZ,EAED,WAAY,CACR,KAAM,OACN,SAAU,GACV,QAAS,KACZ,CACJ,EAED,MAAO,CDlCX,IAAAI,ECmCQ,MAAO,CACH,UAAW,GACX,cAAe,CAAE,EACjB,QAAS,CAAE,EACX,OAAMA,EAAA,KAAK,OAAO,QAAZ,YAAAA,EAAmB,OAAQ,GACjC,UAAW,4BACX,aAAc,KACd,cAAe,IAC3B,CACK,EAED,UAAW,CACP,MAAO,CACH,MAAO,KAAK,aAAc,CACtC,CACK,EAED,SAAU,CACN,uBAAwB,CACpB,OAAO,KAAK,kBAAkB,OAAO,cAAc,CACtD,EACD,iBAAkB,CACd,OAAO,KAAK,kBAAkB,OAAO,OAAO,CAC/C,EACD,YAAa,CACT,MAAMC,EAAO,KAAK,sBAAsB,OAAOJ,EAAQ,GAAG,EAC1D,OAAAI,EAAK,KAAO,KAAK,IAAI,+BAA+B,EACpDA,EAAK,GAAK,KACHA,CACV,EAED,aAAc,CACV,OAAOH,EAAO,UAAU,OAAO,CAClC,CACJ,EAED,MAAO,CACH,eAAgB,CACZ,KAAK,KAAO,GACZ,KAAK,aAAY,CACpB,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,WAAY,CACR,KAAK,mBAAkB,CAC1B,EAED,QAAS,CACL,kBAAmB,CAEf,GAAI,KAAK,gBAAkB,GAAI,CAC3B,KAAK,YAAY,IAAI,EAErB,MACH,CAED,KAAK,aAAY,CACpB,EAED,MAAM,cAAe,CACZ,KAAK,eAIN,KAAK,cAAgB,MAAM,KAAK,sBAAsB,IAAI,KAAK,cAAeD,EAAQ,GAAG,EAErF,KAAK,eAAiB,KAAK,cAAc,SACzC,KAAK,aAAe,MAAM,KAAK,sBAAsB,IAAI,KAAK,cAAc,SAAUA,EAAQ,GAAG,EAEjG,KAAK,aAAe,KAAK,aAR7B,KAAK,cAAgB,KAAK,WAC1B,KAAK,aAAe,KAU3B,EAED,oBAAqB,CAAE,EAEvB,MAAM,gBAAiB,CACnB,MAAM,KAAK,aAAa,WAAW,KAAK,SAAS,EACjD,KAAK,WAAU,CAClB,EAED,iBAAiB,CAAE,SAAAK,GAAY,CAC3B,KAAK,QAAU,KAAK,QAAQ,OAAQC,GACzBA,EAAO,KAAOD,CACxB,CACJ,EAED,eAAe,CAAE,SAAAA,GAAY,CACzB,KAAK,QAAU,KAAK,QAAQ,OAAQC,GACzBD,IAAaC,EAAO,EAC9B,CACJ,EAED,kBAAmB,CACf,KAAK,eAAc,CACtB,EAED,SAASC,EAAO,CACZ,KAAK,KAAOA,EACZ,KAAK,eAAc,CACtB,EAED,eAAeC,EAAK,CAChB,KAAK,wBAAwBA,EAAI,SAAS,CAC7C,EAED,wBAAwBA,EAAK,CAEzB,GADA,KAAK,eAAc,EACfA,EAAI,SAAS,KAAK,aAAa,EAAG,CAClC,IAAIC,EAAU,KACV,KAAK,eACLA,EAAU,KAAK,aAAa,IAGhC,KAAK,QAAQ,KAAK,CACd,KAAM,iBACN,OAAQ,CACJ,SAAUA,CACb,CACrB,CAAiB,EACD,MACH,CAED,KAAK,WAAU,CAClB,EAED,YAAa,CACT,KAAK,MAAM,aAAa,aAC3B,EAED,gBAAiB,CACb,KAAK,cAAc,OAAO,EAAG,KAAK,cAAc,MAAM,CACzD,EAED,gBAAgB,CAAE,KAAAC,GAAQ,CACtB,MAAMR,EAAQ,KAAK,cAAc,UAAWS,GACjCA,IAAaD,CACvB,EAEGR,EAAQ,IACR,KAAK,cAAc,OAAOA,EAAO,CAAC,CAEzC,EAED,YAAYU,EAAa,CDvLjC,IAAAT,ECwLY,KAAK,OAAOA,EAAA,KAAK,OAAO,QAAZ,YAAAA,EAAmB,OAAQ,GACvC,KAAK,QAAQ,KAAK,CACd,KAAM,iBACN,OAAQ,CACJ,SAAUS,CACb,CACjB,CAAa,CACJ,CACJ,CACL"}