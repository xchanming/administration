{"version":3,"file":"app-url-change.service-gKWuaV9Q.js","sources":["../../../app/administration/src/core/service/api/app-url-change.service.js"],"sourcesContent":["/**\n * @package admin\n */\nimport ApiService from '../api.service';\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default class AppUrlChangeService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'appUrlChangeService';\n    }\n\n    /**\n     * @returns {Promise<Array<{key: string, description: string}>>}\n     */\n    fetchResolverStrategies() {\n        return this.httpClient\n            .get('app-system/app-url-change/strategies', {\n                headers: this.getBasicHeaders(),\n            })\n            .then(({ data }) => {\n                return Object.entries(data).map(\n                    ([\n                        key,\n                        description,\n                    ]) => {\n                        return { name: key, description };\n                    },\n                );\n            });\n    }\n\n    /**\n     * @param {{name: string}} strategy\n     * @returns {*}\n     */\n    resolveUrlChange({ name }) {\n        return this.httpClient.post(\n            'app-system/app-url-change/resolve',\n            { strategy: name },\n            {\n                headers: this.getBasicHeaders(),\n            },\n        );\n    }\n\n    /**\n     * @returns {Promise<{newUrl: string, oldUrl: string} | null>}\n     */\n    getUrlDiff() {\n        return this.httpClient\n            .get('app-system/app-url-change/url-difference', {\n                headers: this.getBasicHeaders(),\n            })\n            .then((resp) => {\n                if (resp.status === 204) {\n                    return null;\n                }\n                return resp.data;\n            });\n    }\n}\n"],"names":["AppUrlChangeService","ApiService","httpClient","loginService","data","key","description","name","resp"],"mappings":"iHAMe,MAAMA,UAA4BC,CAAW,CACxD,YAAYC,EAAYC,EAAc,CAClC,MAAMD,EAAYC,EAAc,KAAM,kBAAkB,EACxD,KAAK,KAAO,qBACf,CAKD,yBAA0B,CACtB,OAAO,KAAK,WACP,IAAI,uCAAwC,CACzC,QAAS,KAAK,gBAAiB,CAC/C,CAAa,EACA,KAAK,CAAC,CAAE,KAAAC,KACE,OAAO,QAAQA,CAAI,EAAE,IACxB,CAAC,CACGC,EACAC,CACxB,KAC+B,CAAE,KAAMD,EAAK,YAAAC,GAE5C,CACa,CACR,CAMD,iBAAiB,CAAE,KAAAC,GAAQ,CACvB,OAAO,KAAK,WAAW,KACnB,oCACA,CAAE,SAAUA,CAAM,EAClB,CACI,QAAS,KAAK,gBAAiB,CAClC,CACb,CACK,CAKD,YAAa,CACT,OAAO,KAAK,WACP,IAAI,2CAA4C,CAC7C,QAAS,KAAK,gBAAiB,CAC/C,CAAa,EACA,KAAMC,GACCA,EAAK,SAAW,IACT,KAEJA,EAAK,IACf,CACR,CACL"}