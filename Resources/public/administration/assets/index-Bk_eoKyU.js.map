{"version":3,"file":"index-Bk_eoKyU.js","sources":["../../../app/administration/src/app/component/form/select/base/sw-select-base/sw-select-base.html.twig","../../../app/administration/src/app/component/form/select/base/sw-select-base/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_select_base %}\n<sw-block-field\n    class=\"sw-select\"\n    :class=\"swFieldClasses\"\n    v-bind=\"$attrs\"\n    :disabled=\"disabled\"\n    v-on=\"listeners\"\n>\n    <template #sw-field-input=\"{ identification, error, disabled, size, setFocusClass, removeFocusClass }\">\n        <!-- eslint-disable-next-line vuejs-accessibility/no-static-element-interactions -->\n        <div\n            ref=\"selectWrapper\"\n            class=\"sw-select__selection\"\n            tabindex=\"0\"\n            :aria-expanded=\"expanded ? 'true' : 'false'\"\n            @click.stop=\"expand\"\n            @focus=\"expand\"\n            @keydown.tab=\"collapse\"\n            @keydown.esc=\"collapse\"\n        >\n            <slot\n                name=\"sw-select-selection\"\n                v-bind=\"{ identification, error, disabled, size, expand, collapse }\"\n            ></slot>\n        </div>\n        <div class=\"sw-select__selection-indicators\">\n            <sw-loader\n                v-if=\"isLoading\"\n                class=\"sw-select__select-indicator\"\n                size=\"16px\"\n            />\n\n            <button\n                v-if=\"!disabled && showClearableButton\"\n                class=\"sw-select__select-indicator-hitbox\"\n                data-clearable-button\n                :aria-label=\"$tc('global.sw-select-base.buttonClear')\"\n                @click.prevent.stop=\"emitClear\"\n                @keydown.tab.stop=\"focusParentSelect\"\n            >\n                <sw-icon\n                    class=\"sw-select__select-indicator sw-select__select-indicator-clear\"\n                    name=\"regular-times-s\"\n                    small\n                />\n            </button>\n\n            <sw-icon\n                class=\"sw-select__select-indicator sw-select__select-indicator-expand\"\n                :class=\"{ 'sw-select__select-indicator-expand--rotated': !expanded }\"\n                name=\"regular-chevron-up-xs\"\n                small\n                @click.stop=\"toggleExpand\"\n            />\n        </div>\n\n        <template v-if=\"expanded\">\n            <transition name=\"sw-select-result-list-fade-down\">\n                <slot\n                    name=\"results-list\"\n                    v-bind=\"{ collapse }\"\n                ></slot>\n            </transition>\n        </template>\n    </template>\n\n    <template #label>\n        <slot name=\"label\"></slot>\n    </template>\n\n    <template #hint>\n        <slot name=\"hint\"></slot>\n    </template>\n</sw-block-field>\n{% endblock %}\n","import template from './sw-select-base.html.twig';\nimport './sw-select-base.scss';\n\nconst { Component } = Cicada;\n\n/**\n * @package admin\n *\n * @private\n * @status ready\n * @description Base component for creating new select components. Uses sw-field base components as basic structure.\n * @example-type code-only\n */\nComponent.register('sw-select-base', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inheritAttrs: false,\n\n    emits: [\n        'select-expanded',\n        'select-collapsed',\n        'clear',\n    ],\n\n    props: {\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n\n        showClearableButton: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            expanded: false,\n        };\n    },\n\n    computed: {\n        swFieldClasses() {\n            return { 'has--focus': this.expanded };\n        },\n\n        listeners() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return this.$listeners;\n            }\n\n            return {};\n        },\n    },\n\n    mounted() {\n        this.onMounted();\n    },\n\n    beforeUnmount() {\n        this.onBeforeUnmount();\n    },\n\n    methods: {\n        onMounted() {\n            document.addEventListener('keydown', this.handleKeydown);\n        },\n\n        onBeforeUnmount() {\n            document.removeEventListener('keydown', this.handleKeydown);\n        },\n\n        handleKeydown(event) {\n            if (!this.expanded) {\n                return;\n            }\n\n            // Handle escape key\n            if (event.key === 'Escape' || event.key === 'Esc') {\n                this.collapse();\n            }\n        },\n\n        toggleExpand() {\n            if (!this.expanded) {\n                this.expand();\n            } else {\n                this.collapse();\n            }\n        },\n\n        expand() {\n            if (this.expanded) {\n                return;\n            }\n\n            if (this.disabled) {\n                return;\n            }\n\n            this.expanded = true;\n            document.addEventListener('click', this.listenToClickOutside);\n            this.$emit('select-expanded');\n        },\n\n        collapse(event) {\n            document.removeEventListener('click', this.listenToClickOutside);\n            this.expanded = false;\n\n            // do not let clearable button trigger change event\n            if (event?.target?.dataset.clearableButton === undefined) {\n                this.$emit('select-collapsed');\n            }\n\n            // @see NEXT-16079 allow back tab-ing through form via SHIFT+TAB\n            if (event && event?.shiftKey) {\n                event.preventDefault();\n                this.focusPreviousFormElement();\n            }\n        },\n\n        focusPreviousFormElement() {\n            const focusableSelector = 'a, button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])';\n            const myFocusable = this.$el.querySelector(focusableSelector);\n            const keyboardFocusable = [\n                ...document.querySelectorAll(focusableSelector),\n            ].filter((el) => !el.hasAttribute('disabled') && el.dataset.clearableButton === undefined);\n\n            keyboardFocusable.forEach((element, index) => {\n                if (index > 0 && element === myFocusable) {\n                    const kbFocusable = keyboardFocusable[index - 1];\n                    kbFocusable.click();\n                    kbFocusable.focus();\n                }\n            });\n        },\n\n        listenToClickOutside(event) {\n            let path = event.path;\n            if (typeof path === 'undefined') {\n                path = this.computePath(event);\n            }\n\n            if (\n                !path.find((element) => {\n                    return element === this.$el;\n                })\n            ) {\n                this.collapse();\n            }\n        },\n\n        computePath(event) {\n            const path = [];\n            let target = event.target;\n\n            while (target) {\n                path.push(target);\n                target = target.parentElement;\n            }\n\n            return path;\n        },\n\n        emitClear() {\n            this.$emit('clear');\n        },\n\n        focusParentSelect(event) {\n            if (event && event?.shiftKey) {\n                this.$refs.selectWrapper.click();\n                event.preventDefault();\n            }\n        },\n    },\n});\n"],"names":["template","Component","event","_a","focusableSelector","myFocusable","keyboardFocusable","el","element","index","kbFocusable","path","target"],"mappings":"AAAA,MAAeA,EAAA,ujDCGT,CAAE,UAAAC,CAAW,EAAG,OAUtBA,EAAU,SAAS,iBAAkB,CACjC,SAAAD,EAEA,aAAc,OAAO,aAErB,aAAc,GAEd,MAAO,CACH,kBACA,mBACA,OACH,EAED,MAAO,CACH,UAAW,CACP,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EAED,SAAU,CACN,KAAM,QACN,SAAU,GACV,QAAS,EACZ,EAED,oBAAqB,CACjB,KAAM,QACN,SAAU,GACV,QAAS,EACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,SAAU,EACtB,CACK,EAED,SAAU,CACN,gBAAiB,CACb,MAAO,CAAE,aAAc,KAAK,SAC/B,EAED,WAAY,CAER,OAAI,KAAK,gBAAgB,oBAAoB,EAClC,KAAK,WAGT,EACV,CACJ,EAED,SAAU,CACN,KAAK,UAAS,CACjB,EAED,eAAgB,CACZ,KAAK,gBAAe,CACvB,EAED,QAAS,CACL,WAAY,CACR,SAAS,iBAAiB,UAAW,KAAK,aAAa,CAC1D,EAED,iBAAkB,CACd,SAAS,oBAAoB,UAAW,KAAK,aAAa,CAC7D,EAED,cAAcE,EAAO,CACZ,KAAK,WAKNA,EAAM,MAAQ,UAAYA,EAAM,MAAQ,QACxC,KAAK,SAAQ,CAEpB,EAED,cAAe,CACN,KAAK,SAGN,KAAK,SAAQ,EAFb,KAAK,OAAM,CAIlB,EAED,QAAS,CACD,KAAK,UAIL,KAAK,WAIT,KAAK,SAAW,GAChB,SAAS,iBAAiB,QAAS,KAAK,oBAAoB,EAC5D,KAAK,MAAM,iBAAiB,EAC/B,EAED,SAASA,EAAO,CDrHxB,IAAAC,ECsHY,SAAS,oBAAoB,QAAS,KAAK,oBAAoB,EAC/D,KAAK,SAAW,KAGZA,EAAAD,GAAA,YAAAA,EAAO,SAAP,YAAAC,EAAe,QAAQ,mBAAoB,QAC3C,KAAK,MAAM,kBAAkB,EAI7BD,IAASA,GAAA,MAAAA,EAAO,YAChBA,EAAM,eAAc,EACpB,KAAK,yBAAwB,EAEpC,EAED,0BAA2B,CACvB,MAAME,EAAoB,+EACpBC,EAAc,KAAK,IAAI,cAAcD,CAAiB,EACtDE,EAAoB,CACtB,GAAG,SAAS,iBAAiBF,CAAiB,CACjD,EAAC,OAAQG,GAAO,CAACA,EAAG,aAAa,UAAU,GAAKA,EAAG,QAAQ,kBAAoB,MAAS,EAEzFD,EAAkB,QAAQ,CAACE,EAASC,IAAU,CAC1C,GAAIA,EAAQ,GAAKD,IAAYH,EAAa,CACtC,MAAMK,EAAcJ,EAAkBG,EAAQ,CAAC,EAC/CC,EAAY,MAAK,EACjBA,EAAY,MAAK,CACpB,CACjB,CAAa,CACJ,EAED,qBAAqBR,EAAO,CACxB,IAAIS,EAAOT,EAAM,KACb,OAAOS,EAAS,MAChBA,EAAO,KAAK,YAAYT,CAAK,GAI5BS,EAAK,KAAMH,GACDA,IAAY,KAAK,GAC3B,GAED,KAAK,SAAQ,CAEpB,EAED,YAAYN,EAAO,CACf,MAAMS,EAAO,CAAA,EACb,IAAIC,EAASV,EAAM,OAEnB,KAAOU,GACHD,EAAK,KAAKC,CAAM,EAChBA,EAASA,EAAO,cAGpB,OAAOD,CACV,EAED,WAAY,CACR,KAAK,MAAM,OAAO,CACrB,EAED,kBAAkBT,EAAO,CACjBA,IAASA,GAAA,MAAAA,EAAO,YAChB,KAAK,MAAM,cAAc,QACzBA,EAAM,eAAc,EAE3B,CACJ,CACL,CAAC"}