{"version":3,"file":"index-DvUPwJRr.js","sources":["../../../app/administration/src/module/sw-promotion-v2/component/sw-promotion-discount-component/sw-promotion-discount-component.html.twig","../../../app/administration/src/module/sw-promotion-v2/component/sw-promotion-discount-component/handler.js","../../../app/administration/src/module/sw-promotion-v2/component/sw-promotion-discount-component/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_promotion_discount_component %}\n<sw-card\n    class=\"sw-promotion-discount-component\"\n    position-identifier=\"sw-promotion-discount-component\"\n    :title=\"$tc('sw-promotion.detail.main.discounts.card')\"\n>\n    <sw-context-button class=\"sw-promotion-discount-component__context-button\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_promotion_detail_discounts_item_context_button_delete %}\n        <sw-context-menu-item\n            v-tooltip=\"{\n                message: $tc('sw-privileges.tooltip.warning'),\n                disabled: acl.can('promotion.editor'),\n                showOnDisabledElements: true\n            }\"\n            variant=\"danger\"\n            class=\"sw-promotion-context-item__delete-action\"\n            :disabled=\"isEditingDisabled\"\n            @click=\"onShowDeleteModal\"\n        >\n            {{ $tc('sw-promotion.detail.main.discounts.buttonDeleteDiscount') }}\n        </sw-context-menu-item>\n        {% endblock %}\n    </sw-context-button>\n\n    <sw-container\n        columns=\"1fr 1fr\"\n        gap=\"0px 30px\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_promotion_discount_component_scope %}\n        <sw-select-field\n            ref=\"selectFieldScope\"\n            v-model:value=\"discount.scope\"\n            required\n            validation=\"required\"\n            :label=\"$tc('sw-promotion.detail.main.discounts.labelScope')\"\n            :disabled=\"isEditingDisabled\"\n            :is-loading=\"isLoading\"\n            @update:value=\"onDiscountScopeChanged\"\n        >\n            <option\n                v-for=\"scope in scopes\"\n                :key=\"scope.key\"\n                :value=\"scope.key\"\n            >\n                {{ scope.name }}\n            </option>\n        </sw-select-field>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_promotion_discount_condition_consider_product_rules_field %}\n        <template v-if=\"displayAdvancedRuleOption\">\n            <sw-switch-field\n                v-model:value=\"discount.considerAdvancedRules\"\n                bordered\n                :label=\"$tc('sw-promotion.detail.main.discounts.flagProductScopeLabel')\"\n                :disabled=\"isEditingDisabled\"\n            />\n        </template>\n        {% endblock %}\n    </sw-container>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_promotion_discount_condition_rules_form %}\n    <template v-if=\"!shippingScope && discount.considerAdvancedRules === true\">\n        <div v-if=\"!isSetGroup\">\n            <sw-promotion-v2-rule-select\n                v-model:collection=\"discount.discountRules\"\n                class=\"sw-promotion-discount-component__select-discount-rules\"\n                :local-mode=\"discount.isNew()\"\n                :criteria=\"ruleFilter\"\n                :label=\"$tc('sw-promotion.detail.main.discounts.labelRules')\"\n                :placeholder=\"$tc('sw-promotion.detail.main.discounts.placeholder')\"\n                :disabled=\"isEditingDisabled\"\n                :restricted-rules=\"restrictedRules\"\n                :restriction-snippet=\"promotionDiscountSnippet\"\n                rule-aware-group-key=\"promotionDiscounts\"\n            />\n        </div>\n\n        <sw-container\n            columns=\"1fr 1fr\"\n            gap=\"0px 30px\"\n        >\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_promotion_cart_condition_setgroup_filter_apply_field %}\n            <sw-select-field\n                v-if=\"!isSet\"\n                v-model:value=\"discount.applierKey\"\n                :label=\"$tc('sw-promotion.detail.main.discounts.labelApplyCount')\"\n                :disabled=\"isEditingDisabled\"\n            >\n                <option\n                    v-for=\"applier in graduationAppliers\"\n                    :key=\"applier.key\"\n                    :value=\"applier.key\"\n                >\n                    {{ applier.name }}\n                </option>\n            </sw-select-field>\n            {% endblock %}\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_promotion_cart_condition_setgroup_filter_usage_field %}\n            <sw-select-field\n                v-if=\"isMaxUsageVisible\"\n                v-model:value=\"discount.usageKey\"\n                :label=\"$tc('sw-promotion.detail.main.discounts.labelMaxCount')\"\n                :disabled=\"isEditingDisabled\"\n            >\n                <option\n                    v-for=\"count in graduationCounts\"\n                    :key=\"count.key\"\n                    :value=\"count.key\"\n                >\n                    {{ count.name }}\n                </option>\n            </sw-select-field>\n            {% endblock %}\n\n        </sw-container>\n\n        <template v-if=\"discount.applierKey!=='ALL'\">\n            <sw-container\n                columns=\"1fr 1fr\"\n                gap=\"0px 30px\"\n            >\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_promotion_cart_condition_setgroup_filter_sorting_field %}\n                <sw-select-field\n                    v-model:value=\"discount.sorterKey\"\n                    :label=\"$tc('sw-promotion.detail.main.discounts.labelSorting')\"\n                    :disabled=\"isEditingDisabled\"\n                >\n                    <option\n                        v-for=\"sorter in graduationSorters\"\n                        :key=\"sorter.key\"\n                        :value=\"sorter.key\"\n                    >\n                        {{ sorter.name }}\n                    </option>\n                </sw-select-field>\n                {% endblock %}\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_promotion_cart_condition_setgroup_filter_picker_field %}\n                <sw-select-field\n                    v-if=\"isPickingModeVisible\"\n                    v-model:value=\"discount.pickerKey\"\n                    :label=\"$tc('sw-promotion.detail.main.discounts.labelPicking')\"\n                    :disabled=\"isEditingDisabled\"\n                >\n                    <option\n                        v-for=\"picker in graduationPickers\"\n                        :key=\"picker.key\"\n                        :value=\"picker.key\"\n                    >\n                        {{ picker.name }}\n                    </option>\n                </sw-select-field>\n                {% endblock %}\n            </sw-container>\n        </template>\n\n    </template>\n    {% endblock %}\n\n    <sw-container\n        columns=\"1fr 1fr\"\n        gap=\"0px 30px\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_promotion_discount_component_type %}\n        <sw-select-field\n            v-model:value=\"discount.type\"\n            class=\"sw-promotion-discount-component__type-select\"\n            :label=\"$tc('sw-promotion.detail.main.discounts.labelType')\"\n            :disabled=\"isEditingDisabled\"\n            @update:value=\"onDiscountTypeChanged\"\n        >\n            <option\n                v-for=\"type in types\"\n                :key=\"type.key\"\n                :value=\"type.key\"\n            >\n                {{ type.name }}\n            </option>\n        </sw-select-field>\n        {% endblock %}\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_promotion_discount_component_value %}\n        <sw-number-field\n            class=\"sw-promotion-discount-component__discount-value\"\n            validation=\"required\"\n            required\n            :digits=\"50\"\n            :value=\"discount.value\"\n            :label=\"$tc('sw-promotion.detail.main.discounts.labelValue')\"\n            :placeholder=\"$tc('sw-promotion.detail.main.discounts.placeholderValue')\"\n            :disabled=\"isEditingDisabled\"\n            @update:value=\"onDiscountValueChanged\"\n        >\n            <template #suffix>\n                {{ valueSuffix }}\n            </template>\n        </sw-number-field>\n        {% endblock %}\n    </sw-container>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_promotion_discount_max_value %}\n    <sw-container\n        v-if=\"showMaxValueSettings\"\n        :key=\"1\"\n        columns=\"1fr 1fr\"\n        justify=\"end\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_promotion_discount_max_value_field %}\n        <sw-number-field\n            v-model:value=\"discount.maxValue\"\n            :label=\"$tc('sw-promotion.detail.main.discounts.labelMaxValue')\"\n            :help-text=\"maxValueAdvancedPricesTooltip\"\n            :disabled=\"isEditingDisabled\"\n            @update:value=\"onMaxValueChanged\"\n        >\n            <template #suffix>\n                {{ maxValueSuffix }}\n            </template>\n        </sw-number-field>\n        {% endblock %}\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_promotion_discount_max_value_advanced_prices %}\n        <a\n            v-if=\"showMaxValueAdvancedPrices\"\n            class=\"sw-card__quick-link advanced-prices\"\n            role=\"button\"\n            tabindex=\"0\"\n            @click=\"onClickAdvancedPrices\"\n            @keydown.enter=\"onClickAdvancedPrices\"\n        >\n            {{ $tc('sw-promotion.detail.main.discounts.linkAdvancedPrices') }}\n            <sw-icon\n                name=\"regular-long-arrow-right\"\n                small\n            />\n        </a>\n        {% endblock %}\n    </sw-container>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_promotion_discount_advanced_prices_link %}\n    <sw-container\n        v-if=\"showAbsoluteAdvancedPricesSettings\"\n        :key=\"2\"\n        columns=\"1fr\"\n        justify=\"end\"\n    >\n        <a\n            class=\"sw-card__quick-link advanced-prices\"\n            role=\"button\"\n            tabindex=\"0\"\n            @click=\"onClickAdvancedPrices\"\n            @keydown.enter=\"onClickAdvancedPrices\"\n        >\n            {{ $tc('sw-promotion.detail.main.discounts.linkAdvancedPrices') }}\n            <sw-icon\n                name=\"regular-long-arrow-right\"\n                small\n            />\n        </a>\n    </sw-container>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_promotion_discount_advanced_prices_modal %}\n    <sw-modal\n        v-if=\"displayAdvancedPrices\"\n        :title=\"$tc('sw-promotion.detail.main.discounts.pricesModal.advancedPricesHeader')\"\n        class=\"sw-promotion-discount-form__advanced-prices-modal\"\n        @modal-close=\"onCloseAdvancedPricesModal\"\n    >\n\n        <sw-one-to-many-grid\n            :collection=\"discount.promotionDiscountPrices\"\n            :local-mode=\"true\"\n            :columns=\"currencyPriceColumns\"\n            :show-selection=\"false\"\n            :is-loading=\"isLoading\"\n            :show-actions=\"!isEditingDisabled\"\n        >\n\n            <template #column-currency.translated.name=\"{ item }\">\n                <p>{{ item.currency.translated.name }}</p>\n            </template>\n\n            <template #column-price=\"{ item }\">\n                <sw-number-field\n                    v-model:value=\"item.price\"\n                    type=\"text\"\n                    size=\"small\"\n                    :disabled=\"isEditingDisabled\"\n                >\n                    <template #suffix>\n                        {{ item.currency.symbol }}\n                    </template>\n                </sw-number-field>\n            </template>\n        </sw-one-to-many-grid>\n\n        <template #modal-footer>\n            <sw-button\n                variant=\"primary\"\n                size=\"small\"\n                @click=\"onCloseAdvancedPricesModal\"\n            >\n                {{ $tc('sw-promotion.detail.main.discounts.pricesModal.closeModal') }}\n            </sw-button>\n        </template>\n    </sw-modal>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_promotion_detail_discounts_modal_delete %}\n    <sw-modal\n        v-if=\"showDeleteModal\"\n        variant=\"small\"\n        :title=\"$tc('sw-promotion.detail.main.discounts.delete.confirmTitle')\"\n        class=\"sw-promotion-detail-discounts-modal\"\n        @modal-close=\"onCloseDeleteModal\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_promotion_detail_discounts_modal_delete_text %}\n        <p>\n            {{ $tc('sw-promotion.detail.main.discounts.delete.confirmText') }}\n        </p>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_promotion_detail_discounts_modal_delete_footer %}\n        <template #modal-footer>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_promotion_detail_discounts_modal_delete_action_cancel %}\n            <sw-button\n                size=\"small\"\n                @click=\"onCloseDeleteModal\"\n            >\n                {{ $tc('global.default.cancel') }}\n            </sw-button>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_promotion_detail_discounts_modal_delete_action_delete %}\n            <sw-button\n                size=\"small\"\n                variant=\"danger\"\n                class=\"sw-promotion-discount-delete-button\"\n                @click=\"onConfirmDelete\"\n            >\n                {{ $tc('sw-promotion.detail.main.discounts.delete.buttonDelete') }}\n            </sw-button>\n            {% endblock %}\n        </template>\n        {% endblock %}\n    </sw-modal>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n","import { DiscountTypes } from 'src/module/sw-promotion-v2/helper/promotion.helper';\n\n/**\n * @package checkout\n *\n * @private\n */\nexport default class PromotionDiscountHandler {\n    // Gets the suffix of the value text field depending\n    // on the currently selected type.\n    getValueSuffix(discountType, currencySymbol = '?') {\n        return discountType === DiscountTypes.PERCENTAGE ? '%' : currencySymbol;\n    }\n\n    // Gets the value minimum threshold depending\n    // on the currently selected type.\n    getMinValue() {\n        return 0.0;\n    }\n\n    // Gets the value maximum threshold depending\n    // on the currently selected type.\n    getMaxValue(discountType) {\n        return discountType === DiscountTypes.PERCENTAGE ? 100 : null;\n    }\n\n    // This function verifies the currently set value\n    // depending on the discount type, and fixes it if\n    // the min or maximum thresholds have been exceeded.\n    getFixedValue(value, discountType) {\n        if (discountType === DiscountTypes.PERCENTAGE) {\n            value = value > 100 ? this.getMaxValue(discountType) : value;\n        }\n        if (value <= this.getMinValue()) {\n            value = this.getMinValue();\n        }\n\n        return value;\n    }\n}\n","import { DiscountTypes, DiscountScopes, PromotionPermissions } from 'src/module/sw-promotion-v2/helper/promotion.helper';\nimport template from './sw-promotion-discount-component.html.twig';\nimport './sw-promotion-discount-component.scss';\nimport DiscountHandler from './handler';\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\nconst discountHandler = new DiscountHandler();\n\n/**\n * @package checkout\n *\n * @private\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'feature',\n        'ruleConditionDataProviderService',\n    ],\n\n    emits: ['discount-delete'],\n\n    mixins: [\n        Mixin.getByName('placeholder'),\n    ],\n\n    props: {\n        promotion: {\n            type: Object,\n            required: true,\n        },\n        discount: {\n            type: Object,\n            required: true,\n        },\n    },\n    data() {\n        return {\n            displayAdvancedPrices: false,\n            currencies: [],\n            defaultCurrency: null,\n            isLoading: false,\n            showRuleModal: false,\n            showDeleteModal: false,\n            currencySymbol: null,\n            allowProductRules: false,\n            cartScope: this.discount.scope === DiscountScopes.CART,\n            shippingScope: this.discount.scope === DiscountScopes.DELIVERY,\n            considerAdvancedRules: this.discount.considerAdvancedRules,\n            availableSetGroups: [],\n            syncService: null,\n            httpClient: null,\n            sorterKeys: [],\n            pickerKeys: [],\n            restrictedRules: [],\n        };\n    },\n\n    computed: {\n        advancedPricesRepo() {\n            return this.repositoryFactory.create('promotion_discount_prices');\n        },\n\n        repositoryGroups() {\n            return this.repositoryFactory.create('promotion_setgroup');\n        },\n\n        currencyRepository() {\n            return this.repositoryFactory.create('currency');\n        },\n\n        ruleFilter() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addAssociation('conditions');\n            criteria.addSorting(Criteria.sort('name', 'ASC', false));\n\n            return criteria;\n        },\n\n        currencyPriceColumns() {\n            return [\n                {\n                    property: 'currency.translated.name',\n                    label: this.$tc('sw-promotion.detail.main.discounts.pricesModal.labelCurrency'),\n                },\n                {\n                    property: 'price',\n                    dataIndex: 'price',\n                    label: this.$tc('sw-promotion.detail.main.discounts.pricesModal.labelPrice'),\n                },\n            ];\n        },\n\n        scopes() {\n            const scopes = [\n                {\n                    key: DiscountScopes.CART,\n                    name: this.$tc('sw-promotion.detail.main.discounts.valueScopeCart'),\n                },\n                {\n                    key: DiscountScopes.DELIVERY,\n                    name: this.$tc('sw-promotion.detail.main.discounts.valueScopeDelivery'),\n                },\n                {\n                    key: DiscountScopes.SET,\n                    name: this.$tc('sw-promotion.detail.main.discounts.valueScopeSet'),\n                },\n            ];\n\n            let index = 1;\n            this.availableSetGroups.forEach(() => {\n                const keyValue = `${DiscountScopes.SETGROUP}-${index}`;\n                const nameValue = `${this.$tc('sw-promotion.detail.main.discounts.valueScopeSetGroup')}-${index}`;\n                scopes.push({ key: keyValue, name: nameValue });\n                index += 1;\n            });\n\n            return scopes;\n        },\n\n        types() {\n            const availableTypes = [\n                {\n                    key: DiscountTypes.ABSOLUTE,\n                    name: this.$tc('sw-promotion.detail.main.discounts.valueTypeAbsolute'),\n                },\n                {\n                    key: DiscountTypes.PERCENTAGE,\n                    name: this.$tc('sw-promotion.detail.main.discounts.valueTypePercentage'),\n                },\n                {\n                    key: DiscountTypes.FIXED_UNIT,\n                    name: this.$tc('sw-promotion.detail.main.discounts.valueTypeFixedUnit'),\n                },\n            ];\n\n            // do not allow a fixed-total price for cart. this would mean the whole\n            // cart is sold for price X.\n            // we do only allow this option if the scope is something else\n            if (!this.cartScope) {\n                availableTypes.push({\n                    key: DiscountTypes.FIXED,\n                    name: this.$tc('sw-promotion.detail.main.discounts.valueTypeFixed'),\n                });\n            }\n\n            // if we do have a cart scope, only allow the fixed value if\n            // at least advanced rules have been activated\n            if (this.cartScope && this.discount.considerAdvancedRules) {\n                availableTypes.push({\n                    key: DiscountTypes.FIXED,\n                    name: this.$tc('sw-promotion.detail.main.discounts.valueTypeFixed'),\n                });\n            }\n\n            return availableTypes;\n        },\n\n        valueSuffix() {\n            return discountHandler.getValueSuffix(this.discount.type, this.currencySymbol);\n        },\n\n        maxValueSuffix() {\n            return this.currencySymbol;\n        },\n\n        showMaxValueSettings() {\n            return this.discount.type === DiscountTypes.PERCENTAGE;\n        },\n\n        showAbsoluteAdvancedPricesSettings() {\n            return this.discount.type === DiscountTypes.ABSOLUTE || this.discount.type === DiscountTypes.FIXED;\n        },\n\n        // only show advanced max value settings if\n        // at least a base max value has been set\n        showMaxValueAdvancedPrices() {\n            return this.discount.type === DiscountTypes.PERCENTAGE && this.discount.maxValue !== null;\n        },\n\n        maxValueAdvancedPricesTooltip() {\n            if (\n                this.discount.type === DiscountTypes.PERCENTAGE &&\n                this.discount.maxValue !== null &&\n                this.discount.promotionDiscountPrices.length > 0\n            ) {\n                return this.$tc('sw-promotion.detail.main.discounts.helpTextMaxValueAdvancedPrices');\n            }\n            return '';\n        },\n\n        isEditingDisabled() {\n            if (!this.acl.can('promotion.editor')) {\n                return true;\n            }\n\n            return !PromotionPermissions.isEditingAllowed(this.promotion);\n        },\n\n        displayAdvancedRuleOption() {\n            return this.discount.scope !== DiscountScopes.DELIVERY;\n        },\n\n        graduationSorters() {\n            const result = [];\n\n            this.sorterKeys.forEach((keyValue) => {\n                result.push({\n                    key: keyValue,\n                    name: this.$tc(`sw-promotion-v2.detail.conditions.filter.sorter.${keyValue}`),\n                });\n            });\n\n            return result;\n        },\n\n        graduationPickers() {\n            const result = [];\n\n            this.pickerKeys.forEach((keyValue) => {\n                result.push({\n                    key: keyValue,\n                    name: this.$tc(`sw-promotion-v2.detail.conditions.filter.picker.${keyValue}`),\n                });\n            });\n\n            return result;\n        },\n\n        isSetGroup() {\n            const splittedScope = this.discount.scope.split('-');\n            if (splittedScope[0] === DiscountScopes.SETGROUP) {\n                return true;\n            }\n            return false;\n        },\n\n        isSet() {\n            return this.discount.scope === DiscountScopes.SET;\n        },\n\n        graduationAppliers() {\n            const appliers = [\n                {\n                    key: 'ALL',\n                    name: this.$tc('sw-promotion-v2.detail.conditions.filter.applier.ALL'),\n                },\n            ];\n\n            // if selection is a setgroup and group is of type count, we reduce the standard maximum count\n            // to the defined value of the group definitions\n            let maxCount = 10;\n            const splittedScope = this.discount.scope.split('-');\n            if (splittedScope[0] === DiscountScopes.SETGROUP) {\n                let i = 0;\n                this.availableSetGroups.forEach((group) => {\n                    i += 1;\n                    if (i === parseInt(splittedScope[1], 10) && group.value < maxCount && group.packagerKey === 'COUNT') {\n                        maxCount = group.value;\n                    }\n                });\n            }\n\n            let i;\n            for (i = 1; i <= maxCount; i += 1) {\n                appliers.push({\n                    key: i,\n                    name: this.$tc('sw-promotion-v2.detail.conditions.filter.applier.SELECT', 0, { count: i }),\n                });\n            }\n\n            return appliers;\n        },\n\n        graduationCounts() {\n            const counts = [\n                {\n                    key: 'ALL',\n                    name: this.$tc('sw-promotion-v2.detail.conditions.filter.counter.ALL'),\n                },\n            ];\n\n            let i;\n            for (i = 1; i < 10; i += 1) {\n                counts.push({\n                    key: i,\n                    name: this.$tc('sw-promotion-v2.detail.conditions.filter.counter.SELECT', 0, { count: i }),\n                });\n            }\n\n            return counts;\n        },\n\n        isPickingModeVisible() {\n            if (this.discount.scope.startsWith(DiscountScopes.SETGROUP)) {\n                return true;\n            }\n\n            if (this.discount.scope === DiscountScopes.SET) {\n                return true;\n            }\n\n            return false;\n        },\n\n        isMaxUsageVisible() {\n            if (this.discount.scope === DiscountScopes.CART) {\n                return false;\n            }\n\n            return true;\n        },\n\n        promotionDiscountSnippet() {\n            return this.$tc(\n                this.ruleConditionDataProviderService.getAwarenessConfigurationByAssignmentName('promotionDiscounts')\n                    .snippet,\n                2,\n            );\n        },\n    },\n    created() {\n        this.createdComponent();\n    },\n    methods: {\n        createdComponent() {\n            this.syncService = Cicada.Service('syncService');\n            this.httpClient = this.syncService.httpClient;\n\n            this.currencyRepository.search(new Criteria(1, 25)).then((response) => {\n                this.currencies = response;\n                this.defaultCurrency = this.currencies.find((currency) => currency.isSystemDefault);\n                this.currencySymbol = this.defaultCurrency.symbol;\n            });\n\n            this.isLoading = true;\n            this.loadSetGroups().then(() => {\n                this.isLoading = false;\n            });\n\n            this.loadSorters().then((keys) => {\n                this.sorterKeys = keys;\n            });\n\n            this.loadPickers().then((keys) => {\n                this.pickerKeys = keys;\n            });\n\n            this.loadRestrictedRules();\n        },\n\n        onDiscountScopeChanged(value) {\n            this.cartScope = value === DiscountScopes.CART;\n            this.shippingScope = value === DiscountScopes.DELIVERY;\n\n            if (value === DiscountScopes.DELIVERY) {\n                this.discount.considerAdvancedRules = false;\n            } else {\n                this.discount.considerAdvancedRules = this.considerAdvancedRules;\n            }\n\n            // clear other values\n            this.discount.pickerKey = '';\n\n            // make sure to set to all, our cart doesn't have\n            // this option and thus we make sure its set to default ALL\n            this.discount.usageKey = 'ALL';\n\n            // immediately select\n            // a picker if none set for picker relevant scopes\n            if (this.isPickingModeVisible) {\n                this.discount.pickerKey = this.pickerKeys[0];\n            }\n        },\n\n        // This function verifies the currently set value\n        // depending on the discount type, and fixes it if\n        // the min or maximum thresholds have been exceeded.\n        onDiscountTypeChanged() {\n            this.discount.value = discountHandler.getFixedValue(this.discount.value, this.discount.type);\n        },\n\n        onDiscountValueChanged(value) {\n            this.discount.value = discountHandler.getFixedValue(value, this.discount.type);\n        },\n\n        // The number field does not allow a NULL input\n        // so the value cannot be cleared anymore.\n        // If the user removes the value, it will be 0 and converted\n        // into NULL, which means no max value applies anymore.\n        onMaxValueChanged(value) {\n            if (value === 0) {\n                // clear max value\n                this.discount.maxValue = null;\n                // clear any currency values if max value is gone\n                this.clearAdvancedPrices();\n            }\n        },\n\n        onClickAdvancedPrices() {\n            this.currencies.forEach((currency) => {\n                if (!this.isMemberOfCollection(currency)) {\n                    // if we have a max-value setting active\n                    // then our advanced prices is for this\n                    // otherwise its for the promotion value itself\n                    if (this.showMaxValueAdvancedPrices) {\n                        this.prepareAdvancedPrices(currency, this.discount.maxValue);\n                    } else {\n                        this.prepareAdvancedPrices(currency, this.discount.value);\n                    }\n                }\n            });\n            this.displayAdvancedPrices = true;\n        },\n\n        prepareAdvancedPrices(currency, basePrice) {\n            // first get the minimum value that is allowed\n            let setPrice = discountHandler.getMinValue();\n            // if basePrice is undefined take the minimum price\n            if (basePrice !== undefined) {\n                setPrice = basePrice;\n            }\n            // foreign currencies are translated at the exchange rate of the default currency\n            setPrice *= currency.factor;\n            // even if translated correctly the value may not be less than the allowed minimum value\n            if (setPrice < discountHandler.getMinValue()) {\n                setPrice = discountHandler.getMinValue();\n            }\n            // now create the value with the calculated and translated value\n            const newAdvancedCurrencyPrices = this.advancedPricesRepo.create(Cicada.Context.api);\n            newAdvancedCurrencyPrices.discountId = this.discount.id;\n            newAdvancedCurrencyPrices.price = setPrice;\n            newAdvancedCurrencyPrices.currencyId = currency.id;\n            newAdvancedCurrencyPrices.currency = currency;\n\n            this.discount.promotionDiscountPrices.add(newAdvancedCurrencyPrices);\n        },\n\n        clearAdvancedPrices() {\n            const ids = this.discount.promotionDiscountPrices.getIds();\n            let i;\n            for (i = 0; i < ids.length; i += 1) {\n                this.discount.promotionDiscountPrices.remove(ids[i]);\n            }\n        },\n\n        isMemberOfCollection(currency) {\n            let foundValue = false;\n            const currencyID = currency.id;\n            this.discount.promotionDiscountPrices.forEach((advancedPrice) => {\n                if (advancedPrice.currencyId === currencyID) {\n                    foundValue = true;\n                    advancedPrice.currency = currency;\n                }\n            });\n            return foundValue;\n        },\n\n        onCloseAdvancedPricesModal() {\n            if (this.discount.type === DiscountTypes.PERCENTAGE && this.discount.maxValue === null) {\n                // clear any currency values if max value is gone\n                this.clearAdvancedPrices();\n            } else {\n                this.discount.promotionDiscountPrices.forEach((advancedPrice) => {\n                    advancedPrice.price = discountHandler.getFixedValue(advancedPrice.price, DiscountTypes.ABSOLUTE);\n                });\n            }\n            this.displayAdvancedPrices = false;\n        },\n\n        onShowDeleteModal() {\n            this.showDeleteModal = true;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete() {\n            this.onCloseDeleteModal();\n            this.$nextTick(() => {\n                this.$emit('discount-delete', this.discount);\n            });\n        },\n\n        async loadSetGroups() {\n            const criteria = new Criteria(1, 25);\n            criteria.addFilter(Criteria.equals('promotionId', this.promotion.id));\n\n            await this.repositoryGroups.search(criteria).then((groups) => {\n                this.availableSetGroups = groups;\n            });\n\n            return true;\n        },\n\n        async loadSorters() {\n            return this.httpClient\n                .get('/_action/promotion/setgroup/sorter', {\n                    headers: this.syncService.getBasicHeaders(),\n                })\n                .then((response) => {\n                    return response.data;\n                });\n        },\n\n        async loadPickers() {\n            return this.httpClient\n                .get('/_action/promotion/discount/picker', {\n                    headers: this.syncService.getBasicHeaders(),\n                })\n                .then((response) => {\n                    return response.data;\n                });\n        },\n\n        loadRestrictedRules() {\n            this.ruleConditionDataProviderService.getRestrictedRules('promotionSetGroups').then((result) => {\n                this.restrictedRules = result;\n            });\n        },\n    },\n};\n"],"names":["template","PromotionDiscountHandler","discountType","currencySymbol","DiscountTypes","value","Mixin","Criteria","discountHandler","DiscountHandler","index","DiscountScopes","criteria","scopes","keyValue","nameValue","availableTypes","PromotionPermissions","result","appliers","maxCount","splittedScope","i","group","counts","response","currency","keys","basePrice","setPrice","newAdvancedCurrencyPrices","ids","foundValue","currencyID","advancedPrice","groups"],"mappings":"oIAAA,MAAeA,EAAA,srQCOA,MAAMC,CAAyB,CAG1C,eAAeC,EAAcC,EAAiB,IAAK,CAC/C,OAAOD,IAAiBE,EAAc,WAAa,IAAMD,CAC5D,CAID,aAAc,CACV,MAAO,EACV,CAID,YAAYD,EAAc,CACtB,OAAOA,IAAiBE,EAAc,WAAa,IAAM,IAC5D,CAKD,cAAcC,EAAOH,EAAc,CAC/B,OAAIA,IAAiBE,EAAc,aAC/BC,EAAQA,EAAQ,IAAM,KAAK,YAAYH,CAAY,EAAIG,GAEvDA,GAAS,KAAK,gBACdA,EAAQ,KAAK,eAGVA,CACV,CACL,CClCA,KAAM,CAAE,MAAAC,CAAO,EAAG,OACZ,CAAE,SAAAC,CAAQ,EAAK,OAAO,KACtBC,EAAkB,IAAIC,EAObC,EAAA,CACX,SAAAV,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,oBACA,MACA,UACA,kCACH,EAED,MAAO,CAAC,iBAAiB,EAEzB,OAAQ,CACJM,EAAM,UAAU,aAAa,CAChC,EAED,MAAO,CACH,UAAW,CACP,KAAM,OACN,SAAU,EACb,EACD,SAAU,CACN,KAAM,OACN,SAAU,EACb,CACJ,EACD,MAAO,CACH,MAAO,CACH,sBAAuB,GACvB,WAAY,CAAE,EACd,gBAAiB,KACjB,UAAW,GACX,cAAe,GACf,gBAAiB,GACjB,eAAgB,KAChB,kBAAmB,GACnB,UAAW,KAAK,SAAS,QAAUK,EAAe,KAClD,cAAe,KAAK,SAAS,QAAUA,EAAe,SACtD,sBAAuB,KAAK,SAAS,sBACrC,mBAAoB,CAAE,EACtB,YAAa,KACb,WAAY,KACZ,WAAY,CAAE,EACd,WAAY,CAAE,EACd,gBAAiB,CAAE,CAC/B,CACK,EAED,SAAU,CACN,oBAAqB,CACjB,OAAO,KAAK,kBAAkB,OAAO,2BAA2B,CACnE,EAED,kBAAmB,CACf,OAAO,KAAK,kBAAkB,OAAO,oBAAoB,CAC5D,EAED,oBAAqB,CACjB,OAAO,KAAK,kBAAkB,OAAO,UAAU,CAClD,EAED,YAAa,CACT,MAAMC,EAAW,IAAIL,EAAS,EAAG,EAAE,EAEnC,OAAAK,EAAS,eAAe,YAAY,EACpCA,EAAS,WAAWL,EAAS,KAAK,OAAQ,MAAO,EAAK,CAAC,EAEhDK,CACV,EAED,sBAAuB,CACnB,MAAO,CACH,CACI,SAAU,2BACV,MAAO,KAAK,IAAI,8DAA8D,CACjF,EACD,CACI,SAAU,QACV,UAAW,QACX,MAAO,KAAK,IAAI,2DAA2D,CAC9E,CACjB,CACS,EAED,QAAS,CACL,MAAMC,EAAS,CACX,CACI,IAAKF,EAAe,KACpB,KAAM,KAAK,IAAI,mDAAmD,CACrE,EACD,CACI,IAAKA,EAAe,SACpB,KAAM,KAAK,IAAI,uDAAuD,CACzE,EACD,CACI,IAAKA,EAAe,IACpB,KAAM,KAAK,IAAI,kDAAkD,CACpE,CACjB,EAEY,IAAID,EAAQ,EACZ,YAAK,mBAAmB,QAAQ,IAAM,CAClC,MAAMI,EAAW,GAAGH,EAAe,QAAQ,IAAID,CAAK,GAC9CK,EAAY,GAAG,KAAK,IAAI,uDAAuD,CAAC,IAAIL,CAAK,GAC/FG,EAAO,KAAK,CAAE,IAAKC,EAAU,KAAMC,CAAS,CAAE,EAC9CL,GAAS,CACzB,CAAa,EAEMG,CACV,EAED,OAAQ,CACJ,MAAMG,EAAiB,CACnB,CACI,IAAKZ,EAAc,SACnB,KAAM,KAAK,IAAI,sDAAsD,CACxE,EACD,CACI,IAAKA,EAAc,WACnB,KAAM,KAAK,IAAI,wDAAwD,CAC1E,EACD,CACI,IAAKA,EAAc,WACnB,KAAM,KAAK,IAAI,uDAAuD,CACzE,CACjB,EAKY,OAAK,KAAK,WACNY,EAAe,KAAK,CAChB,IAAKZ,EAAc,MACnB,KAAM,KAAK,IAAI,mDAAmD,CACtF,CAAiB,EAKD,KAAK,WAAa,KAAK,SAAS,uBAChCY,EAAe,KAAK,CAChB,IAAKZ,EAAc,MACnB,KAAM,KAAK,IAAI,mDAAmD,CACtF,CAAiB,EAGEY,CACV,EAED,aAAc,CACV,OAAOR,EAAgB,eAAe,KAAK,SAAS,KAAM,KAAK,cAAc,CAChF,EAED,gBAAiB,CACb,OAAO,KAAK,cACf,EAED,sBAAuB,CACnB,OAAO,KAAK,SAAS,OAASJ,EAAc,UAC/C,EAED,oCAAqC,CACjC,OAAO,KAAK,SAAS,OAASA,EAAc,UAAY,KAAK,SAAS,OAASA,EAAc,KAChG,EAID,4BAA6B,CACzB,OAAO,KAAK,SAAS,OAASA,EAAc,YAAc,KAAK,SAAS,WAAa,IACxF,EAED,+BAAgC,CAC5B,OACI,KAAK,SAAS,OAASA,EAAc,YACrC,KAAK,SAAS,WAAa,MAC3B,KAAK,SAAS,wBAAwB,OAAS,EAExC,KAAK,IAAI,mEAAmE,EAEhF,EACV,EAED,mBAAoB,CAChB,OAAK,KAAK,IAAI,IAAI,kBAAkB,EAI7B,CAACa,EAAqB,iBAAiB,KAAK,SAAS,EAHjD,EAId,EAED,2BAA4B,CACxB,OAAO,KAAK,SAAS,QAAUN,EAAe,QACjD,EAED,mBAAoB,CAChB,MAAMO,EAAS,CAAA,EAEf,YAAK,WAAW,QAASJ,GAAa,CAClCI,EAAO,KAAK,CACR,IAAKJ,EACL,KAAM,KAAK,IAAI,mDAAmDA,CAAQ,EAAE,CAChG,CAAiB,CACjB,CAAa,EAEMI,CACV,EAED,mBAAoB,CAChB,MAAMA,EAAS,CAAA,EAEf,YAAK,WAAW,QAASJ,GAAa,CAClCI,EAAO,KAAK,CACR,IAAKJ,EACL,KAAM,KAAK,IAAI,mDAAmDA,CAAQ,EAAE,CAChG,CAAiB,CACjB,CAAa,EAEMI,CACV,EAED,YAAa,CAET,OADsB,KAAK,SAAS,MAAM,MAAM,GAAG,EACjC,CAAC,IAAMP,EAAe,QAI3C,EAED,OAAQ,CACJ,OAAO,KAAK,SAAS,QAAUA,EAAe,GACjD,EAED,oBAAqB,CACjB,MAAMQ,EAAW,CACb,CACI,IAAK,MACL,KAAM,KAAK,IAAI,sDAAsD,CACxE,CACjB,EAIY,IAAIC,EAAW,GACf,MAAMC,EAAgB,KAAK,SAAS,MAAM,MAAM,GAAG,EACnD,GAAIA,EAAc,CAAC,IAAMV,EAAe,SAAU,CAC9C,IAAIW,EAAI,EACR,KAAK,mBAAmB,QAASC,GAAU,CACvCD,GAAK,EACDA,IAAM,SAASD,EAAc,CAAC,EAAG,EAAE,GAAKE,EAAM,MAAQH,GAAYG,EAAM,cAAgB,UACxFH,EAAWG,EAAM,MAEzC,CAAiB,CACJ,CAED,IAAID,EACJ,IAAKA,EAAI,EAAGA,GAAKF,EAAUE,GAAK,EAC5BH,EAAS,KAAK,CACV,IAAKG,EACL,KAAM,KAAK,IAAI,0DAA2D,EAAG,CAAE,MAAOA,EAAG,CAC7G,CAAiB,EAGL,OAAOH,CACV,EAED,kBAAmB,CACf,MAAMK,EAAS,CACX,CACI,IAAK,MACL,KAAM,KAAK,IAAI,sDAAsD,CACxE,CACjB,EAEY,IAAIF,EACJ,IAAKA,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACrBE,EAAO,KAAK,CACR,IAAKF,EACL,KAAM,KAAK,IAAI,0DAA2D,EAAG,CAAE,MAAOA,EAAG,CAC7G,CAAiB,EAGL,OAAOE,CACV,EAED,sBAAuB,CAKnB,MAJI,QAAK,SAAS,MAAM,WAAWb,EAAe,QAAQ,GAItD,KAAK,SAAS,QAAUA,EAAe,IAK9C,EAED,mBAAoB,CAChB,OAAI,KAAK,SAAS,QAAUA,EAAe,IAK9C,EAED,0BAA2B,CACvB,OAAO,KAAK,IACR,KAAK,iCAAiC,0CAA0C,oBAAoB,EAC/F,QACL,CAChB,CACS,CACJ,EACD,SAAU,CACN,KAAK,iBAAgB,CACxB,EACD,QAAS,CACL,kBAAmB,CACf,KAAK,YAAc,OAAO,QAAQ,aAAa,EAC/C,KAAK,WAAa,KAAK,YAAY,WAEnC,KAAK,mBAAmB,OAAO,IAAIJ,EAAS,EAAG,EAAE,CAAC,EAAE,KAAMkB,GAAa,CACnE,KAAK,WAAaA,EAClB,KAAK,gBAAkB,KAAK,WAAW,KAAMC,GAAaA,EAAS,eAAe,EAClF,KAAK,eAAiB,KAAK,gBAAgB,MAC3D,CAAa,EAED,KAAK,UAAY,GACjB,KAAK,gBAAgB,KAAK,IAAM,CAC5B,KAAK,UAAY,EACjC,CAAa,EAED,KAAK,YAAW,EAAG,KAAMC,GAAS,CAC9B,KAAK,WAAaA,CAClC,CAAa,EAED,KAAK,YAAW,EAAG,KAAMA,GAAS,CAC9B,KAAK,WAAaA,CAClC,CAAa,EAED,KAAK,oBAAmB,CAC3B,EAED,uBAAuBtB,EAAO,CAC1B,KAAK,UAAYA,IAAUM,EAAe,KAC1C,KAAK,cAAgBN,IAAUM,EAAe,SAE1CN,IAAUM,EAAe,SACzB,KAAK,SAAS,sBAAwB,GAEtC,KAAK,SAAS,sBAAwB,KAAK,sBAI/C,KAAK,SAAS,UAAY,GAI1B,KAAK,SAAS,SAAW,MAIrB,KAAK,uBACL,KAAK,SAAS,UAAY,KAAK,WAAW,CAAC,EAElD,EAKD,uBAAwB,CACpB,KAAK,SAAS,MAAQH,EAAgB,cAAc,KAAK,SAAS,MAAO,KAAK,SAAS,IAAI,CAC9F,EAED,uBAAuBH,EAAO,CAC1B,KAAK,SAAS,MAAQG,EAAgB,cAAcH,EAAO,KAAK,SAAS,IAAI,CAChF,EAMD,kBAAkBA,EAAO,CACjBA,IAAU,IAEV,KAAK,SAAS,SAAW,KAEzB,KAAK,oBAAmB,EAE/B,EAED,uBAAwB,CACpB,KAAK,WAAW,QAASqB,GAAa,CAC7B,KAAK,qBAAqBA,CAAQ,IAI/B,KAAK,2BACL,KAAK,sBAAsBA,EAAU,KAAK,SAAS,QAAQ,EAE3D,KAAK,sBAAsBA,EAAU,KAAK,SAAS,KAAK,EAGhF,CAAa,EACD,KAAK,sBAAwB,EAChC,EAED,sBAAsBA,EAAUE,EAAW,CAEvC,IAAIC,EAAWrB,EAAgB,cAE3BoB,IAAc,SACdC,EAAWD,GAGfC,GAAYH,EAAS,OAEjBG,EAAWrB,EAAgB,gBAC3BqB,EAAWrB,EAAgB,eAG/B,MAAMsB,EAA4B,KAAK,mBAAmB,OAAO,OAAO,QAAQ,GAAG,EACnFA,EAA0B,WAAa,KAAK,SAAS,GACrDA,EAA0B,MAAQD,EAClCC,EAA0B,WAAaJ,EAAS,GAChDI,EAA0B,SAAWJ,EAErC,KAAK,SAAS,wBAAwB,IAAII,CAAyB,CACtE,EAED,qBAAsB,CAClB,MAAMC,EAAM,KAAK,SAAS,wBAAwB,OAAM,EACxD,IAAIT,EACJ,IAAKA,EAAI,EAAGA,EAAIS,EAAI,OAAQT,GAAK,EAC7B,KAAK,SAAS,wBAAwB,OAAOS,EAAIT,CAAC,CAAC,CAE1D,EAED,qBAAqBI,EAAU,CAC3B,IAAIM,EAAa,GACjB,MAAMC,EAAaP,EAAS,GAC5B,YAAK,SAAS,wBAAwB,QAASQ,GAAkB,CACzDA,EAAc,aAAeD,IAC7BD,EAAa,GACbE,EAAc,SAAWR,EAE7C,CAAa,EACMM,CACV,EAED,4BAA6B,CACrB,KAAK,SAAS,OAAS5B,EAAc,YAAc,KAAK,SAAS,WAAa,KAE9E,KAAK,oBAAmB,EAExB,KAAK,SAAS,wBAAwB,QAAS8B,GAAkB,CAC7DA,EAAc,MAAQ1B,EAAgB,cAAc0B,EAAc,MAAO9B,EAAc,QAAQ,CACnH,CAAiB,EAEL,KAAK,sBAAwB,EAChC,EAED,mBAAoB,CAChB,KAAK,gBAAkB,EAC1B,EAED,oBAAqB,CACjB,KAAK,gBAAkB,EAC1B,EAED,iBAAkB,CACd,KAAK,mBAAkB,EACvB,KAAK,UAAU,IAAM,CACjB,KAAK,MAAM,kBAAmB,KAAK,QAAQ,CAC3D,CAAa,CACJ,EAED,MAAM,eAAgB,CAClB,MAAMQ,EAAW,IAAIL,EAAS,EAAG,EAAE,EACnC,OAAAK,EAAS,UAAUL,EAAS,OAAO,cAAe,KAAK,UAAU,EAAE,CAAC,EAEpE,MAAM,KAAK,iBAAiB,OAAOK,CAAQ,EAAE,KAAMuB,GAAW,CAC1D,KAAK,mBAAqBA,CAC1C,CAAa,EAEM,EACV,EAED,MAAM,aAAc,CAChB,OAAO,KAAK,WACP,IAAI,qCAAsC,CACvC,QAAS,KAAK,YAAY,gBAAiB,CAC/D,CAAiB,EACA,KAAMV,GACIA,EAAS,IACnB,CACR,EAED,MAAM,aAAc,CAChB,OAAO,KAAK,WACP,IAAI,qCAAsC,CACvC,QAAS,KAAK,YAAY,gBAAiB,CAC/D,CAAiB,EACA,KAAMA,GACIA,EAAS,IACnB,CACR,EAED,qBAAsB,CAClB,KAAK,iCAAiC,mBAAmB,oBAAoB,EAAE,KAAMP,GAAW,CAC5F,KAAK,gBAAkBA,CACvC,CAAa,CACJ,CACJ,CACL"}