const i=`{% block sw_order_detail_general %} <div class="sw-order-detail-general"> {% block sw_order_detail_general_info_card %} <sw-card class="sw-order-detail-base__general-info" position-identifier="sw-order-detail-general-info" :title="$tc('sw-order.detailBase.cardTitleGeneralInfo')" > {% block sw_order_detail_general_info %} <sw-order-general-info ref="swOrderGeneralInfo" :order="order" @save-edits="onSaveEdits" /> {% endblock %} </sw-card> {% endblock %} {% block sw_order_detail_general_line_items_card %} <sw-extension-component-section position-identifier="sw-order-detail-base-line-items__before" /> <sw-card class="sw-order-detail-general__line-item-grid-card" position-identifier="sw-order-detail-general-line-items" :title="$tc('sw-order.detailBase.cardTitleLineItems')" > {% block sw_order_detail_general_line_items_card_rows %} <template #grid> <sw-container type="row"> {% block sw_order_detail_general_line_items_grid %} <sw-order-line-items-grid ref="sw-order-line-item-grid" :order="order" :context="versionContext" :editable="acl.can('order.editor')" @item-delete="recalculateAndReload" @item-edit="recalculateAndReload" @existing-item-edit="saveAndRecalculate" @item-cancel="recalculateAndReload" /> {% endblock %} {% block sw_order_detail_general_line_items_summary %} <sw-card-section divider="top" slim > <sw-description-list class="sw-order-detail__summary" grid="1fr 1fr" > {% block sw_order_detail_general_line_items_summary_entries %} {% block sw_order_detail_general_line_items_summary_amount %} <dt>{{ $tc('sw-order.detailBase.summaryLabelAmount') }}</dt> <dd>{{ currencyFilter(order.positionPrice, currency.isoCode, order.totalRounding.decimals) }}</dd> {% endblock %} {% block sw_order_detail_general_line_items_summary_shipping_cost %} <template v-if="delivery"> <dt>{{ $tc('sw-order.detailBase.summaryLabelShippingCosts') }}</dt> <dd> <sw-order-saveable-field v-tooltip="{ showDelay: 300, message: shippingCostsDetail, disabled: taxStatus === 'tax-free' }" type="number" :editable="acl.can('order.editor')" :value="delivery.shippingCosts.totalPrice" @value-change="onShippingChargeEdited" @update:value="onShippingChargeUpdated" > {{ currencyFilter(delivery.shippingCosts.totalPrice, currency.isoCode, order.totalRounding.decimals) }} </sw-order-saveable-field> </dd> </template> <template v-for="(delivery, index) in deliveryDiscounts" :key="index" > <dt> {{ $tc('sw-order.detailBase.discountLabelShippingCosts') }} </dt> <dd> {{ currencyFilter(delivery.shippingCosts.totalPrice, currency.isoCode, order.totalRounding.decimals) }} </dd> </template> {% endblock %} {% block sw_order_detail_general_line_items_summary_amount_without_tax %} <template v-if="taxStatus !== 'tax-free'"> <dt><strong>{{ $tc('sw-order.detailBase.summaryLabelAmountWithoutTaxes') }}</strong></dt> <dd><strong>{{ currencyFilter(order.amountNet, currency.isoCode, order.totalRounding.decimals) }}</strong></dd> </template> {% endblock %} {% block sw_order_detail_general_line_items_summary_taxes %} <template v-if="taxStatus !== 'tax-free'"> <template v-for="(calculatedTax, index) in sortedCalculatedTaxes" :key="index" > <dt> {{ $tc('sw-order.detailBase.summaryLabelTaxes', 1, { taxRate: calculatedTax.taxRate }) }} </dt> <dd> {{ currencyFilter(calculatedTax.tax, currency.isoCode, order.totalRounding.decimals) }} </dd> </template> </template> {% endblock %} {% block sw_order_detail_general_line_items_summary_amount_total %} <template v-if="taxStatus !== 'tax-free'"> <dt><strong>{{ $tc('sw-order.detailBase.summaryLabelAmountTotal') }}</strong></dt> <dd><strong>{{ currencyFilter(orderTotal, currency.isoCode, order.totalRounding.decimals) }}</strong></dd> <template v-if="displayRounded"> <dt><strong>{{ $tc('sw-order.detailBase.summaryLabelAmountTotalRounded') }}</strong></dt> <dd><strong>{{ currencyFilter(order.price.totalPrice, currency.isoCode, order.totalRounding.decimals) }}</strong></dd> </template> </template> {% endblock %} {% block sw_order_detail_general_line_items_summary_amount_free_tax %} <template v-if="taxStatus === 'tax-free'"> <dt><strong>{{ $tc('sw-order.detailBase.summaryLabelAmount') }}</strong></dt> <dd><strong>{{ currencyFilter(order.price.totalPrice, currency.isoCode, order.totalRounding.decimals) }}</strong></dd> </template> {% endblock %} {% endblock %} </sw-description-list> </sw-card-section> {% endblock %} </sw-container> </template> {% endblock %} </sw-card> <sw-extension-component-section position-identifier="sw-order-detail-base-line-items__after" /> {% endblock %} </div> {% endblock %}`,{Utils:d,Mixin:s}=Cicada,{format:l,array:o}=d,{mapGetters:n,mapState:c}=Cicada.Component.getComponentHelper(),{cloneDeep:a}=Cicada.Utils.object,u={template:i,compatConfig:Cicada.compatConfig,inject:{swOrderDetailOnSaveAndReload:{from:"swOrderDetailOnSaveAndReload",default:null},swOrderDetailOnSaveEdits:{from:"swOrderDetailOnSaveEdits",default:null},swOrderDetailOnRecalculateAndReload:{from:"swOrderDetailOnRecalculateAndReload",default:null},swOrderDetailOnSaveAndRecalculate:{from:"swOrderDetailOnSaveAndRecalculate",default:null},acl:{from:"acl",default:null}},emits:["save-and-recalculate","save-edits","recalculate-and-reload"],mixins:[s.getByName("notification")],props:{orderId:{type:String,required:!0},isSaveSuccessful:{type:Boolean,required:!0}},data(){return{shippingCosts:null}},computed:{...n("swOrderDetail",["isLoading"]),...c("swOrderDetail",["order","versionContext"]),delivery(){return this.order.deliveries[0]},deliveryDiscounts(){return o.slice(this.order.deliveries,1)||[]},shippingCostsDetail(){const r=`${this.sortByTaxRate(a(this.order.shippingCosts.calculatedTaxes)).map(t=>`${this.$tc("sw-order.detailBase.shippingCostsTax",0,{taxRate:t.taxRate,tax:l.currency(t.tax,this.order.currency.isoCode)})}`).join("<br>")}`;return`${this.$tc("sw-order.detailBase.tax")}<br>${r}`},sortedCalculatedTaxes(){return this.sortByTaxRate(a(this.order.price.calculatedTaxes)).filter(e=>e.tax!==0)},taxStatus(){return this.order.price.taxStatus},displayRounded(){return this.order.totalRounding.interval!==.01||this.order.totalRounding.decimals!==this.order.itemRounding.decimals},orderTotal(){return this.displayRounded?this.order.price.rawTotal:this.order.price.totalPrice},currency(){return this.order.currency},currencyFilter(){return Cicada.Filter.getByName("currency")}},methods:{sortByTaxRate(e){return e.sort((r,t)=>r.taxRate-t.taxRate)},onShippingChargeEdited(){this.delivery.shippingCosts.unitPrice=this.shippingCosts,this.delivery.shippingCosts.totalPrice=this.shippingCosts,this.saveAndRecalculate()},onShippingChargeUpdated(e){this.shippingCosts=e},saveAndRecalculate(){this.$emit("save-and-recalculate"),this.swOrderDetailOnSaveAndRecalculate&&this.swOrderDetailOnSaveAndRecalculate()},onSaveEdits(){this.$emit("save-edits"),this.swOrderDetailOnSaveEdits&&this.swOrderDetailOnSaveEdits()},recalculateAndReload(){this.$emit("recalculate-and-reload"),this.swOrderDetailOnRecalculateAndReload&&this.swOrderDetailOnRecalculateAndReload()}}};export{u as default};
//# sourceMappingURL=index-CKwg9Zjm.js.map
