const n=`{% block sw_first_run_wizard_plugins %} <div class="sw-first-run-wizard-plugins"> <h3 class="recommended-plugins__headline"> {{ $tc('sw-first-run-wizard.recommendedPlugins.headline') }} </h3> <p class="recommended-plugins__description" v-html="$tc('sw-first-run-wizard.recommendedPlugins.message')" ></p> <div class="select-region"> <p>{{ $tc('sw-first-run-wizard.recommendedPlugins.availableInRegion') }}</p> <div class="regions"> <sw-label v-for="region in regions" :key="region.name" :variant="regionVariant(region)" size="medium" :ghost="false" :caps="false" appearance="pill" class="sw-label-region" @selected="onSelectRegion(region)" > {{ region.label }} </sw-label> </div> </div> <div v-if="categories.length" class="select-category" > <p>{{ $tc('sw-first-run-wizard.recommendedPlugins.category') }}</p> <div class="categories"> <sw-label v-for="category in categories" :key="category.name" :variant="categoryVariant(category)" size="medium" :ghost="false" :caps="false" appearance="pill" class="sw-label-category" @selected="onSelectCategory(category)" > {{ category.label }} </sw-label> </div> </div> <sw-loader v-show="isLoading" size="48px" /> <h3 v-show="showCategoryLead" class="recommended-plugins__headline" > {{ $tc('sw-first-run-wizard.recommendedPlugins.topRecommendations') }} </h3> <div v-show="showCategoryLead" class="plugins-category-lead" > <sw-plugin-card v-for="plugin in categoryLead" :key="plugin.name" :plugin="plugin" @on-plugin-installed="reloadRecommendations" @extension-activated="$emit('extension-activated', $event)" /> </div> <hr v-if="showSpacer" class="spacer" > <h3 v-show="showNotCategoryLead" class="recommended-plugins__headline" > {{ $tc('sw-first-run-wizard.recommendedPlugins.otherRecommendations') }} </h3> <div v-show="showNotCategoryLead" class="plugins-not-category-lead" > <sw-container v-if="plugins" columns="1fr 1fr" gap="24px 0" > <sw-plugin-card v-for="plugin in notCategoryLead" :key="plugin.name" :plugin="plugin" :show-description="false" @on-plugin-installed="reloadRecommendations" @extension-activated="$emit('extension-activated', $event)" /> </sw-container> </div> </div> {% endblock %}`,s={template:n,compatConfig:Cicada.compatConfig,inject:["recommendationsService"],emits:["extension-activated","frw-set-title","buttons-update","loading-finished"],data(){return{plugins:[],regions:[],categories:[],selectedRegion:null,selectedCategory:null,isLoading:!1}},computed:{categoryLead(){return this.plugins.filter(e=>e.isCategoryLead)},notCategoryLead(){return this.plugins.filter(e=>!e.isCategoryLead)},showSpacer(){return this.categoryLead.length>0&&this.notCategoryLead.length>0},showCategoryLead(){return this.categoryLead.length>0},showNotCategoryLead(){return this.notCategoryLead.length>0}},created(){this.createdComponent()},methods:{createdComponent(){this.updateButtons(),this.setTitle(),this.getRecommendationRegions()},setTitle(){this.$emit("frw-set-title",this.$tc("sw-first-run-wizard.recommendedPlugins.modalTitle"))},updateButtons(){const e=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",variant:null,action:"sw.first.run.wizard.index.paypal.info",disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:"sw.first.run.wizard.index.cicada.account",disabled:!1}];this.$emit("buttons-update",e)},regionVariant({name:e}){return this.selectedRegion&&this.selectedRegion.name===e?"info":"neutral"},categoryVariant({name:e}){return this.selectedCategory&&this.selectedCategory.name===e?"info":"neutral"},onSelectRegion(e){this.selectedRegion=e,this.categories=e.categories,this.selectedCategory=null,this.plugins=[]},onSelectCategory(e){this.selectedCategory=e,this.getRecommendations()},getRecommendations(){const e=this.selectedRegion.name,t=this.selectedCategory.name;this.isLoading=!0,this.recommendationsService.getRecommendations({region:e,category:t}).then(i=>{this.plugins=i.items}).finally(()=>{this.isLoading=!1})},getRecommendationRegions(){this.isLoading=!0,this.recommendationsService.getRecommendationRegions().then(e=>{this.regions=e.items}).finally(()=>{this.isLoading=!1,this.$emit("loading-finished")})},reloadRecommendations(){this.getRecommendations()}}};export{s as default};
//# sourceMappingURL=index-BGxFbp_y.js.map
