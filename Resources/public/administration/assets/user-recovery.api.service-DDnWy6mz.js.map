{"version":3,"file":"user-recovery.api.service-DDnWy6mz.js","sources":["../../../app/administration/src/core/service/api/user-recovery.api.service.js"],"sourcesContent":["import ApiService from '../api.service';\n\n/**\n * Custom gateway for the \"user/user-recovery\" routes\n * @class\n * @extends ApiService\n * @package services-settings\n */\nclass UserRecoveryApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'user') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'userRecoveryService';\n        this.context = Cicada.Context;\n    }\n\n    createRecovery(email) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/user-recovery`;\n\n        return this.httpClient\n            .post(\n                apiRoute,\n                {\n                    email: email,\n                },\n                {\n                    params: {},\n                    headers: this.getBasicHeaders(),\n                },\n            )\n            .then((response) => {\n                ApiService.handleResponse(response);\n            });\n    }\n\n    checkHash(hash) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/user-recovery/hash`;\n\n        return this.httpClient\n            .get(apiRoute, {\n                params: { hash: hash },\n                headers: this.getBasicHeaders(),\n            })\n            .then((response) => {\n                ApiService.handleResponse(response);\n            });\n    }\n\n    updateUserPassword(hash, password, passwordConfirm) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/user-recovery/password`;\n\n        return this.httpClient\n            .patch(\n                apiRoute,\n                {\n                    hash: hash,\n                    password: password,\n                    passwordConfirm: passwordConfirm,\n                },\n                {\n                    params: {},\n                    headers: this.getBasicHeaders(),\n                },\n            )\n            .then((response) => {\n                ApiService.handleResponse(response);\n            });\n    }\n}\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default UserRecoveryApiService;\n"],"names":["UserRecoveryApiService","ApiService","httpClient","loginService","apiEndpoint","email","apiRoute","response","hash","password","passwordConfirm"],"mappings":"iHAQA,MAAMA,UAA+BC,CAAW,CAC5C,YAAYC,EAAYC,EAAcC,EAAc,OAAQ,CACxD,MAAMF,EAAYC,EAAcC,CAAW,EAC3C,KAAK,KAAO,sBACZ,KAAK,QAAU,OAAO,OACzB,CAED,eAAeC,EAAO,CAClB,MAAMC,EAAW,YAAY,KAAK,eAAc,CAAE,iBAElD,OAAO,KAAK,WACP,KACGA,EACA,CACI,MAAOD,CACV,EACD,CACI,OAAQ,CAAE,EACV,QAAS,KAAK,gBAAiB,CAClC,CACJ,EACA,KAAME,GAAa,CAChBN,EAAW,eAAeM,CAAQ,CAClD,CAAa,CACR,CAED,UAAUC,EAAM,CACZ,MAAMF,EAAW,YAAY,KAAK,eAAc,CAAE,sBAElD,OAAO,KAAK,WACP,IAAIA,EAAU,CACX,OAAQ,CAAE,KAAME,CAAM,EACtB,QAAS,KAAK,gBAAiB,CAC/C,CAAa,EACA,KAAMD,GAAa,CAChBN,EAAW,eAAeM,CAAQ,CAClD,CAAa,CACR,CAED,mBAAmBC,EAAMC,EAAUC,EAAiB,CAChD,MAAMJ,EAAW,YAAY,KAAK,eAAc,CAAE,0BAElD,OAAO,KAAK,WACP,MACGA,EACA,CACI,KAAME,EACN,SAAUC,EACV,gBAAiBC,CACpB,EACD,CACI,OAAQ,CAAE,EACV,QAAS,KAAK,gBAAiB,CAClC,CACJ,EACA,KAAMH,GAAa,CAChBN,EAAW,eAAeM,CAAQ,CAClD,CAAa,CACR,CACL"}