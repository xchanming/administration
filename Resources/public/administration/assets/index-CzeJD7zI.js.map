{"version":3,"file":"index-CzeJD7zI.js","sources":["../../../app/administration/src/module/sw-customer/component/sw-customer-address-form/sw-customer-address-form.html.twig","../../../app/administration/src/module/sw-customer/component/sw-customer-address-form/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_customer_address_form %}\n<div class=\"sw-customer-address-form\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_customer_address_form_container %}\n    <sw-container\n        columns=\"repeat(auto-fit, minmax(250px, 1fr))\"\n        gap=\"0px 30px\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_company_field %}\n        <sw-text-field\n            v-model:value=\"address.company\"\n            name=\"sw-field--address-company\"\n            :required=\"isBusinessAccountType\"\n            :label=\"$tc('sw-customer.addressForm.labelCompany')\"\n            :error=\"disabled ? null : addressCompanyError\"\n            :disabled=\"disabled\"\n            :placeholder=\"$tc('sw-customer.addressForm.placeholderCompany')\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_department_field %}\n        <sw-text-field\n            v-model:value=\"address.department\"\n            name=\"sw-field--address-department\"\n            :label=\"$tc('sw-customer.addressForm.labelDepartment')\"\n            :error=\"disabled ? null : addressDepartmentError\"\n            :disabled=\"disabled\"\n            :placeholder=\"$tc('sw-customer.addressForm.placeholderDepartment')\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_salutation_title_container %}\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_salutation_field %}\n        <sw-entity-single-select\n            v-model:value=\"address.salutationId\"\n            name=\"sw-field--address-salutationId\"\n            class=\"sw-customer-address-form__salutation-select\"\n            entity=\"salutation\"\n            :label=\"$tc('sw-customer.addressForm.labelSalutation')\"\n            :placeholder=\"$tc('sw-customer.addressForm.placeholderSalutation')\"\n            :error=\"disabled ? null : addressSalutationIdError\"\n            :disabled=\"disabled\"\n            :criteria=\"salutationCriteria\"\n            label-property=\"displayName\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_title_field %}\n        <sw-text-field\n            v-model:value=\"address.title\"\n            name=\"sw-field--address-title\"\n            :label=\"$tc('sw-customer.addressForm.labelTitle')\"\n            :placeholder=\"$tc('sw-customer.addressForm.placeholderTitle')\"\n            :error=\"disabled ? null : addressTitleError\"\n            :disabled=\"disabled\"\n        />\n        {% endblock %}\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_name_field %}\n        <sw-text-field\n            v-model:value=\"address.name\"\n            name=\"sw-field--address-name\"\n            :label=\"$tc('sw-customer.addressForm.labelName')\"\n            :placeholder=\"$tc('sw-customer.addressForm.placeholderName')\"\n            validation=\"required\"\n            required\n            :error=\"disabled ? null : addressNameError\"\n            :disabled=\"disabled\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_street_field %}\n        <sw-text-field\n            v-model:value=\"address.street\"\n            name=\"sw-field--address-street\"\n            :label=\"$tc('sw-customer.addressForm.labelStreet')\"\n            :placeholder=\"$tc('sw-customer.addressForm.placeholderStreet')\"\n            validation=\"required\"\n            required\n            :error=\"disabled ? null : addressStreetError\"\n            :disabled=\"disabled\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_additional_address_line_1_field %}\n        <sw-text-field\n            v-model:value=\"address.additionalAddressLine1\"\n            name=\"sw-field--address-additionalAddressLine1\"\n            :label=\"$tc('sw-customer.addressForm.labelAdditionalAddressLine1')\"\n            :placeholder=\"$tc('sw-customer.addressForm.placeholderAdditionalAddressLine1')\"\n            :error=\"disabled ? null : addressAdditionalAddressLine1Error\"\n            :disabled=\"disabled\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_additional_address_line_2_field %}\n        <sw-text-field\n            v-model:value=\"address.additionalAddressLine2\"\n            name=\"sw-field--address-additionalAddressLine2\"\n            :label=\"$tc('sw-customer.addressForm.labelAdditionalAddressLine2')\"\n            :placeholder=\"$tc('sw-customer.addressForm.placeholderAdditionalAddressLine2')\"\n            :error=\"disabled ? null : addressAdditionalAddressLine2Error\"\n            :disabled=\"disabled\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_zipcode_city_container %}\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_zipcode_field %}\n        <sw-text-field\n            v-model:value=\"address.zipcode\"\n            name=\"sw-field--address-zipcode\"\n            :label=\"$tc('sw-customer.addressForm.labelZipcode')\"\n            :placeholder=\"$tc('sw-customer.addressForm.placeholderZipcode')\"\n            validation=\"required\"\n            :required=\"country && country.postalCodeRequired\"\n            :error=\"disabled ? null : addressZipcodeError\"\n            :disabled=\"disabled\"\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_city_field %}\n        <sw-text-field\n            v-model:value=\"address.city\"\n            name=\"sw-field--address-city\"\n            :label=\"$tc('sw-customer.addressForm.labelCity')\"\n            :placeholder=\"$tc('sw-customer.addressForm.placeholderCity')\"\n            validation=\"required\"\n            required\n            :error=\"disabled ? null : addressCityError\"\n            :disabled=\"disabled\"\n        />\n        {% endblock %}\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_country_field %}\n        <sw-entity-single-select\n            v-model:value=\"countryId\"\n            name=\"sw-field--countryId\"\n            class=\"sw-customer-address-form__country-select\"\n            entity=\"country\"\n            :criteria=\"countryCriteria\"\n            :label=\"$tc('sw-customer.addressForm.labelCountry')\"\n            :placeholder=\"$tc('sw-customer.addressForm.placeholderCountry')\"\n            validation=\"required\"\n            required\n            :error=\"disabled ? null : addressCountryIdError\"\n            :disabled=\"disabled\"\n            show-clearable-button\n        />\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_state_field %}\n        <div\n            v-if=\"countryId && hasStates\"\n            class=\"sw-customer-address-form__state-select-placeholder\"\n        >\n            <sw-entity-single-select\n                v-model:value=\"address.countryStateId\"\n                name=\"sw-field--address-countryStateId\"\n                class=\"sw-customer-address-form__state-select\"\n                entity=\"country_state\"\n                :criteria=\"stateCriteria\"\n                :label=\"$tc('sw-customer.addressForm.labelState')\"\n                :placeholder=\"$tc('sw-customer.addressForm.placeholderState')\"\n                :required=\"country && country.forceStateInRegistration\"\n                :error=\"disabled ? null : addressCountryStateIdError\"\n                :disabled=\"disabled\"\n                show-clearable-button\n            />\n        </div>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_customer_address_form_phone_number_field %}\n        <sw-text-field\n            v-model:value=\"address.phoneNumber\"\n            name=\"sw-field--address-phoneNumber\"\n            :label=\"$tc('sw-customer.addressForm.labelPhoneNumber')\"\n            :placeholder=\"$tc('sw-customer.addressForm.placeholderPhoneNumber')\"\n            :error=\"disabled ? null : addressPhoneNumberError\"\n            :disabled=\"disabled\"\n        />\n        {% endblock %}\n\n        <slot v-bind=\"{ disabled }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_customer_address_form_extension_slot %}\n            {% endblock %}\n        </slot>\n    </sw-container>\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-customer-address-form.html.twig';\nimport './sw-customer-address-form.scss';\nimport CUSTOMER from '../../constant/sw-customer.constant';\n\n/**\n * @package checkout\n */\n\nconst { Defaults, EntityDefinition } = Cicada;\nconst { Criteria } = Cicada.Data;\nconst { mapPropertyErrors } = Cicada.Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['repositoryFactory'],\n\n    props: {\n        customer: {\n            type: Object,\n            required: true,\n        },\n\n        address: {\n            type: Object,\n            required: true,\n            default() {\n                return this.addressRepository.create(this.context);\n            },\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            country: null,\n            states: [],\n        };\n    },\n\n    computed: {\n        addressRepository() {\n            return this.repositoryFactory.create(this.customer.addresses.entity, this.customer.addresses.source);\n        },\n\n        countryRepository() {\n            return this.repositoryFactory.create('country');\n        },\n\n        countryStateRepository() {\n            return this.repositoryFactory.create('country_state');\n        },\n\n        ...mapPropertyErrors('address', [\n            'company',\n            'department',\n            'salutationId',\n            'title',\n            'name',\n            'street',\n            'additionalAddressLine1',\n            'additionalAddressLine2',\n            'zipcode',\n            'city',\n            'countryId',\n            'phoneNumber',\n            'vatId',\n            'countryStateId',\n            'salutationId',\n            'city',\n            'street',\n            'zipcode',\n            'name',\n        ]),\n\n        countryId: {\n            get() {\n                return this.address.countryId;\n            },\n\n            set(countryId) {\n                this.address.countryId = countryId;\n            },\n        },\n\n        countryCriteria() {\n            const criteria = new Criteria(1, 25);\n            criteria.addSorting(Criteria.sort('position', 'ASC', true)).addSorting(Criteria.sort('name', 'ASC'));\n            return criteria;\n        },\n\n        stateCriteria() {\n            if (!this.countryId) {\n                return null;\n            }\n\n            const criteria = new Criteria(1, 25);\n            criteria\n                .addFilter(Criteria.equals('countryId', this.countryId))\n                .addSorting(Criteria.sort('position', 'ASC', true))\n                .addSorting(Criteria.sort('name', 'ASC'));\n            return criteria;\n        },\n\n        salutationCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addFilter(\n                Criteria.not('or', [\n                    Criteria.equals('id', Defaults.defaultSalutationId),\n                ]),\n            );\n\n            return criteria;\n        },\n\n        hasStates() {\n            return this.states.length > 0;\n        },\n\n        isBusinessAccountType() {\n            return this.customer?.accountType === CUSTOMER.ACCOUNT_TYPE_BUSINESS;\n        },\n    },\n\n    watch: {\n        countryId: {\n            immediate: true,\n            handler(newId, oldId) {\n                if (typeof oldId !== 'undefined') {\n                    this.address.countryStateId = null;\n                }\n\n                if (!this.countryId) {\n                    this.country = null;\n                    return Promise.resolve();\n                }\n\n                return this.countryRepository.get(this.countryId).then((country) => {\n                    this.country = country;\n\n                    this.address.country = this.country;\n                    this.getCountryStates();\n                });\n            },\n        },\n\n        'address.company'(newVal) {\n            if (!newVal) {\n                return;\n            }\n\n            this.customer.company = newVal;\n        },\n\n        'country.forceStateInRegistration'(newVal) {\n            if (!newVal) {\n                Cicada.State.dispatch('error/removeApiError', {\n                    expression: `${this.address.getEntityName()}.${this.address.id}.countryStateId`,\n                });\n            }\n\n            const definition = EntityDefinition.get(this.address.getEntityName());\n\n            definition.properties.countryStateId.flags.required = newVal;\n        },\n\n        'country.postalCodeRequired'(newVal) {\n            if (!newVal) {\n                Cicada.State.dispatch('error/removeApiError', {\n                    expression: `${this.address.getEntityName()}.${this.address.id}.zipcode`,\n                });\n            }\n\n            const definition = EntityDefinition.get(this.address.getEntityName());\n\n            definition.properties.zipcode.flags.required = newVal;\n        },\n    },\n\n    methods: {\n        getCountryStates() {\n            if (!this.country) {\n                return Promise.resolve();\n            }\n\n            return this.countryStateRepository.search(this.stateCriteria).then((response) => {\n                this.states = response;\n            });\n        },\n    },\n};\n"],"names":["template","Defaults","EntityDefinition","Criteria","mapPropertyErrors","index","countryId","criteria","_a","CUSTOMER","newId","oldId","country","newVal","definition","response"],"mappings":"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"}