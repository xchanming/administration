{"version":3,"file":"index-DWyT1wrE.js","sources":["../../../app/administration/src/module/sw-product-stream/page/sw-product-stream-list/sw-product-stream-list.html.twig","../../../app/administration/src/module/sw-product-stream/page/sw-product-stream-list/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_product_stream_list %}\n<sw-page class=\"sw-product-stream-list\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_stream_list_search_bar %}\n    <template #search-bar>\n        <sw-search-bar\n            initial-search-type=\"product_stream\"\n            :placeholder=\"$tc('sw-product-stream.general.placeholderSearchBar')\"\n            :initial-search=\"term\"\n            @search=\"onSearch\"\n        />\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_stream_list_smart_bar_header %}\n    <template #smart-bar-header>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_stream_list_smart_bar_header_title %}\n        <h2>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_stream_list_smart_bar_header_title_text %}\n            {{ $tc('sw-product-stream.list.textProductStreamOverview') }}\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_stream_list_smart_bar_header_amount %}\n            <span\n                v-if=\"!isLoading\"\n                class=\"sw-page__smart-bar-amount\"\n            >\n                ({{ total }})\n            </span>\n            {% endblock %}\n        </h2>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_stream_list_smart_bar_actions %}\n    <template #smart-bar-actions>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_stream_list_smart_bar_actions_add %}\n        <sw-button\n            v-tooltip.bottom=\"getNoPermissionsTooltip('product_stream.creator')\"\n            class=\"sw-product-stream-list__create-action\"\n            :disabled=\"!acl.can('product_stream.creator')\"\n            :router-link=\"{ name: 'sw.product.stream.create' }\"\n            variant=\"primary\"\n        >\n            {{ $tc('sw-product-stream.list.buttonAddProductStream') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_manufacturer_list_language_switch %}\n    <template #language-switch>\n        <sw-language-switch @on-change=\"onChangeLanguage\" />\n    </template>\n    {% endblock %}\n\n    <template #content>\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_product_stream_list_content %}\n        <div class=\"sw-product-stream-list__content\">\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_stream_list_grid %}\n            <sw-entity-listing\n                v-if=\"isLoading || (productStreams && entitySearchable)\"\n                ref=\"swProductStreamGrid\"\n                class=\"sw-product-stream-list-grid\"\n                :items=\"productStreams\"\n                :columns=\"getProductStreamColumns()\"\n                :repository=\"productStreamRepository\"\n                detail-route=\"sw.product.stream.detail\"\n                :show-selection=\"acl.can('product_stream.deleter')\"\n                :is-loading=\"isLoading\"\n                :disable-data-fetching=\"true\"\n                :sort-by=\"currentSortBy\"\n                :sort-direction=\"sortDirection\"\n                :criteria-limit=\"limit\"\n                :allow-inline-edit=\"acl.can('product_stream.editor')\"\n                identifier=\"sw-product-stream-list\"\n                @page-change=\"onPageChange\"\n                @column-sort=\"onSortColumn\"\n                @inline-edit-save=\"onInlineEditSave\"\n                @items-delete-finish=\"getList\"\n                @delete-item-failed=\"onDeleteItemFailed\"\n                @delete-items-failed=\"onDeleteItemsFailed\"\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_stream_list_grid_bulk %}\n                <template #bulk>\n                    <span v-if=\"!acl.can('product_stream.deleter')\"></span>\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_stream_list_grid_column_invalid %}\n                <template #column-invalid=\"{item}\">\n                    <template v-if=\"item.invalid\">\n                        {{ $tc('sw-product-stream.list.status.invalid') }}\n                    </template>\n\n                    <template v-else>\n                        {{ $tc('sw-product-stream.list.status.valid') }}\n                    </template>\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_stream_list_grid_colum_updated_at %}\n                <template #column-updatedAt=\"{item}\">\n                    <template v-if=\"item.updatedAt\">\n                        {{ dateFilter(item.updatedAt) }}\n                    </template>\n\n                    <template v-else>\n                        {{ dateFilter(item.createdAt) }}\n                    </template>\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_stream_list_grid_more_actions %}\n                <template #more-actions=\"{item}\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_product_stream_list_grid_duplicate_action %}\n                    <sw-context-menu-item\n                        :disabled=\"!acl.can('product_stream.creator')\"\n                        class=\"sw-entity-listing__context-menu-edit-duplicate\"\n                        @click=\"onDuplicate(item)\"\n                    >\n                        {{ $tc('global.default.duplicate') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_product_stream_list_grid_delete_action %}\n                <template #delete-action=\"{item, showDelete, allowDelete}\">\n\n                    <sw-context-menu-item\n                        :disabled=\"!acl.can('product_stream.deleter') || !allowDelete\"\n                        class=\"sw-entity-listing__context-menu-edit-delete\"\n                        variant=\"danger\"\n                        @click=\"showDelete(item.id)\"\n                    >\n                        {{ $tc('global.default.delete') }}\n                    </sw-context-menu-item>\n                </template>\n                {% endblock %}\n            </sw-entity-listing>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_stream_list_empty_state %}\n            <template v-else-if=\"!isLoading && !total\">\n                <sw-empty-state\n                    v-if=\"isValidTerm(term)\"\n                    :title=\"$tc('sw-empty-state.messageNoResultTitle')\"\n                >\n                    <template #default>\n                        {{ $tc('sw-empty-state.messageNoResultSublineBefore') }}\n                        <router-link\n                            class=\"sw-empty-state__description-link\"\n                            :to=\"{ name: 'sw.profile.index.searchPreferences' }\"\n                        >\n                            {{ $tc('sw-empty-state.messageNoResultSublineLink') }}\n                        </router-link>\n                        {{ $tc('sw-empty-state.messageNoResultSublineAfter') }}\n                    </template>\n                </sw-empty-state>\n\n                <sw-empty-state\n                    v-else\n                    :title=\"$tc('sw-product-stream.list.messageEmpty')\"\n                />\n            </template>\n            {% endblock %}\n        </div>\n        {% endblock %}\n    </template>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_product_stream_list_sidebar %}\n    <template #sidebar>\n        <sw-sidebar>\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_product_stream_list_sidebar_refresh %}\n            <sw-sidebar-item\n                icon=\"regular-undo\"\n                :title=\"$tc('sw-product-stream.list.titleSidebarItemRefresh')\"\n                @click=\"onRefresh\"\n            />\n            {% endblock %}\n        </sw-sidebar>\n    </template>\n    {% endblock %}\n\n</sw-page>\n{% endblock %}\n","/*\n * @package services-settings\n */\n\nimport template from './sw-product-stream-list.html.twig';\nimport './sw-product-stream-list.scss';\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n/**\n * @private\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            productStreams: null,\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            isLoading: false,\n            showDeleteModal: false,\n            searchConfigEntity: 'product_stream',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        productStreamRepository() {\n            return this.repositoryFactory.create('product_stream');\n        },\n\n        dateFilter() {\n            return Cicada.Filter.getByName('date');\n        },\n    },\n\n    methods: {\n        onInlineEditSave(promise, productStream) {\n            return promise\n                .then(() => {\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-product-stream.detail.messageSaveSuccess', 0, { name: productStream.name }),\n                    });\n                })\n                .catch(() => {\n                    this.getList();\n                    this.createNotificationError({\n                        message: this.$tc('sw-product-stream.detail.messageSaveError'),\n                    });\n                });\n        },\n\n        onChangeLanguage() {\n            return this.getList();\n        },\n\n        async getList() {\n            this.isLoading = true;\n\n            let criteria = new Criteria(this.page, this.limit);\n\n            criteria.setTerm(this.term);\n            if (this.acl.can('category:read')) {\n                criteria.addAggregation(\n                    Criteria.terms(\n                        'product_stream',\n                        'id',\n                        null,\n                        null,\n                        Criteria.count('categories', 'product_stream.categories.id'),\n                    ),\n                );\n            }\n            this.naturalSorting = this.sortBy === 'createdAt';\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, this.naturalSorting));\n\n            criteria = await this.addQueryScores(this.term, criteria);\n            if (!this.entitySearchable) {\n                this.isLoading = false;\n                this.total = 0;\n\n                return false;\n            }\n\n            if (this.freshSearchTerm) {\n                criteria.resetSorting();\n            }\n\n            return this.productStreamRepository\n                .search(criteria)\n                .then((items) => {\n                    this.total = items.total;\n                    this.productStreams = items;\n                    this.isLoading = false;\n\n                    return items;\n                })\n                .catch(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        getProductStreamColumns() {\n            return [\n                {\n                    property: 'name',\n                    dataIndex: 'name',\n                    inlineEdit: 'string',\n                    label: 'sw-product-stream.list.columnName',\n                    routerLink: 'sw.product.stream.detail',\n                    width: '250px',\n                    allowResize: true,\n                    primary: true,\n                },\n                {\n                    property: 'description',\n                    label: 'sw-product-stream.list.columnDescription',\n                    width: '250px',\n                    allowResize: true,\n                },\n                {\n                    property: 'updatedAt',\n                    label: 'sw-product-stream.list.columnDateUpdated',\n                    align: 'right',\n                    allowResize: true,\n                },\n                {\n                    property: 'invalid',\n                    label: 'sw-product-stream.list.columnStatus',\n                    allowResize: true,\n                },\n            ];\n        },\n\n        getNoPermissionsTooltip(role, showOnDisabledElements = true) {\n            return {\n                showDelay: 300,\n                message: this.$tc('sw-privileges.tooltip.warning'),\n                appearance: 'dark',\n                showOnDisabledElements,\n                disabled: this.acl.can(role) || this.allowDelete,\n            };\n        },\n\n        onDeleteItemFailed({ id, errorResponse }) {\n            const stream = this.productStreams?.get(id);\n            const message = errorResponse?.response?.data?.errors?.[0]?.detail || null;\n\n            if (!stream) {\n                return;\n            }\n\n            if (!this.productStreams.aggregations.product_stream) {\n                this.createNotificationError({ message });\n                return;\n            }\n\n            const aggregation = this.productStreams.aggregations.product_stream.buckets\n                .filter((bucket) => {\n                    return bucket.key === id;\n                })\n                .at(0);\n\n            const count = aggregation.categories.count;\n            const name = stream.name;\n\n            if (count === 0) {\n                this.createNotificationError({ message });\n                return;\n            }\n\n            this.createNotificationError({\n                message: this.$tc('sw-product-stream.general.errorCategory', count, { name, count }),\n            });\n        },\n\n        onDeleteItemsFailed({ selectedIds, errorResponse }) {\n            selectedIds.forEach((id) => {\n                this.onDeleteItemFailed({ id, errorResponse });\n            });\n        },\n\n        onDuplicate(item) {\n            const behavior = {\n                cloneChildren: true,\n                overwrites: {\n                    name: `${item.name || item.translated.name} ${this.$tc('global.default.copy')}`,\n                },\n            };\n\n            this.isLoading = true;\n\n            this.productStreamRepository\n                .clone(item.id, behavior, Cicada.Context.api)\n                .then((clone) => {\n                    const route = {\n                        name: 'sw.product.stream.detail',\n                        params: { id: clone.id },\n                    };\n\n                    this.$router.push(route);\n                })\n                .catch(() => {\n                    this.isLoading = false;\n\n                    this.createNotificationError({\n                        message: this.$tc('global.notification.unspecifiedSaveErrorMessage'),\n                    });\n                });\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","index","promise","productStream","criteria","items","role","showOnDisabledElements","id","errorResponse","_a","_b","_c","_d","_e","stream","message","count","bucket","name","selectedIds","item","behavior","clone","route"],"mappings":"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"}