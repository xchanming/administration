{"version":3,"file":"index-BDCNjZG2.js","sources":["../../../app/administration/src/module/sw-settings-custom-field/component/sw-custom-field-translated-labels/sw-custom-field-translated-labels.html.twig","../../../app/administration/src/module/sw-settings-custom-field/component/sw-custom-field-translated-labels/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_custom_field_translated_labels %}\n<div class=\"sw-custom-field-translated-labels\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_custom_field_translated_labels_single %}\n    <template v-if=\"localeCount == 1\">\n        <div\n            v-for=\"locale in locales\"\n            :key=\"locale\"\n            class=\"sw-custom-field-translated-labels__single\"\n        >\n            <sw-text-field\n                v-for=\"(label, name) in propertyNames\"\n                :key=\"getInlineSnippet(name)\"\n                v-model:value=\"config[name][locale]\"\n                :disabled=\"disabled\"\n                :label=\"getLabel(label, locale)\"\n                @update:value=\"onInput($event, name, locale)\"\n            />\n        </div>\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_custom_field_translated_labels_translated %}\n    <sw-tabs\n        v-else\n        variant=\"minimal\"\n        position-identifier=\"sw-custom-field-translated-labels\"\n        class=\"sw-custom-field-translated-labels__tabs\"\n        :default-item=\"fallbackLocale\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_custom_field_translated_labels_translated_tabs %}\n        <template #default=\"{ active }\">\n            <sw-tabs-item\n                v-for=\"locale in locales\"\n                :key=\"locale\"\n                class=\"sw-custom-field-translated-labels__translated-labels-field\"\n                variant=\"minimal\"\n                :name=\"locale\"\n                :active-tab=\"active\"\n            >\n                {{ $tc(`locale.${locale}`) }}\n            </sw-tabs-item>\n        </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_custom_field_translated_labels_translated_content %}\n        <template\n            #content=\"{ active }\"\n        >\n            <template\n                v-for=\"locale in locales\"\n                :key=\"locale\"\n            >\n                <div v-if=\"active === locale\">\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_custom_field_translated_labels_translated_content_field %}\n                    <sw-text-field\n                        v-for=\"(label, name) in propertyNames\"\n                        :key=\"getInlineSnippet(name)\"\n                        v-model:value=\"config[name][locale]\"\n                        class=\"sw-custom-field-translated-labels__translated-content-field\"\n                        :disabled=\"disabled\"\n                        :label=\"getLabel(label, locale)\"\n                        @update:value=\"onInput($event, name, locale)\"\n                    />\n                    {% endblock %}\n                </div>\n            </template>\n        </template>\n        {% endblock %}\n    </sw-tabs>\n    {% endblock %}\n</div>\n{% endblock %}\n","/**\n * @package services-settings\n */\nimport template from './sw-custom-field-translated-labels.html.twig';\nimport './sw-custom-field-translated-labels.scss';\n\nconst { Mixin } = Cicada;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['acl'],\n\n    mixins: [\n        Mixin.getByName('sw-inline-snippet'),\n    ],\n\n    props: {\n        locales: {\n            type: Array,\n            required: true,\n            default: [],\n        },\n        config: {\n            type: Object,\n            required: true,\n        },\n        propertyNames: {\n            type: Object,\n            required: true,\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    computed: {\n        fallbackLocale() {\n            return this.$root.$i18n.fallbackLocale;\n        },\n\n        localeCount() {\n            return this.locales.length;\n        },\n    },\n\n    watch: {\n        locales() {\n            this.initializeConfiguration();\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.initializeConfiguration();\n        },\n\n        initializeConfiguration() {\n            Object.keys(this.propertyNames).forEach((property) => {\n                if (!this.config.hasOwnProperty(property)) {\n                    if (this.isCompatEnabled('INSTANCE_SET')) {\n                        this.$set(this.config, property, {\n                            [this.fallbackLocale]: null,\n                        });\n                    } else {\n                        this.config[property] = { [this.fallbackLocale]: null };\n                    }\n                }\n            });\n        },\n\n        getLabel(label, locale) {\n            const snippet = this.getInlineSnippet(label);\n            const language = this.$tc(`locale.${locale}`);\n\n            return `${snippet} (${language})`;\n        },\n\n        onInput(input, propertyName, locale) {\n            if (input === '') {\n                this.config[propertyName][locale] = null;\n            }\n        },\n    },\n};\n"],"names":["template","Mixin","index","property","label","locale","snippet","language","input","propertyName"],"mappings":"AAAA,MAAeA,EAAA,suDCMT,CAAE,MAAAC,CAAO,EAAG,OAGHC,EAAA,CACX,SAAAF,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,KAAK,EAEd,OAAQ,CACJC,EAAM,UAAU,mBAAmB,CACtC,EAED,MAAO,CACH,QAAS,CACL,KAAM,MACN,SAAU,GACV,QAAS,CAAE,CACd,EACD,OAAQ,CACJ,KAAM,OACN,SAAU,EACb,EACD,cAAe,CACX,KAAM,OACN,SAAU,EACb,EACD,SAAU,CACN,KAAM,QACN,SAAU,GACV,QAAS,EACZ,CACJ,EAED,SAAU,CACN,gBAAiB,CACb,OAAO,KAAK,MAAM,MAAM,cAC3B,EAED,aAAc,CACV,OAAO,KAAK,QAAQ,MACvB,CACJ,EAED,MAAO,CACH,SAAU,CACN,KAAK,wBAAuB,CAC/B,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,wBAAuB,CAC/B,EAED,yBAA0B,CACtB,OAAO,KAAK,KAAK,aAAa,EAAE,QAASE,GAAa,CAC7C,KAAK,OAAO,eAAeA,CAAQ,IAChC,KAAK,gBAAgB,cAAc,EACnC,KAAK,KAAK,KAAK,OAAQA,EAAU,CAC7B,CAAC,KAAK,cAAc,EAAG,IACnD,CAAyB,EAED,KAAK,OAAOA,CAAQ,EAAI,CAAE,CAAC,KAAK,cAAc,EAAG,MAGzE,CAAa,CACJ,EAED,SAASC,EAAOC,EAAQ,CACpB,MAAMC,EAAU,KAAK,iBAAiBF,CAAK,EACrCG,EAAW,KAAK,IAAI,UAAUF,CAAM,EAAE,EAE5C,MAAO,GAAGC,CAAO,KAAKC,CAAQ,GACjC,EAED,QAAQC,EAAOC,EAAcJ,EAAQ,CAC7BG,IAAU,KACV,KAAK,OAAOC,CAAY,EAAEJ,CAAM,EAAI,KAE3C,CACJ,CACL"}