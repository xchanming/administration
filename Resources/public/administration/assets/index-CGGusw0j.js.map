{"version":3,"file":"index-CGGusw0j.js","sources":["../../../app/administration/src/app/component/filter/sw-range-filter/sw-range-filter.html.twig","../../../app/administration/src/app/component/filter/sw-range-filter/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_range_filter %}\n<sw-base-filter\n    v-bind=\"$attrs\"\n    class=\"sw-range-filter\"\n    v-on=\"listeners\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_range_filter_content %}\n    <sw-container\n        :class=\"{ 'sw-container--has-divider': isShowDivider }\"\n    >\n        <slot></slot>\n\n        <slot name=\"from-field\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_range_filter_from_field %}{% endblock %}\n        </slot>\n\n        <slot name=\"divider\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_range_filter_divider %}\n            <span\n                v-if=\"isShowDivider\"\n                class=\"sw-range-filter__divider\"\n            ></span>\n            {% endblock %}\n        </slot>\n\n        <slot name=\"to-field\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_range_filter_to_field %}{% endblock %}\n        </slot>\n    </sw-container>\n    {% endblock %}\n</sw-base-filter>\n{% endblock %}\n","import template from './sw-range-filter.html.twig';\nimport './sw-range-filter.scss';\n\nconst { Component } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n/**\n * @private\n */\nComponent.register('sw-range-filter', {\n    template,\n\n    inject: ['feature'],\n\n    emits: ['filter-update'],\n\n    props: {\n        value: {\n            type: Object,\n            required: true,\n        },\n\n        property: {\n            type: String,\n            required: true,\n        },\n\n        isShowDivider: {\n            type: Boolean,\n            required: false,\n            // eslint-disable-next-line vue/no-boolean-default\n            default: true,\n        },\n    },\n\n    computed: {\n        listeners() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return this.$listeners;\n            }\n\n            return {};\n        },\n    },\n\n    watch: {\n        value: {\n            deep: true,\n            handler(newValue) {\n                this.updateFilter(newValue);\n            },\n        },\n    },\n\n    methods: {\n        updateFilter(range) {\n            const params = {\n                ...(range.from ? { gte: range.from } : {}),\n                ...(range.to ? { lte: range.to } : {}),\n            };\n\n            const filterCriteria = [Criteria.range(this.property, params)];\n            this.$emit('filter-update', filterCriteria);\n        },\n    },\n});\n"],"names":["template","Component","Criteria","newValue","range","params","filterCriteria"],"mappings":"AAAA,MAAeA,EAAA,imBCGT,CAAE,UAAAC,CAAW,EAAG,OAChB,CAAE,SAAAC,CAAQ,EAAK,OAAO,KAK5BD,EAAU,SAAS,kBAAmB,CAClC,SAAAD,EAEA,OAAQ,CAAC,SAAS,EAElB,MAAO,CAAC,eAAe,EAEvB,MAAO,CACH,MAAO,CACH,KAAM,OACN,SAAU,EACb,EAED,SAAU,CACN,KAAM,OACN,SAAU,EACb,EAED,cAAe,CACX,KAAM,QACN,SAAU,GAEV,QAAS,EACZ,CACJ,EAED,SAAU,CACN,WAAY,CAER,OAAI,KAAK,gBAAgB,oBAAoB,EAClC,KAAK,WAGT,EACV,CACJ,EAED,MAAO,CACH,MAAO,CACH,KAAM,GACN,QAAQG,EAAU,CACd,KAAK,aAAaA,CAAQ,CAC7B,CACJ,CACJ,EAED,QAAS,CACL,aAAaC,EAAO,CAChB,MAAMC,EAAS,CACX,GAAID,EAAM,KAAO,CAAE,IAAKA,EAAM,IAAI,EAAK,CAAE,EACzC,GAAIA,EAAM,GAAK,CAAE,IAAKA,EAAM,EAAE,EAAK,CAAE,CACrD,EAEkBE,EAAiB,CAACJ,EAAS,MAAM,KAAK,SAAUG,CAAM,CAAC,EAC7D,KAAK,MAAM,gBAAiBC,CAAc,CAC7C,CACJ,CACL,CAAC"}