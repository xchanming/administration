const a=`{% block sw_settings_search_search_index %} <sw-card position-identifier="sw-settings-search-search-index" :title="$tc('sw-settings-search.generalTab.labelSearchIndex')" :is-loading="isLoading" > {% block sw_settings_search_search_index_description %} <sw-alert v-if="isRebuildInProgress" class="sw-settings-search__search-index-warning-text" variant="warning" > {% block sw_settings_search_search_index_warning_top %} <p class="sw-settings-search__search-index-warning-top"> {{ $tc('sw-settings-search.generalTab.textWarningOpenTab') }} </p> {% endblock %} {% block sw_settings_search_search_index_warning_bottom %} <p>{{ $tc('sw-settings-search.generalTab.textRebuildSearchIndexDescription') }}</p> {% endblock %} </sw-alert> {% endblock %} {% block sw_settings_search_search_index_rebuild_button %} <sw-button-process variant="ghost" class="sw-settings-search__search-index-rebuild-button" :is-loading="isRebuildInProgress" :disabled="isRebuildInProgress || !acl.can('product_search_config.editor')" :process-success="isRebuildSuccess" @update:process-success="buildFinish" @click="rebuildSearchIndex" > {{ $tc('sw-settings-search.generalTab.buttonRebuildSearchIndex') }} </sw-button-process> {% block sw_settings_search_search_index_lastest_build %} <span class="sw-settings-search__search-index-latest-build"> <template v-if="latestIndex"> {{ $tc('sw-settings-search.generalTab.textLastedBuild') }} <sw-time-ago :date="latestIndex.firstDate" /> &dash; <sw-time-ago :date="latestIndex.lastDate" /> </template> <template v-else> {{ $tc('sw-settings-search.generalTab.textSearchNotIndexedYet') }} </template> </span> {% endblock %} {% endblock %} {% block sw_settings_search_search_index_rebuild_progress %} <div v-if="progressBarValue" class="sw-settings-search__search-index-rebuilding-progress" > {% block sw_settings_search_search_index_rebuild_progress_text %} <span class="sw-settings-search__search-index-rebuilding-text"> {{ $tc('sw-settings-search.generalTab.textRebuildingSearchIndex') }} </span> {% endblock %} {% block sw_settings_search_search_index_rebuild_progress_bar %} <sw-progress-bar :value="progressBarValue" :max-value="100" > {{ $tc('sw-settings-search.generalTab.textRebuildingSearchIndex') }} </sw-progress-bar> {% endblock %} </div> {% endblock %} </sw-card> {% endblock %}`;const{Mixin:r,Context:i}=Cicada,{Criteria:s}=Cicada.Data,n={template:a,compatConfig:Cicada.compatConfig,inject:["productIndexService","repositoryFactory","acl"],emits:["edit-change"],mixins:[r.getByName("notification")],data(){return{isLoading:!0,isRebuildSuccess:!1,isRebuildInProgress:!1,progressBarValue:0,offset:0,syncPolling:null,totalProduct:0,latestIndex:null}},computed:{productRepository(){return this.repositoryFactory.create("product")},productSearchKeywordRepository(){return this.repositoryFactory.create("product_search_keyword")},productCriteria(){const e=new s(1,1);return e.addFilter(s.equals("product.parentId",null)),e},productSearchKeywordsCriteria(){const e=new s(1,1);return e.addAggregation(s.min("firstDate","createdAt")),e.addAggregation(s.max("lastDate","createdAt")),e}},created(){this.createdComponent()},beforeUnmount(){this.beforeDestroyComponent()},methods:{createdComponent(){this.isLoading=!1,this.getTotalProduct(),this.getLatestProductKeywordIndexed()},beforeDestroyComponent(){this.clearPolling()},getLatestProductKeywordIndexed(){this.isLoading=!0,this.productSearchKeywordRepository.search(this.productSearchKeywordsCriteria,i.api).then(e=>{this.latestIndex={firstDate:e.aggregations.firstDate.min,lastDate:e.aggregations.lastDate.max}}).catch(e=>{this.createNotificationError({message:e.message})}).finally(()=>{this.isLoading=!1})},getTotalProduct(){this.isLoading=!0,this.productRepository.search(this.productCriteria,i.api).then(e=>{this.totalProduct=e==null?void 0:e.total}).catch(e=>{this.createNotificationError({message:e.message})}).finally(()=>{this.isLoading=!1})},updateProgress(){this.productIndexService.index(this.offset).then(e=>{const t=e.data;this.isRebuildSuccess=t.finish,this.isRebuildSuccess?(this.clearPolling(),this.getLatestProductKeywordIndexed(),this.progressBarValue=100,this.createNotificationSuccess({message:this.$tc("sw-settings-search.notification.index.success")})):(this.progressBarValue=(this.offset??1)/this.totalProduct*100,this.offset=t.offset.offset,this.updateProgress())}).catch(e=>{this.createNotificationError({message:e.message}),this.isRebuildSuccess=!1})},pollData(){this.syncPolling===null&&(this.syncPolling=setTimeout(this.updateProgress,3e3))},clearPolling(){this.syncPolling!==null&&(clearTimeout(this.syncPolling),this.syncPolling=null)},rebuildSearchIndex(){this.isRebuildInProgress=!0,this.progressBarValue=1,this.offset=0,this.$emit("edit-change",this.isRebuildInProgress),this.pollData(),this.createNotificationInfo({message:this.$tc("sw-settings-search.notification.index.started")})},buildFinish(){this.isRebuildSuccess=!1,this.isRebuildInProgress=!1,this.progressBarValue=0,this.$emit("edit-change",this.isRebuildInProgress)}}};export{n as default};
//# sourceMappingURL=index-DLxXbdVt.js.map
