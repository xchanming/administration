{"version":3,"mappings":"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","names":["template$1","Mixin","Criteria","index$2","template","criteria","searchResult","unit","titleSaveSuccess","messageSaveSuccess","titleSaveError","messageSaveError","id","Component","index","mapPropertyErrors","newValue","result","error","_a","index$3","index$1","Module","route"],"ignoreList":[],"sources":["../../../app/administration/src/module/sw-settings-units/page/sw-settings-units-list/sw-settings-units.html.twig","../../../app/administration/src/module/sw-settings-units/page/sw-settings-units-list/index.js","../../../app/administration/src/module/sw-settings-units/page/sw-settings-units-detail/index.html.twig","../../../app/administration/src/module/sw-settings-units/page/sw-settings-units-detail/index.ts","../../../app/administration/src/module/sw-settings-units/acl/index.js","../../../app/administration/src/module/sw-settings-units/index.js"],"sourcesContent":["<sw-page class=\"sw-settings-units\">\n    <template #search-bar>\n        <sw-search-bar />\n    </template>\n\n    <template #smart-bar-header>\n        <h2>\n            {{ $tc('sw-settings.index.title') }}\n            <sw-icon\n                name=\"regular-chevron-right-xs\"\n                small\n            />\n            {{ $tc('sw-settings-units.general.mainMenuItemGeneral') }}\n        </h2>\n    </template>\n\n    <template #smart-bar-actions>\n        <sw-button\n            v-tooltip=\"tooltipCreate\"\n            class=\"sw-settings-units__create-action\"\n            variant=\"primary\"\n            :disabled=\"isAddingUnitsDisabled || !acl.can('scale_unit.creator') || undefined\"\n            @click=\"createNewUnit\"\n        >\n            {{ $tc('sw-settings-units.general.createNewUnit') }}\n        </sw-button>\n    </template>\n\n    <template #language-switch>\n        <sw-language-switch\n            :disabled=\"!!newUnit || undefined\"\n            @on-change=\"onChangeLanguage\"\n        />\n    </template>\n\n    <template #content>\n        <sw-card-view>\n            <sw-card\n                position-identifier=\"sw-settings-units-content\"\n                :class=\"{ 'sw-settings-units-card-empty': isEmpty }\"\n            >\n                <sw-empty-state\n                    v-if=\"!isLoading && isEmpty\"\n                    :title=\"$tc('sw-settings-units.empty-state.title')\"\n                    :subline=\"$tc('sw-settings-units.empty-state.subline')\"\n                    icon=\"regular-balance-scale\"\n                />\n\n                <template #grid>\n                    <sw-data-grid\n                        v-show=\"isLoading || !isEmpty\"\n                        ref=\"swDataGrid\"\n                        class=\"sw-settings-units-grid\"\n                        :is-loading=\"isLoading\"\n                        :data-source=\"unitList\"\n                        :columns=\"unitColumns()\"\n                        :show-selection=\"false\"\n                        :allow-inline-edit=\"acl.can('scale_unit.editor') || undefined\"\n                        :skeleton-item-amount=\"placeholderAmount\"\n                        @inline-edit-save=\"saveUnit\"\n                        @inline-edit-cancel=\"cancelUnit\"\n                    >\n\n                        <template #actions=\"{ item }\">\n                            <sw-context-menu-item\n                                class=\"sw-settings-units__edit-action\"\n                                :disabled=\"!acl.can('scale_unit.editor') || undefined\"\n                                @click=\"editUnit(item)\"\n                            >\n                                {{ $tc('global.default.edit') }}\n                            </sw-context-menu-item>\n\n                            <sw-context-menu-divider />\n\n                            <sw-context-menu-item\n                                class=\"sw-settings-units__delete-action\"\n                                variant=\"danger\"\n                                :disabled=\"!acl.can('scale_unit.deleter') || undefined\"\n                                @click=\"deleteUnit(item)\"\n                            >\n                                {{ $tc('global.default.delete') }}\n                            </sw-context-menu-item>\n                        </template>\n\n                    </sw-data-grid>\n                </template>\n            </sw-card>\n        </sw-card-view>\n    </template>\n</sw-page>\n","/**\n * @package inventory\n */\nimport template from './sw-settings-units.html.twig';\nimport './sw-settings-units.scss';\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n/**\n * @private\n */\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            isLoading: true,\n            placeholderAmount: 7,\n            unitsCriteria: null,\n            units: [],\n            newUnit: null,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        unitRepository() {\n            return this.repositoryFactory.create('unit');\n        },\n\n        unitList() {\n            if (this.newUnit) {\n                return [\n                    ...this.units,\n                    this.newUnit,\n                ];\n            }\n\n            return this.units;\n        },\n\n        isEmpty() {\n            return this.unitList.length <= 0;\n        },\n\n        tooltipCreate() {\n            if (!this.acl.can('scale_unit.creator')) {\n                return {\n                    message: this.$tc('sw-privileges.tooltip.warning'),\n                    disabled: this.acl.can('scale_unit.creator'),\n                    showOnDisabledElements: true,\n                };\n            }\n\n            return {\n                showOnDisabledElements: true,\n                message: this.$tc('sw-settings-units.general.disableAddNewUnitMessage'),\n                disabled: !this.isAddingUnitsDisabled,\n            };\n        },\n\n        isAddingUnitsDisabled() {\n            return Cicada.Context.api.languageId !== Cicada.Context.api.systemLanguageId;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.unitsCriteria = this.createUnitsCriteria();\n            this.loadUnits();\n        },\n\n        createUnitsCriteria() {\n            const criteria = new Criteria(1, 500);\n\n            criteria.addSorting(Criteria.sort('name', 'ASC', false));\n\n            return criteria;\n        },\n\n        loadUnits() {\n            this.isLoading = true;\n\n            this.unitRepository.search(this.unitsCriteria).then((searchResult) => {\n                this.units = searchResult;\n                this.placeholderAmount = searchResult.total;\n                this.isLoading = false;\n            });\n        },\n\n        createNewUnit() {\n            this.$router.push({ name: 'sw.settings.units.create' });\n        },\n\n        saveUnit(unit) {\n            this.isLoading = true;\n\n            this.unitRepository\n                .save(unit)\n                .then(() => {\n                    this.isLoading = false;\n\n                    this.loadUnits();\n                    this.newUnit = null;\n\n                    // throw success notification\n                    const titleSaveSuccess = this.$tc('global.default.success');\n                    const messageSaveSuccess = this.$tc('sw-settings-units.notification.successMessage');\n\n                    this.createNotificationSuccess({\n                        title: titleSaveSuccess,\n                        message: messageSaveSuccess,\n                    });\n                })\n                .catch(() => {\n                    this.isLoading = false;\n\n                    // throw error notification\n                    const titleSaveError = this.$tc('global.default.error');\n                    const messageSaveError = this.$tc('sw-settings-units.notification.errorMessage');\n\n                    this.createNotificationError({\n                        title: titleSaveError,\n                        message: messageSaveError,\n                    });\n                });\n        },\n\n        cancelUnit() {\n            this.loadUnits();\n            this.newUnit = null;\n        },\n\n        deleteUnit(unit) {\n            this.isLoading = true;\n            this.unitRepository.delete(unit.id).then(() => {\n                this.isLoading = false;\n                this.loadUnits();\n            });\n        },\n\n        activateInlineEdit(id) {\n            this.$refs.swDataGrid.currentInlineEditId = id;\n            this.$refs.swDataGrid.isInlineEditActive = true;\n        },\n\n        unitColumns() {\n            return [\n                {\n                    property: 'name',\n                    label: 'sw-settings-units.grid.columnName',\n                    routerLink: 'sw.settings.units.detail',\n                },\n                {\n                    property: 'shortCode',\n                    label: 'sw-settings-units.grid.columnShortCode',\n                },\n            ];\n        },\n\n        onChangeLanguage() {\n            this.loadUnits();\n        },\n\n        editUnit(unit) {\n            this.$router.push({\n                name: 'sw.settings.units.detail',\n                params: { id: unit.id },\n            });\n        },\n    },\n};\n","<sw-page class=\"sw-settings-units\">\n\n    <template #smart-bar-actions>\n\n        <sw-button-process\n            class=\"sw-settings-units__create-action\"\n            variant=\"primary\"\n            :is-loading=\"isLoading\"\n            :process-success=\"isSaveSuccessful\"\n            :disabled=\"!acl.can('scale_unit.editor')\"\n            @click=\"onSave\"\n        >\n            {{ $tc('global.default.save') }}\n        </sw-button-process>\n\n    </template>\n\n    <template #language-switch>\n        <sw-language-switch\n            :disabled=\"unit === null || unit.isNew()\"\n            @on-change=\"onChangeLanguage\"\n        />\n    </template>\n\n    <template #content>\n        <sw-card-view>\n            <sw-card\n                v-if=\"!isLoading\"\n                position-identifier=\"sw-settings-units-content\"\n            >\n                <sw-text-field\n                    v-model:value=\"unit.name\"\n                    name=\"sw-field--unit-name\"\n                    :label=\"$tc('sw-settings-units.detail.fieldLabels.name')\"\n                    :error=\"unitNameError\"\n                    required\n                />\n\n                <sw-text-field\n                    v-model:value=\"unit.shortCode\"\n                    name=\"sw-field--unit-shortCode\"\n                    :label=\"$tc('sw-settings-units.detail.fieldLabels.shortCode')\"\n                    :error=\"unitShortCodeError\"\n                    required\n                />\n                <sw-custom-field-set-renderer\n                    :entity=\"unit\"\n                    :sets=\"customFieldSets\"\n                    :disabled=\"!acl.can('unit.editor')\"\n                />\n            </sw-card>\n\n            <sw-skeleton v-else />\n        </sw-card-view>\n    </template>\n</sw-page>\n","/**\n * @package inventory\n */\nimport type { Entity } from '@cicada-ag/meteor-admin-sdk/es/_internals/data/Entity';\nimport Criteria from '@cicada-ag/meteor-admin-sdk/es/data/Criteria';\nimport template from './index.html.twig';\nimport type Repository from '../../../../core/data/repository.data';\nimport { mapPropertyErrors } from '../../../../app/service/map-errors.service';\n\nconst { Component, Mixin } = Cicada;\n\n/**\n * @private\n */\nexport default Component.wrapComponentConfig({\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    props: {\n        /**\n         * Either the id of the unit when in edit mode or null when in create mode.\n         */\n        unitId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    computed: {\n        unitRepository(): Repository<'unit'> {\n            return this.repositoryFactory.create('unit');\n        },\n\n        customFieldSetRepository(): Repository<'custom_field_set'> {\n            return this.repositoryFactory.create('custom_field_set');\n        },\n\n        customFieldSetCriteria(): Criteria {\n            const criteria = new Criteria(1, null);\n            criteria.addFilter(Criteria.equals('relations.entityName', 'unit'));\n\n            return criteria;\n        },\n\n        ...mapPropertyErrors('unit', [\n            'name',\n            'shortCode',\n        ]),\n    },\n\n    data(): {\n        unit: Entity<'unit'> | null;\n        isLoading: boolean;\n        isSaveSuccessful: boolean;\n        customFieldSets: Entity<'custom_field_set'>[];\n    } {\n        return {\n            unit: null,\n            isLoading: true,\n            isSaveSuccessful: false,\n            customFieldSets: [],\n        };\n    },\n\n    watch: {\n        unitId() {\n            this.loadUnit();\n        },\n\n        isSaveSuccessful(newValue) {\n            if (newValue === false) {\n                return;\n            }\n\n            window.setTimeout(() => {\n                this.isSaveSuccessful = false;\n            }, 800);\n        },\n    },\n\n    created() {\n        this.customFieldSetRepository\n            .search(this.customFieldSetCriteria)\n            .then((result) => {\n                this.customFieldSets = result;\n\n                if (this.unitId !== null) {\n                    this.loadUnit();\n\n                    return;\n                }\n\n                this.unit = this.unitRepository.create(Cicada.Context.api);\n                this.isLoading = false;\n            })\n            .catch(() => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                this.createNotificationError({\n                    message: this.$tc('sw-settings-units.notification.errorMessage'),\n                });\n\n                this.isLoading = false;\n            });\n    },\n\n    methods: {\n        loadUnit(): void {\n            this.isLoading = true;\n\n            this.unitRepository\n                .get(this.unitId, Cicada.Context.api)\n                .then((unit) => {\n                    this.unit = unit;\n\n                    this.isLoading = false;\n                })\n                .catch((error: { message: string }) => {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                    this.createNotificationError({\n                        message: this.$tc(error.message),\n                    });\n                });\n        },\n\n        onSave(): void {\n            if (this.unit === null) {\n                return;\n            }\n\n            this.isLoading = true;\n            this.unitRepository\n                .save(this.unit)\n                .then(() => {\n                    this.isSaveSuccessful = true;\n\n                    void this.$router.push({\n                        name: 'sw.settings.units.detail',\n                        params: { id: this.unit?.id ?? '' },\n                    });\n\n                    this.isLoading = false;\n                })\n                .catch(() => {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-units.notification.errorMessage'),\n                    });\n\n                    this.isLoading = false;\n                });\n        },\n\n        onChangeLanguage(): void {\n            this.loadUnit();\n        },\n    },\n});\n","/**\n * @package inventory\n */\nCicada.Service('privileges').addPrivilegeMappingEntry({\n    category: 'permissions',\n    parent: 'settings',\n    key: 'scale_unit',\n    roles: {\n        viewer: {\n            privileges: [\n                'unit:read',\n                'custom_field_set:read',\n                'custom_field:read',\n                'custom_field_set_relation:read',\n            ],\n            dependencies: [],\n        },\n        editor: {\n            privileges: [\n                'unit:update',\n            ],\n            dependencies: [\n                'scale_unit.viewer',\n            ],\n        },\n        creator: {\n            privileges: [\n                'unit:create',\n            ],\n            dependencies: [\n                'scale_unit.viewer',\n                'scale_unit.editor',\n            ],\n        },\n        deleter: {\n            privileges: [\n                'unit:delete',\n            ],\n            dependencies: [\n                'scale_unit.viewer',\n            ],\n        },\n    },\n});\n","/**\n * @package inventory\n */\nimport './page/sw-settings-units-list';\nimport './page/sw-settings-units-detail';\nimport './acl';\n\n/* eslint-disable max-len, sw-deprecation-rules/private-feature-declarations */\nCicada.Component.register('sw-settings-units-list', () => import('./page/sw-settings-units-list'));\nCicada.Component.register('sw-settings-units-detail', () => import('./page/sw-settings-units-detail'));\n/* eslint-enable max-len, sw-deprecation-rules/private-feature-declarations */\n\nconst { Module } = Cicada;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nModule.register('sw-settings-units', {\n    type: 'core',\n    name: 'settings-units',\n    title: 'sw-settings-units.general.mainMenuItemGeneral',\n    description: 'Units section in the settings module',\n    color: '#9AA8B5',\n    icon: 'regular-cog',\n    favicon: 'icon-module-settings.png',\n    entity: 'units',\n\n    routes: {\n        index: {\n            component: 'sw-settings-units-list',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index',\n                privilege: 'scale_unit.viewer',\n            },\n        },\n        detail: {\n            component: 'sw-settings-units-detail',\n            path: 'detail/:id',\n            meta: {\n                parentPath: 'sw.settings.units.index',\n                privilege: 'scale_unit.viewer',\n            },\n            props: {\n                default(route) {\n                    return {\n                        unitId: route.params.id,\n                    };\n                },\n            },\n        },\n        create: {\n            component: 'sw-settings-units-detail',\n            path: 'create',\n            meta: {\n                parentPath: 'sw.settings.units.index',\n                privilege: 'scale_unit.creator',\n            },\n        },\n    },\n\n    settingsItem: {\n        group: 'shop',\n        to: 'sw.settings.units.index',\n        icon: 'regular-balance-scale',\n        privilege: 'scale_unit.viewer',\n    },\n});\n"],"file":"assets/index-fJQA2aSs.js"}