{"version":3,"file":"index-BNtJv7mx.js","sources":["../../../app/administration/src/app/component/rule/condition-type/sw-condition-time-range/sw-condition-time-range.html.twig","../../../app/administration/src/app/component/rule/condition-type/sw-condition-time-range/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_condition_value_content %}\n<div class=\"sw-condition-time-range\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_condition_time_range_field_from_time %}\n    <sw-datepicker\n        v-model:value=\"fromTime\"\n        name=\"sw-field--fromTime\"\n        size=\"medium\"\n        date-type=\"time\"\n        required\n        :config=\"datepickerConfig\"\n        :disabled=\"disabled || undefined\"\n        :placeholder=\"$tc('sw-datepicker.time.placeholder')\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_condition_time_range_field_to_time %}\n    <sw-datepicker\n        v-model:value=\"toTime\"\n        name=\"sw-field--toTime\"\n        size=\"medium\"\n        date-type=\"time\"\n        required\n        :config=\"datepickerConfig\"\n        :disabled=\"disabled || undefined\"\n        :placeholder=\"$tc('sw-datepicker.time.placeholder')\"\n    />\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-condition-time-range.html.twig';\nimport './sw-condition-time-range.scss';\n\nconst { Component } = Cicada;\nconst { mapPropertyErrors } = Component.getComponentHelper();\nconst defaultTimeValue = '12:00';\n\n/**\n * @package services-settings\n */\nComponent.extend('sw-condition-time-range', 'sw-condition-base', {\n    template,\n\n    data() {\n        return {\n            datepickerConfig: {\n                enableTime: true,\n                dateFormat: 'H:i',\n            },\n        };\n    },\n\n    computed: {\n        fromTime: {\n            get() {\n                this.ensureValueExist();\n                if (!this.condition.value.fromTime) {\n                    // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n                    this.condition.value.fromTime = defaultTimeValue;\n                }\n\n                return this.condition.value.fromTime;\n            },\n            set(fromTime) {\n                this.ensureValueExist();\n                this.condition.value.fromTime = fromTime;\n            },\n        },\n        toTime: {\n            get() {\n                this.ensureValueExist();\n                if (!this.condition.value.toTime) {\n                    // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n                    this.condition.value.toTime = defaultTimeValue;\n                }\n\n                return this.condition.value.toTime;\n            },\n            set(toTime) {\n                this.ensureValueExist();\n                this.condition.value.toTime = toTime;\n            },\n        },\n\n        ...mapPropertyErrors('condition', [\n            'value.fromTime',\n            'value.toTime',\n        ]),\n\n        currentError() {\n            return this.conditionValueFromTimeError || this.conditionValueToTimeError;\n        },\n    },\n});\n"],"names":["template","Component","mapPropertyErrors","defaultTimeValue","fromTime","toTime"],"mappings":"AAAA,MAAeA,EAAA,mqBCGT,CAAE,UAAAC,CAAW,EAAG,OAChB,CAAE,kBAAAC,CAAmB,EAAGD,EAAU,qBAClCE,EAAmB,QAKzBF,EAAU,OAAO,0BAA2B,oBAAqB,CAC7D,SAAAD,EAEA,MAAO,CACH,MAAO,CACH,iBAAkB,CACd,WAAY,GACZ,WAAY,KACf,CACb,CACK,EAED,SAAU,CACN,SAAU,CACN,KAAM,CACF,YAAK,iBAAgB,EAChB,KAAK,UAAU,MAAM,WAEtB,KAAK,UAAU,MAAM,SAAWG,GAG7B,KAAK,UAAU,MAAM,QAC/B,EACD,IAAIC,EAAU,CACV,KAAK,iBAAgB,EACrB,KAAK,UAAU,MAAM,SAAWA,CACnC,CACJ,EACD,OAAQ,CACJ,KAAM,CACF,YAAK,iBAAgB,EAChB,KAAK,UAAU,MAAM,SAEtB,KAAK,UAAU,MAAM,OAASD,GAG3B,KAAK,UAAU,MAAM,MAC/B,EACD,IAAIE,EAAQ,CACR,KAAK,iBAAgB,EACrB,KAAK,UAAU,MAAM,OAASA,CACjC,CACJ,EAED,GAAGH,EAAkB,YAAa,CAC9B,iBACA,cACZ,CAAS,EAED,cAAe,CACX,OAAO,KAAK,6BAA+B,KAAK,yBACnD,CACJ,CACL,CAAC"}