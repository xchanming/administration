{"version":3,"file":"index-BWCxOsdb.js","sources":["../../../app/administration/src/module/sw-settings-tax/page/sw-settings-tax-list/sw-settings-tax-list.html.twig","../../../app/administration/src/module/sw-settings-tax/page/sw-settings-tax-list/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_list %}\n<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_tax_index %}\n<sw-page class=\"sw-settings-tax-list\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_tax_list_search_bar %}\n    <template #search-bar>\n        <sw-search-bar\n            initial-search-type=\"tax\"\n            :placeholder=\"$tc('sw-settings-tax.general.placeholderSearchBar')\"\n            :initial-search=\"term\"\n            @search=\"onSearch\"\n        />\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_tax_list_smart_bar_header %}\n    <template #smart-bar-header>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_tax_list_smart_bar_header_title %}\n        <h2>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_tax_list_smart_bar_header_title_text %}\n            {{ $tc('sw-settings.index.title') }} <sw-icon\n                name=\"regular-chevron-right-xs\"\n                small\n            /> {{ $tc('sw-settings-tax.list.textHeadline') }}\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_tax_list_smart_bar_header_amount %}\n            <span\n                v-if=\"!isLoading\"\n                class=\"sw-page__smart-bar-amount\"\n            >\n                ({{ total }})\n            </span>\n            {% endblock %}\n        </h2>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_tax_list_smart_bar_actions %}\n    <template #smart-bar-actions>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_tax_list_smart_bar_actions_add %}\n        <sw-button\n            v-tooltip.bottom=\"{\n                message: $tc('sw-privileges.tooltip.warning'),\n                disabled: acl.can('tax.creator'),\n                showOnDisabledElements: true\n            }\"\n            class=\"sw-settings-tax-list__button-create\"\n            variant=\"primary\"\n            :disabled=\"!acl.can('tax.creator') || undefined\"\n            :router-link=\"{ name: 'sw.settings.tax.create' }\"\n        >\n            {{ $tc('sw-settings-tax.list.buttonAddTax') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    <template #language-switch>\n        <sw-language-switch\n            @on-change=\"onChangeLanguage\"\n        />\n    </template>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_settings_tax_list_content %}\n    <template #content>\n        <sw-card-view>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_settings_tax_list_content_card %}\n            <sw-card\n                position-identifier=\"sw-settings-tax-list-content\"\n                class=\"sw-tax-card\"\n                :title=\"$tc('sw-settings-tax.list.taxCardTitle')\"\n                :is-loading=\"isLoading\"\n            >\n                <template #grid>\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_settings_tax_list_grid %}\n                    <sw-entity-listing\n                        ref=\"swSettingsTaxGrid\"\n                        class=\"sw-settings-tax-list-grid\"\n                        detail-route=\"sw.settings.tax.detail\"\n                        :items=\"tax\"\n                        :columns=\"getTaxColumns()\"\n                        :repository=\"taxRepository\"\n                        :full-page=\"false\"\n                        :show-selection=\"false\"\n                        :is-loading=\"isLoading\"\n                        :allow-view=\"acl.can('tax.viewer') || undefined\"\n                        :allow-edit=\"acl.can('tax.editor') || undefined\"\n                        :allow-inline-edit=\"acl.can('tax.editor') || undefined\"\n                        :allow-delete=\"acl.can('tax.deleter') || undefined\"\n                        :disable-data-fetching=\"true\"\n                        :sort-by=\"sortBy\"\n                        :sort-direction=\"sortDirection\"\n                        @column-sort=\"onSortColumn\"\n                        @page-change=\"onPageChange\"\n                        @inline-edit-save=\"onInlineEditSave\"\n                        @inline-edit-cancel=\"onInlineEditCancel\"\n                    >\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_tax_list_grid_column_default_name %}\n                        <template #column-name=\"{ item, column, isInlineEdit, compact }\">\n                            {# if it is not a default tax, the default slot content will be rendered #}\n                            <router-link\n                                v-if=\"isCicadaDefaultTax(item)\"\n                                class=\"sw-data-grid__cell-value\"\n                                :to=\"{ name: column.routerLink, params: { id: item.id } }\"\n                            >\n                                {{ getLabel(item) }}\n                            </router-link>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_tax_list_grid_column_default_tax_rate %}\n                        <template #column-taxRate=\"{ item, isInlineEdit, compact }\">\n                            <template v-if=\"isInlineEdit\">\n                                <sw-number-field\n                                    v-model:value=\"item.taxRate\"\n                                    :digits=\"3\"\n                                    :size=\"compact ? 'small' : 'default'\"\n                                >\n                                    <template #suffix>\n                                        <span>\n                                            <span v-html=\"$sanitize($tc('sw-settings-tax.general.taxRateSymbol'))\"></span>\n                                        </span>\n                                    </template>\n                                </sw-number-field>\n                            </template>\n                            <template v-else>\n                                {{ item.taxRate }}%\n                            </template>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_tax_list_grid_column_default %}\n                        <template #column-default=\"{ item, isInlineEdit }\">\n                            <template v-if=\"isInlineEdit\">\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_settings_tax_list_grid_column_default_editor %}\n                                <sw-checkbox-field\n                                    :value=\"isSelectedDefaultRate(item)\"\n                                    @update:value=\"value => setSelectedDefaultRate(value, item.id)\"\n                                />\n                                {% endblock %}\n                            </template>\n                            <template v-else>\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_settings_tax_list_grid_column_default_label %}\n                                <sw-icon\n                                    v-if=\"isSelectedDefaultRate(item)\"\n                                    name=\"regular-checkmark-xs\"\n                                    small\n                                    class=\"is--active\"\n                                />\n                                <div v-else></div>\n                                {% endblock %}\n                            </template>\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_tax_list_grid_columns_actions %}\n                        <template #actions=\"{ item }\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_tax_list_grid_columns_actions_edit %}\n                            <sw-context-menu-item\n                                class=\"sw-tax-list__edit-action\"\n                                :disabled=\"!acl.can('tax.editor') || undefined\"\n                                :router-link=\"{\n                                    name: 'sw.settings.tax.detail',\n                                    params: { id: item.id, edit: 'edit' }\n                                }\"\n                            >\n                                {{ $tc('sw-settings-tax.list.contextMenuEdit') }}\n                            </sw-context-menu-item>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_tax_list_grid_columns_actions_delete %}\n                            <sw-context-menu-item\n                                class=\"sw-tax-list__delete-action\"\n                                variant=\"danger\"\n                                :disabled=\"!acl.can('tax.deleter') || undefined\"\n                                @click=\"onDelete(item.id)\"\n                            >\n                                {{ $tc('sw-settings-tax.list.contextMenuDelete') }}\n                            </sw-context-menu-item>\n                            {% endblock %}\n                        </template>\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_tax_list_grid_action_modals %}\n                        <template #action-modals=\"{ item }\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_tax_list_delete_modal %}\n                            <sw-modal\n                                v-if=\"showDeleteModal === item.id\"\n                                :title=\"$tc('global.default.warning')\"\n                                variant=\"small\"\n                                @modal-close=\"onCloseDeleteModal\"\n                            >\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_settings_tax_list_delete_modal_confirm_delete_text %}\n                                <p class=\"sw-settings-tax-list__confirm-delete-text\">\n                                    {{ $tc('sw-settings-tax.list.textDeleteConfirm', 0, { name: item.name }) }}\n                                </p>\n                                {% endblock %}\n\n                                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                {% block sw_settings_tax_list_delete_modal_footer %}\n                                <template #modal-footer>\n                                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                    {% block sw_settings_tax_list_delete_modal_cancel %}\n                                    <sw-button\n                                        size=\"small\"\n                                        @click=\"onCloseDeleteModal\"\n                                    >\n                                        {{ $tc('global.default.cancel') }}\n                                    </sw-button>\n                                    {% endblock %}\n\n                                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                    {% block sw_settings_tax_list_delete_modal_confirm %}\n                                    <sw-button\n                                        variant=\"danger\"\n                                        size=\"small\"\n                                        @click=\"onConfirmDelete(item.id)\"\n                                    >\n                                        {{ $tc('sw-settings-tax.list.buttonDelete') }}\n                                    </sw-button>\n                                    {% endblock %}\n                                </template>\n                                {% endblock %}\n                            </sw-modal>\n                            {% endblock %}\n                        </template>\n                        {% endblock %}\n                    </sw-entity-listing>\n                    {% endblock %}\n                </template>\n            </sw-card>\n            {% endblock %}\n\n            <sw-card\n                position-identifier=\"sw-settings-tax-provider-list-content\"\n                class=\"sw-settings-tax-provider-list-content\"\n                :title=\"$tc('sw-settings-tax.list.taxProvider.cardTitle')\"\n                :is-loading=\"isLoading\"\n            >\n                <template #grid>\n                    <template v-if=\"showChangePriority\">\n                        <div class=\"sw-settings-tax-provider-list-content__bg\">\n                            <sw-button-process\n                                class=\"sw-settings-tax-provider-list-button__change-priority\"\n                                :disabled=\"isLoading\"\n                                :is-loading=\"isLoading\"\n                                :process-success=\"false\"\n                                variant=\"ghost\"\n                                @click=\"showSortingModal = true\"\n                            >\n                                {{ $tc('sw-settings-tax.list.taxProvider.changePriorityButton') }}\n                            </sw-button-process>\n                        </div>\n                    </template>\n\n                    <template v-if=\"!isLoading\">\n                        <sw-empty-state\n                            v-if=\"noTaxProvidersFound\"\n                            :title=\"$tc('sw-settings-tax.list.taxProvider.messageEmptyTitle')\"\n                            :absolute=\"false\"\n                            :show-description=\"false\"\n                        />\n\n                        <div\n                            v-else\n                            class=\"sw-tax-provider-items\"\n                        >\n                            <template\n                                v-for=\"taxProvider in taxProviders\"\n                                :key=\"taxProvider.id\"\n                            >\n                                <div\n                                    class=\"sw-tax-provider-item\"\n                                >\n                                    <div class=\"sw-tax-provider__name\">\n                                        {{ taxProvider.translated.name }}\n                                    </div>\n\n                                    <div class=\"sw-tax-provider__link\">\n                                        <router-link\n                                            class=\"sw-tax-provider__show-detail-link\"\n                                            :to=\"editLink(taxProvider.id)\"\n                                            :disabled=\"!acl.can('tax.editor') || undefined\"\n                                        >\n                                            {{ $tc('sw-settings-tax.list.taxProvider.editDetailsLink') }}\n                                        </router-link>\n                                    </div>\n\n                                    <sw-switch-field\n                                        :label=\"$tc('sw-settings-tax.list.taxProvider.labelActive')\"\n                                        :disabled=\"!acl.can('tax.editor') || undefined\"\n                                        :value=\"taxProvider.active\"\n                                        @update:value=\"onChangeTaxProviderActive(taxProvider)\"\n                                    />\n                                </div>\n                            </template>\n                        </div>\n                    </template>\n\n                    <template v-else>\n                        <sw-skeleton />\n                    </template>\n                </template>\n            </sw-card>\n\n            <sw-settings-tax-provider-sorting-modal\n                v-if=\"showSortingModal\"\n                :tax-providers=\"taxProviders\"\n                @modal-close=\"showSortingModal = false\"\n                @modal-save=\"loadTaxProviders\"\n            />\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n    {% endblock %}\n{% endblock %}\n","import template from './sw-settings-tax-list.html.twig';\nimport './sw-settings-tax-list.scss';\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n/**\n * @package checkout\n */\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n        'systemConfigApiService',\n    ],\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            tax: null,\n            taxProviders: null,\n            sortBy: 'position',\n            isLoading: false,\n            sortDirection: 'ASC',\n            naturalSorting: false,\n            showDeleteModal: false,\n            defaultTaxRateId: null,\n            selectedDefaultTaxRateId: null,\n            showSortingModal: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        taxRepository() {\n            return this.repositoryFactory.create('tax');\n        },\n        taxProviderRepository() {\n            return this.repositoryFactory.create('tax_provider');\n        },\n        taxProviderCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            criteria.addSorting(Criteria.sort('priority', 'DESC'));\n\n            return criteria;\n        },\n        showChangePriority() {\n            return this.taxProviders?.length > 1;\n        },\n        noTaxProvidersFound() {\n            return this.taxProviders?.length < 1;\n        },\n    },\n\n    methods: {\n        getList() {\n            const criteria = new Criteria(this.page, this.limit);\n            this.isLoading = true;\n            this.naturalSorting = this.sortBy === 'name';\n\n            criteria.setTerm(this.term);\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection, this.naturalSorting));\n            if (this.sortBy !== 'name') {\n                // Add second sorting, to make sorting deterministic\n                criteria.addSorting(Criteria.sort('name', 'ASC', true));\n            }\n\n            this.getDefaultTaxRate().then((defaultRate) => {\n                this.defaultTaxRateId = defaultRate;\n                this.selectedDefaultRate = defaultRate;\n            });\n\n            this.taxRepository\n                .search(criteria)\n                .then((items) => {\n                    this.total = items.total;\n                    this.tax = items;\n                    this.isLoading = false;\n\n                    return items;\n                })\n                .catch(() => {\n                    this.isLoading = false;\n                });\n\n            this.loadTaxProviders();\n        },\n\n        editLink(taxProviderId) {\n            return {\n                name: 'sw.settings.tax.tax_provider.detail',\n                params: {\n                    id: taxProviderId,\n                },\n            };\n        },\n\n        onChangeLanguage(languageId) {\n            Cicada.State.commit('context/setApiLanguageId', languageId);\n            this.getList();\n        },\n\n        async onInlineEditSave(promise, tax) {\n            promise\n                .then(() => {\n                    if (this.selectedDefaultTaxRateId === this.defaultTaxRateId) {\n                        this.createNotificationSuccess({\n                            message: this.$tc('sw-settings-tax.detail.messageSaveSuccess', 0, { name: tax.name }),\n                        });\n\n                        return;\n                    }\n\n                    this.systemConfigApiService\n                        .saveValues({\n                            'core.tax.defaultTaxRate': this.selectedDefaultTaxRateId,\n                        })\n                        .then(() => {\n                            this.defaultTaxRateId = this.selectedDefaultTaxRateId;\n\n                            this.createNotificationSuccess({\n                                message: this.$tc('sw-settings-tax.detail.messageSaveSuccess', 0, { name: tax.name }),\n                            });\n                        })\n                        .catch(() => {\n                            this.getList();\n\n                            this.createNotificationError({\n                                message: this.$tc('sw-settings-tax.detail.messageSaveError'),\n                            });\n                        });\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-tax.detail.messageSaveError'),\n                    });\n                });\n        },\n\n        async onInlineEditCancel(promise) {\n            await promise;\n\n            this.selectedDefaultTaxRateId = null;\n\n            this.getDefaultTaxRate().then((defaultRate) => {\n                this.defaultTaxRateId = defaultRate;\n            });\n        },\n\n        onDelete(id) {\n            this.showDeleteModal = id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete(id) {\n            this.showDeleteModal = false;\n\n            return this.taxRepository.delete(id).then(() => {\n                this.getList();\n            });\n        },\n\n        getTaxColumns() {\n            return [\n                {\n                    property: 'name',\n                    dataIndex: 'name',\n                    inlineEdit: 'string',\n                    label: 'sw-settings-tax.list.columnName',\n                    routerLink: 'sw.settings.tax.detail',\n                    width: '250px',\n                    primary: true,\n                },\n                {\n                    property: 'taxRate',\n                    inlineEdit: 'number',\n                    label: 'sw-settings-tax.list.columnDefaultTaxRate',\n                },\n                {\n                    property: 'default',\n                    inlineEdit: 'boolean',\n                    label: 'sw-settings-tax.list.columnDefault',\n                },\n            ];\n        },\n\n        isCicadaDefaultTax(tax) {\n            return this.$te(`global.tax-rates.${tax.name}`, 'en-GB');\n        },\n\n        getLabel(tax) {\n            return this.isCicadaDefaultTax(tax) ? this.$tc(`global.tax-rates.${tax.name}`) : tax.name;\n        },\n\n        isSelectedDefaultRate(tax) {\n            return this.defaultTaxRateId === tax.id;\n        },\n\n        setSelectedDefaultRate(checkBoxValue, id) {\n            this.selectedDefaultTaxRateId = checkBoxValue ? id : null;\n        },\n\n        getDefaultTaxRate() {\n            return this.systemConfigApiService\n                .getValues('core.tax')\n                .then((response) => response['core.tax.defaultTaxRate'] ?? null)\n                .catch(() => null);\n        },\n\n        loadTaxProviders() {\n            this.isLoading = true;\n\n            this.taxProviderRepository\n                .search(this.taxProviderCriteria)\n                .then((items) => {\n                    this.taxProviders = items;\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        onChangeTaxProviderActive(taxProvider) {\n            taxProvider.active = !taxProvider.active;\n\n            this.taxProviderRepository.save(taxProvider, Cicada.Context.api).then(() => {\n                const state = taxProvider.active ? 'active' : 'inactive';\n\n                this.createNotificationSuccess({\n                    message: this.$tc(`sw-settings-tax.list.taxProvider.statusChangedSuccess.${state}`, 0, {\n                        name: taxProvider.translated.name,\n                    }),\n                });\n            });\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","index","criteria","_a","defaultRate","items","taxProviderId","languageId","promise","tax","id","checkBoxValue","response","taxProvider","state"],"mappings":"AAAA,MAAeA,EAAA,+jPCGT,CAAE,MAAAC,CAAO,EAAG,OACZ,CAAE,SAAAC,CAAQ,EAAK,OAAO,KAObC,EAAA,CACX,SAAAH,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,oBACA,MACA,wBACH,EAED,OAAQ,CACJC,EAAM,UAAU,SAAS,EACzBA,EAAM,UAAU,cAAc,CACjC,EAED,MAAO,CACH,MAAO,CACH,IAAK,KACL,aAAc,KACd,OAAQ,WACR,UAAW,GACX,cAAe,MACf,eAAgB,GAChB,gBAAiB,GACjB,iBAAkB,KAClB,yBAA0B,KAC1B,iBAAkB,EAC9B,CACK,EAED,UAAW,CACP,MAAO,CACH,MAAO,KAAK,aAAc,CACtC,CACK,EAED,SAAU,CACN,eAAgB,CACZ,OAAO,KAAK,kBAAkB,OAAO,KAAK,CAC7C,EACD,uBAAwB,CACpB,OAAO,KAAK,kBAAkB,OAAO,cAAc,CACtD,EACD,qBAAsB,CAClB,MAAMG,EAAW,IAAIF,EAAS,KAAK,KAAM,KAAK,KAAK,EAEnD,OAAAE,EAAS,WAAWF,EAAS,KAAK,WAAY,MAAM,CAAC,EAE9CE,CACV,EACD,oBAAqB,CD9D7B,IAAAC,EC+DY,QAAOA,EAAA,KAAK,eAAL,YAAAA,EAAmB,QAAS,CACtC,EACD,qBAAsB,CDjE9B,IAAAA,ECkEY,QAAOA,EAAA,KAAK,eAAL,YAAAA,EAAmB,QAAS,CACtC,CACJ,EAED,QAAS,CACL,SAAU,CACN,MAAMD,EAAW,IAAIF,EAAS,KAAK,KAAM,KAAK,KAAK,EACnD,KAAK,UAAY,GACjB,KAAK,eAAiB,KAAK,SAAW,OAEtCE,EAAS,QAAQ,KAAK,IAAI,EAC1BA,EAAS,WAAWF,EAAS,KAAK,KAAK,OAAQ,KAAK,cAAe,KAAK,cAAc,CAAC,EACnF,KAAK,SAAW,QAEhBE,EAAS,WAAWF,EAAS,KAAK,OAAQ,MAAO,EAAI,CAAC,EAG1D,KAAK,kBAAiB,EAAG,KAAMI,GAAgB,CAC3C,KAAK,iBAAmBA,EACxB,KAAK,oBAAsBA,CAC3C,CAAa,EAED,KAAK,cACA,OAAOF,CAAQ,EACf,KAAMG,IACH,KAAK,MAAQA,EAAM,MACnB,KAAK,IAAMA,EACX,KAAK,UAAY,GAEVA,EACV,EACA,MAAM,IAAM,CACT,KAAK,UAAY,EACrC,CAAiB,EAEL,KAAK,iBAAgB,CACxB,EAED,SAASC,EAAe,CACpB,MAAO,CACH,KAAM,sCACN,OAAQ,CACJ,GAAIA,CACP,CACjB,CACS,EAED,iBAAiBC,EAAY,CACzB,OAAO,MAAM,OAAO,2BAA4BA,CAAU,EAC1D,KAAK,QAAO,CACf,EAED,MAAM,iBAAiBC,EAASC,EAAK,CACjCD,EACK,KAAK,IAAM,CACR,GAAI,KAAK,2BAA6B,KAAK,iBAAkB,CACzD,KAAK,0BAA0B,CAC3B,QAAS,KAAK,IAAI,4CAA6C,EAAG,CAAE,KAAMC,EAAI,KAAM,CAChH,CAAyB,EAED,MACH,CAED,KAAK,uBACA,WAAW,CACR,0BAA2B,KAAK,wBAC5D,CAAyB,EACA,KAAK,IAAM,CACR,KAAK,iBAAmB,KAAK,yBAE7B,KAAK,0BAA0B,CAC3B,QAAS,KAAK,IAAI,4CAA6C,EAAG,CAAE,KAAMA,EAAI,KAAM,CACpH,CAA6B,CAC7B,CAAyB,EACA,MAAM,IAAM,CACT,KAAK,QAAO,EAEZ,KAAK,wBAAwB,CACzB,QAAS,KAAK,IAAI,yCAAyC,CAC3F,CAA6B,CAC7B,CAAyB,CACzB,CAAiB,EACA,MAAM,IAAM,CACT,KAAK,wBAAwB,CACzB,QAAS,KAAK,IAAI,yCAAyC,CACnF,CAAqB,CACrB,CAAiB,CACR,EAED,MAAM,mBAAmBD,EAAS,CAC9B,MAAMA,EAEN,KAAK,yBAA2B,KAEhC,KAAK,kBAAiB,EAAG,KAAMJ,GAAgB,CAC3C,KAAK,iBAAmBA,CACxC,CAAa,CACJ,EAED,SAASM,EAAI,CACT,KAAK,gBAAkBA,CAC1B,EAED,oBAAqB,CACjB,KAAK,gBAAkB,EAC1B,EAED,gBAAgBA,EAAI,CAChB,YAAK,gBAAkB,GAEhB,KAAK,cAAc,OAAOA,CAAE,EAAE,KAAK,IAAM,CAC5C,KAAK,QAAO,CAC5B,CAAa,CACJ,EAED,eAAgB,CACZ,MAAO,CACH,CACI,SAAU,OACV,UAAW,OACX,WAAY,SACZ,MAAO,kCACP,WAAY,yBACZ,MAAO,QACP,QAAS,EACZ,EACD,CACI,SAAU,UACV,WAAY,SACZ,MAAO,2CACV,EACD,CACI,SAAU,UACV,WAAY,UACZ,MAAO,oCACV,CACjB,CACS,EAED,mBAAmBD,EAAK,CACpB,OAAO,KAAK,IAAI,oBAAoBA,EAAI,IAAI,GAAI,OAAO,CAC1D,EAED,SAASA,EAAK,CACV,OAAO,KAAK,mBAAmBA,CAAG,EAAI,KAAK,IAAI,oBAAoBA,EAAI,IAAI,EAAE,EAAIA,EAAI,IACxF,EAED,sBAAsBA,EAAK,CACvB,OAAO,KAAK,mBAAqBA,EAAI,EACxC,EAED,uBAAuBE,EAAeD,EAAI,CACtC,KAAK,yBAA2BC,EAAgBD,EAAK,IACxD,EAED,mBAAoB,CAChB,OAAO,KAAK,uBACP,UAAU,UAAU,EACpB,KAAME,GAAaA,EAAS,yBAAyB,GAAK,IAAI,EAC9D,MAAM,IAAM,IAAI,CACxB,EAED,kBAAmB,CACf,KAAK,UAAY,GAEjB,KAAK,sBACA,OAAO,KAAK,mBAAmB,EAC/B,KAAMP,GAAU,CACb,KAAK,aAAeA,CACxC,CAAiB,EACA,QAAQ,IAAM,CACX,KAAK,UAAY,EACrC,CAAiB,CACR,EAED,0BAA0BQ,EAAa,CACnCA,EAAY,OAAS,CAACA,EAAY,OAElC,KAAK,sBAAsB,KAAKA,EAAa,OAAO,QAAQ,GAAG,EAAE,KAAK,IAAM,CACxE,MAAMC,EAAQD,EAAY,OAAS,SAAW,WAE9C,KAAK,0BAA0B,CAC3B,QAAS,KAAK,IAAI,yDAAyDC,CAAK,GAAI,EAAG,CACnF,KAAMD,EAAY,WAAW,IACrD,CAAqB,CACrB,CAAiB,CACjB,CAAa,CACJ,CACJ,CACL"}