const s=`{% block sw_plugin_card %} <div class="sw-plugin-card"> <sw-extension-icon :src="plugin.iconPath" /> <div class="sw-plugin-card__info"> <div class="sw-plugin-card__label"> {{ plugin.label }} </div> <div class="sw-plugin-card__manufacturer"> {{ plugin.manufacturer }} </div> <div v-if="showDescription" class="sw-plugin-card__short-description" > {{ truncateFilter(plugin.shortDescription, 140) }} </div> <div v-if="pluginIsNotActive" class="bottom" > <sw-button-process variant="primary" :is-loading="pluginIsLoading" :disabled="pluginIsLoading" :process-success="pluginIsSaveSuccessful" class="button-plugin-install" @click="onInstall" > {{ $tc('sw-first-run-wizard.general.buttonInstall') }} </sw-button-process> </div> <div v-else class="plugin-status" > <span class="plugin-installed"> <sw-icon name="regular-check-circle-s" size="16" /> {{ $tc('sw-first-run-wizard.general.pluginInstalled') }} </span> </div> </div> </div> {% endblock %}`,e=Cicada.Component.wrapComponentConfig({template:s,compatConfig:Cicada.compatConfig,inject:["cacheApiService","extensionHelperService","cicadaExtensionService"],mixins:[Cicada.Mixin.getByName("sw-extension-error")],props:{plugin:{type:Object,required:!0},showDescription:{type:Boolean,default:!0,required:!1}},data(){return{pluginIsLoading:!1,pluginIsSaveSuccessful:!1}},computed:{pluginIsNotActive(){return!this.plugin.active},truncateFilter(){return Cicada.Filter.getByName("truncate")}},methods:{onInstall(){this.setupPlugin()},async setupPlugin(){this.pluginIsLoading=!0,this.pluginIsSaveSuccessful=!1;try{await this.extensionHelperService.downloadAndActivateExtension(this.plugin.name,this.plugin.type),this.pluginIsSaveSuccessful=!0,this.$emit("extension-activated")}catch(i){this.showExtensionErrors(i)}finally{this.pluginIsLoading=!1,this.plugin.type==="plugin"&&this.cacheApiService.clear(),await this.cicadaExtensionService.updateExtensionData(),this.$emit("on-plugin-installed",this.plugin.name)}}}});export{e as default};
//# sourceMappingURL=index-BjTRF-gc.js.map
