const s=`{% block sw_condition_base_field_condition %} <sw-arrow-field v-if="options.length > 1" class="sw-product-stream-field-select" :class="{ 'has--error': hasError }" :primary="arrowPrimaryColor" secondary="#ffffff" > <sw-single-select size="medium" :options="options" :value="field" :placeholder="$tc('sw-product-stream.filter.placeholderFieldSelect')" :disabled="disabled" show-clearable-button @update:value="changeField" /> </sw-arrow-field> {% endblock %}`,r={template:s,inject:["conditionDataProviderService","productCustomFields"],emits:["field-changed"],props:{definition:{type:Object,required:!0},field:{type:String,required:!1,default:null},index:{type:Number,required:!0},disabled:{type:Boolean,required:!1,default:!1},hasError:{type:Boolean,required:!1,default:!1}},computed:{options(){const t=Object.keys(this.definition.properties).map(e=>this.conditionDataProviderService.isPropertyInAllowList(this.definition.entity,e)?e==="id"?{label:this.getPropertyTranslation(this.definition.entity),value:e}:{label:this.getPropertyTranslation(e),value:e}:null).filter(e=>e!==null);return this.definition.entity==="product"&&(Object.values(this.conditionDataProviderService.allowedJsonAccessors).forEach(e=>{t.push({label:this.getPropertyTranslation(e.trans),value:e.value})}),Object.keys(this.productCustomFields).forEach(e=>{t.push(this.productCustomFields[e])})),t},arrowPrimaryColor(){return this.hasError?"#de294c":"#758ca3"}},watch:{"definition.entity":{immediate:!0,handler(t){t&&this.options.length===1&&!this.field&&this.changeField(this.options[0].value)}},field:{handler(t){this.definition.entity&&this.options.length===1&&!t&&this.changeField(this.options[0].value)}}},methods:{changeField(t){this.$emit("field-changed",{field:t,index:this.index})},getPropertyTranslation(t){const e=`sw-product-stream.filter.values.${t}`,i=this.$tc(e);return i===e?t:i}}};export{r as default};
