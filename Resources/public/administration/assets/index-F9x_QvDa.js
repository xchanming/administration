const l='{% block sw_category_tree %} <div class="sw-category-tree"> <sw-tree v-if="!isLoadingInitialData" ref="categoryTree" class="sw-category-tree__inner" after-id-property="afterCategoryId" :items="categories" :sortable="sortable" :searchable="false" :active-tree-item-id="categoryId" :translation-context="translationContext" :on-change-route="changeCategory" :disable-context-menu="disableContextMenu" :allow-delete-categories="allowDelete || undefined" initially-expanded-root @batch-delete="deleteCheckedItems" @delete-element="onDeleteCategory" @drag-end="onUpdatePositions" @get-tree-items="onGetTreeItems" @editing-end="syncSiblings" @checked-elements-count="checkedElementsCount" > <template #headline> <span></span> </template> {% block sw_category_tree_items %} <template #items="{ treeItems, sortable, draggedItem, newElementId, checkItem, translationContext, onChangeRoute, disableContextMenu, selectedItemsPathIds, checkedItemIds, }" > <sw-tree-item v-for="item in treeItems" :key="item.id" :item="item" :should-show-active-state="true" :allow-duplicate="false" :allow-new-categories="allowCreate || undefined" :allow-delete-categories="allowDelete || undefined" :active="item.active" :translation-context="translationContext" :on-change-route="onChangeRoute" :sortable="sortable" :dragged-item="draggedItem" :disable-context-menu="disableContextMenu" :display-checkbox="allowEdit || undefined" :context-menu-tooltip-text="contextMenuTooltipText" :new-element-id="newElementId" :get-item-url="getCategoryUrl" :get-is-highlighted="isHighlighted" :active-parent-ids="selectedItemsPathIds" :active-item-ids="checkedItemIds" @check-item="checkItem" /> </template> {% endblock %} </sw-tree> <div v-else> <sw-skeleton variant="tree-item" /> <sw-skeleton variant="tree-item-nested" /> <sw-skeleton variant="tree-item-nested" /> <sw-skeleton variant="tree-item-nested" /> <sw-skeleton variant="tree-item" /> <sw-skeleton variant="tree-item-nested" /> <sw-skeleton variant="tree-item-nested" /> </div> </div> {% endblock %}',{Criteria:s}=Cicada.Data,{mapState:d}=Cicada.Component.getComponentHelper(),c={template:l,compatConfig:Cicada.compatConfig,inject:["repositoryFactory","syncService"],emits:["category-checked-elements-count","unsaved-changes"],mixins:["notification"],props:{categoryId:{type:String,required:!1,default:null},currentLanguageId:{type:String,required:!0},allowEdit:{type:Boolean,required:!1,default:!0},allowCreate:{type:Boolean,required:!1,default:!0},allowDelete:{type:Boolean,required:!1,default:!0}},data(){return{loadedCategories:{},translationContext:"sw-category",linkContext:"sw.category.detail",isLoadingInitialData:!0,loadedParentIds:[],sortable:this.allowEdit}},computed:{...d("swCategoryDetail",["categoriesToDelete"]),categoryRepository(){return this.repositoryFactory.create("category")},category(){return Cicada.State.get("swCategoryDetail").category},categories(){return Object.values(this.loadedCategories)},disableContextMenu(){return this.allowEdit?this.currentLanguageId!==Cicada.Context.api.systemLanguageId:!0},contextMenuTooltipText(){return this.allowEdit?null:this.$tc("sw-privileges.tooltip.warning")},criteria(){return new s(1,500).addAssociation("navigationSalesChannels").addAssociation("footerSalesChannels").addAssociation("serviceSalesChannels")},criteriaWithChildren(){const e=s.fromCriteria(this.criteria).setLimit(1);return e.associations.push({association:"children",criteria:s.fromCriteria(this.criteria)}),e},cmsPageRepository(){return this.repositoryFactory.create("cms_page")},productRepository(){return this.repositoryFactory.create("product")}},watch:{categoriesToDelete(e){e!==void 0&&(this.$refs.categoryTree.onDeleteElements(e),Cicada.State.commit("swCategoryDetail/setCategoriesToDelete",{categoriesToDelete:void 0}))},allowEdit(e){this.sortable=e},category(e,t){if(!t&&this.isLoadingInitialData){this.openInitialTree();return}if(e!==null&&t&&e.id===t.id){const i=[e.id,...t.navigationSalesChannels.map(a=>a.navigationCategoryId),...t.footerSalesChannels.map(a=>a.footerCategoryId),...t.serviceSalesChannels.map(a=>a.serviceCategoryId)],r=s.fromCriteria(this.criteria).setIds(i.filter((a,o,n)=>a!==null&&n.indexOf(a)===o));this.categoryRepository.search(r).then(a=>{this.addCategories(a)})}},currentLanguageId(){this.openInitialTree()}},created(){this.createdComponent()},methods:{createdComponent(){this.category!==null&&this.openInitialTree(),this.categoryId||this.loadRootCategories().finally(()=>{this.isLoadingInitialData=!1})},openInitialTree(){this.isLoadingInitialData=!0,this.loadedCategories={},this.loadedParentIds=[],this.loadRootCategories().then(()=>{if(!this.category||this.category.path===null)return this.isLoadingInitialData=!1,Promise.resolve();const e=this.category.path.split("|").filter(i=>!!i),t=[];return e.forEach(i=>{const r=this.categoryRepository.get(i,Cicada.Context.api,this.criteriaWithChildren).then(a=>{this.addCategories([a,...a.children])});t.push(r)}),Promise.all(t).then(()=>{this.isLoadingInitialData=!1})})},onUpdatePositions:Cicada.Utils.debounce(function({draggedItem:t,oldParentId:i,newParentId:r}){t.children.length>0&&(t.children.forEach(a=>{this.removeFromStore(a.id)}),this.loadedParentIds=this.loadedParentIds.filter(a=>a!==t.id)),this.syncSiblings({parentId:r}).then(()=>{i!==r&&this.syncSiblings({parentId:i}).then(()=>{this.syncProducts(t.id)}),this.sortable=this.allowEdit})},400),syncProducts(e){const t=new s(1,50);return t.addFilter(s.multi("or",[s.equals("categoriesRo.id",e),s.equals("categories.id",e)])),this.productRepository.iterateIds(t,this.indexProducts)},indexProducts(e){const t=this.productRepository.buildHeaders();return Cicada.Application.getContainer("init").httpClient.post("/_action/index-products",{ids:e},{headers:t})},checkedElementsCount(e){this.$emit("category-checked-elements-count",e)},async deleteCheckedItems(e){const t=Object.keys(e);if(t.some(a=>{var o,n;return((o=this.loadedCategories[a])==null?void 0:o.navigationSalesChannels)!==null&&((n=this.loadedCategories[a])==null?void 0:n.navigationSalesChannels.length)>0})){this.createNotificationError({message:this.$tc("sw-category.general.errorNavigationEntryPointMultiple")});const a=t.map(o=>this.loadedCategories[o]);t.forEach(o=>{this.isCompatEnabled("INSTANCE_DELETE")?this.$delete(this.loadedCategories,o):delete this.loadedCategories[o]}),this.$nextTick(()=>{this.addCategories(a)});return}await this.categoryRepository.syncDeleted(t,Cicada.Context.api);const r=t.map(a=>this.loadedCategories[a]);await this.fixSortingForCategories(r),t.forEach(a=>{this.removeFromStore(a)})},onDeleteCategory({data:e,children:t,checked:i}){if(e.isNew())return this.isCompatEnabled("INSTANCE_DELETE")?this.$delete(this.loadedCategories,e.id):delete this.loadedCategories[e.id],Promise.resolve();if(this.isErrorNavigationEntryPoint(e)){e.isDeleted=!1,t.length>0&&t.forEach(a=>{a.data.isDeleted=!1});const r=this.getNextCategory(e);return r&&(r.afterCategoryId=e.id),this.loadedCategories={...this.loadedCategories},this.createNotificationError({message:this.entryPointWarningMessage(e)}),Promise.resolve()}return this.categoryRepository.delete(e.id).then(async()=>{if(this.removeFromStore(e.id),e.parentId!==null){const r=await this.categoryRepository.get(e.parentId,Cicada.Context.api,this.criteria);this.addCategory(r)}await this.fixSortingForCategories([e],!0),e.id===this.categoryId&&this.$router.push({name:"sw.category.index"}),i===!0&&(this.$refs.categoryTree.checkedElementsCount-=1,this.$emit("category-checked-elements-count",this.$refs.categoryTree.checkedElementsCount))})},fixSortingForCategories(e,t=!1){const i=[];return e.forEach(r=>{const a=this.getNextCategory(r,t?"afterCategoryId":"id");a&&(a.afterCategoryId=r.afterCategoryId,!e.find(o=>o.id===a.id)&&i.push(a))}),this.categoryRepository.saveAll(i)},getNextCategory(e,t="id"){return Object.values(this.loadedCategories).find(i=>i.parentId===e.parentId&&i.afterCategoryId===e[t])},changeCategory(e){const t={name:"sw.category.detail",params:{id:e.id}};this.category&&this.categoryRepository.hasChanges(this.category)?this.$emit("unsaved-changes",t):this.$router.push(t)},onGetTreeItems(e){if(this.loadedParentIds.includes(e))return Promise.resolve();const t=s.fromCriteria(this.criteria);return t.addFilter(s.equals("parentId",e)),t.setIds([]),this.categoryRepository.search(t).then(i=>{this.addCategories(i),this.loadedParentIds.push(e)})},getChildrenFromParent(e){return this.onGetTreeItems(e)},loadRootCategories(){const e=s.fromCriteria(this.criteria).addFilter(s.equals("parentId",null));return this.categoryRepository.search(e).then(t=>{this.addCategories(t)})},createNewElement(e,t,i=""){this.sortable=!1,!t&&e&&(t=e.parentId);const r=this.createNewCategory(i,t);return this.addCategory(r),r},createNewCategory(e,t){const i=this.categoryRepository.create();return i.name=e,i.parentId=t,i.childCount=0,i.active=!1,i.visible=!0,i.save=()=>this.categoryRepository.save(i).then(()=>{const r=s.fromCriteria(this.criteria).setIds([i.id,t].filter(a=>a!==null));this.categoryRepository.search(r).then(a=>{this.addCategories(a),this.sortable=this.allowEdit})}),i},syncSiblings({parentId:e}){const t=this.categories.filter(i=>i.parentId===e);return this.categoryRepository.sync(t).then(()=>(this.loadedParentIds=this.loadedParentIds.filter(i=>i!==e),this.getChildrenFromParent(e))).then(()=>{this.categoryRepository.get(e,Cicada.Context.api,this.criteria).then(i=>{this.addCategory(i)})})},addCategory(e){e&&(this.isCompatEnabled("INSTANCE_SET")?this.$set(this.loadedCategories,e.id,e):this.loadedCategories[e.id]=e)},addCategories(e){e.forEach(t=>{this.isCompatEnabled("INSTANCE_SET")?this.$set(this.loadedCategories,t.id,t):this.loadedCategories[t.id]=t})},removeFromStore(e){const t=this.getDeletedIds(e);this.loadedParentIds=this.loadedParentIds.filter(i=>!t.includes(i)),t.forEach(i=>{this.isCompatEnabled("INSTANCE_DELETE")?this.$delete(this.loadedCategories,i):delete this.loadedCategories[i]})},getDeletedIds(e){const t=[e];return Object.keys(this.loadedCategories).forEach(i=>{this.loadedCategories[i].parentId===e&&t.push(...this.getDeletedIds(i))}),t},getCategoryUrl(e){return this.$router.resolve({name:this.linkContext,params:{id:e.id}}).href},isHighlighted({data:e}){return e.navigationSalesChannels!==null&&e.navigationSalesChannels.length>0||e.serviceSalesChannels!==null&&e.serviceSalesChannels.length>0||e.footerSalesChannels!==null&&e.footerSalesChannels.length>0},isErrorNavigationEntryPoint(e){const{navigationSalesChannels:t,serviceSalesChannels:i,footerSalesChannels:r}=e;return[t,i,r].some(a=>a!==null&&(a==null?void 0:a.length)>0)},entryPointWarningMessage(e){const{serviceSalesChannels:t,footerSalesChannels:i}=e;return t!==null&&(t==null?void 0:t.length)>0?this.$tc("sw-category.general.errorNavigationEntryPoint",0,{entryPointLabel:this.$tc("sw-category.base.entry-point-card.types.labelServiceNavigation")}):i!==null&&(i==null?void 0:i.length)>0?this.$tc("sw-category.general.errorNavigationEntryPoint",0,{entryPointLabel:this.$tc("sw-category.base.entry-point-card.types.labelFooterNavigation")}):this.$tc("sw-category.general.errorNavigationEntryPoint",0,{entryPointLabel:this.$tc("sw-category.base.entry-point-card.types.labelMainNavigation")})}}};export{c as default};
//# sourceMappingURL=index-F9x_QvDa.js.map
