import{K as c}from"./main-BVD2thQ1.js";import"./channel-Cvr-E4M4.js";import"./administration-d9Z5Qnc-.js";const n=`{% block sw_search_preferences_modal %} <sw-modal class="sw-search-preferences-modal" :title="$tc('global.sw-search-preferences-modal.title')" :is-loading="isLoading" @modal-close="onClose" > {% block sw_search_preferences_modal_description %} <p class="sw-search-preferences-modal__description" v-html="$tc('global.sw-search-preferences-modal.description')" > </p> {% endblock %} {% block sw_search_preferences_modal_grid %} <sw-data-grid :show-selection="false" :show-actions="false" :plain-appearance="true" :data-source="searchPreferences" :columns="searchPreferencesColumns" > <template #column-active="{ item }"> {% block sw_search_preferences_modal_grid_column_active %} <sw-checkbox-field v-model:value="item._searchable" @update:value="onChangeSearchPreference(item)" /> {% endblock %} </template> <template #column-moduleName="{ item }"> {% block sw_search_preferences_modal_grid_column_module_name %} <span>{{ getModuleName(item.entityName) }}</span> {% endblock %} </template> </sw-data-grid> {% endblock %} <template #modal-footer> {% block sw_search_preferences_modal_button_cancel %} <sw-button size="small" class="sw-search-preferences-modal__button-cancel" @click="onCancel" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_search_preferences_modal_button_save %} <sw-button variant="primary" size="small" class="sw-search-preferences-modal__button-save" :disabled="isLoading" @click="onSave" > {{ $tc('global.default.save') }} </sw-button> {% endblock %} </template> </sw-modal> {% endblock %}`,{Component:o,Mixin:i,Module:l}=Shopware;o.register("sw-search-preferences-modal",{template:n,inject:["searchPreferencesService","searchRankingService","userConfigService"],emits:["modal-close"],mixins:[i.getByName("notification")],data(){return{isLoading:!1,searchPreferences:[],userSearchPreferences:null}},computed:{defaultSearchPreferences(){const e=this.searchPreferencesService.getDefaultSearchPreferences();return this.userSearchPreferences===null?e:e.reduce((s,r)=>{const t=this.userSearchPreferences.find(a=>Object.keys(a)[0]===Object.keys(r)[0]);return s.push(t||r),s},[])},searchPreferencesColumns(){return[{property:"active",label:this.$tc("global.sw-search-preferences-modal.columnActive"),sortable:!1,width:"100px",align:"center"},{property:"moduleName",label:this.$tc("global.sw-search-preferences-modal.columnModuleName"),sortable:!1}]}},created(){this.createdComponent()},mounted(){this.mountedComponent()},beforeUnmount(){this.beforeDestroyComponent()},methods:{createdComponent(){this.getDataSource()},mountedComponent(){this.addEventListeners()},beforeDestroyComponent(){this.removeEventListeners()},async getDataSource(){this.isLoading=!0;try{this.userSearchPreferences=await this.searchPreferencesService.getUserSearchPreferences(),this.searchPreferences=this.searchPreferencesService.processSearchPreferences(this.defaultSearchPreferences)}catch(e){this.createNotificationError({message:e.message}),this.searchPreferences=[],this.userSearchPreferences=null}finally{this.isLoading=!1}},addEventListeners(){var e;(e=document.getElementById("sw-search-preferences-modal-link"))==null||e.addEventListener("click",this.onOpenSearchSettings)},removeEventListeners(){var e;(e=document.getElementById("sw-search-preferences-modal-link"))==null||e.removeEventListener("click",this.onOpenSearchSettings)},getModuleName(e){const s=l.getModuleByEntityName(e);return this.$tc(s==null?void 0:s.manifest.title)},onChangeSearchPreference(e){e._searchable&&e.fields.every(s=>!s._searchable)&&e.fields.forEach(s=>{s._searchable=!0})},onClose(){this.$emit("modal-close")},onOpenSearchSettings(){this.$emit("modal-close"),this.$nextTick(()=>{this.$router.push({name:"sw.profile.index.searchPreferences"})})},onCancel(){this.$emit("modal-close")},onSave(){return this.userSearchPreferences=this.userSearchPreferences??this.searchPreferencesService.createUserSearchPreferences(),this.userSearchPreferences.value=this.searchPreferences.map(({entityName:e,_searchable:s,fields:r})=>({[e]:{_searchable:s,...this.searchPreferencesService.processSearchPreferencesFields(r)}})),this.searchRankingService.clearCacheUserSearchConfiguration(),this.isLoading=!0,this.userConfigService.upsert({[c]:this.userSearchPreferences.value}).then(()=>{this.isLoading=!1,this.$emit("modal-close"),Shopware.Utils.EventBus.emit("sw-search-preferences-modal-close")}).catch(e=>{this.isLoading=!1,this.createNotificationError({message:e.message})})}}});
