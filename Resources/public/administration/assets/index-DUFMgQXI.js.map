{"version":3,"file":"index-DUFMgQXI.js","sources":["../../../app/administration/src/module/sw-cms/component/sw-cms-page-form/sw-cms-page-form.html.twig","../../../app/administration/src/module/sw-cms/component/sw-cms-page-form/index.ts"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_cms_page_form %}\n<div\n    v-responsive=\"{ 'is--compact': el => el.width <= 1620, timeout: 100 }\"\n    class=\"sw-cms-page-form\"\n>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_cms_page_form_content %}\n    <template\n        v-for=\"section in page.sections\"\n        :key=\"section.id\"\n    >\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_cms_page_form_section %}\n        <div\n            class=\"sw-cms-page-form__section\"\n        >\n            <div class=\"sw-cms-page-form__section-actions\">\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_page_form_section_name_wrapper %}\n                <div class=\"sw-cms-page-form__section-action sw-cms-page-form__section-name\">\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_page_form_section_name_icon %}\n                    <sw-icon\n                        name=\"regular-layout\"\n                        size=\"20\"\n                        class=\"sw-cms-page-form__section-action-icon sw-cms-page-form__section-name-icon\"\n                    />\n                    {% endblock %}\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_page_form__section_name %}\n                    <span class=\"sw-cms-page-form__section-action-label sw-cms-page-form__section-name-label\">\n                        {{ getSectionName(section) }}\n                    </span>\n                    {% endblock %}\n\n                    <div class=\"sw-cms-page-form__device-actions\">\n                        <sw-icon :name=\"getDeviceActive('mobile', section)\" />\n\n                        <sw-icon :name=\"getDeviceActive('tablet', section)\" />\n\n                        <sw-icon :name=\"getDeviceActive('desktop', section)\" />\n                    </div>\n                </div>\n                {% endblock %}\n            </div>\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_cms_page_form_section_empty_state_block %}\n            <sw-card\n                v-if=\"section.blocks.length === 0\"\n                position-identifier=\"sw-cms-page-form-empty\"\n                class=\"sw-cms-page-form__block-card is--empty\"\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_page_form_section_empty_state_block_text %}\n                <p class=\"sw-cms-page-form__empty-state-text\">\n                    {{ $tc('sw-cms.section.sectionEmptyState') }}\n                </p>\n                {% endblock %}\n            </sw-card>\n            {% endblock %}\n\n            <template\n                v-for=\"(block, index) in section.blocks\"\n                v-else\n                :key=\"block.id\"\n            >\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_page_form_section_type_label_wrapper %}\n                <div\n                    v-if=\"displaySectionType(block)\"\n                    class=\"sw-cms-page-form__section-type\"\n                >\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_page_form_section_type_label %}\n                    <div class=\"sw-cms-page-form__section-type-label\">\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_page_form_section_type_label_icon %}\n                        <sw-icon\n                            v-if=\"block.sectionPosition !== 'main'\"\n                            size=\"20\"\n                            name=\"regular-align-left-xs\"\n                            class=\"sw-cms-page-form__section-type-icon\"\n                        />\n\n                        <sw-icon\n                            v-else\n                            size=\"20\"\n                            name=\"regular-align-right-xs\"\n                            class=\"sw-cms-page-form__section-type-icon\"\n                        />\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_page_form_section_type %}\n                        <span class=\"sw-cms-page-form__section-type-name\">\n                            {{ getSectionPosition(block) }}\n                        </span>\n                        {% endblock %}\n                    </div>\n                    {% endblock %}\n\n                    <hr class=\"sw-cms-page-form__section-divider\">\n                </div>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_cms_page_form_card %}\n                <sw-card\n                    position-identifier=\"sw-cms-page-form-block\"\n                    class=\"sw-cms-page-form__block-card\"\n                    :title=\"$tc(getBlockTitle(block))\"\n                >\n                    <template #header-right>\n                        <div class=\"sw-cms-page-form__block-device-actions\">\n                            <sw-icon :name=\"getDeviceActive('mobile', section, block)\" />\n\n                            <sw-icon :name=\"getDeviceActive('tablet', section, block)\" />\n\n                            <sw-icon :name=\"getDeviceActive('desktop', section, block)\" />\n                        </div>\n                    </template>\n\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_cms_page_form_card_content %}\n                    <div\n                        v-for=\"(element, blockIndex) in block.slots\"\n                        :key=\"blockIndex\"\n                        class=\"sw-cms-page-form__element-config\"\n                    >\n\n                        <template v-if=\"displayNotification(section, block)\">\n                            <sw-alert variant=\"info\">\n                                {{ $tc('sw-cms.blocks.blockDisableState') }}\n                            </sw-alert>\n                        </template>\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_cms_page_form_element_config %}\n                        <component\n                            :is=\"cmsElements[element.type].configComponent\"\n                            :element=\"element\"\n                            :element-data=\"cmsElements[element.type]\"\n                            @element-update=\"elementUpdate\"\n                        />\n                        {% endblock %}\n                    </div>\n                    {% endblock %}\n                </sw-card>\n                {% endblock %}\n            </template>\n        </div>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</div>\n{% endblock %}\n","import { type PropType } from 'vue';\nimport template from './sw-cms-page-form.html.twig';\nimport './sw-cms-page-form.scss';\nimport CMS from '../../constant/sw-cms.constant';\n\n/**\n * @private\n * @package discovery\n */\nexport default Cicada.Component.wrapComponentConfig({\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: ['cmsService'],\n\n    props: {\n        page: {\n            type: Object as PropType<EntitySchema.Entity<'cms_page'>>,\n            required: true,\n        },\n        elementUpdate: {\n            type: Function,\n            required: false,\n            default: () => {},\n        },\n    },\n\n    computed: {\n        cmsBlocks() {\n            return this.cmsService.getCmsBlockRegistry();\n        },\n\n        cmsElements() {\n            return this.cmsService.getCmsElementRegistry();\n        },\n\n        slotPositions() {\n            return CMS.SLOT_POSITIONS as { [key: string]: number };\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.page.sections!.forEach((section) => {\n                section.blocks!.forEach((block) => {\n                    block.slots!.sort((a, b) => {\n                        const positionA = this.slotPositions[a.slot] ?? this.slotPositions.default;\n                        const positionB = this.slotPositions[b.slot] ?? this.slotPositions.default;\n\n                        return positionA - positionB;\n                    });\n\n                    if (!block.visibility) {\n                        block.visibility = {\n                            mobile: true,\n                            tablet: true,\n                            desktop: true,\n                        };\n                    }\n                });\n\n                if (!section.visibility) {\n                    section.visibility = {\n                        mobile: true,\n                        tablet: true,\n                        desktop: true,\n                    };\n                }\n            });\n        },\n\n        getBlockTitle(block: EntitySchema.Entity<'cms_block'>) {\n            if (typeof block.name === 'string' && block.name.length !== 0) {\n                return block.name;\n            }\n\n            if (this.cmsBlocks[block.type]) {\n                return this.cmsBlocks[block.type]!.label;\n            }\n\n            return '';\n        },\n\n        displaySectionType(block: EntitySchema.Entity<'cms_block'>) {\n            const blockSection = this.page.sections!.find((section) => section.id === block.sectionId);\n\n            if (!blockSection) {\n                return false;\n            }\n\n            const blocksInSameSection = blockSection.blocks!;\n            const blocksNotInSamePosition = blocksInSameSection.filter((b) => {\n                return b.sectionPosition !== block.sectionPosition;\n            }).length;\n\n            if (blocksNotInSamePosition === 0) {\n                return false;\n            }\n\n            const blocksInSamePosition = blocksInSameSection.filter((b) => b.sectionPosition === block.sectionPosition);\n\n            const firstBlockInPosition = blocksInSamePosition.reduce((firstBlock, actualBlock) => {\n                return actualBlock.position < firstBlock.position ? actualBlock : firstBlock;\n            }, block);\n\n            return firstBlockInPosition.id === block.id;\n        },\n\n        getSectionName(section: EntitySchema.Entity<'cms_section'>) {\n            if (section.name) {\n                return section.name;\n            }\n\n            return section.type === 'sidebar' ? this.$tc('sw-cms.section.isSidebar') : this.$tc('sw-cms.section.isDefault');\n        },\n\n        getSectionPosition(block: EntitySchema.Entity<'cms_block'>) {\n            return block.sectionPosition === 'main'\n                ? this.$tc('sw-cms.section.positionRight')\n                : this.$tc('sw-cms.section.positionLeft');\n        },\n\n        getDeviceActive(\n            viewport: string,\n            section: EntitySchema.Entity<'cms_section'>,\n            block: EntitySchema.Entity<'cms_block'> | null = null,\n        ) {\n            const sectionVisibility = section.visibility as {\n                [key: string]: boolean;\n            };\n            const blockVisibility = block?.visibility as { [key: string]: boolean } | undefined;\n\n            const isActive = blockVisibility\n                ? sectionVisibility[viewport] && blockVisibility[viewport]\n                : sectionVisibility[viewport];\n\n            return isActive ? `regular-${viewport}` : `regular-${viewport}-slash`;\n        },\n\n        displayNotification(section: EntitySchema.Entity<'cms_section'>, block: EntitySchema.Entity<'cms_block'>) {\n            const sectionVisibility = section.visibility as {\n                [key: string]: boolean;\n            };\n            const blockVisibility = block?.visibility as {\n                [key: string]: boolean;\n            };\n\n            const isSectionDisplay = !(Object.values(sectionVisibility).indexOf(true) > -1);\n            const isBlockDisplay = !(Object.values(blockVisibility).indexOf(true) > -1);\n\n            return isSectionDisplay || isBlockDisplay;\n        },\n    },\n});\n"],"names":["template","index","CMS","section","block","a","b","positionA","positionB","blockSection","blocksInSameSection","firstBlock","actualBlock","viewport","sectionVisibility","blockVisibility","isSectionDisplay","isBlockDisplay"],"mappings":"mLAAA,MAAeA,EAAA,43GCSfC,EAAe,OAAO,UAAU,oBAAoB,CAChD,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CAAC,YAAY,EAErB,MAAO,CACH,KAAM,CACF,KAAM,OACN,SAAU,EACd,EACA,cAAe,CACX,KAAM,SACN,SAAU,GACV,QAAS,IAAM,CAAC,CACpB,CACJ,EAEA,SAAU,CACN,WAAY,CACD,OAAA,KAAK,WAAW,qBAC3B,EAEA,aAAc,CACH,OAAA,KAAK,WAAW,uBAC3B,EAEA,eAAgB,CACZ,OAAOE,EAAI,cACf,CACJ,EAEA,SAAU,CACN,KAAK,iBAAiB,CAC1B,EAEA,QAAS,CACL,kBAAmB,CACf,KAAK,KAAK,SAAU,QAASC,GAAY,CAC7BA,EAAA,OAAQ,QAASC,GAAU,CAC/BA,EAAM,MAAO,KAAK,CAACC,EAAGC,IAAM,CACxB,MAAMC,EAAY,KAAK,cAAcF,EAAE,IAAI,GAAK,KAAK,cAAc,QAC7DG,EAAY,KAAK,cAAcF,EAAE,IAAI,GAAK,KAAK,cAAc,QAEnE,OAAOC,EAAYC,CAAA,CACtB,EAEIJ,EAAM,aACPA,EAAM,WAAa,CACf,OAAQ,GACR,OAAQ,GACR,QAAS,EAAA,EAEjB,CACH,EAEID,EAAQ,aACTA,EAAQ,WAAa,CACjB,OAAQ,GACR,OAAQ,GACR,QAAS,EAAA,EAEjB,CACH,CACL,EAEA,cAAcC,EAAyC,CACnD,OAAI,OAAOA,EAAM,MAAS,UAAYA,EAAM,KAAK,SAAW,EACjDA,EAAM,KAGb,KAAK,UAAUA,EAAM,IAAI,EAClB,KAAK,UAAUA,EAAM,IAAI,EAAG,MAGhC,EACX,EAEA,mBAAmBA,EAAyC,CAClD,MAAAK,EAAe,KAAK,KAAK,SAAU,KAAMN,GAAYA,EAAQ,KAAOC,EAAM,SAAS,EAEzF,GAAI,CAACK,EACM,MAAA,GAGX,MAAMC,EAAsBD,EAAa,OAKzC,OAJgCC,EAAoB,OAAQJ,GACjDA,EAAE,kBAAoBF,EAAM,eACtC,EAAE,SAE6B,EACrB,GAGkBM,EAAoB,OAAQJ,GAAMA,EAAE,kBAAoBF,EAAM,eAAe,EAExD,OAAO,CAACO,EAAYC,IAC3DA,EAAY,SAAWD,EAAW,SAAWC,EAAcD,EACnEP,CAAK,EAEoB,KAAOA,EAAM,EAC7C,EAEA,eAAeD,EAA6C,CACxD,OAAIA,EAAQ,KACDA,EAAQ,KAGZA,EAAQ,OAAS,UAAY,KAAK,IAAI,0BAA0B,EAAI,KAAK,IAAI,0BAA0B,CAClH,EAEA,mBAAmBC,EAAyC,CACjD,OAAAA,EAAM,kBAAoB,OAC3B,KAAK,IAAI,8BAA8B,EACvC,KAAK,IAAI,6BAA6B,CAChD,EAEA,gBACIS,EACAV,EACAC,EAAiD,KACnD,CACE,MAAMU,EAAoBX,EAAQ,WAG5BY,EAAkBX,GAAA,YAAAA,EAAO,WAM/B,OAJiBW,EACXD,EAAkBD,CAAQ,GAAKE,EAAgBF,CAAQ,EACvDC,EAAkBD,CAAQ,GAEd,WAAWA,CAAQ,GAAK,WAAWA,CAAQ,QACjE,EAEA,oBAAoBV,EAA6CC,EAAyC,CACtG,MAAMU,EAAoBX,EAAQ,WAG5BY,EAAkBX,GAAA,YAAAA,EAAO,WAIzBY,EAAmB,EAAE,OAAO,OAAOF,CAAiB,EAAE,QAAQ,EAAI,EAAI,IACtEG,EAAiB,EAAE,OAAO,OAAOF,CAAe,EAAE,QAAQ,EAAI,EAAI,IAExE,OAAOC,GAAoBC,CAC/B,CACJ,CACJ,CAAC"}