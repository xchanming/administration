const s='{% block sw_admin %} <sw-skip-link /> <div id="app" @mousemove="onUserActivity" @keyup="onUserActivity" > <div id="overrideComponents" style="display: none;" > <component :is="overrideComponent" v-for="(overrideComponent, index) in overrideComponents" v-once :key="index" /> </div> <sw-notifications ref="notifications" /> <sw-duplicated-media-v2 v-if="isLoggedIn" /> <router-view /> <sw-settings-cache-modal v-if="isLoggedIn" /> <sw-license-violation /> <sw-hidden-iframes /> <sw-modals-renderer /> <sw-in-app-purchase-checkout v-if="isLoggedIn" /> <sw-app-wrong-app-url-modal v-if="isLoggedIn" /> <mt-toast :toasts="toasts" @remove-toast="onRemoveToast" /> </div> {% endblock %}',{Component:i}=Cicada;i.register("sw-admin",{template:s,compatConfig:Cicada.compatConfig,inject:["userActivityService","loginService","feature"],metaInfo(){return{title:this.$tc("global.sw-admin-menu.textCicadaAdmin")}},data(){return{channel:null,toasts:[]}},computed:{isLoggedIn(){return this.loginService.isLoggedIn()},overrideComponents(){return i.getOverrideComponents()}},created(){Cicada.ExtensionAPI.handle("toastDispatch",e=>{this.toasts=[{id:Cicada.Utils.createId(),...e},...this.toasts]}),this.channel=new BroadcastChannel("session_channel"),this.channel.onmessage=e=>{const t=e.data;if(!t||!Cicada.Utils.object.hasOwnProperty(t,"inactive"))return;const n=this.$router.currentRoute.value.name,o=["sw.inactivity.login.index","sw.login.index.login"];!t.inactive||o.includes(n||"")||this.loginService.forwardLogout(!0,!0)}},beforeUnmount(){var e;(e=this.channel)==null||e.close()},methods:{onUserActivity(){this.userActivityService.updateLastUserActivity()},onRemoveToast(e){this.toasts=this.toasts.filter(t=>t.id!==e)}}});
//# sourceMappingURL=index-CAfv8xiX.js.map
