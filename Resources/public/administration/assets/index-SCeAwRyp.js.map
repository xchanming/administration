{"version":3,"file":"index-SCeAwRyp.js","sources":["../../../app/administration/src/app/component/form/sw-select-rule-create/sw-select-rule-create.html.twig","../../../app/administration/src/app/component/form/sw-select-rule-create/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_select_rule_create %}\n<div class=\"sw-select-rule-create\">\n    <sw-entity-multi-select\n        v-if=\"rules !== null\"\n        v-model:entityCollection=\"collection\"\n        :criteria=\"ruleFilter\"\n        v-bind=\"$attrs\"\n        advanced-selection-component=\"sw-advanced-selection-rule\"\n        :advanced-selection-parameters=\"getAdvancedSelectionParameters()\"\n    >\n\n        <template #before-item-list>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_select_rule_create_select_before %}\n            <!-- eslint-disable-next-line vuejs-accessibility/click-events-have-key-events, vuejs-accessibility/no-static-element-interactions -->\n            <div\n                class=\"sw-select-rule-create__create-rule-item sw-select-result\"\n                @click=\"openCreateRuleModal\"\n            >\n                {{ $tc('sw-select-rule-create.addNewRule') }}\n            </div>\n            {% endblock %}\n        </template>\n\n        <template #result-item=\"{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, isSelected, addItem, getKey }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_select_rule_create_select_multi_select_result_list_item %}\n            <slot\n                name=\"result-item\"\n                v-bind=\"{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, isSelected, addItem, getKey }\"\n            >\n                <sw-select-result\n                    v-tooltip=\"tooltipConfig(item)\"\n                    :selected=\"isSelected(item)\"\n                    :disabled=\"isRuleRestricted(item)\"\n                    v-bind=\"{ item, index }\"\n                    @item-select=\"addItem\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_select_rule_create_select_multi_select_result_item_label %}\n                    <slot\n                        name=\"result-label-property\"\n                        v-bind=\"{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, getKey }\"\n                    >\n                        <sw-highlight-text\n                            v-if=\"highlightSearchTerm\"\n                            :text=\"getKey(item, labelProperty) || getKey(item, `translated.${labelProperty}`)\"\n                            :search-term=\"searchTerm\"\n                        />\n                        <template v-else>\n                            {{ getKey(item, labelProperty) || getKey(item, `translated.${labelProperty}`) }}\n                        </template>\n                    </slot>\n                    {% endblock %}\n                </sw-select-result>\n            </slot>\n            {% endblock %}\n        </template>\n\n    </sw-entity-multi-select>\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_select_rule_create_select %}\n    <sw-entity-single-select\n        v-else\n        entity=\"rule\"\n        :criteria=\"ruleFilter\"\n        :value=\"ruleId\"\n        v-bind=\"$attrs\"\n        show-clearable-button\n        advanced-selection-component=\"sw-advanced-selection-rule\"\n        :advanced-selection-parameters=\"getAdvancedSelectionParameters()\"\n        @update:value=\"onSelectRule\"\n    >\n        <template #before-item-list>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_select_rule_create_single_select_before %}\n            <!-- eslint-disable-next-line vuejs-accessibility/click-events-have-key-events, vuejs-accessibility/no-static-element-interactions -->\n            <div\n                class=\"sw-select-rule-create__create-rule-item sw-select-result\"\n                @click=\"openCreateRuleModal\"\n            >\n                {{ $tc('sw-select-rule-create.addNewRule') }}\n            </div>\n            {% endblock %}\n        </template>\n        <template #result-item=\"{ item, index, labelProperty, searchTerm, highlightSearchTerm, isSelected, setValue, getKey }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_select_rule_create_select_entity_select_result_list_item %}\n            <slot\n                name=\"result-item\"\n                v-bind=\"{ item, index, labelProperty, searchTerm, highlightSearchTerm, isSelected, setValue, getKey }\"\n            >\n                <sw-select-result\n                    v-tooltip=\"tooltipConfig(item)\"\n                    :selected=\"isSelected(item)\"\n                    :disabled=\"isRuleRestricted(item)\"\n                    v-bind=\"{ item, index }\"\n                    @item-select=\"setValue\"\n                >\n                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                    {% block sw_select_rule_create_select_entity_select_result_item_label %}\n                    <slot\n                        name=\"result-label-property\"\n                        v-bind=\"{ item, index, labelProperty, searchTerm, highlightSearchTerm, getKey }\"\n                    >\n                        <sw-highlight-text\n                            v-if=\"highlightSearchTerm\"\n                            :text=\"getKey(item, labelProperty) || getKey(item, `translated.${labelProperty}`)\"\n                            :search-term=\"searchTerm\"\n                        />\n                        <template v-else>\n                            {{ getKey(item, labelProperty) || getKey(item, `translated.${labelProperty}`) }}\n                        </template>\n                    </slot>\n                    {% endblock %}\n                </sw-select-result>\n            </slot>\n            {% endblock %}\n        </template>\n    </sw-entity-single-select>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_select_rule_create_rule_modal %}\n    <slot\n        name=\"rule-modal\"\n        v-bind=\"{ showRuleModal, onSaveRule, onCloseRuleModal }\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_select_rule_create_rule_modal_inner%}\n        <sw-rule-modal\n            v-if=\"showRuleModal\"\n            :rule-aware-group-key=\"ruleAwareGroupKey\"\n            @save=\"onSaveRule\"\n            @modal-close=\"onCloseRuleModal\"\n        />\n        {% endblock %}\n    </slot>\n    {% endblock %}\n</div>\n{% endblock %}\n","import template from './sw-select-rule-create.html.twig';\nimport './sw-select-rule-create.scss';\n\nconst { Component } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n/**\n * @private\n * @package services-settings\n * @status ready\n * @description The <u>sw-select-rule-create</u> component is used to create or select a rule.\n * @example-type code-only\n * @component-example\n * <sw-select-rule-create\n *     ruleId=\"0fd38734776f41e9a1ba431f1667e677\"\n *     ruleFilter=\"ruleFilter\"\n *     \\@save-rule=\"onSaveRule\"\n *     \\@dismiss-rule=\"onDismissRule\">\n * </sw-select-rule-create>\n */\nComponent.register('sw-select-rule-create', {\n    template,\n    inheritAttrs: false,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'feature',\n        'ruleConditionDataProviderService',\n    ],\n\n    emits: [\n        'save-rule',\n        'dismiss-rule',\n    ],\n\n    props: {\n        ruleId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        rules: {\n            type: Array,\n            required: false,\n            default: null,\n        },\n\n        ruleFilter: {\n            type: Object,\n            required: false,\n            default() {\n                const criteria = new Criteria(1, 25);\n                criteria.addSorting(Criteria.sort('name', 'ASC', false)).addAssociation('conditions');\n\n                return criteria;\n            },\n        },\n\n        ruleAwareGroupKey: {\n            type: String,\n            required: false,\n            default: null,\n        },\n\n        /**\n         * Contains an array of rule ids which should not be selectable,\n         * for example because they are already used in a different place\n         */\n        restrictedRuleIds: {\n            type: Array,\n            required: false,\n            default() {\n                return [];\n            },\n        },\n\n        /**\n         * Tooltip label to show for any rule in the restrictedRuleIds array\n         */\n        restrictedRuleIdsTooltipLabel: {\n            type: String,\n            required: false,\n            default() {\n                return '';\n            },\n        },\n    },\n\n    data() {\n        return {\n            itemAddNewRule: {\n                index: -1,\n                id: '',\n            },\n            showRuleModal: false,\n        };\n    },\n\n    computed: {\n        collection: {\n            get() {\n                return this.rules;\n            },\n            set(collection) {\n                collection.forEach((item) => {\n                    if (!this.rules.has(item.id)) {\n                        this.rules.add(item);\n                    }\n                });\n                this.rules.forEach((item) => {\n                    if (!collection.has(item.id)) {\n                        this.rules.remove(item.id);\n                    }\n                });\n            },\n        },\n    },\n\n    methods: {\n        onSaveRule(ruleId, rule) {\n            if (this.rules) {\n                this.rules.add(rule);\n            }\n\n            this.$emit('save-rule', ruleId, rule);\n        },\n\n        onSelectRule(event) {\n            if (event !== this.ruleId) {\n                this.onSaveRule(event);\n            }\n        },\n\n        openCreateRuleModal() {\n            this.showRuleModal = true;\n        },\n\n        onCloseRuleModal() {\n            this.showRuleModal = false;\n        },\n\n        onRuleSelectInput(event) {\n            if (!event) {\n                this.$emit('dismiss-rule');\n            }\n        },\n\n        isRuleRestricted(rule) {\n            return (\n                this.restrictedRuleIds.includes(rule.id) ||\n                this.ruleConditionDataProviderService.isRuleRestricted(rule.conditions, this.ruleAwareGroupKey)\n            );\n        },\n\n        getAdvancedSelectionParameters() {\n            return {\n                ruleAwareGroupKey: this.ruleAwareGroupKey,\n                restrictedRuleIds: this.restrictedRuleIds,\n                restrictedRuleIdsTooltipLabel: this.restrictedRuleIdsTooltipLabel,\n            };\n        },\n\n        tooltipConfig(rule) {\n            if (this.restrictedRuleIds.includes(rule.id)) {\n                return {\n                    message: this.restrictedRuleIdsTooltipLabel,\n                    disabled: false,\n                };\n            }\n\n            return this.ruleConditionDataProviderService.getRestrictedRuleTooltipConfig(\n                rule.conditions,\n                this.ruleAwareGroupKey,\n            );\n        },\n    },\n});\n"],"names":["template","Component","Criteria","criteria","collection","item","ruleId","rule","event"],"mappings":"AAAA,MAAeA,EAAA,+mHCGT,CAAE,UAAAC,CAAW,EAAG,OAChB,CAAE,SAAAC,CAAQ,EAAK,OAAO,KAgB5BD,EAAU,SAAS,wBAAyB,CACxC,SAAAD,EACA,aAAc,GAEd,aAAc,OAAO,aAErB,OAAQ,CACJ,oBACA,UACA,kCACH,EAED,MAAO,CACH,YACA,cACH,EAED,MAAO,CACH,OAAQ,CACJ,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EAED,MAAO,CACH,KAAM,MACN,SAAU,GACV,QAAS,IACZ,EAED,WAAY,CACR,KAAM,OACN,SAAU,GACV,SAAU,CACN,MAAMG,EAAW,IAAID,EAAS,EAAG,EAAE,EACnC,OAAAC,EAAS,WAAWD,EAAS,KAAK,OAAQ,MAAO,EAAK,CAAC,EAAE,eAAe,YAAY,EAE7EC,CACV,CACJ,EAED,kBAAmB,CACf,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EAMD,kBAAmB,CACf,KAAM,MACN,SAAU,GACV,SAAU,CACN,MAAO,EACV,CACJ,EAKD,8BAA+B,CAC3B,KAAM,OACN,SAAU,GACV,SAAU,CACN,MAAO,EACV,CACJ,CACJ,EAED,MAAO,CACH,MAAO,CACH,eAAgB,CACZ,MAAO,GACP,GAAI,EACP,EACD,cAAe,EAC3B,CACK,EAED,SAAU,CACN,WAAY,CACR,KAAM,CACF,OAAO,KAAK,KACf,EACD,IAAIC,EAAY,CACZA,EAAW,QAASC,GAAS,CACpB,KAAK,MAAM,IAAIA,EAAK,EAAE,GACvB,KAAK,MAAM,IAAIA,CAAI,CAE3C,CAAiB,EACD,KAAK,MAAM,QAASA,GAAS,CACpBD,EAAW,IAAIC,EAAK,EAAE,GACvB,KAAK,MAAM,OAAOA,EAAK,EAAE,CAEjD,CAAiB,CACJ,CACJ,CACJ,EAED,QAAS,CACL,WAAWC,EAAQC,EAAM,CACjB,KAAK,OACL,KAAK,MAAM,IAAIA,CAAI,EAGvB,KAAK,MAAM,YAAaD,EAAQC,CAAI,CACvC,EAED,aAAaC,EAAO,CACZA,IAAU,KAAK,QACf,KAAK,WAAWA,CAAK,CAE5B,EAED,qBAAsB,CAClB,KAAK,cAAgB,EACxB,EAED,kBAAmB,CACf,KAAK,cAAgB,EACxB,EAED,kBAAkBA,EAAO,CAChBA,GACD,KAAK,MAAM,cAAc,CAEhC,EAED,iBAAiBD,EAAM,CACnB,OACI,KAAK,kBAAkB,SAASA,EAAK,EAAE,GACvC,KAAK,iCAAiC,iBAAiBA,EAAK,WAAY,KAAK,iBAAiB,CAErG,EAED,gCAAiC,CAC7B,MAAO,CACH,kBAAmB,KAAK,kBACxB,kBAAmB,KAAK,kBACxB,8BAA+B,KAAK,6BACpD,CACS,EAED,cAAcA,EAAM,CAChB,OAAI,KAAK,kBAAkB,SAASA,EAAK,EAAE,EAChC,CACH,QAAS,KAAK,8BACd,SAAU,EAC9B,EAGmB,KAAK,iCAAiC,+BACzCA,EAAK,WACL,KAAK,iBACrB,CACS,CACJ,CACL,CAAC"}