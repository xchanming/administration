{"version":3,"file":"index-DbpEk3OA.js","sources":["../../../app/administration/src/app/component/structure/sw-sales-channel-config/sw-sales-channel-config.html.twig","../../../app/administration/src/app/component/structure/sw-sales-channel-config/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_sales_channel_config %}\n<div\n    class=\"sw-sales-channel-config\"\n    @salesChannelChanged=\"save\"\n>\n    <div class=\"sw-sales-channel-config__global-sales-channel-switch\">\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_sales_channel_config_switch %}\n        <slot\n            name=\"select\"\n            v-bind=\"{ onInput, selectedSalesChannelId, salesChannel }\"\n        >\n            <sw-single-select\n                v-model:value=\"selectedSalesChannelId\"\n                :options=\"salesChannel\"\n                label-property=\"translated.name\"\n                value-property=\"id\"\n                show-clearable-button\n                @update:value=\"onInput\"\n            />\n        </slot>\n        {% endblock %}\n    </div>\n\n    <slot\n        name=\"content\"\n        v-bind=\"{ actualConfigData, allConfigs, selectedSalesChannelId }\"\n    ></slot>\n</div>\n{% endblock %}\n","/**\n * @package buyers-experience\n */\nimport template from './sw-sales-channel-config.html.twig';\n\nconst { Component } = Cicada;\nconst { Criteria } = Cicada.Data;\n\n/**\n * @private\n */\nComponent.register('sw-sales-channel-config', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'systemConfigApiService',\n        'repositoryFactory',\n        'feature',\n    ],\n\n    emits: [\n        'update:value',\n        'salesChannelChanged',\n    ],\n\n    props: {\n        domain: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        // eslint-disable-next-line vue/require-default-prop\n        value: {\n            type: Object,\n            required: false,\n        },\n        criteria: {\n            type: Object,\n            required: false,\n            default: () => {\n                return new Criteria(1, 25);\n            },\n        },\n    },\n\n    data() {\n        return {\n            allConfigs: {},\n            selectedSalesChannelId: null,\n            salesChannel: [],\n        };\n    },\n\n    computed: {\n        actualConfigData: {\n            get() {\n                return this.allConfigs[this.selectedSalesChannelId];\n            },\n            set(config) {\n                this.allConfigs = {\n                    ...this.allConfigs,\n                    [this.selectedSalesChannelId]: config,\n                };\n            },\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n    },\n\n    watch: {\n        actualConfigData: {\n            handler(configData) {\n                if (!configData) {\n                    return;\n                }\n\n                this.$emit('update:value', configData);\n            },\n            deep: true,\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (!this.salesChannel.length) {\n                this.salesChannelRepository.search(this.criteria, Cicada.Context.api).then((res) => {\n                    res.add({\n                        id: null,\n                        translated: {\n                            name: this.$tc('sw-sales-channel-switch.labelDefaultOption'),\n                        },\n                    });\n\n                    this.salesChannel = res;\n                });\n            }\n\n            if (this.allConfigs[this.selectedSalesChannelId]) {\n                return;\n            }\n\n            if (this.domain && !this.actualConfigData) {\n                this.readAll().then((values) => {\n                    this.actualConfigData = values;\n                });\n            }\n        },\n\n        readAll() {\n            return this.systemConfigApiService.getValues(this.domain, this.selectedSalesChannelId);\n        },\n\n        onInput(salesChannelId) {\n            this.selectedSalesChannelId = salesChannelId;\n            this.$emit('salesChannelChanged');\n            this.createdComponent();\n        },\n\n        save() {\n            if (this.domain && this.domain.length !== 0) {\n                return this.systemConfigApiService.batchSave(this.allConfigs);\n            }\n\n            return Promise.resolve(this.allConfigs);\n        },\n    },\n});\n"],"names":["template","Component","Criteria","config","configData","res","values","salesChannelId"],"mappings":"AAAA,MAAeA,EAAA,mnBCKT,CAAE,UAAAC,CAAW,EAAG,OAChB,CAAE,SAAAC,CAAQ,EAAK,OAAO,KAK5BD,EAAU,SAAS,0BAA2B,CAC1C,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,yBACA,oBACA,SACH,EAED,MAAO,CACH,eACA,qBACH,EAED,MAAO,CACH,OAAQ,CACJ,KAAM,OACN,SAAU,GACV,QAAS,EACZ,EAED,MAAO,CACH,KAAM,OACN,SAAU,EACb,EACD,SAAU,CACN,KAAM,OACN,SAAU,GACV,QAAS,IACE,IAAIE,EAAS,EAAG,EAAE,CAEhC,CACJ,EAED,MAAO,CACH,MAAO,CACH,WAAY,CAAE,EACd,uBAAwB,KACxB,aAAc,CAAE,CAC5B,CACK,EAED,SAAU,CACN,iBAAkB,CACd,KAAM,CACF,OAAO,KAAK,WAAW,KAAK,sBAAsB,CACrD,EACD,IAAIC,EAAQ,CACR,KAAK,WAAa,CACd,GAAG,KAAK,WACR,CAAC,KAAK,sBAAsB,EAAGA,CACnD,CACa,CACJ,EAED,wBAAyB,CACrB,OAAO,KAAK,kBAAkB,OAAO,eAAe,CACvD,CACJ,EAED,MAAO,CACH,iBAAkB,CACd,QAAQC,EAAY,CACXA,GAIL,KAAK,MAAM,eAAgBA,CAAU,CACxC,EACD,KAAM,EACT,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACV,KAAK,aAAa,QACnB,KAAK,uBAAuB,OAAO,KAAK,SAAU,OAAO,QAAQ,GAAG,EAAE,KAAMC,GAAQ,CAChFA,EAAI,IAAI,CACJ,GAAI,KACJ,WAAY,CACR,KAAM,KAAK,IAAI,4CAA4C,CAC9D,CACzB,CAAqB,EAED,KAAK,aAAeA,CACxC,CAAiB,EAGD,MAAK,WAAW,KAAK,sBAAsB,GAI3C,KAAK,QAAU,CAAC,KAAK,kBACrB,KAAK,QAAO,EAAG,KAAMC,GAAW,CAC5B,KAAK,iBAAmBA,CAC5C,CAAiB,CAER,EAED,SAAU,CACN,OAAO,KAAK,uBAAuB,UAAU,KAAK,OAAQ,KAAK,sBAAsB,CACxF,EAED,QAAQC,EAAgB,CACpB,KAAK,uBAAyBA,EAC9B,KAAK,MAAM,qBAAqB,EAChC,KAAK,iBAAgB,CACxB,EAED,MAAO,CACH,OAAI,KAAK,QAAU,KAAK,OAAO,SAAW,EAC/B,KAAK,uBAAuB,UAAU,KAAK,UAAU,EAGzD,QAAQ,QAAQ,KAAK,UAAU,CACzC,CACJ,CACL,CAAC"}