const y=`{% block sw_admin_menu_item %} <li v-if="showMenuItem" class="sw-admin-menu__navigation-list-item" :class="getElementClasses(entry.id || entryPath)" :style="{ 'border-color': borderColor }" :aria-current="subIsActive(entryPath, entry.id) ? 'page' : 'false'" @click.prevent="$emit('menu-item-click', entry, $event.target)" @keydown.enter="$emit('menu-item-click', entry, $event.target)" @keydown.space="$emit('menu-item-click', entry, $event.target)" @mouseenter="$emit('menu-item-enter', entry, $event, parentEntries)" > {% block sw_admin_menu_item_router_link %} <router-link v-if="entryPath" class="sw-admin-menu__navigation-link" :class="{'router-link-active': subIsActive(entryPath, entry.id)}" :to="getLinkToProp" > {% block sw_admin_menu_item_icon %} <sw-icon v-if="displayIcon" :size="iconSize" class="sw-admin-menu__navigation-link-icon" :name="getIconName(entry.icon)" :style="{ 'color': entry.color }" /> {% endblock %} {% block sw_admin_menu_item_text %} <span class="sw-admin-menu__navigation-link-label" :class="collapsibleText ? 'collapsible-text' : ''" :title="getEntryLabel" > {{ getEntryLabel }} </span> {% endblock %} {% block sw_admin_menu_item_arrow_indicato %} <sw-icon v-if="entry.level > 1 && children.length" name="regular-chevron-right" size="8" class="sw-admin-menu__navigation-link-icon-arrow" /> {% endblock %} <slot name="additional-text"></slot> </router-link> {% endblock %} {% block sw_admin_menu_item_external_link %} <a v-else-if="entry.link" :href="entry.link" :target="entry.target" :title="$tc(entry.label)" class="sw-admin-menu__navigation-link" > {% block sw_admin_menu_item_external_icon %} <sw-icon v-if="displayIcon" :size="iconSize" class="sw-admin-menu__navigation-link-icon" :name="getIconName(entry.icon)" :style="{ 'color': entry.color }" /> {% endblock %} {% block sw_admin_menu_item_external_text %} <span class="sw-admin-menu__navigation-link-label" :class="collapsibleText ? 'collapsible-text' : ''" :title="getEntryLabel" > {{ getEntryLabel }} </span> {% endblock %} {% block sw_admin_menu_item_external_arrow_indicato %} <sw-icon v-if="entry.level > 1 && children.length" name="regular-chevron-right" size="8" class="sw-admin-menu__navigation-link-icon-arrow" /> {% endblock %} <slot name="additional-text"></slot> </a> {% endblock %} {% block sw_admin_menu_item_navigation_link %} <span v-else class="sw-admin-menu__navigation-link" :class="{ 'router-link-active': subIsActive(entry.id) }" > {% block sw_admin_menu_item_navigation_icon %} <sw-icon v-if="displayIcon" :size="iconSize" class="sw-admin-menu__navigation-link-icon" :name="getIconName(entry.icon)" :style="{ 'color': entry.color }" /> {% endblock %} {% block sw_admin_menu_item_navigation_text %} <span class="sw-admin-menu__navigation-link-label" :class="collapsibleText ? 'collapsible-text' : ''" :title="getEntryLabel" > {{ getEntryLabel }} </span> {% endblock %} <slot name="additional-text"></slot> {% block sw_admin_menu_item_arrow_indicator %} <sw-icon v-if="entry.level > 1 && children.length" name="regular-chevron-right" size="8" class="sw-admin-menu__navigation-link-icon-arrow" /> {% endblock %} </span> {% endblock %} {% block sw_sidebar_sub_items_list %} <ul v-if="children.length > 0" class="sw-admin-menu__sub-navigation-list" > <template v-for="entry in children" :key="getCustomKey(entry.id || entryPath + '-separator')" > <li v-if="isFirstPluginInMenuEntries(entry, children)" :style="{ 'border-color': borderColor }" class="sw-admin-menu__separator" tabindex="0" > <span class="sw-admin-menu__separator-line"></span> </li> <sw-admin-menu-item :entry="entry" :border-color="borderColor" :display-icon="false" @menu-item-enter="onSubMenuItemEnter" /> </template> </ul> {% endblock %} </li> {% endblock %}`,{Component:g}=Shopware,{createId:b,types:v}=Shopware.Utils;g.register("sw-admin-menu-item",{template:y,inject:["acl","feature"],emits:["menu-item-click","menu-item-enter","sub-menu-item-enter"],props:{entry:{type:Object,required:!0},parentEntries:{type:Array,required:!1,default:()=>[]},displayIcon:{type:Boolean,default:!0,required:!1},iconSize:{type:String,default:"20px",required:!1},collapsibleText:{type:Boolean,default:!0,required:!1},sidebarExpanded:{type:Boolean,default:!0,required:!1},borderColor:{type:String,default:"#333",required:!1}},computed:{getLinkToProp(){return this.entry.params?{name:this.entry.path,params:this.entry.params}:{name:this.entry.path}},getEntryLabel(){return this.entry.label instanceof Object?this.entry.label.translated?this.entry.label.label:this.$tc(this.entry.label.label):this.$tc(this.entry.label)},showMenuItem(){if(this.entry.path==="sw.settings.index")return this.acl.hasActiveSettingModules();if(this.children.length>0)return!0;if(this.getLinkToProp&&this.getLinkToProp.name){const{name:e}=this.getLinkToProp;return this.hasAccessToRoute(e)}return!1},entryPath(){if(this.entry.path&&this.hasAccessToRoute(this.entry.path))return this.entry.path},children(){return this.entry.children.filter(e=>e.privilege?this.acl.can(e.privilege):!0)}},methods:{hasAccessToRoute(e){let n="",t=!1;return n=`/${e.replace(/[\.\-]/g,"/")}`,t=this.$router.resolve({path:n}),t.meta?this.acl.can(t.meta.privilege):!0},getIconName(e){return`${e}`},getItemName(e){return e.replace(/\./g,"-")},subIsActive(e,n){var c,m,u,d,_;if((c=this.$route.name)!=null&&c.startsWith("sw.sales.channel.")&&n)return((m=this.$route.params)==null?void 0:m.id)===n;const t=this.$route.meta,r=Shopware.Store.get("adminMenu").adminModuleNavigation;let i;function o(l,s=[]){var h;const a=r.find(p=>p.path===l||p.id===l);return s.push(a.path||a.id),(h=a.parent)!=null&&h.length?o(a.parent,s):s}return t.$current?o(t.$current.path).includes(e):(t.parentPath&&(i=t.parentPath),(d=(u=t.$module)==null?void 0:u.navigation)!=null&&d[0].parent&&(i=t.$module.navigation[0].parent),i||(i=(_=this.$route)==null?void 0:_.name),this.entry.path?i?i.replace(/-/g,".").indexOf(e.replace(/\.index/g,""))===0:!1:this.entry.id===i)},getElementClasses(e){const n=e.replace(/\./g,"-"),t=this.entry.children.length>0;return[(this.entry.id||this.entry.path).replace(/\./g,"-"),`navigation-list-item__type-${this.entry.moduleType}`,`navigation-list-item__${n}`,`sw-admin-menu__item--${this.entry.id}`,`navigation-list-item__level-${this.entry.level}`,{"navigation-list-item__has-children":t}]},onSubMenuItemEnter(e,n,t){this.$emit("sub-menu-item-enter",e,n,t)},isFirstPluginInMenuEntries(e,n){const t=n.find(r=>r.moduleType==="plugin");return t?v.isEqual(e,t):!1},getCustomKey(e){return`${e}-${b()}`}}});
