{"version":3,"file":"index-D0WyIUJw.js","sources":["../../../app/administration/src/app/component/utils/sw-text-preview/sw-text-preview.html.twig","../../../app/administration/src/app/component/utils/sw-text-preview/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_text_preview %}\n<div class=\"sw-text-preview\">\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_text_preview_shortened_content %}\n    <span v-html=\"shortenedText\"></span>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_text_preview_expand_button %}\n    <sw-button\n        v-if=\"shortened\"\n        class=\"sw-text-preview__expand-button\"\n        variant=\"ghost\"\n        size=\"x-small\"\n        @click.prevent=\"openModal\"\n    >\n        {{ $tc('global.sw-text-preview.showMoreButton') }}\n    </sw-button>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_text_preview_modal %}\n    <sw-modal\n        v-if=\"showModal\"\n        :title=\"modalTitle\"\n        @modal-close=\"closeModal\"\n    >\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_text_preview_modal_content %}\n        <div v-html=\"fullText\"></div>\n        {% endblock %}\n\n        <template #modal-footer>\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_text_preview_modal_footer %}\n            <sw-button\n                size=\"small\"\n                @click=\"closeModal\"\n            >\n                {{ $tc('global.sw-modal.labelClose') }}\n            </sw-button>\n            {% endblock %}\n        </template>\n    </sw-modal>\n    {% endblock %}\n</div>\n{% endblock %}\n","import './sw-text-preview.scss';\nimport template from './sw-text-preview.html.twig';\n\nconst { Component } = Cicada;\n\n/**\n * @private\n * @description Displays text (no html) up to a defined length and shows a \"Show more\" button that opens a modal.\n *              New lines are converted into line-breaks (br) and empty lines are removed in preview.\n * @status ready\n * @example-type dynamic\n * @component-example\n * <sw-text-preview :text=\"comment\" modal-title=\"Comment\" :maximum-length=\"750\" :maximum-new-lines=\"5\"></sw-text-preview>\n */\nconst lineExpr = /(?:\\r\\n|\\r|\\n)/g;\nconst lineBreak = '<br />';\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nComponent.register('sw-text-preview', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    props: {\n        text: {\n            type: String,\n            required: true,\n        },\n        maximumLength: {\n            type: Number,\n            required: true,\n        },\n        modalTitle: {\n            type: String,\n            required: false,\n            default: '',\n        },\n        maximumNewLines: {\n            type: Number,\n            required: false,\n            default: 0,\n        },\n    },\n\n    data() {\n        return {\n            shortened: false,\n            showModal: false,\n        };\n    },\n\n    computed: {\n        shortenedText() {\n            let text = this.text;\n            // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n            this.shortened = false;\n            if (this.maximumNewLines > 0) {\n                const splitted = text.split(lineExpr).filter((element) => {\n                    return !!element.trim();\n                });\n                if (splitted.length > this.maximumNewLines) {\n                    text = splitted.slice(0, this.maximumNewLines).join('\\n');\n                    // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n                    this.shortened = true;\n                }\n            }\n            if (text.length > this.maximumLength) {\n                // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n                this.shortened = true;\n            }\n            return text.slice(0, this.maximumLength).replace(lineExpr, lineBreak);\n        },\n        fullText() {\n            return this.text.replace(lineExpr, lineBreak);\n        },\n    },\n\n    methods: {\n        closeModal() {\n            this.showModal = false;\n        },\n\n        openModal() {\n            this.showModal = true;\n        },\n    },\n});\n"],"names":["template","Component","lineExpr","lineBreak","text","splitted","element"],"mappings":"AAAA,MAAeA,EAAA,20BCGT,CAAE,UAAAC,CAAW,EAAG,OAWhBC,EAAW,kBACXC,EAAY,SAGlBF,EAAU,SAAS,kBAAmB,CAClC,SAAAD,EAEA,aAAc,OAAO,aAErB,MAAO,CACH,KAAM,CACF,KAAM,OACN,SAAU,EACb,EACD,cAAe,CACX,KAAM,OACN,SAAU,EACb,EACD,WAAY,CACR,KAAM,OACN,SAAU,GACV,QAAS,EACZ,EACD,gBAAiB,CACb,KAAM,OACN,SAAU,GACV,QAAS,CACZ,CACJ,EAED,MAAO,CACH,MAAO,CACH,UAAW,GACX,UAAW,EACvB,CACK,EAED,SAAU,CACN,eAAgB,CACZ,IAAII,EAAO,KAAK,KAGhB,GADA,KAAK,UAAY,GACb,KAAK,gBAAkB,EAAG,CAC1B,MAAMC,EAAWD,EAAK,MAAMF,CAAQ,EAAE,OAAQI,GACnC,CAAC,CAACA,EAAQ,MACpB,EACGD,EAAS,OAAS,KAAK,kBACvBD,EAAOC,EAAS,MAAM,EAAG,KAAK,eAAe,EAAE,KAAK;AAAA,CAAI,EAExD,KAAK,UAAY,GAExB,CACD,OAAID,EAAK,OAAS,KAAK,gBAEnB,KAAK,UAAY,IAEdA,EAAK,MAAM,EAAG,KAAK,aAAa,EAAE,QAAQF,EAAUC,CAAS,CACvE,EACD,UAAW,CACP,OAAO,KAAK,KAAK,QAAQD,EAAUC,CAAS,CAC/C,CACJ,EAED,QAAS,CACL,YAAa,CACT,KAAK,UAAY,EACpB,EAED,WAAY,CACR,KAAK,UAAY,EACpB,CACJ,CACL,CAAC"}