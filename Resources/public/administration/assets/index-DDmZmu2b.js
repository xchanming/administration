const s=`{% block sw_media_upload_v2 %} <div class="sw-media-upload-v2 sw-product-variants-media-upload" :class="{ 'is--disabled': disabled }" > {% block sw_product_variants_media_upload_content %} <div class="sw-media-upload-v2__content"> {% block sw_product_variants_media_upload_drop_zone %} <div ref="dropzone" class="sw-media-upload-v2__dropzone" > <div class="sw-product-variants-media-upload__preview-images"> {% block sw_product_variants_media_upload_cover_preview %} <div v-if="product.cover || cover" class="sw-product-variants-media-upload__preview-cover" > {% block sw_product_variants_media_upload_cover_image %} <sw-media-preview-v2 class="sw-product-variants-media-upload__cover-image" :source="coverImageSource" /> {% endblock %} </div> <div v-else-if="source.media.length > 0" class="sw-product-variants-media-upload__preview-cover" > {% block sw_product_variants_media_upload_cover_image_empty %} <sw-media-preview-v2 class="sw-product-variants-media-upload__cover-image" :source="null" /> {% endblock %} </div> {% endblock %} {% block sw_product_variants_media_upload_preview %} <div class="sw-product-variants-media-upload__images" :class="{ 'is--compact--button': mediaSource.length > 2 }" > <div v-for="(item, index) in mediaSource" :key="index" class="sw-product-variants-media-upload__image" > {% block ssw_product_variants_media_upload_content_preview_file %} <sw-media-preview-v2 :key="item.id" class="sw-media-upload-v2__preview" :class="{ 'is--cover': isCover(item), 'is--disabled': disabled }" :source="item.media && item.productId ? item.media : item.mediaId" /> {% endblock %} {% block sw_product_variants_media_upload_action_buttons %} <sw-context-button class="sw-product-variants-media-upload__context-button" :disabled="disabled" > {% block sw_product_variants_media_upload_context %} {% block sw_product_variants_media_upload_context_cover_action %} <sw-context-menu-item v-if="!isCover(item)" @click="markMediaAsCover(item)" > {{ $tc('global.sw-product-image.context.buttonAsCover') }} </sw-context-menu-item> {% endblock %} {% block sw_product_variants_media_upload_context_preview_action %} <sw-context-menu-item @click="previewMedia(item)"> {{ $tc('global.sw-product-image.context.buttonPreviewImage') }} </sw-context-menu-item> {% endblock %} {% block sw_product_variants_media_upload_context_delete_action %} <sw-context-menu-item variant="danger" @click="removeMedia(item)" > {{ $tc('global.sw-product-image.context.buttonRemove') }} </sw-context-menu-item> {% endblock %} {% endblock %} </sw-context-button> {% endblock %} </div> </div> {% endblock %} </div> {% block sw_product_variants_media_upload_actions %} <div class="sw-media-upload-v2__actions"> {% block sw_product_variants_media_upload_actions_regular %} <div v-if="mediaSource.length <= 2" class="sw-product-variants-media-upload__regular-button" > {% block sw_product_variants_media_upload_actions_regular_upload_button %} <sw-button class="sw-media-upload-v2__button upload" :disabled="disabled" variant="ghost" size="small" @click="onClickUpload" > {{ $tc('global.sw-media-upload-v2.buttonFilesUpload') }} </sw-button> {% endblock %} {% block sw_product_variants_media_upload_actions_regular_open_button %} <sw-button variant="primary" :disabled="disabled" class="sw-product-variants-media-upload__browse-button" @click="showMediaModal = true" > <sw-icon class="sw-product-variants-media-upload__browse-icon" name="regular-image" /> </sw-button> {% endblock %} </div> {% endblock %} {% block sw_product_variants_media_upload_actions_compact %} <div v-else class="sw-product-variants-media-upload__compact-button" > <sw-button variant="primary" :disabled="disabled" class="sw-product-variants-media-upload__browse-button" > <sw-icon class="sw-product-variants-media-upload__browse-icon" name="regular-plus" /> </sw-button> <sw-context-button class="sw-product-variants-media-upload__context-button" :disabled="disabled" > {% block sw_product_variants_media_upload_actions_compact_button_context %} {% block sw_product_variants_media_upload_actions_compact_button_context_upload_action %} <sw-context-menu-item @click="onClickUpload"> {{ $tc('global.sw-media-upload-v2.buttonFilesUpload') }} </sw-context-menu-item> {% endblock %} {% block sw_product_variants_media_upload_actions_compact_button_context_open_action %} <sw-context-menu-item @click="showMediaModal = true"> {{ $tc('global.sw-media-upload-v2.buttonOpenMedia') }} </sw-context-menu-item> {% endblock %} {% endblock %} </sw-context-button> </div> {% endblock %} </div> {% endblock %} </div> {% endblock %} </div> {% endblock %} {% block sw_product_variants_media_upload_file_input %} <form ref="fileForm" class="sw-media-upload-v2__form" > <input :key="source.id" ref="fileInput" class="sw-media-upload-v2__file-input" type="file" :accept="fileAccept" :multiple="multiSelect" @change="onFileInputChange" > </form> {% endblock %} {% block sw_product_variants_media_upload_actions_media_modal %} <sw-media-modal-v2 v-if="showMediaModal" :initial-folder-id="mediaDefaultFolderId" :entity-context="product.getEntityName()" @modal-close="showMediaModal = false" @media-modal-selection-change="onAddMedia" /> {% endblock %} {% block sw_product_variants_media_upload_listener %} <sw-upload-listener auto-upload :upload-tag="uploadTag" @media-upload-finish="onUploadMediaSuccessful" @media-upload-fail="onUploadMediaFailed" /> {% endblock %} {% block sw_product_variants_media_upload_preview_modal %} <sw-image-preview-modal v-if="showPreviewModal" :active-item-id="activeItemId" :media-items="mediaSource" @modal-close="onClosePreviewModal" /> {% endblock %} </div> {% endblock %}`,{Mixin:c,Context:d}=Cicada,{isEmpty:o}=Cicada.Utils.types,r={template:s,compatConfig:Cicada.compatConfig,inject:["repositoryFactory","mediaDefaultFolderService"],mixins:[c.getByName("notification")],props:{source:{type:Object,required:!0},parentProduct:{type:Object,required:!0},isInherited:{type:Boolean,required:!1,default:!1}},data(){return{showMediaModal:!1,mediaDefaultFolderId:null,showPreviewModal:!1,activeItemId:null}},computed:{productMediaRepository(){return this.repositoryFactory.create(this.source.media.entity)},product(){return this.isInherited?this.parentProduct:this.source},mediaSource(){return this.product?[...this.product.media].sort((i,t)=>i.position-t.position):[]},cover(){return this.product?this.product.media.find(e=>e.id===this.product.coverId):null},coverImageSource(){var e,i,t,a;return this.cover?this.cover.media??this.cover.mediaId:((i=(e=this.product)==null?void 0:e.cover)==null?void 0:i.mediaId)??((a=(t=this.product)==null?void 0:t.cover)==null?void 0:a.media)}},created(){this.createdComponent()},methods:{createdComponent(){this.getMediaDefaultFolderId().then(e=>{this.mediaDefaultFolderId=e,this.defaultFolderId=e,this.updateMediaItemPositions()}).catch(()=>{this.mediaDefaultFolderId=null,this.defaultFolderId=null})},getMediaDefaultFolderId(){return this.mediaDefaultFolderService.getDefaultFolderId("product")},isCover(e){const i=this.product.cover?this.product.cover.id:this.product.coverId;return this.product.media.length===0?!1:e.id===i},markMediaAsCover(e){this.product.cover=e,this.product.coverId=e.id},removeMedia(e){this.product.coverId===e.id&&(this.product.cover=null,this.product.coverId=null),this.product.coverId===null&&this.product.media.length>0&&(this.product.coverId=this.product.media.first().id),this.product.media.remove(e.id)},onAddMedia(e){o(e)||(e.forEach(i=>{this.addMedia(i).catch(({fileName:t})=>{this.createNotificationError({message:this.$tc("sw-product.mediaForm.errorMediaItemDuplicated",0,{fileName:t})})})}),this.updateMediaItemPositions())},addMedia(e){if(this.isExistingMedia(e))return Promise.reject(e);const i=this.productMediaRepository.create(d.api);return i.mediaId=e.id,i.media={url:e.url,id:e.id},o(this.source.media)&&(this.source.cover=i,this.source.coverId=i.id),this.source.media.add(i),Promise.resolve()},isExistingMedia(e){return this.source.media.some(({id:i,mediaId:t})=>i===e.id||t===e.id)},onUploadMediaSuccessful({targetId:e}){if(this.isReplacedMedia(e))return;const i=this.productMediaRepository.create(d.api);i.productId=this.source.id,i.mediaId=e,o(this.source.media)?(i.position=0,this.source.coverId=i.id):i.position=this.source.media.length,this.source.media.add(i),this.updateMediaItemPositions()},isReplacedMedia(e){return this.source.media.find(i=>i.mediaId===e)},onUploadMediaFailed({targetId:e}){const i=this.source.media.find(t=>t.mediaId===e);i&&(this.source.coverId===i.id&&(this.source.coverId=null),this.source.media.remove(i.id)),this.source.isLoading=!1},previewMedia(e){this.activeItemId=e.id,this.showPreviewModal=!0},onClosePreviewModal(){this.activeItemId=null,this.showPreviewModal=!1},updateMediaItemPositions(){this.source.media.forEach((e,i)=>{e.position=i})}}};export{r as default};
//# sourceMappingURL=index-DDmZmu2b.js.map
