{"version":3,"file":"index-cXshFr5G.js","sources":["../../../app/administration/src/app/component/utils/sw-popover/sw-popover.html.twig","../../../app/administration/src/app/component/utils/sw-popover/index.ts"],"sourcesContent":["{# v-on=\"$listeners\" needed becaues vue/compat removes them from $attrs #}\n{# New mt-popover component #}\n<mt-floating-ui\n    v-if=\"useMeteorComponent\"\n    v-bind=\"$attrs\"\n    :is-opened=\"isOpened\"\n    v-on=\"listeners\"\n>\n    <template\n        v-for=\"(index, name) in getSlots()\"\n        #[name]=\"data\"\n    >\n        <slot\n            :name=\"name\"\n            v-bind=\"data\"\n        >\n        </slot>\n    </template>\n    <slot></slot>\n</mt-floating-ui>\n\n{# v-on=\"$listeners\" needed becaues vue/compat removes them from $attrs #}\n{# Deprecated component #}\n<sw-popover-deprecated\n    v-else\n    v-bind=\"$attrs\"\n    v-on=\"listeners\"\n>\n    <slot></slot>\n</sw-popover-deprecated>\n","import template from './sw-popover.html.twig';\n\nconst { Component } = Cicada;\n\n/**\n * @package admin\n *\n * @private\n * @status ready\n * @description Wrapper component for sw-popover and mt-floating-ui. Autoswitches between the two components.\n */\nComponent.register('sw-popover', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    props: {\n        isOpened: {\n            type: Boolean,\n            required: false,\n            default: true,\n        },\n    },\n\n    computed: {\n        useMeteorComponent() {\n            // Use new meteor component in major\n            if (Cicada.Feature.isActive('v6.7.0.0')) {\n                return true;\n            }\n\n            // Throw warning when deprecated component is used\n            Cicada.Utils.debug.warn(\n                'sw-popover',\n                // eslint-disable-next-line max-len\n                'The old usage of \"sw-popover\" is deprecated and will be removed in v6.7.0.0. Please use \"mt-floating-ui\" instead.',\n            );\n\n            return false;\n        },\n\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        listeners(): Record<string, Function | Function[]> {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_LISTENERS')) {\n                return this.$listeners;\n            }\n\n            return {};\n        },\n    },\n\n    methods: {\n        getSlots() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            if (this.isCompatEnabled('INSTANCE_SCOPED_SLOTS')) {\n                return {\n                    ...this.$slots,\n                    ...this.$scopedSlots,\n                };\n            }\n\n            return this.$slots;\n        },\n    },\n});\n"],"names":["template","Component"],"mappings":"AAAA,MAAeA,EAAA,mjBCET,CAAE,UAAAC,CAAc,EAAA,OAStBA,EAAU,SAAS,aAAc,CAC7B,SAAAD,EAEA,aAAc,OAAO,aAErB,MAAO,CACH,SAAU,CACN,KAAM,QACN,SAAU,GACV,QAAS,EACb,CACJ,EAEA,SAAU,CACN,oBAAqB,CAEjB,OAAI,OAAO,QAAQ,SAAS,UAAU,EAC3B,IAIX,OAAO,MAAM,MAAM,KACf,aAEA,mHAAA,EAGG,GACX,EAGA,WAAmD,CAE3C,OAAA,KAAK,gBAAgB,oBAAoB,EAClC,KAAK,WAGT,EACX,CACJ,EAEA,QAAS,CACL,UAAW,CAEH,OAAA,KAAK,gBAAgB,uBAAuB,EACrC,CACH,GAAG,KAAK,OACR,GAAG,KAAK,YAAA,EAIT,KAAK,MAChB,CACJ,CACJ,CAAC"}