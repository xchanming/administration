const d=`{% block sw_media_modal_delete %} <sw-modal variant="small" class="sw-media-modal-delete" :title="snippets.modalTitle" @modal-close="closeDeleteModal($event)" > {% block sw_media_modal_body %} <div v-if="mediaQuickInfo"> <p>{{ $tc('global.sw-media-modal-delete.mediaQuickInfoMessage') }}</p> <sw-media-quickinfo-usage :item="mediaQuickInfo" router-link-target="_blank" /> </div> <div v-if="mediaInUsages && mediaInUsages.length > 0"> <p>{{ $tc('global.sw-media-modal-delete.mediaInUsagesMessage') }}</p> <sw-media-media-item v-for="mediaInUsage in mediaInUsages" :key="\`sw-media-modal-delete-\${mediaInUsage.id}\`" class="sw-media-modal-delete__media-list-item" :item="mediaInUsage" :is-list="true" :editable="false" :selected="false" :show-selection-indicator="false" :show-context-menu-button="false" /> </div> <p v-html="$sanitize(snippets.deleteMessage)"></p> {% endblock %} {% block sw_media_modal_footer %} <template #modal-footer> {% block sw_media_modal_delete_cancel_button %} <sw-button size="small" @click="closeDeleteModal($event)" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block sw_media_modal_delete_confirm_button %} <sw-button class="sw-media-modal-delete__confirm" size="small" variant="danger" @click="deleteSelection($event)" > {{ $tc('global.default.delete') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %}`,{Context:o,Mixin:n,Filter:r}=Cicada,m={template:d,compatConfig:Cicada.compatConfig,inject:["repositoryFactory"],emits:["media-delete-modal-close","media-delete-modal-items-delete"],mixins:[n.getByName("notification")],props:{itemsToDelete:{required:!0,type:Array,validator(e){return e.length!==0}}},data(){return{mediaItems:[],folders:[],notificationId:null}},computed:{mediaRepository(){return this.repositoryFactory.create("media")},mediaFolderRepository(){return this.repositoryFactory.create("media_folder")},mediaNameFilter(){return r.getByName("mediaName")},snippets(){return this.mediaItems.length>0&&this.folders.length>0?{successOverall:"global.sw-media-modal-delete.notification.successOverall.message.mediaAndFolder",errorOverall:this.$tc("global.sw-media-modal-delete.notification.errorOverall.message.mediaAndFolder"),modalTitle:this.$tc("global.default.warning"),deleteMessage:this.$tc("global.sw-media-modal-delete.deleteMessage.mediaAndFolder",this.itemsToDelete.length,{mediaCount:this.mediaItems.length,folderCount:this.folders.length})}:this.mediaItems.length>0?{successOverall:"global.sw-media-modal-delete.notification.successOverall.message.media",errorOverall:this.$tc("global.sw-media-modal-delete.notification.errorOverall.message.media"),modalTitle:this.$tc("global.default.warning"),deleteMessage:this.$tc("global.sw-media-modal-delete.deleteMessage.media",this.mediaItems.length,{name:this.mediaNameFilter(this.mediaItems[0]),count:this.mediaItems.length})}:{successOverall:"global.sw-media-modal-delete.notification.successOverall.message.folder",errorOverall:this.$tc("global.sw-media-modal-delete.notification.errorOverall.message.folder"),modalTitle:this.$tc("global.default.warning"),deleteMessage:this.$tc("global.sw-media-modal-delete.deleteMessage.folder",this.folders.length,{name:this.folders[0].name,count:this.folders.length})}},mediaQuickInfo(){return this.mediaItems.length===1&&this._checkInUsage(this.mediaItems[0])?this.mediaItems[0]:null},mediaInUsages(){return this.mediaItems.length<=1?[]:this.mediaItems.filter(e=>this._checkInUsage(e))}},created(){this.createdComponent()},methods:{createdComponent(){this.mediaItems=this.itemsToDelete.filter(e=>e.getEntityName()==="media"),this.folders=this.itemsToDelete.filter(e=>e.getEntityName()==="media_folder")},closeDeleteModal(e){this.$emit("media-delete-modal-close",{originalDomEvent:e})},getEntityRepository(e){return e==="media"?this.mediaRepository:e==="media_folder"?this.mediaFolderRepository:null},_deleteSelection(e){const a=e.getEntityName(),i=this.getEntityRepository(a);return e.isLoading=!0,i.delete(e.id,o.api).then(()=>!0).catch(()=>{const t=e.getEntityName()==="media",s="global.sw-media-modal-delete.notification.errorSingle.message",l=t?this.$tc(`${s}.media`,1,{name:this.mediaNameFilter(e)}):this.$tc(`${s}.folder`,1,{name:e.name});return this.createNotificationError({message:l}),!1}).finally(()=>{e.isLoading=!1})},async deleteSelection(){const e=this.itemsToDelete.map(t=>this._deleteSelection(t).catch(()=>!1)),a=await Promise.all(e),i=a.reduce((t,s)=>(t.success=s?t.success+=1:t.success,t.failure=s?t.failure:t.failure+=1,t),{success:0,failure:0});i.success>0&&this.updateSuccessNotification(i.success,i.failure,a.length),this.$emit("media-delete-modal-items-delete",{mediaIds:this.mediaItems.map(t=>t.id),folderIds:this.folders.map(t=>t.id)})},async updateSuccessNotification(e,a,i){const t={message:this.$tc(this.snippets.successOverall,e,{count:e,total:i}),growl:e+a===i};if(this.notificationId!==null){await Cicada.State.dispatch("notification/updateNotification",{uuid:this.notificationId,...t}),e+a===i&&(this.notificationId=null);return}const s=await Cicada.State.dispatch("notification/createNotification",{variant:"success",...t});e+a<i&&(this.notificationId=s)},_checkInUsage(e){var i;return(i=e.avatarUsers)!=null&&i[0]?!0:["categories","productMedia","productManufacturers","mailTemplateMedia","paymentMethods","shippingMethods","cmsBlocks","cmsSections","cmsPages"].some(t=>e[t].length>0)}}};export{m as default};
//# sourceMappingURL=index-BuBz5eyt.js.map
