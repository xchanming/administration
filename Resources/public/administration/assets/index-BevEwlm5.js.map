{"version":3,"file":"index-BevEwlm5.js","sources":["../../../app/administration/src/app/component/form/sw-snippet-field-edit-modal/sw-snippet-field-edit-modal.html.twig","../../../app/administration/src/app/component/form/sw-snippet-field-edit-modal/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_snippet_field_edit_modal %}\n<sw-modal\n    class=\"sw-snippet-field-edit-modal\"\n    :title=\"modalTitle\"\n    :is-loading=\"isLoading\"\n    @modal-close=\"closeModal\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_snippet_field_edit_modal_body %}\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_snippet_field_edit_modal_name_field %}\n    <sw-text-field\n        :value=\"translationKey\"\n        disabled\n        :label=\"$tc('global.sw-snippet-field-edit-modal.labelName')\"\n    />\n    {% endblock %}\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_snippet_field_edit_modal_snippet_fields %}\n    <template v-if=\"textField\">\n        <sw-text-field\n            v-for=\"(snippet, index) in editableSnippets\"\n            :key=\"snippet.setId\"\n            v-model:value=\"snippet.value\"\n            v-tooltip.bottom=\"getNoPermissionsTooltip('snippet.editor')\"\n            class=\"sw-snippet-field-edit-modal__translation-field\"\n            :class=\"`sw-snippet-field-edit-modal__translation-field--${index}`\"\n            :disabled=\"!acl.can('snippet.editor')\"\n            :label=\"$tc('sw-settings-snippet.detail.labelContent', 0, { name: snippetSets.get(snippet.setId).name })\"\n            :placeholder=\"snippet.origin || $tc('sw-settings-snippet.general.placeholderValue')\"\n        />\n    </template>\n\n    <template v-else-if=\"textArea\">\n        <sw-textarea-field\n            v-for=\"(snippet, index) in editableSnippets\"\n            :key=\"snippet.setId\"\n            v-model:value=\"snippet.value\"\n            v-tooltip.bottom=\"getNoPermissionsTooltip('snippet.editor')\"\n            class=\"sw-snippet-field-edit-modal__translation-field\"\n            :class=\"`sw-snippet-field-edit-modal__translation-field--${index}`\"\n            :disabled=\"!acl.can('snippet.editor')\"\n            :label=\"$tc('sw-settings-snippet.detail.labelContent', 0, { name: snippetSets.get(snippet.setId).name })\"\n            :placeholder=\"snippet.origin || $tc('sw-settings-snippet.general.placeholderValue')\"\n        />\n    </template>\n    {% endblock %}\n    {% endblock %}\n\n    <template #modal-footer>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_snippet_field_edit_modal_footer %}\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_snippet_field_edit_modal_close_button %}\n        <sw-button\n            size=\"small\"\n            @click=\"closeModal\"\n        >\n            {{ $tc('global.sw-modal.labelClose') }}\n        </sw-button>\n        {% endblock %}\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_snippet_field_edit_modal_footer_button %}\n        <sw-button\n            v-tooltip=\"getNoPermissionsTooltip('snippet.editor')\"\n            class=\"sw-snippet-field-edit-modal__save-action\"\n            size=\"small\"\n            variant=\"primary\"\n            :disabled=\"!acl.can('snippet.editor')\"\n            @click=\"onSave\"\n        >\n            {{ $tc('global.default.save') }}\n        </sw-button>\n        {% endblock %}\n        {% endblock %}\n    </template>\n</sw-modal>\n{% endblock %}\n","import Sanitizer from 'src/core/helper/sanitizer.helper';\nimport template from './sw-snippet-field-edit-modal.html.twig';\n\nconst { Component } = Cicada;\n\n/**\n * @package admin\n *\n * @private\n * @status ready\n * @description The modal component used to edit snippet values in `<sw-snippet-field>`.\n * @example-type code-only\n * @component-example\n * <sw-snippet-field-edit-modal\n *     :snippets=\"snippets\"\n *     :snippetSets=\"snippetSets\"\n *     :translationKey=\"snippet\"\n *     :fieldType=\"fieldType\"\n *     \\@modal-close=\"closeEditModal\"\n *     \\@save=\"onSave\">\n * </sw-snippet-field-edit-modal>\n */\nComponent.register('sw-snippet-field-edit-modal', {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'acl',\n        'repositoryFactory',\n    ],\n\n    emits: [\n        'modal-close',\n        'save',\n    ],\n\n    props: {\n        snippets: {\n            type: Array,\n            required: true,\n        },\n\n        snippetSets: {\n            type: Array,\n            required: true,\n        },\n\n        translationKey: {\n            type: String,\n            required: true,\n        },\n\n        fieldType: {\n            type: String,\n            required: true,\n            validValues: [\n                'text',\n                'textarea',\n            ],\n            validator(value) {\n                return [\n                    'text',\n                    'textarea',\n                ].includes(value);\n            },\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            editableSnippets: [],\n        };\n    },\n\n    computed: {\n        modalTitle() {\n            const title = this.$tc('global.sw-snippet-field-edit-modal.title');\n\n            return `${title}: ${this.translationKey}`;\n        },\n\n        currentAuthor() {\n            return `user/${Cicada.State.get('session').currentUser.username}`;\n        },\n\n        snippetRepository() {\n            return this.repositoryFactory.create('snippet');\n        },\n\n        textField() {\n            return this.fieldType === 'text';\n        },\n\n        textArea() {\n            return this.fieldType === 'textarea';\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n\n            this.snippetSets.forEach((snippetSet) => {\n                const existingSnippet = this.snippets.find((item) => item.setId === snippetSet.id);\n                const snippet = this.snippetRepository.create(Cicada.Context.api);\n\n                if (existingSnippet) {\n                    snippet.author = existingSnippet.author;\n                    snippet.id = existingSnippet.id;\n                    snippet.value = existingSnippet.value;\n                    snippet.origin = existingSnippet.origin;\n                    snippet.translationKey = existingSnippet.translationKey;\n                    snippet.setId = existingSnippet.setId;\n\n                    if (existingSnippet.id) {\n                        snippet._isNew = false;\n                    }\n                } else {\n                    snippet.author = this.currentAuthor;\n                    snippet.id = null;\n                    snippet.value = null;\n                    snippet.origin = null;\n                    snippet.translationKey = this.translationKey;\n                    snippet.setId = snippetSet.id;\n                }\n\n                this.editableSnippets.push(snippet);\n            });\n\n            this.isLoading = false;\n        },\n\n        closeModal() {\n            this.$emit('modal-close');\n        },\n\n        getNoPermissionsTooltip(role) {\n            return {\n                showDelay: 300,\n                appearance: 'dark',\n                showOnDisabledElements: true,\n                disabled: this.acl.can(role),\n                message: this.$tc('sw-privileges.tooltip.warning'),\n            };\n        },\n\n        onSave() {\n            const responses = [];\n            this.isLoading = true;\n\n            this.editableSnippets.forEach((snippet) => {\n                snippet.value = Sanitizer.sanitize(snippet.value);\n                snippet.author = this.currentAuthor;\n\n                if (!snippet.hasOwnProperty('value') || snippet.value === '') {\n                    // If you clear the input-box, reset it to its origin value\n                    snippet.value = snippet.origin;\n                }\n\n                if (snippet.origin !== snippet.value) {\n                    // Only save if values differs from origin\n                    responses.push(this.snippetRepository.save(snippet, Cicada.Context.api));\n                } else if (snippet.hasOwnProperty('id') && snippet.id !== null) {\n                    // There's no need to keep a snippet which is exactly like the file-snippet, so delete\n                    responses.push(this.snippetRepository.delete(snippet.id, Cicada.Context.api));\n                }\n            });\n\n            Promise.all(responses).then(() => {\n                this.isLoading = false;\n                this.$emit('save');\n            });\n        },\n    },\n});\n"],"names":["template","Component","value","snippetSet","existingSnippet","item","snippet","role","responses","Sanitizer"],"mappings":"mDAAA,MAAeA,EAAA,orECGT,CAAE,UAAAC,CAAW,EAAG,OAmBtBA,EAAU,SAAS,8BAA+B,CAC9C,SAAAD,EAEA,aAAc,OAAO,aAErB,OAAQ,CACJ,MACA,mBACH,EAED,MAAO,CACH,cACA,MACH,EAED,MAAO,CACH,SAAU,CACN,KAAM,MACN,SAAU,EACb,EAED,YAAa,CACT,KAAM,MACN,SAAU,EACb,EAED,eAAgB,CACZ,KAAM,OACN,SAAU,EACb,EAED,UAAW,CACP,KAAM,OACN,SAAU,GACV,YAAa,CACT,OACA,UACH,EACD,UAAUE,EAAO,CACb,MAAO,CACH,OACA,UACpB,EAAkB,SAASA,CAAK,CACnB,CACJ,CACJ,EAED,MAAO,CACH,MAAO,CACH,UAAW,GACX,iBAAkB,CAAE,CAChC,CACK,EAED,SAAU,CACN,YAAa,CAGT,MAAO,GAFO,KAAK,IAAI,0CAA0C,CAElD,KAAK,KAAK,cAAc,EAC1C,EAED,eAAgB,CACZ,MAAO,QAAQ,OAAO,MAAM,IAAI,SAAS,EAAE,YAAY,QAAQ,EAClE,EAED,mBAAoB,CAChB,OAAO,KAAK,kBAAkB,OAAO,SAAS,CACjD,EAED,WAAY,CACR,OAAO,KAAK,YAAc,MAC7B,EAED,UAAW,CACP,OAAO,KAAK,YAAc,UAC7B,CACJ,EAED,SAAU,CACN,KAAK,iBAAgB,CACxB,EAED,QAAS,CACL,kBAAmB,CACf,KAAK,UAAY,GAEjB,KAAK,YAAY,QAASC,GAAe,CACrC,MAAMC,EAAkB,KAAK,SAAS,KAAMC,GAASA,EAAK,QAAUF,EAAW,EAAE,EAC3EG,EAAU,KAAK,kBAAkB,OAAO,OAAO,QAAQ,GAAG,EAE5DF,GACAE,EAAQ,OAASF,EAAgB,OACjCE,EAAQ,GAAKF,EAAgB,GAC7BE,EAAQ,MAAQF,EAAgB,MAChCE,EAAQ,OAASF,EAAgB,OACjCE,EAAQ,eAAiBF,EAAgB,eACzCE,EAAQ,MAAQF,EAAgB,MAE5BA,EAAgB,KAChBE,EAAQ,OAAS,MAGrBA,EAAQ,OAAS,KAAK,cACtBA,EAAQ,GAAK,KACbA,EAAQ,MAAQ,KAChBA,EAAQ,OAAS,KACjBA,EAAQ,eAAiB,KAAK,eAC9BA,EAAQ,MAAQH,EAAW,IAG/B,KAAK,iBAAiB,KAAKG,CAAO,CAClD,CAAa,EAED,KAAK,UAAY,EACpB,EAED,YAAa,CACT,KAAK,MAAM,aAAa,CAC3B,EAED,wBAAwBC,EAAM,CAC1B,MAAO,CACH,UAAW,IACX,WAAY,OACZ,uBAAwB,GACxB,SAAU,KAAK,IAAI,IAAIA,CAAI,EAC3B,QAAS,KAAK,IAAI,+BAA+B,CACjE,CACS,EAED,QAAS,CACL,MAAMC,EAAY,CAAA,EAClB,KAAK,UAAY,GAEjB,KAAK,iBAAiB,QAASF,GAAY,CACvCA,EAAQ,MAAQG,EAAU,SAASH,EAAQ,KAAK,EAChDA,EAAQ,OAAS,KAAK,eAElB,CAACA,EAAQ,eAAe,OAAO,GAAKA,EAAQ,QAAU,MAEtDA,EAAQ,MAAQA,EAAQ,QAGxBA,EAAQ,SAAWA,EAAQ,MAE3BE,EAAU,KAAK,KAAK,kBAAkB,KAAKF,EAAS,OAAO,QAAQ,GAAG,CAAC,EAChEA,EAAQ,eAAe,IAAI,GAAKA,EAAQ,KAAO,MAEtDE,EAAU,KAAK,KAAK,kBAAkB,OAAOF,EAAQ,GAAI,OAAO,QAAQ,GAAG,CAAC,CAEhG,CAAa,EAED,QAAQ,IAAIE,CAAS,EAAE,KAAK,IAAM,CAC9B,KAAK,UAAY,GACjB,KAAK,MAAM,MAAM,CACjC,CAAa,CACJ,CACJ,CACL,CAAC"}