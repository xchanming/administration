const e=`{% block sw_settings_state_machine_list %} <sw-page class="sw-settings-state-machine-list"> {% block sw_settings_state_machine_list_smart_bar_header %} <template #smart-bar-header> {% block sw_settings_state_machine_list_smart_bar_header_title %} <h2> {% block sw_settings_state_machine_list_smart_bar_header_title_text %} {{ $tc('sw-settings.index.title') }} <sw-icon name="regular-chevron-right-xs" small /> {{ $tc('sw-settings-state-machine.general.mainMenuItemGeneral') }} {% endblock %} {% block sw_settings_state_machine_list_smart_bar_header_amount %} <span v-if="!isLoading" class="sw-page__smart-bar-amount" > ({{ total }}) </span> {% endblock %} </h2> {% endblock %} </template> {% endblock %} {% block sw_settings_state_machine_list_language_switch %} <template #language-switch> <sw-language-switch @on-change="onChangeLanguage" /> </template> {% endblock %} {% block sw_settings_state_machine_list_content %} <template #content> <sw-card-view> {% block sw_settings_state_machine_list_content_card %} <sw-card position-identifier="sw-settings-state-machine-list-content" :is-loading="isLoading" > {% block sw_settings_state_machine_list_content_card_grid %} <template #grid> <sw-data-grid class="sw-settings-state-machine-list-grid" :is-loading="isLoading" :data-source="stateMachines" :columns="stateMachineColumns" :show-selection="false" :allow-inline-edit="acl.can('state_machine.editor')" :skeleton-item-amount="stateMachines.length" @inline-edit-save="onInlineEditSave" @inline-edit-cancel="onInlineEditCancel" > {% block sw_settings_state_machine_list_content_card_grid_actions %} <template #actions="{ item }"> {% block sw_settings_state_machine_list_content_card_grid_actions_edit %} <sw-context-menu-item class="sw-settings-state-machine__edit-action" :disabled="!acl.can('state_machine.editor')" :router-link="{ name: 'sw.settings.state.machine.detail', params: { id: item.id } }" > {{ $tc('global.default.edit') }} </sw-context-menu-item> {% endblock %} </template> {% endblock %} </sw-data-grid> </template> {% endblock %} </sw-card> {% endblock %} </sw-card-view> </template> {% endblock %} </sw-page> {% endblock %}`,{Component:a,Mixin:s}=Shopware,{Criteria:i}=Shopware.Data,n=a.wrapComponentConfig({template:e,compatConfig:Shopware.compatConfig,inject:["repositoryFactory","acl"],mixins:[s.getByName("notification")],data(){return{stateMachines:[],isLoading:!1,total:0}},metaInfo(){return{title:this.$createTitle()}},computed:{stateMachineRepository(){return this.repositoryFactory.create("state_machine")},stateMachineColumns(){return[{property:"name",dataIndex:"name",label:"sw-settings-state-machine.list.grid.columnName",width:"50%",inlineEdit:"string",routerLink:"sw.settings.state.machine.detail"},{property:"technicalName",dataIndex:"technicalName",label:"sw-settings-state-machine.list.grid.columnTechnicalName",width:"50%"}]}},created(){this.createdComponent()},methods:{createdComponent(){this.loadStateMachines()},async loadStateMachines(){this.isLoading=!0;try{this.stateMachines=await this.stateMachineRepository.search(new i),this.total=this.stateMachines.total}finally{this.isLoading=!1}},onChangeLanguage(){this.loadStateMachines()},onInlineEditCancel(){this.loadStateMachines()},async onInlineEditSave(t){this.isLoading=!0;try{await this.stateMachineRepository.save(t),this.loadStateMachines(),this.createNotificationSuccess({title:this.$tc("global.default.success"),message:this.$tc("sw-settings-state-machine.notification.successMessage")})}catch{this.createNotificationError({title:this.$tc("global.default.error"),message:this.$tc("sw-settings-state-machine.notification.errorMessage")})}finally{this.isLoading=!1}}}});export{n as default};
