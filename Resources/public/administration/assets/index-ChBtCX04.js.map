{"version":3,"file":"index-ChBtCX04.js","sources":["../../../app/administration/src/module/sw-order/component/sw-order-promotion-field/sw-order-promotion-field.html.twig","../../../app/administration/src/module/sw-order/component/sw-order-promotion-field/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_order_promotion_field %}\n<div class=\"sw-order-promotion-field\">\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_order_promotion_field_codes %}\n    <sw-order-promotion-tag-field\n        v-model:value=\"promotionCodeTags\"\n        :disabled=\"!hasLineItem || isLoading || !acl.can('order.editor') || undefined\"\n        :currency=\"currency\"\n        :label=\"$tc('sw-order.detailsTab.promotionsField.labelPromotions')\"\n        :placeholder=\"$tc('sw-order.detailsTab.promotionsField.placeholderPromotions')\"\n        :error=\"promotionError\"\n        @on-remove-code=\"onRemoveExistingCode\"\n    />\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_order_promotion_field_switch %}\n    <sw-switch-field\n        v-model:value=\"disabledAutoPromotions\"\n        :disabled=\"isLoading || !acl.can('order.editor') || undefined\"\n        :label=\"$tc('sw-order.detailsTab.promotionsField.labelToggleAutomaticPromotions')\"\n    />\n    {% endblock %}\n\n</div>\n{% endblock %}\n","import './sw-order-promotion-field.scss';\nimport template from './sw-order-promotion-field.html.twig';\n\n/**\n * @package checkout\n */\n\nconst { Component } = Cicada;\nconst { ChangesetGenerator } = Cicada.Data;\nconst { mapState } = Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: {\n        swOrderDetailOnLoadingChange: {\n            from: 'swOrderDetailOnLoadingChange',\n            default: null,\n        },\n        swOrderDetailOnError: {\n            from: 'swOrderDetailOnError',\n            default: null,\n        },\n        swOrderDetailOnReloadEntityData: {\n            from: 'swOrderDetailOnReloadEntityData',\n            default: null,\n        },\n        repositoryFactory: {\n            from: 'repositoryFactory',\n            default: null,\n        },\n        orderService: {\n            from: 'orderService',\n            default: null,\n        },\n        acl: {\n            from: 'acl',\n            default: null,\n        },\n    },\n\n    emits: [\n        'loading-change',\n        'error',\n        'reload-entity-data',\n    ],\n\n    mixins: [\n        'notification',\n    ],\n\n    props: {\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            promotionError: null,\n            disabledAutoPromotions: false,\n        };\n    },\n\n    computed: {\n        ...mapState('swOrderDetail', [\n            'order',\n            'versionContext',\n        ]),\n\n        orderLineItemRepository() {\n            return this.repositoryFactory.create('order_line_item');\n        },\n\n        hasLineItem() {\n            return this.order.lineItems.filter((item) => item.hasOwnProperty('id')).length > 0;\n        },\n\n        currency() {\n            return this.order.currency;\n        },\n\n        manualPromotions() {\n            return this.order.lineItems.filter((item) => item.type === 'promotion' && item.referencedId !== null);\n        },\n\n        automaticPromotions() {\n            return this.order.lineItems.filter((item) => item.type === 'promotion' && item.referencedId === null);\n        },\n\n        promotionCodeTags: {\n            get() {\n                return this.manualPromotions.map((item) => item.payload);\n            },\n\n            set(newValue) {\n                const old = this.manualPromotions;\n\n                this.promotionError = null;\n\n                if (newValue.length < old.length) {\n                    return;\n                }\n\n                const promotionCodeLength = old.length;\n                const latestTag = newValue[promotionCodeLength];\n\n                if (newValue.length > old.length) {\n                    this.onSubmitCode(latestTag.code);\n                }\n\n                if (promotionCodeLength > 0 && latestTag.isInvalid) {\n                    this.promotionError = {\n                        detail: this.$tc('sw-order.createBase.textInvalidPromotionCode'),\n                    };\n                }\n            },\n        },\n\n        hasAutomaticPromotions() {\n            return this.automaticPromotions.length > 0;\n        },\n\n        changesetGenerator() {\n            return new ChangesetGenerator();\n        },\n\n        hasOrderUnsavedChanges() {\n            return this.changesetGenerator.generate(this.order).changes !== null;\n        },\n    },\n\n    watch: {\n        // Validate if switch can be toggled\n        disabledAutoPromotions(newState, oldState) {\n            // To prevent recursion when value is set in next tick\n            if (oldState === this.hasAutomaticPromotions) return;\n\n            this.toggleAutomaticPromotions(newState);\n        },\n\n        automaticPromotions() {\n            // Sync value with database\n            this.disabledAutoPromotions = !this.hasAutomaticPromotions;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.disabledAutoPromotions = !this.hasAutomaticPromotions;\n        },\n\n        deleteAutomaticPromotions() {\n            if (this.automaticPromotions.length === 0) {\n                return Promise.resolve();\n            }\n\n            const deletionPromises = [];\n\n            this.automaticPromotions.forEach((promotion) => {\n                deletionPromises.push(this.orderLineItemRepository.delete(promotion.id, this.versionContext));\n            });\n\n            return Promise.all(deletionPromises)\n                .then(() => {\n                    this.automaticPromotions.forEach((promotion) => {\n                        this.createNotificationSuccess({\n                            message: this.$tc('sw-order.detailBase.textPromotionRemoved', 0, {\n                                promotion: promotion.label,\n                            }),\n                        });\n                    });\n                })\n                .catch((error) => {\n                    this.$emit('loading-change', false);\n                    if (this.swOrderDetailOnLoadingChange) {\n                        this.swOrderDetailOnLoadingChange(false);\n                    }\n\n                    this.$emit('error', error);\n                    if (this.swOrderDetailOnError) {\n                        this.swOrderDetailOnError(error);\n                    }\n                });\n        },\n\n        toggleAutomaticPromotions(state) {\n            this.$emit('loading-change', true);\n            if (this.swOrderDetailOnLoadingChange) {\n                this.swOrderDetailOnLoadingChange(true);\n            }\n\n            // Throw notification warning and reset switch state\n            if (this.hasOrderUnsavedChanges) {\n                this.$emit('loading-change', false);\n                if (this.swOrderDetailOnLoadingChange) {\n                    this.swOrderDetailOnLoadingChange(false);\n                }\n                this.handleUnsavedOrderChangesResponse();\n                this.$nextTick(() => {\n                    this.disabledAutoPromotions = !state;\n                });\n                return;\n            }\n\n            this.deleteAutomaticPromotions()\n                .then(() => {\n                    return this.orderService.toggleAutomaticPromotions(this.order.id, this.order.versionId, state);\n                })\n                .then((response) => {\n                    this.handlePromotionResponse(response);\n                    this.$emit('reload-entity-data');\n                    if (this.swOrderDetailOnReloadEntityData) {\n                        this.swOrderDetailOnReloadEntityData();\n                    }\n                })\n                .catch((error) => {\n                    this.$emit('loading-change', false);\n                    if (this.swOrderDetailOnLoadingChange) {\n                        this.swOrderDetailOnLoadingChange(false);\n                    }\n                    this.$emit('error', error);\n                    if (this.swOrderDetailOnError) {\n                        this.swOrderDetailOnError(error);\n                    }\n                });\n        },\n\n        onSubmitCode(code) {\n            this.$emit('loading-change', true);\n            if (this.swOrderDetailOnLoadingChange) {\n                this.swOrderDetailOnLoadingChange(true);\n            }\n\n            if (this.hasOrderUnsavedChanges) {\n                this.$emit('loading-change', false);\n                if (this.swOrderDetailOnLoadingChange) {\n                    this.swOrderDetailOnLoadingChange(false);\n                }\n                this.handleUnsavedOrderChangesResponse();\n                return;\n            }\n\n            this.orderService\n                .addPromotionToOrder(this.order.id, this.order.versionId, code)\n                .then((response) => {\n                    this.handlePromotionResponse(response);\n                    this.$emit('reload-entity-data');\n                    if (this.swOrderDetailOnReloadEntityData) {\n                        this.swOrderDetailOnReloadEntityData();\n                    }\n                })\n                .catch((error) => {\n                    this.$emit('loading-change', false);\n                    if (this.swOrderDetailOnLoadingChange) {\n                        this.swOrderDetailOnLoadingChange(false);\n                    }\n                    this.$emit('error', error);\n                    if (this.swOrderDetailOnError) {\n                        this.swOrderDetailOnError(error);\n                    }\n                });\n        },\n\n        handlePromotionResponse(response) {\n            Object.values(response.data.errors).forEach((value) => {\n                switch (value.level) {\n                    case 0: {\n                        this.createNotificationSuccess({\n                            message: value.message,\n                        });\n                        break;\n                    }\n\n                    case 10: {\n                        this.createNotificationWarning({\n                            message: value.message,\n                        });\n                        break;\n                    }\n\n                    default: {\n                        this.createNotificationError({\n                            message: value.message,\n                        });\n                        break;\n                    }\n                }\n            });\n        },\n\n        handleUnsavedOrderChangesResponse() {\n            this.createNotificationWarning({\n                message: this.$tc('sw-order.detailBase.textUnsavedChanges', 0),\n            });\n        },\n\n        onRemoveExistingCode(removedItem) {\n            this.$emit('loading-change', true);\n\n            if (this.hasOrderUnsavedChanges) {\n                this.$emit('loading-change', false);\n                if (this.swOrderDetailOnLoadingChange) {\n                    this.swOrderDetailOnLoadingChange(false);\n                }\n                this.handleUnsavedOrderChangesResponse();\n                return;\n            }\n\n            const lineItem = this.order.lineItems.find((item) => {\n                return item.type === 'promotion' && item.payload.code === removedItem.code;\n            });\n\n            this.orderLineItemRepository\n                .delete(lineItem.id, this.versionContext)\n                .then(() => {\n                    this.$emit('reload-entity-data');\n                    if (this.swOrderDetailOnReloadEntityData) {\n                        this.swOrderDetailOnReloadEntityData();\n                    }\n                })\n                .catch((error) => {\n                    this.$emit('loading-change', false);\n                    if (this.swOrderDetailOnLoadingChange) {\n                        this.swOrderDetailOnLoadingChange(false);\n                    }\n                    this.$emit('error', error);\n                    if (this.swOrderDetailOnError) {\n                        this.swOrderDetailOnError(error);\n                    }\n                });\n        },\n\n        getLineItemByPromotionCode(code) {\n            return this.order.lineItems.find((item) => {\n                return item.type === 'promotion' && item.payload.code === code;\n            });\n        },\n    },\n};\n"],"names":["template","Component","ChangesetGenerator","mapState","index","item","newValue","old","promotionCodeLength","latestTag","newState","oldState","deletionPromises","promotion","error","state","response","code","value","removedItem","lineItem"],"mappings":"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"}