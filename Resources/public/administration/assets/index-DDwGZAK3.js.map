{"version":3,"file":"index-DDwGZAK3.js","sources":["../../../app/administration/src/module/sw-order/component/sw-order-new-customer-modal/sw-order-new-customer-modal.html.twig","../../../app/administration/src/module/sw-order/component/sw-order-new-customer-modal/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_order_new_customer_modal %}\n<sw-modal\n    :title=\"$tc('sw-order.createBase.detailsHeader.buttonAddNewCustomer')\"\n    @modal-close=\"onClose\"\n>\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_order_new_customer_modal_tabs %}\n    <sw-tabs\n        class=\"sw-order-new-customer-modal\"\n        position-identifier=\"sw-order-new-customer-modal\"\n        default-item=\"details\"\n    >\n        <template #default=\"{ active }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_new_customer_modal_tabs_details %}\n            <sw-tabs-item\n                name=\"details\"\n                :active-tab=\"active\"\n                :has-error=\"swOrderNewCustomerDetailError\"\n            >\n                {{ $tc('sw-order.newCustomerModal.labelDetails') }}\n            </sw-tabs-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_new_customer_modal_tabs_billing %}\n            <sw-tabs-item\n                name=\"billingAddress\"\n                :active-tab=\"active\"\n                :has-error=\"swOrderNewCustomerAddressError\"\n            >\n                {{ $tc('sw-order.createBase.detailsBody.labelBillingAddress') }}\n            </sw-tabs-item>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_new_customer_modal_tabs_shipping %}\n            <sw-tabs-item\n                name=\"shippingAddress\"\n                :active-tab=\"active\"\n                :has-error=\"!isSameBilling && swOrderNewCustomerAddressError\"\n            >\n                {{ $tc('sw-order.createBase.detailsBody.labelShippingAddress') }}\n            </sw-tabs-item>\n            {% endblock %}\n        </template>\n\n        <template #content=\"{ active }\">\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_new_customer_modal_content_details %}\n            <div v-if=\"active ==='details'\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_new_customer_modal_content_details_guest %}\n                <sw-switch-field\n                    v-model:value=\"customer.guest\"\n                    no-margin-top\n                    :label=\"$tc('sw-order.newCustomerModal.labelGuest')\"\n                />\n                {% endblock %}\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_new_customer_modal_content_details_form %}\n                <sw-customer-base-form\n                    :is-loading=\"isLoading\"\n                    :customer=\"customer\"\n                    @sales-channel-change=\"onChangeSalesChannel\"\n                />\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_new_customer_modal_content_shipping %}\n            <div v-if=\"active === 'shippingAddress'\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_new_customer_modal_content_shipping_same_billing %}\n                <sw-switch-field\n                    v-model:value=\"isSameBilling\"\n                    no-margin-top\n                    :label=\"$tc('sw-customer.addressForm.labelSameBillingAddress')\"\n                />\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_new_customer_modal_content_shipping_form %}\n                <sw-customer-address-form\n                    :customer=\"customer\"\n                    :disabled=\"isSameBilling\"\n                    :address=\"shippingAddress\"\n                />\n                {% endblock %}\n            </div>\n            {% endblock %}\n\n            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n            {% block sw_order_new_customer_modal_content_billing %}\n            <div v-if=\"active ==='billingAddress'\">\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_order_new_customer_modal_content_billing_form %}\n                <sw-customer-address-form\n                    :customer=\"customer\"\n                    :address=\"billingAddress\"\n                />\n                {% endblock %}\n            </div>\n            {% endblock %}\n        </template>\n    </sw-tabs>\n    {% endblock %}\n\n    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n    {% block sw_order_new_customer_modal_actions %}\n    <template #modal-footer>\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_new_customer_modal_action_close %}\n        <sw-button\n            size=\"small\"\n            @click=\"onClose\"\n        >\n            {{ $tc('global.default.cancel') }}\n        </sw-button>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_order_new_customer_modal_actions_apply %}\n        <sw-button\n            size=\"small\"\n            variant=\"primary\"\n            :is-loading=\"isLoading\"\n            @click=\"onSave\"\n        >\n            {{ $tc('global.default.save') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n","import template from './sw-order-new-customer-modal.html.twig';\nimport './sw-order-new-customer-modal.scss';\nimport CUSTOMER from '../../../sw-customer/constant/sw-customer.constant';\n\n/**\n * @package checkout\n */\n\nconst { Mixin } = Cicada;\nconst { Criteria } = Cicada.Data;\nconst { mapPageErrors } = Cicada.Component.getComponentHelper();\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'numberRangeService',\n        'systemConfigApiService',\n        'customerValidationService',\n    ],\n\n    emits: [\n        'on-select-existing-customer',\n        'close',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            customer: null,\n            isLoading: false,\n            customerNumberPreview: '',\n            defaultSalutationId: null,\n        };\n    },\n\n    computed: {\n        ...mapPageErrors({\n            'sw.order.new.customer.detail': {\n                customer: [\n                    'name',\n                    'email',\n                    'salesChannelId',\n                    'customerNumber',\n                    'groupId',\n                ],\n            },\n\n            'sw.order.new.customer.address': {\n                customer_address: [\n                    'name',\n                    'street',\n                    'city',\n                    'countryId',\n                ],\n            },\n        }),\n\n        customerRepository() {\n            return this.repositoryFactory.create('customer');\n        },\n\n        addressRepository() {\n            return this.repositoryFactory.create('customer_address');\n        },\n\n        shippingAddress() {\n            if (this.isSameBilling) {\n                return this.billingAddress;\n            }\n\n            return this.customer !== null ? this.customer.addresses.get(this.customer.defaultShippingAddressId) : null;\n        },\n\n        billingAddress() {\n            return this.customer !== null ? this.customer.addresses.get(this.customer.defaultBillingAddressId) : null;\n        },\n\n        isSameBilling: {\n            get() {\n                if (this.customer === null) {\n                    return true;\n                }\n\n                return this.customer.defaultBillingAddressId === this.customer.defaultShippingAddressId;\n            },\n\n            set(newValue) {\n                if (newValue === true) {\n                    this.customer.defaultShippingAddressId = this.customer.defaultBillingAddressId;\n\n                    // remove all addresses but default billing...\n                    if (this.customer.isNew()) {\n                        this.customer.addresses = this.customer.addresses.filter((address) => {\n                            return address.id === this.customer.defaultBillingAddressId;\n                        });\n                    }\n\n                    return;\n                }\n\n                const shippingAddress = this.addressRepository.create();\n                shippingAddress.salutationId = this.defaultSalutationId;\n\n                this.customer.addresses.add(shippingAddress);\n                this.customer.defaultShippingAddressId = shippingAddress.id;\n            },\n        },\n\n        validCompanyField() {\n            return this.customer?.accountType === CUSTOMER.ACCOUNT_TYPE_BUSINESS\n                ? this.customer?.company?.trim().length\n                : true;\n        },\n\n        languageRepository() {\n            return this.repositoryFactory.create('language');\n        },\n\n        languageCriteria() {\n            const criteria = new Criteria();\n            criteria.setLimit(1);\n\n            if (this.customer?.salesChannelId) {\n                criteria.addFilter(Criteria.equals('salesChannelDefaultAssignments.id', this.customer.salesChannelId));\n            }\n\n            return criteria;\n        },\n\n        languageId() {\n            return this.loadLanguage(this.customer.salesChannelId);\n        },\n\n        salutationRepository() {\n            return this.repositoryFactory.create('salutation');\n        },\n\n        salutationCriteria() {\n            const criteria = new Criteria(1, 1);\n\n            criteria.addFilter(Criteria.equals('salutationKey', 'not_specified'));\n\n            return criteria;\n        },\n    },\n\n    watch: {\n        'customer.salesChannelId'(salesChannelId) {\n            this.systemConfigApiService.getValues('core.systemWideLoginRegistration').then((response) => {\n                if (response['core.systemWideLoginRegistration.isCustomerBoundToSalesChannel']) {\n                    this.customer.boundSalesChannelId = salesChannelId;\n                }\n            });\n        },\n\n        'customer.accountType'(value) {\n            if (value === CUSTOMER.ACCOUNT_TYPE_BUSINESS) {\n                return;\n            }\n\n            Cicada.State.dispatch('error/removeApiError', {\n                expression: `customer_address.${this.billingAddress?.id}.company`,\n            });\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            this.customer = this.customerRepository.create();\n\n            this.defaultSalutationId = await this.getDefaultSalutationId();\n\n            const billingAddress = this.addressRepository.create();\n            billingAddress.salutationId = this.defaultSalutationId;\n\n            this.customer.addresses.add(billingAddress);\n\n            this.customer.defaultShippingAddressId = billingAddress.id;\n            this.customer.defaultBillingAddressId = billingAddress.id;\n            this.customer.accountType = CUSTOMER.ACCOUNT_TYPE_PRIVATE;\n            this.customer.vatIds = [];\n            this.customer.salutationId = this.defaultSalutationId;\n        },\n\n        async onSave() {\n            let hasError = false;\n\n            const res = await this.validateEmail();\n\n            if (!res || !res.isValid) {\n                hasError = true;\n            }\n\n            if (!this.validCompanyField) {\n                this.createErrorMessageForCompanyField();\n                hasError = true;\n            }\n\n            if (this.customer.accountType === CUSTOMER.ACCOUNT_TYPE_PRIVATE) {\n                this.customer.vatIds = [];\n            }\n\n            if (hasError) {\n                this.createNotificationError({\n                    message: this.$tc('sw-customer.detail.messageSaveError'),\n                });\n\n                this.isLoading = false;\n                return false;\n            }\n\n            let numberRangePromise = Promise.resolve();\n            if (this.customerNumberPreview === this.customer.customerNumber) {\n                numberRangePromise = this.numberRangeService\n                    .reserve('customer', this.customer.salesChannelId)\n                    .then((response) => {\n                        this.customerNumberPreview = response.number;\n                        this.customer.customerNumber = response.number;\n                    });\n            }\n\n            return numberRangePromise.then(() => {\n                return this.saveCustomer();\n            });\n        },\n\n        async saveCustomer() {\n            const languageId = await this.languageId;\n\n            const context = { ...Cicada.Context.api, ...{ languageId } };\n\n            return this.customerRepository\n                .save(this.customer, context)\n                .then((response) => {\n                    this.$emit('on-select-existing-customer', this.customer.id);\n                    this.isLoading = false;\n\n                    this.onClose();\n\n                    return response;\n                })\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-customer.detail.messageSaveError'),\n                    });\n                    this.isLoading = false;\n                });\n        },\n\n        onChangeSalesChannel(salesChannelId) {\n            this.customer.salesChannelId = salesChannelId;\n            this.numberRangeService.reserve('customer', salesChannelId, true).then((response) => {\n                this.customerNumberPreview = response.number;\n                this.customer.customerNumber = response.number;\n            });\n        },\n\n        onClose() {\n            this.$emit('close');\n        },\n\n        createErrorMessageForCompanyField() {\n            Cicada.State.dispatch('error/addApiError', {\n                expression: `customer_address.${this.billingAddress.id}.company`,\n                error: new Cicada.Classes.CicadaError({\n                    code: 'c1051bb4-d103-4f74-8988-acbcafc7fdc3',\n                }),\n            });\n        },\n\n        validateEmail() {\n            const { id, email, boundSalesChannelId } = this.customer;\n\n            if (!email) {\n                return Promise.resolve({ isValid: true });\n            }\n\n            return this.customerValidationService\n                .checkCustomerEmail({\n                    id,\n                    email,\n                    boundSalesChannelId,\n                })\n                .then((emailIsValid) => {\n                    return emailIsValid;\n                })\n                .catch((exception) => {\n                    if (!exception) {\n                        return;\n                    }\n\n                    Cicada.State.dispatch('error/addApiError', {\n                        expression: `customer.${this.customer.id}.email`,\n                        error: exception?.response?.data?.errors[0],\n                    });\n                });\n        },\n\n        async loadLanguage(salesChannelId) {\n            const languageId = Cicada.Context.api.languageId;\n\n            if (!salesChannelId) {\n                return languageId;\n            }\n\n            const res = await this.languageRepository.searchIds(this.languageCriteria);\n\n            if (!res?.data) {\n                return languageId;\n            }\n\n            return res.data[0];\n        },\n\n        async getDefaultSalutationId() {\n            const res = await this.salutationRepository.searchIds(this.salutationCriteria);\n\n            return res.data?.[0];\n        },\n    },\n};\n"],"names":["template","Mixin","Criteria","mapPageErrors","index","newValue","address","shippingAddress","_a","CUSTOMER","_c","_b","criteria","salesChannelId","response","value","billingAddress","hasError","res","numberRangePromise","languageId","context","id","email","boundSalesChannelId","emailIsValid","exception"],"mappings":"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"}