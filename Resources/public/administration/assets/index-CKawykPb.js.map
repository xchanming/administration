{"version":3,"file":"index-CKawykPb.js","sources":["../../../app/administration/src/module/sw-settings-listing/page/sw-settings-listing/sw-settings-listing.html.twig","../../../app/administration/src/module/sw-settings-listing/page/sw-settings-listing/index.js"],"sourcesContent":["<!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n{% block sw_settings_listing_index %}\n    <sw-page class=\"sw-settings-listing-index\">\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_listing_search_bar %}\n            <template #search-bar>\n                <sw-search-bar />\n            </template>\n        {% endblock %}\n\n        <template #language-switch>\n            <sw-language-switch @on-change=\"onChangeLanguage\" />\n        </template>\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_listing_smart_bar_header %}\n            <template #smart-bar-header>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_listing_smart_bar_header_title %}\n                    <h2>\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_listing_smart_bar_header_title_text %}\n                            {{ $tc('sw-settings.index.title') }}\n                            <sw-icon\n                                name=\"regular-chevron-right-xs\"\n                                small\n                            />\n                            {{ $tc('sw-settings-listing.general.textHeadline') }}\n                        {% endblock %}\n\n                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                        {% block sw_settings_listing_smart_bar_header_amount %}{% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_listing_smart_bar_actions %}\n            <template #smart-bar-actions>\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_listing_actions_save %}\n                    <sw-button-process\n                        class=\"sw-settings-listing__save-action\"\n                        :is-loading=\"isLoading\"\n                        :process-success=\"isSaveSuccessful\"\n                        :disabled=\"isLoading\"\n                        variant=\"primary\"\n                        @update:process-success=\"saveFinish\"\n                        @click=\"onSave\"\n                    >\n                        {{ $tc('sw-settings-listing.general.buttonSave') }}\n                    </sw-button-process>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n        {% block sw_settings_listing_content %}\n            <template #content>\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_listing_content_card_view %}\n                    <sw-card-view>\n                        <template v-if=\"isLoading\">\n                            <sw-skeleton />\n                            <sw-skeleton />\n                        </template>\n\n                        {# v-show is used here as underlying components influence the loading state and v-if would destroy this behaviour #}\n                        <div v-show=\"!isLoading\">\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_listing_content_card_view_default_sales_channel %}\n                                <sw-card\n                                    class=\"sw-settings-listing__sales-channel-card\"\n                                    position-identifier=\"sw-settings-listing-sales-channel\"\n                                    :title=\"$tc('sw-settings-listing.index.defaultSalesChannel.title')\"\n                                >\n                                    <sw-settings-listing-default-sales-channel\n                                        ref=\"defaultSalesChannelCard\"\n                                        :is-loading=\"isLoading\"\n                                    />\n                                </sw-card>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_listing_content_card_view_system_config %}\n                                <sw-system-config\n                                    ref=\"systemConfig\"\n                                    sales-channel-switchable\n                                    domain=\"core.listing\"\n                                    @loading-changed=\"onLoadingChanged\"\n                                >\n\n                                    <template #afterElements=\"{ config, index, isNotDefaultSalesChannel, inheritance }\">\n                                        <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                        {% block sw_settings_listing_content_card_view_system_config_default_sorting_select %}\n                                            <sw-inherit-wrapper\n                                                v-if=\"config && index === 0\"\n                                                v-model:value=\"config['core.listing.defaultSorting']\"\n                                                :label=\"$tc('sw-settings-listing.general.labelDefaultSorting')\"\n                                                :has-parent=\"isNotDefaultSalesChannel\"\n                                                :inherited-value=\"inheritance['core.listing.defaultSorting']\"\n                                                required\n                                            >\n                                                <template #content=\"{ isInherited, currentValue, updateCurrentValue }\">\n                                                    <sw-single-select\n                                                        class=\"sw-settings-listing-index__default-sorting-select\"\n                                                        :placeholder=\"$tc('sw-settings-listing.general.placeholderDefaultSorting')\"\n                                                        :disabled=\"isInherited\"\n                                                        :value=\"currentValue\"\n                                                        :options=\"productSortingOptions\"\n                                                        :error=\"hasDefaultSortingError ? salesChannelDefaultSortingError : null\"\n                                                        label-property=\"label\"\n                                                        value-property=\"id\"\n                                                        @update:value=\"updateCurrentValue\"\n                                                    />\n                                                </template>\n                                            </sw-inherit-wrapper>\n                                        {% endblock %}\n\n                                        {% block sw_settings_listing_content_card_view_system_config_default_search_result_sorting_select %}\n                                            <sw-inherit-wrapper\n                                                v-if=\"config && index === 0\"\n                                                v-model:value=\"config['core.listing.defaultSearchResultSorting']\"\n                                                :label=\"$tc('sw-settings-listing.general.labelDefaultSearchResultSorting')\"\n                                                :has-parent=\"isNotDefaultSalesChannel\"\n                                                :inherited-value=\"inheritance['core.listing.defaultSearchResultSorting']\"\n                                                required\n                                            >\n                                                <template #content=\"{ isInherited, currentValue, updateCurrentValue }\">\n                                                    <sw-single-select\n                                                        class=\"sw-settings-listing-index__default-search-result-sorting-select\"\n                                                        :placeholder=\"$tc('sw-settings-listing.general.placeholderDefaultSearchResultSorting')\"\n                                                        :disabled=\"isInherited\"\n                                                        :value=\"currentValue\"\n                                                        :options=\"searchResultSortingOptions\"\n                                                        :error=\"hasDefaultSortingError ? salesChannelDefaultSortingError : null\"\n                                                        label-property=\"label\"\n                                                        value-property=\"id\"\n                                                        @update:value=\"updateCurrentValue\"\n                                                    />\n                                                </template>\n                                            </sw-inherit-wrapper>\n                                        {% endblock %}\n                                    </template>\n\n                                </sw-system-config>\n                            {% endblock %}\n\n                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                            {% block sw_settings_listing_content_card_view_options_card %}\n                                <sw-card\n                                    class=\"sw-settings-listing-index__sorting-options-card\"\n                                    position-identifier=\"sw-settings-listing-sorting-options\"\n                                    :title=\"$tc('sw-settings-listing.index.productSorting.title')\"\n                                    :is-loading=\"isProductSortingOptionsCardLoading\"\n                                >\n\n                                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                    {% block sw_settings_listing_content_card_view_options_card_toolbar %}\n                                        <template #toolbar>\n\n                                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                            {% block sw_settings_listing_content_card_view_options_card_toolbar_container %}\n                                                <sw-container\n                                                    columns=\"1fr auto\"\n                                                    gap=\"0 10px\"\n                                                    align=\"start\"\n                                                >\n\n                                                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                                    {% block sw_settings_listing_content_card_view_options_card_toolbar_search_field %}\n                                                        <sw-simple-search-field\n                                                            v-model:value=\"productSortingOptionsSearchTerm\"\n                                                            variant=\"form\"\n                                                            size=\"small\"\n                                                            class=\"sw-settings-listing-index__sorting-options-search-field\"\n                                                            @search-term-change=\"onSearchProductSortingOptions\"\n                                                        />\n                                                    {% endblock %}\n\n                                                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                                    {% block sw_settings_listing_content_card_view_options_card_toolbar_add_product_option %}\n                                                        <sw-button\n                                                            variant=\"ghost\"\n                                                            size=\"small\"\n                                                            @click=\"onAddNewProductSortingOption\"\n                                                        >\n                                                            {{ $tc('sw-settings-listing.index.productSorting.addButton') }}\n                                                        </sw-button>\n                                                    {% endblock %}\n                                                </sw-container>\n                                            {% endblock %}\n                                        </template>\n                                    {% endblock %}\n\n                                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                    {% block sw_settings_listing_content_card_view_options_card_grid %}\n                                        <sw-data-grid\n                                            v-if=\"productSortingOptions.length > 0\"\n                                            :compact-mode=\"false\"\n                                            :columns=\"productSortingOptionColumns\"\n                                            :data-source=\"productSortingOptions\"\n                                            allow-inline-edit\n                                            plain-appearance\n                                            :show-selection=\"false\"\n                                            :is-record-editable=\"item => !item.locked\"\n                                            @inline-edit-save=\"onSaveProductSortingOptionInlineEdit\"\n                                        >\n\n                                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                            {% block sw_settings_listing_content_card_view_options_card_grid_column_criteria %}\n                                                <template #column-criteria=\"{item}\">\n\n                                                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                                    {% block sw_settings_listing_content_card_view_options_card_grid_column_criteria_text %}\n                                                        <span\n                                                            class=\"is--truncate\"\n                                                            :title=\"formatProductSortingOptionField(item.fields)\"\n                                                        >\n                                {{ formatProductSortingOptionField(item.fields) }}\n                            </span>\n                                                    {% endblock %}\n                                                </template>\n                                            {% endblock %}\n\n                                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                            {% block sw_settings_listing_content_card_view_options_card_grid_column_actions %}\n                                                <template #actions=\"{item}\">\n\n                                                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                                    {% block sw_settings_listing_content_card_view_options_card_grid_column_actions_edit %}\n                                                        <sw-context-menu-item\n                                                            :disabled=\"item.locked\"\n                                                            @click=\"onEditProductSortingOption(item.id)\"\n                                                        >\n                                                            {{ $tc('global.default.edit') }}\n                                                        </sw-context-menu-item>\n                                                    {% endblock %}\n\n                                                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                                    {% block sw_settings_listing_content_card_view_options_card_grid_column_actions_delete %}\n                                                        <sw-context-menu-item\n                                                            variant=\"danger\"\n                                                            :disabled=\"item.locked || isItemDefaultSorting(item.id)\"\n                                                            @click=\"toBeDeletedProductSortingOption = item\"\n                                                        >\n                                                            {{ $tc('global.default.delete') }}\n                                                        </sw-context-menu-item>\n                                                    {% endblock %}\n                                                </template>\n                                            {% endblock %}\n\n                                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                            {% block sw_settings_listing_content_card_view_options_card_grid_pagination %}\n                                                <template #pagination>\n                                                    <sw-pagination\n                                                        :page=\"sortingOptionsGridPage\"\n                                                        :total=\"sortingOptionsGridTotal\"\n                                                        :limit=\"sortingOptionsGridLimit\"\n                                                        :steps=\"[10]\"\n                                                        @page-change=\"onPageChange\"\n                                                    />\n                                                </template>\n                                            {% endblock %}\n                                        </sw-data-grid>\n                                    {% endblock %}\n\n                                    <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                    {% block sw_settings_listing_content_card_view_options_card_empty_state %}\n                                        <sw-empty-state\n                                            v-else\n                                            class=\"sw-settings-listing-index__sorting-options-empty-state\"\n                                            :title=\"$tc('sw-settings-listing.index.productSorting.emptyState.title')\"\n                                            :subline=\"$tc('sw-settings-listing.index.productSorting.emptyState.subline')\"\n                                            :absolute=\"false\"\n                                        >\n\n                                            <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                                            {% block sw_settings_listing_content_card_view_options_card_empty_state_icon %}\n                                                <template #icon>\n                                                    <img\n                                                        :src=\"assetFilter('administration/static/img/empty-states/settings-empty-state.svg')\"\n                                                        :alt=\"$tc('sw-settings-listing.index.productSorting.emptyState.title')\"\n                                                    >\n                                                </template>\n                                            {% endblock %}\n                                        </sw-empty-state>\n                                    {% endblock %}\n                                </sw-card>\n                            {% endblock %}\n                        </div>\n                    </sw-card-view>\n                {% endblock %}\n\n                <!-- eslint-disable-next-line sw-deprecation-rules/no-twigjs-blocks -->\n                {% block sw_settings_listing_content_card_view_options_delete_modal %}\n                    <sw-settings-listing-delete-modal\n                        v-if=\"toBeDeletedProductSortingOption\"\n                        :title=\"$tc('sw-settings-listing.index.deleteModal.title')\"\n                        :description=\"$t('sw-settings-listing.index.deleteModal.description', {\n                'sortingOptionName': toBeDeletedProductSortingOption.label\n            })\"\n                        @cancel=\"toBeDeletedProductSortingOption = null\"\n                        @delete=\"onDeleteProductSorting(toBeDeletedProductSortingOption)\"\n                    />\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n","/**\n * @package inventory\n */\nimport template from './sw-settings-listing.html.twig';\nimport './sw-settings-listing.scss';\n\nconst { Criteria } = Cicada.Data;\nconst { CicadaError } = Cicada.Classes;\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nexport default {\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'repositoryFactory',\n        'systemConfigApiService',\n    ],\n\n    mixins: [\n        'notification',\n        'sw-inline-snippet',\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            isSaveSuccessful: false,\n            productSortingOptions: [],\n            searchResultSortingOptions: [],\n            sortingOptionsGridLimit: 10,\n            sortingOptionsGridPage: 1,\n            modalVisible: false,\n            toBeDeletedProductSortingOption: null,\n            productSortingOptionsSearchTerm: null,\n            isProductSortingOptionsCardLoading: false,\n            isDefaultSalesChannelLoading: false,\n            customFields: [],\n            hasDefaultSortingError: false,\n        };\n    },\n\n    computed: {\n        productSortingOptionRepository() {\n            return this.repositoryFactory.create('product_sorting');\n        },\n\n        customFieldRepository() {\n            return this.repositoryFactory.create('custom_field');\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        systemConfigRepository() {\n            return this.repositoryFactory.create('system_config');\n        },\n\n        productSortingsOptionsCriteria() {\n            const criteria = new Criteria(this.sortingOptionsGridPage, this.sortingOptionsGridLimit);\n\n            criteria.addSorting(Criteria.sort('priority', 'DESC'));\n\n            criteria.addFilter(Criteria.equals('locked', false));\n\n            return criteria;\n        },\n\n        searchResultSortingOptionCriteria() {\n            const criteria = new Criteria(this.sortingOptionsGridPage, this.sortingOptionsGridLimit);\n\n            criteria.addSorting(Criteria.sort('priority', 'DESC'));\n\n            return criteria;\n        },\n\n        productSortingOptionsSearchCriteria() {\n            const criteria = new Criteria(1, 25);\n\n            criteria.addSorting(Criteria.sort('priority', 'DESC'));\n\n            criteria.addFilter(Criteria.equals('locked', false));\n\n            criteria.addFilter(Criteria.contains('label', this.productSortingOptionsSearchTerm));\n\n            return criteria;\n        },\n\n        sortingOptionsGridTotal() {\n            return this.productSortingOptions.total;\n        },\n\n        customFieldCriteria() {\n            return new Criteria(1, 25);\n        },\n\n        productSortingOptionColumns() {\n            return [\n                {\n                    property: 'label',\n                    routerLink: 'sw.settings.listing.edit',\n                    label: this.$tc('sw-settings-listing.index.productSorting.grid.header.name'),\n                },\n                {\n                    property: 'criteria',\n                    label: this.$tc('sw-settings-listing.index.productSorting.grid.header.criteria'),\n                    multiLine: true,\n                },\n                {\n                    property: 'priority',\n                    inlineEdit: 'number',\n                    label: this.$tc('sw-settings-listing.index.productSorting.grid.header.priority'),\n                },\n            ];\n        },\n\n        assetFilter() {\n            return Cicada.Filter.getByName('asset');\n        },\n\n        salesChannelDefaultSortingError() {\n            const code = this.$refs.systemConfig.isNotDefaultSalesChannel\n                ? 'PARENT_MUST_NOT_BE_EMPTY'\n                : 'c1051bb4-d103-4f74-8988-acbcafc7fdc3';\n\n            return new CicadaError({\n                code,\n            });\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        createdComponent() {\n            this.fetchProductSortingOptions();\n            this.fetchSearchResultSortingOptions();\n            this.fetchCustomFields();\n        },\n\n        fetchProductSortingOptions() {\n            this.isProductSortingOptionsCardLoading = true;\n\n            this.productSortingOptionRepository.search(this.productSortingsOptionsCriteria).then((response) => {\n                this.productSortingOptions = response;\n\n                this.isProductSortingOptionsCardLoading = false;\n            });\n        },\n\n        fetchSearchResultSortingOptions() {\n            this.isProductSortingOptionsCardLoading = true;\n\n            this.productSortingOptionRepository.search(this.searchResultSortingOptionCriteria).then((response) => {\n                this.searchResultSortingOptions = response;\n\n                this.isProductSortingOptionsCardLoading = false;\n            });\n        },\n\n        fetchCustomFields() {\n            this.customFieldRepository.search(this.customFieldCriteria).then((response) => {\n                this.customFields = response;\n            });\n        },\n\n        async onSave() {\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n            this.hasDefaultSortingError = false;\n\n            const validateSalesChannelDefaultSortingOption = new Promise((resolve, reject) => {\n                if (!this.$refs.systemConfig.actualConfigData.null['core.listing.defaultSorting']) {\n                    this.hasDefaultSortingError = true;\n                    reject();\n                }\n                resolve();\n            });\n\n            return validateSalesChannelDefaultSortingOption\n                .then(async () => {\n                    const saveSalesChannelConfig = this.$refs.systemConfig.saveAll();\n\n                    this.setDefaultSortingActive();\n\n                    const saveProductSortingOptions = this.saveProductSortingOptions();\n\n                    const saveSearchResultSortingOptions = this.saveSearchResultSortingOptions();\n\n                    const saveSalesChannelVisibilityConfig =\n                        this.$refs.defaultSalesChannelCard.saveSalesChannelVisibilityConfig();\n\n                    return Promise.all([\n                        saveSalesChannelConfig,\n                        saveProductSortingOptions,\n                        saveSearchResultSortingOptions,\n                        saveSalesChannelVisibilityConfig,\n                    ]);\n                })\n                .then(() => {\n                    this.isSaveSuccessful = true;\n\n                    this.createNotificationSuccess({\n                        message: this.$tc('sw-settings-listing.general.messageSaveSuccess'),\n                    });\n                })\n                .catch((e) => {\n                    const options = {\n                        message: e?.response.data?.errors[0]?.detail || 'Unknown error',\n                    };\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-listing.general.messageSaveError', options),\n                    });\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        saveProductSortingOptions() {\n            return this.productSortingOptionRepository.saveAll(this.productSortingOptions);\n        },\n\n        saveSearchResultSortingOptions() {\n            return this.productSortingOptionRepository.saveAll(this.searchResultSortingOptions);\n        },\n\n        onDeleteProductSorting(item) {\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equals('configurationKey', 'core.listing.defaultSorting'));\n            criteria.addFilter(Criteria.equals('configurationValue', item.id));\n\n            this.systemConfigRepository.search(criteria).then((result) => {\n                const actualConfigData = {};\n                result.forEach((entry) => {\n                    actualConfigData[entry.salesChannelId] = {\n                        'core.listing.defaultSorting': null,\n                    };\n                });\n                // cannot delete the entries directly via the systemConfigRepository, because Rufus blocks write access\n                this.systemConfigApiService.batchSave(actualConfigData);\n            });\n\n            Object.keys(this.$refs.systemConfig.actualConfigData).forEach((id) => {\n                const configData = this.$refs.systemConfig.actualConfigData[id];\n                if (configData && configData['core.listing.defaultSorting'] === item.id) {\n                    configData['core.listing.defaultSorting'] = null;\n                }\n            });\n\n            // closes modal\n            this.toBeDeletedProductSortingOption = null;\n\n            this.productSortingOptionRepository\n                .delete(item.id)\n                .catch(() => {\n                    this.createNotificationError({\n                        message: this.$tc('sw-settings-listing.index.productSorting.messageDeleteError'),\n                    });\n                })\n                .finally(() => {\n                    this.fetchProductSortingOptions();\n                    this.checkForPagination();\n                });\n        },\n\n        /**\n         * check, if we need to paginate back, when deleting the last sorting option on a page\n         */\n        checkForPagination() {\n            if (this.sortingOptionsGridPage !== 1) {\n                const newTotal = this.productSortingOptions.total - 1;\n\n                if (this.sortingOptionsGridPage * this.sortingOptionsGridLimit >= newTotal) {\n                    this.onPageChange({\n                        page: this.sortingOptionsGridPage - 1,\n                        limit: this.sortingOptionsGridLimit,\n                    });\n                }\n            }\n        },\n\n        onPageChange({ page = 1, limit = 10 }) {\n            this.sortingOptionsGridPage = page;\n            this.sortingOptionsGridLimit = limit;\n\n            this.fetchProductSortingOptions();\n        },\n\n        onEditProductSortingOption(productSortingId) {\n            this.$router.push({\n                name: 'sw.settings.listing.edit',\n                params: { id: productSortingId },\n            });\n        },\n\n        formatProductSortingOptionField(fields) {\n            if (!Array.isArray(fields)) {\n                return '';\n            }\n\n            const labels = fields.map((currentField) => {\n                if (this.isItemACustomField(currentField.field)) {\n                    return this.getCustomFieldLabelByCriteriaName(currentField.field);\n                }\n\n                return this.$tc(\n                    `sw-settings-listing.general.productSortingCriteriaGrid.options.label.${currentField.field}`,\n                );\n            });\n\n            return labels.join(', ');\n        },\n\n        getCustomFieldLabelByCriteriaName(criteriaName) {\n            const technicalName = this.stripCustomFieldPath(criteriaName);\n            const customField = this.getCustomFieldByName(technicalName);\n\n            const inlineSnippet = this.getInlineSnippet(customField.config.label);\n\n            if (inlineSnippet === null) {\n                return technicalName;\n            }\n\n            return inlineSnippet;\n        },\n\n        getCustomFieldByName(technicalName) {\n            return this.customFields.find((currentCustomField) => {\n                return currentCustomField.name === technicalName;\n            });\n        },\n\n        onAddNewProductSortingOption() {\n            this.$router.push({ name: 'sw.settings.listing.create' });\n        },\n\n        onSearchProductSortingOptions() {\n            const searchTerm = this.productSortingOptionsSearchTerm;\n\n            if (!searchTerm) {\n                this.fetchProductSortingOptions();\n                return;\n            }\n\n            this.productSortingOptionRepository.search(this.productSortingOptionsSearchCriteria).then((response) => {\n                this.productSortingOptions = response;\n            });\n        },\n\n        onSaveProductSortingOptionInlineEdit(newProductSortingOption) {\n            const indexOfOldProductSortingOption = this.productSortingOptions.findIndex((currentElement) => {\n                return currentElement.id === newProductSortingOption.id;\n            });\n\n            this.productSortingOptions[indexOfOldProductSortingOption] = newProductSortingOption;\n\n            this.onSave().then(() => {\n                this.fetchProductSortingOptions();\n            });\n        },\n\n        isItemACustomField(fieldName) {\n            const strippedFieldName = this.stripCustomFieldPath(fieldName);\n\n            return this.customFields.some((currentCustomField) => {\n                return currentCustomField.name === strippedFieldName;\n            });\n        },\n\n        getCustomFieldById(id) {\n            const customField = this.customFields.find((currentCustomField) => {\n                return currentCustomField.id === id;\n            });\n\n            return customField.name;\n        },\n\n        stripCustomFieldPath(fieldName) {\n            return fieldName.replace(/customFields\\./, '');\n        },\n\n        isProductSortingEditable(item) {\n            return !item.locked;\n        },\n\n        onChangeLanguage() {\n            this.fetchProductSortingOptions();\n        },\n\n        setDefaultSortingActive() {\n            const defaultSortingId = this.$refs.systemConfig.actualConfigData.null['core.listing.defaultSorting'];\n\n            if (defaultSortingId) {\n                Object.entries(this.productSortingOptions).forEach(\n                    ([\n                         ,\n                         productSorting,\n                     ]) => {\n                        if (productSorting.id === defaultSortingId) {\n                            productSorting.active = true;\n                        }\n                    },\n                );\n            }\n        },\n\n        isItemDefaultSorting(sortingId) {\n            const systemSettingAvailable = !!this.$refs.systemConfig.actualConfigData.null;\n\n            if (!systemSettingAvailable) {\n                return null;\n            }\n\n            return sortingId === this.$refs.systemConfig.actualConfigData.null['core.listing.defaultSorting'];\n        },\n\n        onLoadingChanged(loading) {\n            this.isLoading = loading;\n        },\n    },\n};\n"],"names":["template","Criteria","CicadaError","index","criteria","code","response","resolve","reject","saveSalesChannelConfig","saveProductSortingOptions","saveSearchResultSortingOptions","saveSalesChannelVisibilityConfig","e","_a","_b","options","item","result","actualConfigData","entry","id","configData","newTotal","page","limit","productSortingId","fields","currentField","criteriaName","technicalName","customField","inlineSnippet","currentCustomField","newProductSortingOption","indexOfOldProductSortingOption","currentElement","fieldName","strippedFieldName","defaultSortingId","productSorting","sortingId","loading"],"mappings":"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"}