{"version":3,"file":"index-xbBVkGDL.js","sources":["../../../app/administration/src/module/sw-custom-entity/page/sw-generic-custom-entity-detail/sw-generic-custom-entity-detail.html.twig","../../../app/administration/src/module/sw-custom-entity/page/sw-generic-custom-entity-detail/index.ts"],"sourcesContent":["<sw-page\n    class=\"sw-generic-custom-entity-detail\"\n    :header-border-color=\"entityAccentColor\"\n>\n    <template #smart-bar-header>\n        <h2 class=\"sw-generic-custom-entity-detail__title\">\n            {{ placeholder(customEntityData, titlePropertyName, $tc(`${customEntityName}.moduleTitle`)) }}\n        </h2>\n    </template>\n\n    <template #smart-bar-actions>\n        <sw-button-process\n            class=\"sw-generic-custom-entity-detail__save-action\"\n            :is-loading=\"isLoading\"\n            :process-success=\"isSaveSuccessful\"\n            variant=\"primary\"\n            :disabled=\"isLoading\"\n            @update:process-success=\"saveFinish\"\n            @click=\"onSave\"\n        >\n            {{ $tc('global.default.save') }}\n        </sw-button-process>\n    </template>\n\n    <template #language-switch>\n        <sw-language-switch @on-change=\"onChangeLanguage\" />\n    </template>\n\n    <template #content>\n        <sw-card-view>\n            <sw-tabs\n                v-if=\"detailTabs\"\n                class=\"sw-generic-custom-entity-detail__tabs\"\n                position-identifier=\"sw-generic-custom-entity-detail-tabs\"\n                :default-item=\"mainTabName\"\n                :small=\"false\"\n            >\n                <template #default=\"{ active }\">\n                    <sw-tabs-item\n                        v-for=\"tab in detailTabs\"\n                        :key=\"`tab-item-${tab.name}`\"\n                        class=\"sw-generic-custom-entity-detail__tab-item\"\n                        :name=\"tab.name\"\n                        :active-tab=\"active\"\n                    >\n                        {{ getLabel('tabs', tab.name) }}\n                    </sw-tabs-item>\n\n                    <sw-tabs-item\n                        v-if=\"customEntityDataDefinition?.flags?.['cms-aware']\"\n                        class=\"sw-generic-custom-entity-detail__tab-item\"\n                        name=\"cms-aware-tab-layout\"\n                        :active-tab=\"active\"\n                    >\n                        {{ $tc('sw-custom-entity.detail.tabs.layout') }}\n                    </sw-tabs-item>\n\n                    <sw-tabs-item\n                        v-if=\"customEntityDataDefinition?.flags?.['cms-aware']\"\n                        class=\"sw-generic-custom-entity-detail__tab-item\"\n                        name=\"cms-aware-tab-seo\"\n                        :active-tab=\"active\"\n                    >\n                        {{ $tc('sw-custom-entity.detail.tabs.seo') }}\n                    </sw-tabs-item>\n                </template>\n\n                <template #content=\"{ active }\">\n                    <template\n                        v-for=\"tab in detailTabs\"\n                        :key=\"`tab-${tab.name}`\"\n                    >\n                        <div\n                            v-if=\"active === tab.name\"\n                            class=\"sw-generic-custom-entity-detail__tab\"\n                        >\n                            <sw-card\n                                v-for=\"card in tab.cards\"\n                                :key=\"`card-${card.name}`\"\n                                class=\"sw-generic-custom-entity-detail__card\"\n                                position-identifier=\"`sw-generic-custom-entity-detail-tab-${card.name}`\"\n                                :title=\"getLabel('cards', card.name)\"\n                            >\n                                <template v-if=\"!isLoading\">\n                                    <sw-custom-entity-input-field\n                                        v-for=\"field in card.fields\"\n                                        :key=\"field.ref\"\n                                        v-model:value=\"customEntityData[field.ref]\"\n                                        class=\"sw-generic-custom-entity-detail__field\"\n                                        :type=\"getType(field.ref)\"\n                                        :label=\"getLabel('fields', field.ref)\"\n                                        :placeholder=\"getPlaceholder('fields', field.ref)\"\n                                        :help-text=\"getHelpText('fields', field.ref)\"\n                                    />\n                                </template>\n                            </sw-card>\n                        </div>\n                    </template>\n\n                    <sw-generic-cms-page-assignment\n                        v-if=\"active === 'cms-aware-tab-layout'\"\n                        :cms-page-id=\"customEntityData?.swCmsPageId\"\n                        :slot-overrides=\"customEntityData?.swSlotConfig\"\n                        class=\"sw-generic-custom-entity-detail__tab sw-generic-custom-entity-detail__tab-cms-aware\"\n                        @update:cms-page-id=\"updateCmsPageId\"\n                        @update:slot-overrides=\"updateCmsSlotOverwrites\"\n                        @create-layout=\"onCreateLayout\"\n                    />\n\n                    <template\n                        v-else-if=\"active === 'cms-aware-tab-seo'\"\n                    >\n                        <sw-generic-seo-general-card\n                            :seo-meta-title=\"customEntityData?.swSeoMetaTitle\"\n                            :seo-meta-description=\"customEntityData?.swSeoMetaDescription\"\n                            :seo-url=\"customEntityData?.swSeoUrl\"\n                            @update:seo-meta-title=\"updateSeoMetaTitle\"\n                            @update:seo-meta-description=\"updateSeoMetaDescription\"\n                            @update:seo-url=\"updateSeoUrl\"\n                        />\n\n                        <sw-generic-social-media-card\n                            :og-title=\"customEntityData?.swOgTitle\"\n                            :og-description=\"customEntityData?.swOgDescription\"\n                            :og-image-id=\"customEntityData?.swOgImageId\"\n                            @update:og-title=\"updateOgTitle\"\n                            @update:og-description=\"updateOgDescription\"\n                            @update:og-image-id=\"updateOgImageId\"\n                        />\n                    </template>\n                </template>\n            </sw-tabs>\n        </sw-card-view>\n    </template>\n</sw-page>\n","import type { Entity } from '@cicada-ag/meteor-admin-sdk/es/_internals/data/Entity';\nimport type {\n    AdminTabsDefinition,\n    CustomEntityDefinition,\n    CustomEntityProperties,\n    AdminUiDefinition,\n} from 'src/app/service/custom-entity-definition.service';\nimport type EntityCollection from 'src/core/data/entity-collection.data';\nimport type Repository from 'src/core/data/repository.data';\n\nimport template from './sw-generic-custom-entity-detail.html.twig';\nimport './sw-generic-custom-entity-detail.scss';\n\nconst { Mixin } = Cicada;\n\ntype GenericCustomEntityDetailData = {\n    isLoading: boolean;\n    isSaveSuccessful: boolean;\n    customEntityData: Entity<'generic_custom_entity'> | null;\n    customEntityDataInstances?: EntityCollection<'generic_custom_entity'>;\n};\n\n/**\n * @private\n * @package content\n */\nexport default Cicada.Component.wrapComponentConfig({\n    template,\n\n    compatConfig: Cicada.compatConfig,\n\n    inject: [\n        'customEntityDefinitionService',\n        'repositoryFactory',\n        'acl',\n    ],\n\n    mixins: [\n        Mixin.getByName('placeholder'),\n        Mixin.getByName('notification'),\n    ],\n\n    data(): GenericCustomEntityDetailData {\n        return {\n            isLoading: true,\n            isSaveSuccessful: false,\n            customEntityData: null,\n            customEntityDataInstances: undefined,\n        };\n    },\n\n    computed: {\n        customEntityDataId(): string | string[] {\n            return this.$route.params?.id;\n        },\n\n        customEntityName(): string | string[] {\n            return this.$route.params.entityName || '';\n        },\n\n        customEntityDataDefinition(): Readonly<CustomEntityDefinition | null> {\n            if (!this.customEntityName) {\n                return null;\n            }\n\n            return this.customEntityDefinitionService.getDefinitionByName(this.customEntityName as string) ?? null;\n        },\n\n        customEntityDataRepository(): Repository<'generic_custom_entity'> | null {\n            if (this.customEntityDataDefinition === null) {\n                return null;\n            }\n\n            return this.repositoryFactory.create(this.customEntityDataDefinition.entity as 'generic_custom_entity');\n        },\n\n        customEntityProperties(): CustomEntityProperties | undefined {\n            return this.customEntityDataDefinition?.properties;\n        },\n\n        adminConfig(): AdminUiDefinition | undefined {\n            return this.customEntityDataDefinition?.flags['admin-ui'];\n        },\n\n        entityAccentColor(): string | undefined {\n            return this.adminConfig?.color;\n        },\n\n        detailTabs(): AdminTabsDefinition[] {\n            return this.customEntityDataDefinition?.flags['admin-ui']?.detail?.tabs ?? [];\n        },\n\n        mainTabName(): string | undefined {\n            return this.detailTabs?.[0]?.name;\n        },\n\n        titlePropertyName(): string | undefined {\n            return this.detailTabs?.[0]?.cards?.[0].fields?.[0]?.ref;\n        },\n    },\n\n    created(): void {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent(): void {\n            this.initializeCustomEntity();\n        },\n\n        initializeCustomEntity(): void {\n            if (this.adminConfig !== null) {\n                // @ts-expect-error\n                // eslint-disable-next-line max-len\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-non-null-assertion\n                this.$route.meta.$module.icon = this.adminConfig?.icon;\n            }\n\n            // eslint-disable-next-line no-warning-comments\n            // ToDo NEXT-22874 - Favicon handling\n            void this.loadData();\n        },\n\n        async loadData(): Promise<void> {\n            this.isLoading = true;\n\n            try {\n                if (!this.customEntityDataRepository) {\n                    throw new Error(`Custom entity repository for \"${this.customEntityName as string}\" not found`);\n                }\n\n                if (!this.customEntityDataId) {\n                    this.customEntityData = this.customEntityDataRepository.create();\n                    this.isLoading = false;\n\n                    return;\n                }\n\n                this.customEntityData = await this.customEntityDataRepository.get(this.customEntityDataId as string);\n            } catch (e) {\n                console.error(e);\n\n                // Methods from mixins are not recognized\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                this.createNotificationError({\n                    message: this.$tc('global.notification.notificationLoadingDataErrorMessage'),\n                });\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        async onSave(): Promise<void> {\n            this.isLoading = true;\n\n            if (!this.customEntityData) {\n                return Promise.reject();\n            }\n\n            return this.customEntityDataRepository\n                ?.save(this.customEntityData)\n                .then(async () => {\n                    this.isSaveSuccessful = true;\n\n                    if (!this.customEntityDataId && this.customEntityData?.id) {\n                        await this.$router.push({\n                            name: 'sw.custom.entity.detail',\n                            params: {\n                                id: this.customEntityData.id,\n                            },\n                        });\n                    }\n\n                    void this.loadData();\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        saveFinish(): void {\n            this.isSaveSuccessful = false;\n        },\n\n        onChangeLanguage(languageId: string): void {\n            Cicada.State.commit('context/setApiLanguageId', languageId);\n            void this.loadData();\n        },\n\n        getFieldTranslation(namespace: string, name: string, suffix = '', checkExistence = false): string {\n            const snippetKey = [\n                this.customEntityName,\n                namespace,\n                name,\n            ]\n                .join('.')\n                .concat(suffix);\n            if (checkExistence && !this.$te(snippetKey)) {\n                return '';\n            }\n\n            return this.$tc(snippetKey);\n        },\n\n        getLabel(namespace: string, name: string): string {\n            return this.getFieldTranslation(namespace, name);\n        },\n\n        getPlaceholder(namespace: string, name: string): string {\n            return this.getFieldTranslation(namespace, name, 'Placeholder', true);\n        },\n\n        getHelpText(namespace: string, name: string): string {\n            return this.getFieldTranslation(namespace, name, 'HelpText', true);\n        },\n\n        getType(field: string): string {\n            return this.customEntityProperties?.[field]?.type || '';\n        },\n\n        updateCmsPageId(cmsPageId: string | null): void {\n            if (!this.customEntityData) {\n                return;\n            }\n\n            this.customEntityData.swCmsPageId = cmsPageId;\n        },\n\n        updateCmsSlotOverwrites(cmsSlotOverwrites: Entity<'generic_custom_entity'>['swSlotConfig'] | null): void {\n            if (!this.customEntityData) {\n                return;\n            }\n\n            this.customEntityData.swSlotConfig = cmsSlotOverwrites;\n        },\n\n        updateSeoMetaTitle(swSeoMetaTitle: string | null) {\n            if (!this.customEntityData) {\n                return;\n            }\n\n            this.customEntityData.swSeoMetaTitle = swSeoMetaTitle;\n        },\n\n        updateSeoMetaDescription(swSeoMetaDescription: string | null) {\n            if (!this.customEntityData) {\n                return;\n            }\n\n            this.customEntityData.swSeoMetaDescription = swSeoMetaDescription;\n        },\n\n        updateSeoUrl(swSeoUrl: string | null) {\n            if (!this.customEntityData) {\n                return;\n            }\n\n            this.customEntityData.swSeoUrl = swSeoUrl;\n        },\n\n        updateOgTitle(swOgTitle: string | null) {\n            if (!this.customEntityData) {\n                return;\n            }\n\n            this.customEntityData.swOgTitle = swOgTitle;\n        },\n\n        updateOgDescription(swOgDescription: string | null) {\n            if (!this.customEntityData) {\n                return;\n            }\n\n            this.customEntityData.swOgDescription = swOgDescription;\n        },\n\n        updateOgImageId(swOgImageId: string | null) {\n            if (!this.customEntityData) {\n                return;\n            }\n\n            this.customEntityData.swOgImageId = swOgImageId;\n        },\n\n        onCreateLayout(): void {\n            if (!this.customEntityData) {\n                return;\n            }\n\n            void this.$router.push({\n                name: 'sw.cms.create',\n                params: {\n                    id: this.customEntityData.id,\n                    type: this.customEntityName,\n                },\n            });\n        },\n    },\n});\n"],"names":["template","Mixin","index","_a","_b","_c","_d","_e","e","languageId","namespace","name","suffix","checkExistence","snippetKey","field","cmsPageId","cmsSlotOverwrites","swSeoMetaTitle","swSeoMetaDescription","swSeoUrl","swOgTitle","swOgDescription","swOgImageId"],"mappings":"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"}