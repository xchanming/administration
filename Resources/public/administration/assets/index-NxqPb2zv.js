const r=`{% block sw_first_run_wizard_modal %} <sw-modal :title="title" :variant="variant" :closable="isClosable" class="sw-first-run-wizard-modal" @modal-close="closeModal" > {% block sw_first_run_wizard_modal_content %} <div class="sw-first-run-wizard-modal-content"> <sw-container :class="{'one': !showSteps, 'two': showSteps}" class="sw-first-run-wizard-modal-content__columns" > {% block sw_first_run_wizard_modal_content_steps %} <div v-if="showSteps" class="sw-first-run-wizard-modal-content__steps" > <sw-step-display :item-index="stepIndex" :item-variant="stepVariant" :initial-item-variants="stepInitialItemVariants" > <sw-step-item v-if="!extensionManagementDisabled"> {{ $tc('sw-first-run-wizard.stepItemTitle.dataImport') }} </sw-step-item> <sw-step-item> {{ $tc('sw-first-run-wizard.stepItemTitle.defaults') }} </sw-step-item> <sw-step-item> {{ $tc('sw-first-run-wizard.stepItemTitle.mailer') }} </sw-step-item> <sw-step-item v-if="!extensionManagementDisabled"> {{ $tc('sw-first-run-wizard.stepItemTitle.setupPaypal') }} </sw-step-item> <sw-step-item v-if="!extensionManagementDisabled"> {{ $tc('sw-first-run-wizard.stepItemTitle.plugins') }} </sw-step-item> <sw-step-item> {{ $tc('sw-first-run-wizard.stepItemTitle.shopware') }} </sw-step-item> <sw-step-item v-if="!extensionManagementDisabled"> {{ $tc('sw-first-run-wizard.stepItemTitle.store') }} </sw-step-item> </sw-step-display> </div> {% endblock %} {% block sw_first_run_wizard_modal_content_page %} <div class="sw-first-run-wizard-modal-content__page"> <router-view v-slot="{ Component }" > <component :is="Component" v-if="Component" class="sw-first-run-wizard-modal__component" @buttons-update="updateButtons" @frw-redirect="redirect" @frw-set-title="setTitle" @frw-finish="finishFRW" @extension-activated="onExtensionActivated" /> </router-view> </div> {% endblock %} <sw-loader v-if="showLoader" class="sw-first-run-wizard-modal__loader" /> </sw-container> </div> {% endblock %} {% block sw_first_run_wizard_modal_footer %} <template #modal-footer> <div class="sw-first-run-wizard-modal__footer"> {% block sw_first_run_wizard_modal_footer_left %} <div class="footer-left"> <sw-button v-for="button in buttons.left" :key="button.action" :variant="button.variant" :disabled="button.disabled" size="small" @click="onButtonClick(button.action)" > {{ button.label }} </sw-button> </div> {% endblock %} {% block sw_first_run_wizard_modal_footer_right %} <div class="footer-right"> <sw-button v-for="button in buttons.right" :key="button.action" :variant="button.variant" :disabled="button.disabled" size="small" @click="onButtonClick(button.action)" > {{ button.label }} </sw-button> </div> {% endblock %} </div> </template> {% endblock %} </sw-modal> {% endblock %}`,s={template:r,inject:["firstRunWizardService"],data(){return{title:"No title defined",buttonConfig:[],showLoader:!1,wasNewExtensionActivated:!1,stepVariant:"info",currentStep:{name:"",variant:"large",navigationIndex:0}}},metaInfo(){return{title:this.title}},computed:{columns(){return this.showSteps?"1fr 4fr":"1fr"},variant(){const{variant:t}=this.currentStep;return t},showSteps(){const{navigationIndex:t}=this.currentStep;return t!==0},buttons(){return{right:this.buttonConfig.filter(t=>t.position==="right"),left:this.buttonConfig.filter(t=>t.position==="left")}},stepIndex(){const{navigationIndex:t}=this.currentStep;return t<1?0:t-1},stepInitialItemVariants(){const{navigationIndex:t}=this.currentStep,n=Object.values(this.stepper).reduce((a,e)=>Math.max(a,e.navigationIndex),0),i=Array(n+1).fill("disabled");return i.every((a,e)=>e>t?!1:(i[e]="info",e>0&&(i[e-1]="success"),!0)),i.splice(0,1),i},extensionManagementDisabled(){return Shopware.Store.get("context").app.config.settings.disableExtensionManagement},isClosable(){return!Shopware.Context.app.firstRunWizard},stepper(){return Shopware.Store.get("context").app.config.settings.disableExtensionManagement?{welcome:{name:"sw.first.run.wizard.index.welcome",variant:"large",navigationIndex:0},defaults:{name:"sw.first.run.wizard.index.defaults",variant:"large",navigationIndex:1},"mailer.selection":{name:"sw.first.run.wizard.index.mailer.selection",variant:"large",navigationIndex:2},"mailer.smtp":{name:"sw.first.run.wizard.index.mailer.smtp",variant:"large",navigationIndex:2},"mailer.local":{name:"sw.first.run.wizard.index.mailer.local",variant:"large",navigationIndex:2},"shopware.account":{name:"sw.first.run.wizard.index.shopware.account",variant:"large",navigationIndex:3},"shopware.domain":{name:"sw.first.run.wizard.index.shopware.domain",variant:"large",navigationIndex:3},finish:{name:"sw.first.run.wizard.index.finish",variant:"large",navigationIndex:4}}:{welcome:{name:"sw.first.run.wizard.index.welcome",variant:"large",navigationIndex:0},"data-import":{name:"sw.first.run.wizard.index.data-import",variant:"large",navigationIndex:1},defaults:{name:"sw.first.run.wizard.index.defaults",variant:"large",navigationIndex:2},"mailer.selection":{name:"sw.first.run.wizard.index.mailer.selection",variant:"large",navigationIndex:3},"mailer.smtp":{name:"sw.first.run.wizard.index.mailer.smtp",variant:"large",navigationIndex:3},"mailer.local":{name:"sw.first.run.wizard.index.mailer.local",variant:"large",navigationIndex:3},"paypal.info":{name:"sw.first.run.wizard.index.paypal.info",variant:"large",navigationIndex:4},"paypal.credentials":{name:"sw.first.run.wizard.index.paypal.credentials",variant:"large",navigationIndex:4},plugins:{name:"sw.first.run.wizard.index.plugins",variant:"large",navigationIndex:5},"shopware.account":{name:"sw.first.run.wizard.index.shopware.account",variant:"large",navigationIndex:6},"shopware.domain":{name:"sw.first.run.wizard.index.shopware.domain",variant:"large",navigationIndex:6},store:{name:"sw.first.run.wizard.index.store",variant:"large",navigationIndex:7},finish:{name:"sw.first.run.wizard.index.finish",variant:"large",navigationIndex:8}}}},watch:{$route(t){this.handleRouteUpdate(t)}},mounted(){const t=this.$route.name.replace("sw.first.run.wizard.index.","");this.currentStep=this.stepper[t]},created(){this.createdComponent()},methods:{handleRouteUpdate(t){const n=t.name.replace("sw.first.run.wizard.index.","");this.currentStep=this.stepper[n]},createdComponent(){this.firstRunWizardService.setFRWStart()},updateButtons(t){this.buttonConfig=t},onButtonClick(t){if(typeof t=="string"){this.redirect(t);return}typeof t=="function"&&t.call()},redirect(t){this.$router.push({name:t})},setTitle(t){this.title=t},finishFRW(){this.firstRunWizardService.setFRWFinish().then(()=>{document.location.href=document.location.origin+document.location.pathname})},onExtensionActivated(){this.wasNewExtensionActivated=!0},async closeModal(){this.isClosable&&(this.showLoader=!0,await this.$nextTick(),await this.$router.push({name:"sw.settings.index.system"}),this.wasNewExtensionActivated&&window.location.reload())}}};export{s as default};
