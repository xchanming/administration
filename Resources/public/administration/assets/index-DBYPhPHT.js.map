{"version":3,"mappings":";iDAGA,KAAM,CACF,MAAAA,EACA,KAAM,CAAE,SAAAC,CAAU,CACtB,EAAI,OACE,CAAE,MAAAC,CAAK,EAAK,OAAO,MAEzBF,EAAM,SAAS,mBAAoB,CAC/B,OAAQ,CACJA,EAAM,UAAU,SAAS,EACzBA,EAAM,UAAU,cAAc,CACjC,EAED,OAAQ,CAAC,mBAAmB,EAE5B,MAAO,CACH,MAAO,CACH,WAAY,GACZ,MAAO,CAAE,EACT,UAAW,GACX,gBAAiB,GACjB,aAAc,KACd,MAAO,CACH,GACA,GACA,EACH,CACb,CACK,EAED,SAAU,CACN,kBAAmB,CACf,OAAO,KAAK,kBAAkB,OAAO,KAAK,UAAU,CACvD,EAED,iBAAkB,CACd,MAAMG,EAAW,IAAIF,EAAS,KAAK,KAAM,KAAK,KAAK,EAEnD,OAAI,KAAK,MACLE,EAAS,QAAQ,KAAK,IAAI,EAGvBA,CACV,EAED,kBAAmB,CACf,OAAI,KAAK,IAAI,eAAe,KAAK,WAAW,QAAQ,OAAQ,GAAG,CAAC,0BAA0B,EAC/E,KAAK,IAAI,eAAe,KAAK,WAAW,QAAQ,OAAQ,GAAG,CAAC,0BAA0B,EAG1F,KAAK,IAAI,wBAAwB,CAC3C,EAED,oBAAqB,CACjB,GAAI,KAAK,aAAc,CACnB,IAAIC,EAAO,KAAK,aAAa,KAK7B,OAJI,KAAK,aAAa,eAAe,YAAY,GAAK,KAAK,aAAa,WAAW,eAAe,MAAM,IACpGA,EAAO,KAAK,aAAa,WAAW,MAGpC,KAAK,IAAI,eAAe,KAAK,WAAW,QAAQ,OAAQ,GAAG,CAAC,6BAA6B,EAClF,KAAK,IAAI,eAAe,KAAK,WAAW,QAAQ,OAAQ,GAAG,CAAC,6BAA8B,EAAG,CAChG,KAAMA,CAC9B,CAAqB,EAGE,KAAK,IAAI,2CAA4C,EAAG,CAC3D,KAAMA,CAC1B,CAAiB,CACJ,CACD,MAAO,EACV,CACJ,EAED,SAAU,CACF,KAAK,aAAe,IACpBF,EAAM,KAAK,yBAA0B,oDAAoD,CAEhG,EAED,QAAS,CACL,SAAU,CACN,KAAK,UAAY,GAEjB,KAAK,iBACA,OAAO,KAAK,eAAe,EAC3B,KAAMG,IACH,KAAK,MAAQA,EACb,KAAK,MAAQA,EAAM,MAEZ,KAAK,MACf,EACA,QAAQ,IAAM,CACX,KAAK,UAAY,EACrC,CAAiB,CACR,EAED,kBAAmB,CACf,KAAK,QAAO,CACf,EAED,SAASC,EAAI,CACT,KAAK,gBAAkBA,CAC1B,EAED,oBAAqB,CACjB,KAAK,gBAAkB,EAC1B,EAED,gBAAgBA,EAAI,CAChB,YAAK,aAAe,KAAK,MAAM,KAAMC,GAASA,EAAK,KAAOD,CAAE,EAE5D,KAAK,mBAAkB,EAChB,KAAK,iBACP,OAAOA,CAAE,EACT,KAAK,IAAM,CACR,KAAK,0BAA0B,CAC3B,MAAO,KAAK,iBACZ,QAAS,KAAK,kBACtC,CAAqB,CACrB,CAAiB,EACA,QAAQ,IAAM,CACX,KAAK,aAAe,KACpB,KAAK,QAAO,CAChC,CAAiB,CACR,EAED,iBAAiBC,EAAM,CACnB,YAAK,UAAY,GAEV,KAAK,iBAAiB,KAAKA,CAAI,EAAE,QAAQ,IAAM,CAClD,KAAK,UAAY,EACjC,CAAa,CACJ,EAED,oBAAqB,CACjB,KAAK,QAAO,CACf,CACJ,CACL,CAAC,EC1ID,OAAO,QAAQ,YAAY,EAAE,yBAAyB,CAClD,SAAU,yBACV,OAAQ,KACR,IAAK,SACL,MAAO,CACH,cAAe,CACX,WAAY,CACR,qBACA,uBACA,uBACA,uBACA,qBACA,gBACA,uBACA,oBACA,iCACA,yBACA,yBACA,yBACA,wBACA,0BACA,yBACH,EACD,aAAc,CAAE,CACnB,CACJ,CACL,CAAC,ECvBD,KAAM,CAAE,OAAAC,CAAQ,EAAG,OAGnB,OAAO,UAAU,SAAS,mBAAoB,UAAM,OAAO,qBAA8B,yBAAC,EAC1F,OAAO,UAAU,SAAS,mBAAoB,UAAM,OAAO,qBAA8B,iDAAC,EAC1F,OAAO,UAAU,SAAS,oBAAqB,UAAM,OAAO,qBAA0B,2BAAC,EAIvFA,EAAO,SAAS,cAAe,CAC3B,KAAM,OACN,KAAM,WACN,MAAO,0CACP,MAAO,UACP,KAAM,cACN,QAAS,2BAET,OAAQ,CACJ,MAAO,CACH,UAAW,oBACX,KAAM,QACN,KAAM,cACN,SAAU,CACN,KAAM,wBACT,EACD,SAAU,CACN,KAAM,CACF,KAAM,OACN,KAAM,CACF,UAAW,oBACX,WAAY,mBACf,CACJ,EACD,OAAQ,CACJ,KAAM,SACN,KAAM,CACF,UAAW,oBACX,WAAY,mBACf,CACJ,EACD,QAAS,CACL,KAAM,UACN,KAAM,CACF,UAAW,oBACX,WAAY,mBACf,CACJ,CACJ,CACJ,CACJ,EAED,WAAY,CACR,CACI,GAAI,cACJ,MAAO,0CACP,MAAO,UACP,KAAM,cACN,KAAM,oBACN,SAAU,EACb,CACJ,CACL,CAAC","names":["Mixin","Criteria","debug","criteria","name","items","id","item","Module"],"ignoreList":[],"sources":["../../../app/administration/src/module/sw-settings/mixin/sw-settings-list.mixin.js","../../../app/administration/src/module/sw-settings/acl/index.js","../../../app/administration/src/module/sw-settings/index.js"],"sourcesContent":["/**\n * @package services-settings\n */\nconst {\n    Mixin,\n    Data: { Criteria },\n} = Cicada;\nconst { debug } = Cicada.Utils;\n\nMixin.register('sw-settings-list', {\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    inject: ['repositoryFactory'],\n\n    data() {\n        return {\n            entityName: '',\n            items: [],\n            isLoading: false,\n            showDeleteModal: false,\n            deleteEntity: null,\n            steps: [\n                10,\n                25,\n                50,\n            ],\n        };\n    },\n\n    computed: {\n        entityRepository() {\n            return this.repositoryFactory.create(this.entityName);\n        },\n\n        listingCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            if (this.term) {\n                criteria.setTerm(this.term);\n            }\n\n            return criteria;\n        },\n\n        titleSaveSuccess() {\n            if (this.$te(`sw-settings-${this.entityName.replace(/[_]/g, '-')}.list.titleDeleteSuccess`)) {\n                return this.$tc(`sw-settings-${this.entityName.replace(/[_]/g, '-')}.list.titleDeleteSuccess`);\n            }\n\n            return this.$tc('global.default.success');\n        },\n\n        messageSaveSuccess() {\n            if (this.deleteEntity) {\n                let name = this.deleteEntity.name;\n                if (this.deleteEntity.hasOwnProperty('translated') && this.deleteEntity.translated.hasOwnProperty('name')) {\n                    name = this.deleteEntity.translated.name;\n                }\n\n                if (this.$te(`sw-settings-${this.entityName.replace(/[_]/g, '-')}.list.messageDeleteSuccess)`)) {\n                    return this.$tc(`sw-settings-${this.entityName.replace(/[_]/g, '-')}.list.messageDeleteSuccess`, 0, {\n                        name: name,\n                    });\n                }\n\n                return this.$tc('global.notification.messageDeleteSuccess', 0, {\n                    name: name,\n                });\n            }\n            return '';\n        },\n    },\n\n    created() {\n        if (this.entityName === '') {\n            debug.warn('sw-settings-list mixin', 'You need to define the data property \"entityName\".');\n        }\n    },\n\n    methods: {\n        getList() {\n            this.isLoading = true;\n\n            this.entityRepository\n                .search(this.listingCriteria)\n                .then((items) => {\n                    this.items = items;\n                    this.total = items.total;\n\n                    return this.items;\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        onChangeLanguage() {\n            this.getList();\n        },\n\n        onDelete(id) {\n            this.showDeleteModal = id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete(id) {\n            this.deleteEntity = this.items.find((item) => item.id === id);\n\n            this.onCloseDeleteModal();\n            return this.entityRepository\n                .delete(id)\n                .then(() => {\n                    this.createNotificationSuccess({\n                        title: this.titleSaveSuccess,\n                        message: this.messageSaveSuccess,\n                    });\n                })\n                .finally(() => {\n                    this.deleteEntity = null;\n                    this.getList();\n                });\n        },\n\n        onInlineEditSave(item) {\n            this.isLoading = true;\n\n            return this.entityRepository.save(item).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onInlineEditCancel() {\n            this.getList();\n        },\n    },\n});\n","/**\n * @package services-settings\n */\nCicada.Service('privileges').addPrivilegeMappingEntry({\n    category: 'additional_permissions',\n    parent: null,\n    key: 'system',\n    roles: {\n        system_config: {\n            privileges: [\n                'system_config:read',\n                'system_config:update',\n                'system_config:create',\n                'system_config:delete',\n                'sales_channel:read',\n                'cms_page:read',\n                'product_sorting:read',\n                'custom_field:read',\n                'custom_field_set_relation:read',\n                'product_sorting:create',\n                'product_sorting:update',\n                'product_sorting:delete',\n                'seo_url_template:read',\n                'seo_url_template:create',\n                'seo_url_template:update',\n            ],\n            dependencies: [],\n        },\n    },\n});\n","/**\n * @package services-settings\n */\nimport './mixin/sw-settings-list.mixin';\nimport './acl';\n\nconst { Module } = Cicada;\n\n/* eslint-disable sw-deprecation-rules/private-feature-declarations */\nCicada.Component.register('sw-settings-item', () => import('./component/sw-settings-item'));\nCicada.Component.register('sw-system-config', () => import('./component/sw-system-config'));\nCicada.Component.register('sw-settings-index', () => import('./page/sw-settings-index'));\n/* eslint-enable sw-deprecation-rules/private-feature-declarations */\n\n// eslint-disable-next-line sw-deprecation-rules/private-feature-declarations\nModule.register('sw-settings', {\n    type: 'core',\n    name: 'settings',\n    title: 'sw-settings.general.mainMenuItemGeneral',\n    color: '#9AA8B5',\n    icon: 'regular-cog',\n    favicon: 'icon-module-settings.png',\n\n    routes: {\n        index: {\n            component: 'sw-settings-index',\n            path: 'index',\n            icon: 'regular-cog',\n            redirect: {\n                name: 'sw.settings.index.shop',\n            },\n            children: {\n                shop: {\n                    path: 'shop',\n                    meta: {\n                        component: 'sw-settings-index',\n                        parentPath: 'sw.settings.index',\n                    },\n                },\n                system: {\n                    path: 'system',\n                    meta: {\n                        component: 'sw-settings-index',\n                        parentPath: 'sw.settings.index',\n                    },\n                },\n                plugins: {\n                    path: 'plugins',\n                    meta: {\n                        component: 'sw-settings-index',\n                        parentPath: 'sw.settings.index',\n                    },\n                },\n            },\n        },\n    },\n\n    navigation: [\n        {\n            id: 'sw-settings',\n            label: 'sw-settings.general.mainMenuItemGeneral',\n            color: '#9AA8B5',\n            icon: 'regular-cog',\n            path: 'sw.settings.index',\n            position: 80,\n        },\n    ],\n});\n"],"file":"assets/index-DBYPhPHT.js"}