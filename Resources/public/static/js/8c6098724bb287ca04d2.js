(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[19636],{131950:function(){},19636:function(e,a,t){"use strict";t.r(a),t.d(a,{default:function(){return r}});var l=t(362646);t(797815);let{Mixin:i,Context:n}=Cicada,{Criteria:s,EntityCollection:m}=Cicada.Data,{warn:o}=Cicada.Utils.debug,{mapPropertyErrors:d}=Cicada.Component.getComponentHelper();var r={template:'\n{% block sw_mail_template_detail %}\n<sw-page class="sw-mail-template-detail">\n\n    \n    {% block sw_mail_template_detail_header %}\n    <template #smart-bar-header>\n        <h2 v-if="mailTemplate">\n            {{ $tc(\'sw-mail-template.detail.textHeadlineEdit\') }}\n        </h2>\n        <h2\n            v-else\n            class="sw-mail-template-detail__empty-title"\n        >\n            {{ $tc(\'sw-mail-template.detail.textHeadline\') }}\n        </h2>\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_mail_template_detail_actions %}\n    <template #smart-bar-actions>\n        \n        {% block sw_mail_template_detail_actions_abort %}\n        <sw-button\n            v-tooltip.bottom="{\n                message: \'ESC\',\n                appearance: \'light\'\n            }"\n            :disabled="isLoading"\n            @click="onCancel"\n        >\n            {{ $tc(\'global.default.cancel\') }}\n        </sw-button>\n        {% endblock %}\n\n        \n        {% block sw_mail_template_detail_actions_save %}\n        <sw-button-process\n            v-tooltip.bottom="tooltipSave"\n            class="sw-mail-template-detail__save-action"\n            variant="primary"\n            :is-loading="isLoading"\n            :process-success="isSaveSuccessful"\n            :disabled="!allowSave || undefined"\n            @update:process-success="saveFinish"\n            @click.prevent="onSave"\n        >\n            {{ $tc(\'sw-mail-template.detail.buttonSave\') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_mail_template_detail_language_switch %}\n    <template #language-switch>\n        <sw-language-switch\n            :save-changes-function="saveOnLanguageChange"\n            :abort-change-function="abortOnLanguageChange"\n            @on-change="onChangeLanguage"\n        />\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_mail_template_detail_content %}\n    <template #content>\n        <sw-card-view sidebar>\n            <template v-if="isLoading">\n                <sw-skeleton variant="detail-bold" />\n                <sw-skeleton />\n            </template>\n\n            <template v-else>\n                \n                {% block sw_mail_template_detail_content_language_info %}\n                <sw-language-info\n                    :entity-description="placeholder(mailTemplate.mailTemplateType, \'name\', $tc(\'sw-mail-template.detail.textHeadline\'))"\n                />\n                {% endblock %}\n\n                \n                {% block sw_mail_template_detail_basic_info %}\n                <sw-card\n                    :title="$tc(\'sw-mail-template.detail.basic.titleCard\')"\n                    position-identifier="sw-mail-template-detail-basic-info"\n                >\n                    \n                    {% block sw_mail_template_basic_form_mail_type_field %}\n                    <sw-entity-single-select\n                        id="mailTemplateTypes"\n                        v-model:value="mailTemplate.mailTemplateTypeId"\n                        name="sw-field--mailTemplate-mailTemplateTypeId"\n                        entity="mail_template_type"\n                        required\n                        show-clearable-button\n                        :label="$tc(\'sw-mail-template.detail.basic.labelMailType\')"\n                        :placeholder="$tc(\'sw-mail-template.detail.basic.placeholderMailType\')"\n                        :disabled="!acl.can(\'mail_templates.editor\') || undefined"\n                        :error="mailTemplateMailTemplateTypeIdError"\n                        @update:value="onChangeType"\n                    />\n                    {% endblock %}\n\n                    \n                    {% block sw_mail_template_basic_form_description_field %}\n                    <sw-textarea-field\n                        v-model:value="mailTemplate.description"\n                        name="sw-field--mailTemplate-description"\n                        :label="$tc(\'sw-mail-template.detail.basic.labelDescription\')"\n                        :placeholder="$tc(\'sw-mail-template.detail.basic.placeholderDescription\')"\n                        :disabled="!acl.can(\'mail_templates.editor\') || undefined"\n                    />\n                    {% endblock %}\n                </sw-card>\n                {% endblock %}\n\n                \n                {% block sw_mail_template_detail_options_info %}\n                <sw-card\n                    position-identifier="sw-mail-template-detail-options-info"\n                    :title="$tc(\'sw-mail-template.detail.options.titleCard\')"\n                >\n                    <sw-container\n                        columns="repeat(auto-fit, minmax(250px, 1fr))"\n                        gap="0 30px"\n                        class="sw-mail-template-detail-options__container"\n                    >\n                        <div class="sw-mail-template-detail__options-info-wrapper">\n\n                            \n                            {% block sw_mail_template_options_form_subject_field %}\n                            <sw-text-field\n                                v-model:value="mailTemplate.subject"\n                                name="sw-field--mailTemplate-subject"\n                                required\n                                :label="$tc(\'sw-mail-template.detail.options.labelSubject\')"\n                                :placeholder="placeholder(mailTemplate, \'subject\', $tc(\'sw-mail-template.detail.options.placeholderSubject\'))"\n                                :disabled="!acl.can(\'mail_templates.editor\') || undefined"\n                                :error="mailTemplateSubjectError"\n                            />\n                            {% endblock %}\n                        </div>\n\n                        \n                        {% block sw_mail_template_options_form_sender_name_field %}\n                        <sw-text-field\n                            v-model:value="mailTemplate.senderName"\n                            name="sw-field--mailTemplate-senderName"\n                            :label="$tc(\'sw-mail-template.detail.options.labelSenderName\')"\n                            :placeholder="placeholder(mailTemplate, \'senderName\', $tc(\'sw-mail-template.detail.options.placeholderSenderName\'))"\n                            :disabled="!acl.can(\'mail_templates.editor\') || undefined"\n                        />\n                        {% endblock %}\n                    </sw-container>\n                </sw-card>\n                {% endblock %}\n\n                \n                {% block sw_mail_template_detail_attachments_info %}\n                <sw-card\n                    :title="$tc(\'sw-mail-template.detail.media.titleCard\')"\n                    position-identifier="sw-mail-template-detail-atttachments-info"\n                >\n                    \n                    {% block sw_mail_template_detail_attachments_info_upload %}\n                    <sw-upload-listener\n                        v-if="mailTemplate.id"\n                        auto-upload\n                        :upload-tag="mailTemplate.id"\n                        @media-upload-finish="successfulUpload"\n                    />\n\n                    <sw-media-upload-v2\n                        v-if="mailTemplate.id"\n                        variant="regular"\n                        default-folder="mail_template"\n                        :upload-tag="mailTemplate.id"\n                        :file-accept="fileAccept"\n                        :disabled="!acl.can(\'mail_templates.editor\') || undefined"\n                        @media-drop="onMediaDrop"\n                        @media-upload-sidebar-open="openMediaSidebar"\n                    />\n                    {% endblock %}\n\n                    \n                    {% block sw_mail_template_detail_attachments_info_grid %}\n                    <sw-data-grid\n                        v-if="mailTemplateMedia && mailTemplateMedia.length > 0"\n                        class="sw-mail-template-detail__attachments-info-grid"\n                        :data-source="mailTemplateMedia"\n                        :columns="mediaColumns"\n                        :full-page="false"\n                        :show-settings="false"\n                        :allow-column-edit="false"\n                        :allow-inline-edit="false"\n                        :compact-mode="false"\n                        :show-selection="acl.can(\'mail_templates.editor\') || undefined"\n                        @selection-change="onSelectionChanged"\n                    >\n                        <template #preview-fileName="{ item }">\n                            \n                            {% block sw_mail_template_detail_attachments_info_grid_preview %}\n                            <sw-media-preview :source="item.id" />\n                            {% endblock %}\n                        </template>\n\n                        <template #actions="{ item }">\n                            \n                            {% block sw_mail_template_detail_attachments_info_grid_actions %}\n                            <sw-context-menu-item\n                                v-tooltip.bottom="{\n                                    message: $tc(\'sw-privileges.tooltip.warning\'),\n                                    disabled: acl.can(\'mail_templates.editor\') || undefined,\n                                    showOnDisabledElements: true\n                                }"\n                                variant="danger"\n                                :disabled="!acl.can(\'mail_templates.editor\') || undefined"\n                                @click="onDeleteMedia(item.id)"\n                            >\n                                {{ $tc(\'global.default.delete\') }}\n                            </sw-context-menu-item>\n                            {% endblock %}\n                        </template>\n\n                        <template #bulk>\n                            \n                            {% block sw_mail_template_detail_attachments_info_grid_bulk %}\n                            <a\n                                class="link link-danger"\n                                role="link"\n                                tabindex="0"\n                                @click="onDeleteSelectedMedia"\n                                @keydown.enter="onDeleteSelectedMedia"\n                            >\n                                {{ $tc(\'global.default.delete\') }}\n                            </a>\n                            {% endblock %}\n                        </template>\n                    </sw-data-grid>\n                    {% endblock %}\n                </sw-card>\n                {% endblock %}\n\n                \n                {% block sw_mail_template_detail_mail_text_info %}\n                <sw-card\n                    :title="$tc(\'sw-mail-template.detail.mailText.titleCard\')"\n                    position-identifier="sw-mail-template-detail-text-info"\n                >\n                    \n                    {% block sw_mail_template_mail_text_form_content_plain_field %}\n                    <sw-code-editor\n                        ref="plainEditor"\n                        :key="`${mailTemplate.mailTemplateTypeId}plain`"\n                        v-model:value="mailTemplate.contentPlain"\n                        name="content_plain"\n                        completion-mode="entity"\n                        :label="$tc(\'sw-mail-template.detail.mailText.labelContentPlain\')"\n                        :placeholder="placeholder(mailTemplate, \'contentPlain\', $tc(\'sw-mail-template.detail.mailText.placeholderPlain\'))"\n                        :completer-function="outerCompleterFunction"\n                        :editor-config="editorConfig"\n                        :disabled="!acl.can(\'mail_templates.editor\')"\n                        :error="mailTemplateContentPlainError"\n                        required\n                    />\n                    {% endblock %}\n\n                    \n                    {% block sw_mail_template_mail_text_form_content_html_field %}\n                    <sw-code-editor\n                        ref="htmlEditor"\n                        :key="`${mailTemplate.mailTemplateTypeId}html`"\n                        v-model:value="mailTemplate.contentHtml"\n                        name="content_html"\n                        completion-mode="entity"\n                        :label="$tc(\'sw-mail-template.detail.mailText.labelContentHtml\')"\n                        :placeholder="placeholder(mailTemplate, \'contentHtml\', $tc(\'sw-mail-template.detail.mailText.placeholderHtml\'))"\n                        :completer-function="outerCompleterFunction"\n                        :editor-config="editorConfig"\n                        :disabled="!acl.can(\'mail_templates.editor\')"\n                        :error="mailTemplateContentHtmlError"\n                        required\n                    />\n                    {% endblock %}\n                </sw-card>\n                \n                {% block sw_mail_template_detail_preview_modal %}\n                <sw-modal\n                    v-if="mailPreview"\n                    class="sw-mail-template-preview-modal"\n                    :title="$tc(\'sw-mail-template.detail.previewModalTitle\')"\n                    :is-loading="isLoading"\n                    @modal-close="onCancelShowPreview"\n                >\n                    <template v-if="!isLoading">\n                        <span v-html="mailPreview"></span>\n                    </template>\n\n                    \n                    {% block sw_mail_template_detail_preview_modal_footer %}\n                    <template #modal-footer>\n                        \n                        {% block sw_mail_template_detail_preview_modal_footer_cancel %}\n                        <sw-button\n                            size="small"\n                            @click="onCancelShowPreview"\n                        >\n                            {{ $tc(\'global.default.close\') }}\n                        </sw-button>\n                        {% endblock %}\n                    </template>\n                    {% endblock %}\n                </sw-modal>\n                {% endblock %}\n                {% endblock %}\n            </template>\n        </sw-card-view>\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_mail_template_detail_sidebar %}\n    <template #sidebar>\n        <sw-sidebar :propagate-width="true">\n            \n            {% block sw_mail_template_detail_sidebar_inner %}\n\n            \n            {% block sw_mail_template_detail_sidebar_inner_test_mail %}\n            <sw-sidebar-item\n                icon="regular-paper-plane"\n                :title="$tc(\'sw-mail-template.detail.sidebar.titleTestMail\')"\n                class="sw-mail-template-detail__test-mail-sidebar"\n            >\n                <div class="sw-mail-template-detail__test-mail-sidebar-container">\n                    <sw-alert\n                        v-if="showLanguageNotAssignedToSalesChannelWarning"\n                        variant="warning"\n                    >\n                        {{ $tc(\'sw-mail-template.detail.sidebar.languageNotAssignedToSalesChannel\') }}\n                    </sw-alert>\n\n                    \n                    {% block sw_mail_template_mail_text_form_test_mail_field %}\n                    <sw-text-field\n                        v-model:value="testerMail"\n                        name="sw-field--testerMail"\n                        :placeholder="$tc(\'sw-mail-template.detail.sidebar.placeholderTestMail\')"\n                        :label="$tc(\'sw-mail-template.detail.sidebar.labelTestMail\')"\n                        :disabled="!acl.can(\'mail_templates.editor\') || undefined"\n                    />\n                    {% endblock %}\n\n                    \n                    {% block sw_mail_template_mail_text_form_test_sales_channel_field %}\n                    <sw-entity-single-select\n                        v-model:value="testMailSalesChannelId"\n                        name="sw-field--testMailSalesChannelId"\n                        entity="sales_channel"\n                        :label="$tc(\'sw-mail-template.detail.basic.labelSalesChannels\')"\n                        :placeholder="$tc(\'sw-mail-template.detail.basic.placeholderSalesChannels\')"\n                        show-clearable-button\n                    />\n                    {% endblock %}\n\n                    \n                    {% block sw_mail_template_mail_text_form_test_mail_button %}\n                    <sw-button\n                        :disabled="isSendButtonDisabled"\n                        class="sw-mail-template-detail__send-test-mail"\n                        @click="onClickTestMailTemplate"\n                    >\n                        {{ $tc(\'sw-mail-template.detail.sidebar.buttonTestMail\') }}\n                    </sw-button>\n                    {% endblock %}\n                </div>\n            </sw-sidebar-item>\n            {% endblock %}\n\n            \n            {% block sw_mail_template_detail_sidebar_inner_variables %}\n            <sw-sidebar-item\n                icon="regular-code"\n                :title="$tc(\'sw-mail-template.detail.sidebar.titleShowAvailableVariables\')"\n                :disabled="isLoading || !hasTemplateData"\n                class="sw-mail-template-detail__show-available-variables"\n            >\n                <div class="sw-mail-template-detail__available-variables-sidebar-container">\n                    \n                    {% block sw_mail_template_available_variables_tree %}\n                    <sw-tree\n                        class="sw-mail-template-detail__available-variables-sidebar-container__tree"\n                        :searchable="false"\n                        :disable-context-menu="true"\n                        :on-change-route="() => { return false; }"\n                        :items="loadedAvailableVariables"\n                        :sortable="false"\n                        @get-tree-items="onGetTreeItems"\n                    >\n                        \n                        {% block sw_mail_template_available_variables_tree_headline %}\n                        <template #headline>\n                            <span></span>\n                        </template>\n                        {% endblock %}\n\n                        \n                        {% block sw_mail_template_available_variables_tree_items %}\n                        <template\n                            #items="{ treeItems, sortable, draggedItem, disableContextMenu, onChangeRoute }"\n                        >\n                            \n                            {% block sw_mail_template_available_variables_tree_items_item %}\n                            <sw-tree-item\n                                v-for="(item, index) in treeItems"\n                                :key="item.id"\n                                :item="item"\n                                :disable-context-menu="disableContextMenu"\n                                :on-change-route="onChangeRoute"\n                                :sortable="false"\n                                :display-checkbox="false"\n                            >\n                                \n                                {% block sw_mail_template_available_variables_tree_items_item_grip %}\n                                <template #grip>\n                                    <span></span>\n                                </template>\n                                {% endblock %}\n\n                                \n                                {% block sw_mail_template_available_variables_tree_items_item_actions %}\n                                <template #actions="{ item }">\n                                    <sw-icon\n                                        v-tooltip="{\n                                            message: $tc(\'sw-mail-template.detail.sidebar.copyTooltip\'),\n                                            width: 150,\n                                            position: \'bottom\'\n                                        }"\n                                        name="regular-products-s"\n                                        class="sw-mail-template-detail__copy_icon"\n                                        @click="onCopyVariable(item.schema)"\n                                    />\n                                </template>\n                                {% endblock %}\n                            </sw-tree-item>\n                            {% endblock %}\n                        </template>\n                        {% endblock %}\n                    </sw-tree>\n                    {% endblock %}\n                </div>\n            </sw-sidebar-item>\n            {% endblock %}\n\n            \n            {% block sw_mail_template_detail_sidebar_inner_preview %}\n            <sw-sidebar-item\n                icon="regular-eye"\n                :title="$tc(\'sw-mail-template.detail.sidebar.titleShowPreview\')"\n                :disabled="isLoading || showPreview || !hasTemplateData"\n                class="sw-mail-template-detail__show-preview-sidebar"\n                @click="onClickShowPreview"\n            />\n            {% endblock %}\n\n            \n            {% block sw_mail_template_detail_sidebar_inner_media %}\n            <sw-sidebar-media-item ref="mediaSidebarItem">\n                <template\n                    #context-menu-items="media"\n                >\n                    \n                    {% block sw_mail_template_detail_sidebar_add_attachment %}\n                    <sw-context-menu-item\n                        :disabled="!acl.can(\'mail_templates.editor\') || undefined"\n                        @click="onAddItemToAttachment(media.mediaItem)"\n                    >\n                        {{ $tc(\'sw-mail-template.detail.sidebar.labelContextMenuAddToMailTemplate\') }}\n                    </sw-context-menu-item>\n                    {% endblock %}\n                </template>\n            </sw-sidebar-media-item>\n            {% endblock %}\n\n            {% endblock %}\n        </sw-sidebar>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',compatConfig:Cicada.compatConfig,inject:["mailService","entityMappingService","repositoryFactory","acl","feature"],mixins:[i.getByName("placeholder"),i.getByName("notification")],shortcuts:{"SYSTEMKEY+S":{active(){return this.allowSave},method:"onSave"},ESCAPE:"onCancel"},data(){return{mailTemplate:!1,testerMail:"",mailTemplateId:null,mailPreview:null,isLoading:!1,isSaveSuccessful:!1,mailTemplateType:{},selectedType:{},editorConfig:{enableBasicAutocompletion:!0},mailTemplateMedia:null,mailTemplateMediaSelected:{},fileAccept:"application/pdf, image/*",testMailSalesChannelId:null,availableVariables:{},entitySchema:Object.fromEntries(Cicada.EntityDefinition.getDefinitionRegistry()),showLanguageNotAssignedToSalesChannelWarning:!1}},metaInfo(){return{title:this.$createTitle(this.identifier)}},computed:{...d("mailTemplate",["contentHtml","contentPlain","mailTemplateTypeId","subject"]),loadedAvailableVariables(){return this.mailTemplateType&&this.mailTemplateType.templateData?(0===Object.values(this.availableVariables).length&&this.loadInitialAvailableVariables(),Object.values(this.availableVariables)):[]},identifier(){return this.placeholder(this.mailTemplateType,"name")},mailTemplateRepository(){return this.repositoryFactory.create("mail_template")},mediaRepository(){return this.repositoryFactory.create("media")},mailTemplateMediaRepository(){return this.repositoryFactory.create("mail_template_media")},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},outerCompleterFunction(){var e,a;return e=this.entityMappingService,a=this.mailTemplateType,function(t){let l=[];return Object.keys(e.getEntityMapping(t,a.availableEntities)).forEach(e=>{l.push({value:e})}),l}},mailTemplateTypeRepository(){return this.repositoryFactory.create("mail_template_type")},testMailRequirementsMet(){return this.testerMail&&(this.mailTemplate.subject||this.mailTemplate.translated?.subject)&&(this.mailTemplate.contentPlain||this.mailTemplate.translated?.contentPlain)&&(this.mailTemplate.contentHtml||this.mailTemplate.translated?.contentHtml)&&(this.mailTemplate.senderName||this.mailTemplate.translated?.senderName)},mediaColumns(){return this.getMediaColumns()},allowSave(){return this.mailTemplate&&this.mailTemplate.isNew()?this.acl.can("mail_templates.creator"):this.acl.can("mail_templates.editor")},tooltipSave(){if(!this.allowSave)return{message:this.$tc("sw-privileges.tooltip.warning"),disabled:this.allowSave,showOnDisabledElements:!0};let e=this.$device.getSystemKey();return{message:`${e} + S`,appearance:"light"}},showPreview(){return void 0===this.mailTemplate.contentHtml||void 0===this.mailTemplate.mailTemplateTypeId||""===this.mailTemplate.contentHtml},hasTemplateData(){return Object.keys(this.mailTemplateType?.templateData||{}).length>0},lacksEmailSendPermission(){return!this.acl.can("api_send_email")},isSendButtonDisabled(){return this.isLoading||!this.testMailRequirementsMet||this.lacksEmailSendPermission}},watch:{"$route.params.id"(){this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){Cicada.ExtensionAPI.publishData({id:"sw-mail-template-detail__mailTemplate",path:"mailTemplate",scope:this}),Cicada.ExtensionAPI.publishData({id:"sw-mail-template-detail__mailTemplateMedia",path:"mailTemplateMedia",scope:this}),Cicada.ExtensionAPI.publishData({id:"sw-mail-template-detail__mailTemplateMediaSelected",path:"mailTemplateMediaSelected",scope:this}),Cicada.ExtensionAPI.publishData({id:"sw-mail-template-detail__mailTemplateType",path:"mailTemplateType",scope:this}),Cicada.ExtensionAPI.publishData({id:"sw-mail-template-detail__availableVariables",path:"availableVariables",scope:this}),Cicada.ExtensionAPI.publishData({id:"sw-mail-template-detail__testMailSalesChannelId",path:"testMailSalesChannelId",scope:this}),Cicada.ExtensionAPI.publishData({id:"sw-mail-template-detail__testerMail",path:"testerMail",scope:this}),this.$route.params.id&&(this.mailTemplateId=this.$route.params.id,this.loadEntityData())},loadEntityData(){let e=new s(1,25);e.addAssociation("mailTemplateType"),e.addAssociation("media.media"),this.isLoading=!0,this.mailTemplateRepository.get(this.mailTemplateId,Cicada.Context.api,e).then(e=>{this.mailTemplate=e,this.mailTemplate.mailTemplateType?.id?(this.onChangeType(this.mailTemplate.mailTemplateType.id),this.getMailTemplateMedia()):(this.isLoading=!1,this.createNotificationError({message:this.$tc("sw-mail-template.general.missingMailTemplateTypeErrorMessage")}))})},getMailTemplateType(){return this.mailTemplate.mailTemplateTypeId?this.mailTemplateTypeRepository.get(this.mailTemplate.mailTemplateTypeId).then(e=>{this.mailTemplateType=e}):Promise.resolve()},createMediaCollection(){return new m("/media","media",Cicada.Context.api)},getMailTemplateMedia(){this.mailTemplateMedia=this.createMediaCollection(),this.mailTemplate.media.forEach(e=>{e.languageId===Cicada.Context.api.languageId&&this.mailTemplateMedia.push(e.media)})},abortOnLanguageChange(){return this.mailTemplateRepository.hasChanges(this.mailTemplate)},saveOnLanguageChange(){return this.onSave()},onChangeLanguage(e){Cicada.State.commit("context/setApiLanguageId",e),this.loadEntityData()},saveFinish(){this.isSaveSuccessful=!1},onCancel(){this.$router.push({name:"sw.mail.template.index"})},onSave(){let e=[],a=this.mailTemplate.subject||this.placeholder(this.mailTemplate,"subject");return this.isSaveSuccessful=!1,this.isLoading=!0,e.push(this.mailTemplateRepository.save(this.mailTemplate).then(()=>{Promise.all(e).then(()=>{this.loadEntityData(),this.saveFinish()})}).catch(e=>{let t="";if(this.isLoading=!1,e.response.data.errors.length>0){let a=e.response.data.errors[0].detail;t=`<br/> ${this.$tc("sw-mail-template.detail.textErrorMessage")}: "${a}"`}this.createNotificationError({message:this.$tc("sw-mail-template.detail.messageSaveError",0,{subject:a})+t})})),Promise.all(e)},onClickTestMailTemplate(){let e={message:this.$tc("sw-mail-template.general.notificationTestMailSuccessMessage")},a={message:this.$tc("sw-mail-template.general.notificationTestMailErrorMessage")},t={message:this.$tc("sw-mail-template.general.notificationTestMailSalesChannelErrorMessage")};if(!this.testMailSalesChannelId){this.createNotificationError(t);return}let l=new s;l.addAssociation("languages"),this.salesChannelRepository.get(this.testMailSalesChannelId,n.api,l).then(e=>{if(!e.languages.has(Cicada.Context.api.languageId)){this.showLanguageNotAssignedToSalesChannelWarning=!0;return}this.showLanguageNotAssignedToSalesChannelWarning=!1}),this.mailService.testMailTemplate(this.testerMail,this.mailPreviewContent(),this.mailTemplateMedia,this.testMailSalesChannelId,this.mailTemplate.mailTemplateTypeId,this.mailTemplate.id).then(a=>{if(!(a?.size!==0)){this.createNotificationError({message:this.$tc("sw-mail-template.general.notificationGeneralSyntaxValidationErrorMessage")});return}this.createNotificationSuccess(e)}).catch(e=>{this.createNotificationError(a),o(this._name,e.message,e.response)})},onClickShowPreview(){this.isLoading=!0,this.mailPreview=this.mailService.buildRenderPreview(this.mailTemplateType,this.mailPreviewContent()).then(e=>{this.mailPreview=e}).catch(e=>{this.mailPreview=null,e.response?.data?.errors?.[0]?.detail?this.createNotificationError({message:this.$tc("sw-mail-template.general.notificationSyntaxValidationErrorMessage",0,{errorMsg:e.response?.data?.errors?.[0]?.detail})}):this.createNotificationError({message:this.$tc("sw-mail-template.general.notificationGeneralSyntaxValidationErrorMessage")})}).finally(()=>{this.isLoading=!1})},mailPreviewContent(){let e={...this.mailTemplate};return e.contentHtml&&(e.contentHtml=this.replaceContent(e.contentHtml)),e.translated?.contentHtml&&(e.translated.contentHtml=this.replaceContent(e.translated.contentHtml)),e.contentPlain&&(e.contentPlain=this.replaceContent(e.contentPlain)),e.translated?.contentPlain&&(e.translated.contentPlain=this.replaceContent(e.translated.contentPlain)),e},replaceContent(e){return e.replace(/\.at\(([0-9]*)\)\./g,e=>{let a=parseInt(e.match(/[0-9]/g).join(""),10);return`.${a}.`}).replace(/\.first\./g,".0.")},onCancelShowPreview(){this.mailPreview=null},async onCopyVariable(e){try{await l.vz.copyStringToClipboard(e)}catch(a){let e="";if(a.response.data.errors.length>0){let t=a.response.data.errors[0].detail;e=`<br/> ${this.$tc("sw-mail-template.detail.textErrorMessage")}: "${t}"`}this.createNotificationError({message:e})}},async onChangeType(e){if(!e){this.selectedType={};return}this.isLoading=!0;try{await this.getMailTemplateType(),this.selectedType=await this.mailTemplateTypeRepository.get(e),this.loadInitialAvailableVariables(),this.outerCompleterFunction()}catch(a){let e=a.message??"";if(a.response?.data?.errors?.length>0){let t=a.response.data.errors[0].detail;e=`<br/> ${this.$tc("sw-mail-template.detail.textErrorMessage")}: "${t}"`}this.createNotificationError({message:e})}finally{this.isLoading=!1}},getMediaColumns(){return[{property:"fileName",label:"sw-mail-template.list.columnFilename"}]},successfulUpload({targetId:e}){this.mailTemplate.media.find(a=>a.mediaId===e)||this.mediaRepository.get(e).then(e=>{this.createMailTemplateMediaAssoc(e)})},onMediaDrop(e){this.successfulUpload({targetId:e.id})},createMailTemplateMediaAssoc(e){let a=this.mailTemplateMediaRepository.create();a.mailTemplateId=this.mailTemplateId,a.languageId=Cicada.Context.api.languageId,a.mediaId=e.id,this.mailTemplate.media.length<=0?a.position=0:a.position=this.mailTemplate.media.length,this.mailTemplate.media.push(a),this.mailTemplateMedia.push(e)},openMediaSidebar(){this.$refs.mediaSidebarItem.openContent()},onDeleteMedia(e){let a=this.mailTemplate.media.find(a=>a.mediaId===e);a&&(this.mailTemplate.media.remove(a.id),this.getMailTemplateMedia())},onSelectionChanged(e){this.selectedItems=e},onDeleteSelectedMedia(){Object.keys(this.selectedItems).forEach(e=>{this.onDeleteMedia(e)})},_checkIfMediaIsAlreadyUsed(e){return this.mailTemplate.media.some(a=>a.mediaId===e&&a.languageId===Cicada.Context.api.languageId)},onAddItemToAttachment(e){return this._checkIfMediaIsAlreadyUsed(e.id)?(this.createNotificationInfo({message:this.$tc("sw-mail-template.list.errorMediaItemDuplicated")}),!1):(this.createMailTemplateMediaAssoc(e),!0)},loadAvailableVariables(e,a){if(!this.mailTemplateType||!this.mailTemplateType.availableEntities)return[];let t=e.concat("."),l=a.concat("."),i=Object.keys(Cicada.Utils.get(this.mailTemplateType.templateData,e)).map(a=>{let i=Cicada.Utils.get(this.mailTemplateType.templateData,t.concat(a)),n="object"==typeof i&&null!==i?Object.values(i).length:0,s=this.isToManyAssociationVariable(e)?`${l}at(${parseInt(a,10)})`:l+a;return{id:t+a,schema:s,name:a,childCount:n,parentId:e,afterId:null}});return this.addVariables(i),!0},isToManyAssociationVariable(e){if(!e)return!1;let a=e.split(".");a.splice(1,0,"properties");let t=Cicada.Utils.get(this.entitySchema,`${a.join(".")}`);return t&&"association"===t.type&&["one_to_many","many_to_many"].includes(t.relation)},onGetTreeItems(e,a){this.loadAvailableVariables(e,a)},addVariables(e){e.forEach(e=>{this.isCompatEnabled("INSTANCE_SET")?this.$set(this.availableVariables,e.id,e):this.availableVariables[e.id]=e})},loadInitialAvailableVariables(){this.availableVariables={},this.hasTemplateData&&Object.keys(this.mailTemplateType.templateData).forEach(e=>{let a=Cicada.Utils.get(this.mailTemplateType.templateData,e),t=0;"object"==typeof a&&null!==a&&(t=Object.values(a).length),this.addVariables([{id:e,schema:e,name:e,childCount:t,parentId:null,afterId:null}])})}}}},797815:function(e,a,t){var l=t(131950);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),t(745346).Z("3ea7da22",l,!0,{})}}]);