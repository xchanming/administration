"use strict";(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[14242],{714242:function(t,e,a){a.r(e),a.d(e,{default:function(){return n}});let{Mixin:s}=Cicada,i=Cicada.Utils;var n={template:'\n{% block sw_cms_detail_toolbar_language_switch %}\n\n<template #language-switch>\n    <sw-language-switch disabled />\n</template>\n{% endblock %}\n\n\n{% block sw_cms_detail_toolbar_actions_sales_channel %}\n{% endblock %}\n\n\n{% block sw_cms_detail_toolbar_actions_save %}\n<sw-button-process\n    v-tooltip.bottom="tooltipSave"\n    class="sw-cms-detail__save-action"\n    :is-loading="isLoading"\n    :process-success="isSaveSuccessful"\n    :disabled="true"\n    variant="primary"\n>\n    {{ $tc(\'sw-cms.detail.label.buttonSave\') }}\n</sw-button-process>\n{% endblock %}\n\n\n{% block sw_cms_detail_stage_container %}\n<sw-cms-create-wizard\n    :page="page"\n    @on-section-select="onAddSection($event, 0)"\n    @wizard-complete="onWizardComplete"\n/>\n{% endblock %}\n',compatConfig:Cicada.compatConfig,mixins:[s.getByName("placeholder")],data(){return{wizardComplete:!1}},beforeRouteEnter(t,e,a){t.name.includes("sw.cms.create")&&!t.params.id&&(t.params.id=i.createId()),a()},computed:{pageHasSections(){return this.page.sections.length>0&&this.wizardComplete},categoryRepository(){return this.repositoryFactory.create("category")}},methods:{createdComponent(){Cicada.Store.get("adminMenu").collapseSidebar();let t=Cicada.State.getters["context/isSystemDefaultLanguage"];t||(Cicada.State.commit("context/resetLanguageToDefault"),this.$store.commit("cmsPageState/setIsSystemDefaultLanguage",t)),this.page=this.pageRepository.create(),this.page.sections=new Cicada.Data.EntityCollection(`/cms-page/${this.page.id}/sections`,"cms_section",Cicada.Context.api)},async onSave(){return(this.isSaveSuccessful=!1,(!this.isSystemDefaultLanguage||this.page.name)&&this.page.type)?(this.page=await this.assignToEntity(this.page),this.deleteEntityAndRequiredConfigKey(this.page.sections),this.isLoading=!0,this.pageRepository.save(this.page).then(()=>{this.isLoading=!1,this.isSaveSuccessful=!0,this.$router.push({name:"sw.cms.detail",params:{id:this.page.id}})}).catch(t=>(this.isLoading=!1,this.createNotificationError({message:t.message}),Promise.reject(t)))):(this.createNotificationWarning({message:this.$tc("sw-cms.detail.notification.messageMissingFields")}),Promise.reject())},async assignToEntity(t){let{type:e,id:a}=this.$route.params;if(!a||!e)return t;try{if("category"===e){let e=await this.categoryRepository.get(a);e&&t.categories.push(e)}if(e.startsWith("ce_")||e.startsWith("custom_entity_")){let s=this.repositoryFactory.create(e),n=await s.get(a);n&&t.extensions[`${i.string.camelCase(e)}SwCmsPage`].push(n)}}catch(t){this.createNotificationError({message:this.$tc("sw-cms.create.notification.assignToEntityError")})}return t},onWizardComplete(){("product_list"===this.page.type||"product_detail"===this.page.type)&&this.onPageTypeChange(this.page.type),this.wizardComplete=!0,this.onSave()}}}}}]);