"use strict";(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[11378],{411378:function(t,e,i){i.r(e),i.d(e,{default:function(){return d}});let{State:a,Data:o,Service:s}=Cicada,{Criteria:r}=o;var d={template:'\n{% block sw_order_create_create_initial %}\n<div class="sw-order-create-initial">\n    <sw-order-create-initial-modal\n        @modal-close="onCloseCreateModal"\n        @order-preview="onPreviewOrder"\n    />\n</div>\n{% endblock %}\n',compatConfig:Cicada.compatConfig,inject:["feature"],computed:{customerRepository(){return s("repositoryFactory").create("customer")},customerCriteria(){let t=new r(1,25);return t.addAssociation("addresses").addAssociation("group").addAssociation("salutation").addAssociation("salesChannel").addAssociation("lastPaymentMethod").addAssociation("defaultBillingAddress.country").addAssociation("defaultBillingAddress.countryState").addAssociation("defaultBillingAddress.salutation").addAssociation("defaultShippingAddress.country").addAssociation("defaultShippingAddress.countryState").addAssociation("defaultShippingAddress.salutation").addAssociation("tags"),this.feature.isActive("v6.7.0.0")||t.addAssociation("defaultPaymentMethod"),t}},created(){this.createdComponent()},methods:{async createdComponent(){let t=this.$route.query?.customerId;if(!t)return;let e=await this.customerRepository.get(t,Cicada.Context.api,this.customerCriteria);e&&a.commit("swOrder/setCustomer",e)},onCloseCreateModal(){this.$nextTick(()=>{this.$router.push({name:"sw.order.index"})})},onPreviewOrder(){this.$nextTick(()=>{this.$router.push({name:"sw.order.create.general"})})}}}}}]);