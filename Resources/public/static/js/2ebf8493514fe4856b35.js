"use strict";(window.webpackJsonpAdministration=window.webpackJsonpAdministration||[]).push([[54935],{539613:function(e,t){t.Z=Object.freeze({ACCOUNT_TYPE_PRIVATE:"private",ACCOUNT_TYPE_BUSINESS:"business"})},154935:function(e,t,s){s.r(t),s.d(t,{default:function(){return o}});var a=s(539613);let{CicadaError:r}=Cicada.Classes,{Mixin:i}=Cicada,{Criteria:n}=Cicada.Data;var o={template:'{%  block sw_customer_create %}\n<sw-page class="sw-customer-create">\n\n    \n    {% block sw_customer_create_header %}\n    <template #smart-bar-header>\n        <h2>{{ salutationFilter(customer, $tc(\'sw-customer.general.newCustomer\')) }}</h2>\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_customer_create_language_switch %}\n    <template #language-switch>\n        <sw-language-switch\n            v-tooltip="{ message: $tc(\'sw-customer.general.tooltipLanguageSwitch\') }"\n            disabled\n        />\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_customer_create_actions %}\n    <template #smart-bar-actions>\n        <sw-button-process\n            class="sw-customer-create__save-action"\n            :is-loading="isLoading"\n            :disabled="isLoading"\n            :process-success="isSaveSuccessful"\n            variant="primary"\n            @update:process-success="saveFinish"\n            @click.prevent="onSave"\n        >\n            {{ $tc(\'sw-customer.detail.buttonSave\') }}\n        </sw-button-process>\n    </template>\n    {% endblock %}\n\n    \n    {% block sw_customer_create_content %}\n    <template #content>\n        <sw-card-view>\n            \n            {% block sw_customer_create_base_form %}\n            <sw-card\n                :title="$tc(\'sw-customer.detailBase.labelAccountCard\')"\n                position-identifier="sw-customer-create-base-form"\n            >\n                <sw-customer-base-form\n                    v-if="customer"\n                    :is-loading="isLoading"\n                    :customer="customer"\n                    @sales-channel-change="onChangeSalesChannel"\n                />\n            </sw-card>\n            {% endblock %}\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n',compatConfig:Cicada.compatConfig,inject:["repositoryFactory","numberRangeService","systemConfigApiService","customerValidationService"],mixins:[i.getByName("notification")],data(){return{customer:null,customerNumberPreview:"",isSaveSuccessful:!1,isLoading:!1}},computed:{customerRepository(){return this.repositoryFactory.create("customer")},languageRepository(){return this.repositoryFactory.create("language")},languageCriteria(){let e=new n;return e.setLimit(1),this.customer?.salesChannelId&&e.addFilter(n.equals("salesChannelDefaultAssignments.id",this.customer.salesChannelId)),e},languageId(){return this.loadLanguage(this.customer?.salesChannelId)},salutationRepository(){return this.repositoryFactory.create("salutation")},salutationCriteria(){let e=new n(1,1);return e.addFilter(n.equals("salutationKey","not_specified")),e},salutationFilter(){return Cicada.Filter.getByName("salutation")}},watch:{"customer.salesChannelId"(e){this.systemConfigApiService.getValues("core.systemWideLoginRegistration").then(t=>{t["core.systemWideLoginRegistration.isCustomerBoundToSalesChannel"]&&(this.customer.boundSalesChannelId=e)})}},created(){this.createdComponent()},methods:{async createdComponent(){let e=await this.getDefaultSalutation();Cicada.State.commit("context/resetLanguageToDefault"),this.customer=this.customerRepository.create(),this.customer.accountType=a.Z.ACCOUNT_TYPE_PRIVATE,this.customer.password="",this.customer.vatIds=[],this.customer.salutationId=e},saveFinish(){this.isSaveSuccessful=!1,this.$router.push({name:"sw.customer.detail",params:{id:this.customer.id}})},validateEmail(){let{id:e,email:t,boundSalesChannelId:s}=this.customer;return t?this.customerValidationService.checkCustomerEmail({id:e,email:t,boundSalesChannelId:s}).then(e=>e).catch(e=>{Cicada.State.dispatch("error/addApiError",{expression:`customer.${this.customer.id}.email`,error:new r(e.response.data.errors[0])})}):Promise.resolve({isValid:!0})},async onSave(){this.isLoading=!0;let e=!1,t=await this.validateEmail();t&&t.isValid||(e=!0),this.isSaveSuccessful=!1;let s=Promise.resolve();if(this.customerNumberPreview===this.customer.customerNumber&&(s=this.numberRangeService.reserve("customer",this.customer.salesChannelId).then(e=>{this.customerNumberPreview="reserved",this.customer.customerNumber=e.number})),e)return this.createNotificationError({message:this.$tc("sw-customer.detail.messageSaveError")}),this.isLoading=!1,!1;let a=await this.languageId,r={...Cicada.Context.api,languageId:a};return s.then(()=>this.customerRepository.save(this.customer,r).then(e=>(this.isLoading=!1,this.isSaveSuccessful=!0,e)).catch(e=>{throw this.createNotificationError({message:this.$tc("sw-customer.detail.messageSaveError")}),this.isLoading=!1,e}))},onChangeSalesChannel(e){this.customer.salesChannelId=e,this.numberRangeService.reserve("customer",e,!0).then(e=>{this.customerNumberPreview=e.number,this.customer.customerNumber=e.number})},async loadLanguage(e){let t=Cicada.Context.api.languageId;if(!e)return t;let s=await this.languageRepository.searchIds(this.languageCriteria);return s?.data?s.data[0]:t},async getDefaultSalutation(){let e=await this.salutationRepository.searchIds(this.salutationCriteria);return e.data?.[0]}}}}}]);